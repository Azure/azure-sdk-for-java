// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.ComputeResourceInner;
import com.azure.resourcemanager.machinelearning.models.Compute;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentity;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.machinelearning.models.PaginatedComputeResourcesList;
import com.azure.resourcemanager.machinelearning.models.Sku;
import com.azure.resourcemanager.machinelearning.models.SkuTier;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class PaginatedComputeResourcesListTests {
    @Test
    public void testDeserialize() {
        PaginatedComputeResourcesList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"identity\":{\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{}},\"location\":\"vyvdcs\",\"tags\":{\"eypvhezrkg\":\"nnaamdectehfiqsc\",\"sle\":\"hcjrefovgmk\"},\"sku\":{\"name\":\"vxyqjpkcattpngjc\",\"tier\":\"Standard\",\"size\":\"sqpjhvmdajvn\",\"family\":\"ounqecano\",\"capacity\":996084293},\"properties\":{\"computeType\":\"Compute\",\"computeLocation\":\"yhltrpmopjmcm\",\"provisioningState\":\"Failed\",\"description\":\"kthfui\",\"createdOn\":\"2021-09-11T13:03:08Z\",\"modifiedOn\":\"2021-10-17T19:18:45Z\",\"resourceId\":\"cpkvxodp\",\"provisioningErrors\":[],\"isAttachedCompute\":true,\"disableLocalAuth\":true},\"id\":\"ydagfuaxbe\",\"name\":\"yiuokktwh\",\"type\":\"dxwzywqsmbsurexi\"},{\"identity\":{\"type\":\"None\",\"userAssignedIdentities\":{}},\"location\":\"sfksy\",\"tags\":{\"kiiuxhqyudxor\":\"ys\",\"poczvyifqrvkdvjs\":\"qn\",\"d\":\"lrmv\",\"zwtruwiqzbqjvsov\":\"watkpnpulexxb\"},\"sku\":{\"name\":\"okacspk\",\"tier\":\"Premium\",\"size\":\"dobpxjmflbvvn\",\"family\":\"rkcciwwzjuqk\",\"capacity\":330822059},\"properties\":{\"computeType\":\"Compute\",\"computeLocation\":\"wkuofoskghsauu\",\"provisioningState\":\"Unknown\",\"description\":\"vxieduugidyj\",\"createdOn\":\"2021-01-22T08:57:19Z\",\"modifiedOn\":\"2021-04-30T20:35:21Z\",\"resourceId\":\"osvexcsonpclhoc\",\"provisioningErrors\":[],\"isAttachedCompute\":false,\"disableLocalAuth\":false},\"id\":\"vleggzfbuhfmvfax\",\"name\":\"ffeii\",\"type\":\"hl\"}],\"nextLink\":\"ez\"}")
                .toObject(PaginatedComputeResourcesList.class);
        Assertions
            .assertEquals(
                ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.value().get(0).identity().type());
        Assertions.assertEquals("vyvdcs", model.value().get(0).location());
        Assertions.assertEquals("nnaamdectehfiqsc", model.value().get(0).tags().get("eypvhezrkg"));
        Assertions.assertEquals("vxyqjpkcattpngjc", model.value().get(0).sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, model.value().get(0).sku().tier());
        Assertions.assertEquals("sqpjhvmdajvn", model.value().get(0).sku().size());
        Assertions.assertEquals("ounqecano", model.value().get(0).sku().family());
        Assertions.assertEquals(996084293, model.value().get(0).sku().capacity());
        Assertions.assertEquals("yhltrpmopjmcm", model.value().get(0).properties().computeLocation());
        Assertions.assertEquals("kthfui", model.value().get(0).properties().description());
        Assertions.assertEquals("cpkvxodp", model.value().get(0).properties().resourceId());
        Assertions.assertEquals(true, model.value().get(0).properties().disableLocalAuth());
        Assertions.assertEquals("ez", model.nextLink());
    }

    @Test
    public void testSerialize() {
        PaginatedComputeResourcesList model =
            new PaginatedComputeResourcesList()
                .withValue(
                    Arrays
                        .asList(
                            new ComputeResourceInner()
                                .withIdentity(
                                    new ManagedServiceIdentity()
                                        .withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                                        .withUserAssignedIdentities(mapOf()))
                                .withLocation("vyvdcs")
                                .withTags(mapOf("eypvhezrkg", "nnaamdectehfiqsc", "sle", "hcjrefovgmk"))
                                .withSku(
                                    new Sku()
                                        .withName("vxyqjpkcattpngjc")
                                        .withTier(SkuTier.STANDARD)
                                        .withSize("sqpjhvmdajvn")
                                        .withFamily("ounqecano")
                                        .withCapacity(996084293))
                                .withProperties(
                                    new Compute()
                                        .withComputeLocation("yhltrpmopjmcm")
                                        .withDescription("kthfui")
                                        .withResourceId("cpkvxodp")
                                        .withDisableLocalAuth(true)),
                            new ComputeResourceInner()
                                .withIdentity(
                                    new ManagedServiceIdentity()
                                        .withType(ManagedServiceIdentityType.NONE)
                                        .withUserAssignedIdentities(mapOf()))
                                .withLocation("sfksy")
                                .withTags(
                                    mapOf(
                                        "kiiuxhqyudxor",
                                        "ys",
                                        "poczvyifqrvkdvjs",
                                        "qn",
                                        "d",
                                        "lrmv",
                                        "zwtruwiqzbqjvsov",
                                        "watkpnpulexxb"))
                                .withSku(
                                    new Sku()
                                        .withName("okacspk")
                                        .withTier(SkuTier.PREMIUM)
                                        .withSize("dobpxjmflbvvn")
                                        .withFamily("rkcciwwzjuqk")
                                        .withCapacity(330822059))
                                .withProperties(
                                    new Compute()
                                        .withComputeLocation("wkuofoskghsauu")
                                        .withDescription("vxieduugidyj")
                                        .withResourceId("osvexcsonpclhoc")
                                        .withDisableLocalAuth(false))))
                .withNextLink("ez");
        model = BinaryData.fromObject(model).toObject(PaginatedComputeResourcesList.class);
        Assertions
            .assertEquals(
                ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.value().get(0).identity().type());
        Assertions.assertEquals("vyvdcs", model.value().get(0).location());
        Assertions.assertEquals("nnaamdectehfiqsc", model.value().get(0).tags().get("eypvhezrkg"));
        Assertions.assertEquals("vxyqjpkcattpngjc", model.value().get(0).sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, model.value().get(0).sku().tier());
        Assertions.assertEquals("sqpjhvmdajvn", model.value().get(0).sku().size());
        Assertions.assertEquals("ounqecano", model.value().get(0).sku().family());
        Assertions.assertEquals(996084293, model.value().get(0).sku().capacity());
        Assertions.assertEquals("yhltrpmopjmcm", model.value().get(0).properties().computeLocation());
        Assertions.assertEquals("kthfui", model.value().get(0).properties().description());
        Assertions.assertEquals("cpkvxodp", model.value().get(0).properties().resourceId());
        Assertions.assertEquals(true, model.value().get(0).properties().disableLocalAuth());
        Assertions.assertEquals("ez", model.nextLink());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
