// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.DataVersionBaseInner;
import com.azure.resourcemanager.machinelearning.models.DataVersionBaseProperties;
import com.azure.resourcemanager.machinelearning.models.DataVersionBaseResourceArmPaginatedResult;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class DataVersionBaseResourceArmPaginatedResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        DataVersionBaseResourceArmPaginatedResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"dataType\":\"DataVersionBaseProperties\",\"dataUri\":\"hhg\",\"isArchived\":false,\"isAnonymous\":false,\"description\":\"ivfomiloxgg\",\"tags\":{\"hvcyyysfg\":\"iqndieuzaofj\"},\"properties\":{\"qonmacj\":\"cubiipuipw\",\"izsh\":\"k\",\"gmblrri\":\"vcimpev\",\"rwfscjfnynszquj\":\"bywdxsmicc\"}},\"id\":\"dvoqyt\",\"name\":\"byowbblgyavutp\",\"type\":\"hjoxo\"},{\"properties\":{\"dataType\":\"DataVersionBaseProperties\",\"dataUri\":\"smsks\",\"isArchived\":false,\"isAnonymous\":false,\"description\":\"oljxkcgx\",\"tags\":{\"l\":\"sffgcvizqzd\",\"youpfgfbkj\":\"w\",\"ttsttktlahbqact\":\"bdyhgkfminsgowz\"},\"properties\":{\"x\":\"zukxitmmqtgqq\",\"isavok\":\"rnxrxcpj\",\"azivjlfrqttbajl\":\"dzf\"}},\"id\":\"tnwxy\",\"name\":\"opidkqqfkuv\",\"type\":\"cxkdmligovi\"},{\"properties\":{\"dataType\":\"DataVersionBaseProperties\",\"dataUri\":\"rxkpmloazuruoc\",\"isArchived\":false,\"isAnonymous\":false,\"description\":\"te\",\"tags\":{\"ordilmywwtkgkxny\":\"fhjxakvvjgs\",\"vudtjuewbcihx\":\"dabg\",\"ayakkudzpx\":\"uwhcjyxccybv\",\"stcyohpfkyrkdbd\":\"wjplma\"},\"properties\":{\"mnwqj\":\"gsj\",\"n\":\"obaiyhddviaceg\",\"dwvvba\":\"ntfpmvmemfnc\"}},\"id\":\"lllchpodb\",\"name\":\"evwrdnhfuk\",\"type\":\"vsjcswsmystuluqy\"}],\"nextLink\":\"cvlerchpqbmfpjba\"}")
            .toObject(DataVersionBaseResourceArmPaginatedResult.class);
        Assertions.assertEquals("ivfomiloxgg", model.value().get(0).properties().description());
        Assertions.assertEquals("iqndieuzaofj", model.value().get(0).properties().tags().get("hvcyyysfg"));
        Assertions.assertEquals("cubiipuipw", model.value().get(0).properties().properties().get("qonmacj"));
        Assertions.assertEquals(false, model.value().get(0).properties().isArchived());
        Assertions.assertEquals(false, model.value().get(0).properties().isAnonymous());
        Assertions.assertEquals("hhg", model.value().get(0).properties().dataUri());
        Assertions.assertEquals("cvlerchpqbmfpjba", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        DataVersionBaseResourceArmPaginatedResult model
            = new DataVersionBaseResourceArmPaginatedResult().withValue(Arrays.asList(
                new DataVersionBaseInner().withProperties(new DataVersionBaseProperties().withDescription("ivfomiloxgg")
                    .withTags(mapOf("hvcyyysfg", "iqndieuzaofj"))
                    .withProperties(mapOf("qonmacj", "cubiipuipw", "izsh", "k", "gmblrri", "vcimpev", "rwfscjfnynszquj",
                        "bywdxsmicc"))
                    .withIsArchived(false)
                    .withIsAnonymous(false)
                    .withDataUri("hhg")),
                new DataVersionBaseInner().withProperties(new DataVersionBaseProperties().withDescription("oljxkcgx")
                    .withTags(mapOf("l", "sffgcvizqzd", "youpfgfbkj", "w", "ttsttktlahbqact", "bdyhgkfminsgowz"))
                    .withProperties(mapOf("x", "zukxitmmqtgqq", "isavok", "rnxrxcpj", "azivjlfrqttbajl", "dzf"))
                    .withIsArchived(false)
                    .withIsAnonymous(false)
                    .withDataUri("smsks")),
                new DataVersionBaseInner().withProperties(new DataVersionBaseProperties().withDescription("te")
                    .withTags(mapOf("ordilmywwtkgkxny", "fhjxakvvjgs", "vudtjuewbcihx", "dabg", "ayakkudzpx",
                        "uwhcjyxccybv", "stcyohpfkyrkdbd", "wjplma"))
                    .withProperties(mapOf("mnwqj", "gsj", "n", "obaiyhddviaceg", "dwvvba", "ntfpmvmemfnc"))
                    .withIsArchived(false)
                    .withIsAnonymous(false)
                    .withDataUri("rxkpmloazuruoc"))))
                .withNextLink("cvlerchpqbmfpjba");
        model = BinaryData.fromObject(model).toObject(DataVersionBaseResourceArmPaginatedResult.class);
        Assertions.assertEquals("ivfomiloxgg", model.value().get(0).properties().description());
        Assertions.assertEquals("iqndieuzaofj", model.value().get(0).properties().tags().get("hvcyyysfg"));
        Assertions.assertEquals("cubiipuipw", model.value().get(0).properties().properties().get("qonmacj"));
        Assertions.assertEquals(false, model.value().get(0).properties().isArchived());
        Assertions.assertEquals(false, model.value().get(0).properties().isAnonymous());
        Assertions.assertEquals("hhg", model.value().get(0).properties().dataUri());
        Assertions.assertEquals("cvlerchpqbmfpjba", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
