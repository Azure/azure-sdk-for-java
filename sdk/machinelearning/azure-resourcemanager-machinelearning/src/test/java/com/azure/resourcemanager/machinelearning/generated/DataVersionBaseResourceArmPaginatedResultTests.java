// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.DataVersionBaseInner;
import com.azure.resourcemanager.machinelearning.models.DataVersionBaseProperties;
import com.azure.resourcemanager.machinelearning.models.DataVersionBaseResourceArmPaginatedResult;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class DataVersionBaseResourceArmPaginatedResultTests {
    @Test
    public void testDeserialize() {
        DataVersionBaseResourceArmPaginatedResult model =
            BinaryData
                .fromString(
                    "{\"nextLink\":\"vfcluyovwxnbkfe\",\"value\":[{\"properties\":{\"dataType\":\"DataVersionBaseProperties\",\"dataUri\":\"scyhwz\",\"isAnonymous\":false,\"isArchived\":false,\"description\":\"bzbomvzzbtdcqvpn\",\"properties\":{},\"tags\":{}},\"id\":\"viylwdshfssnrbgy\",\"name\":\"frymsgaojfmwnc\",\"type\":\"tmr\"},{\"properties\":{\"dataType\":\"DataVersionBaseProperties\",\"dataUri\":\"hirctymoxoftpipi\",\"isAnonymous\":true,\"isArchived\":false,\"description\":\"xacpqjli\",\"properties\":{},\"tags\":{}},\"id\":\"spskasdvlmfwdgz\",\"name\":\"ulucv\",\"type\":\"amrsreuzv\"},{\"properties\":{\"dataType\":\"DataVersionBaseProperties\",\"dataUri\":\"urisjnhnytxifqj\",\"isAnonymous\":false,\"isArchived\":true,\"description\":\"ublwpcesutrg\",\"properties\":{},\"tags\":{}},\"id\":\"uutpwoqhih\",\"name\":\"jqgwzp\",\"type\":\"fqntcyp\"},{\"properties\":{\"dataType\":\"DataVersionBaseProperties\",\"dataUri\":\"xjvfoimwksl\",\"isAnonymous\":true,\"isArchived\":true,\"description\":\"xvydfceacvlhvygd\",\"properties\":{},\"tags\":{}},\"id\":\"mrtwna\",\"name\":\"jslb\",\"type\":\"wkojgcyztsfmzn\"}]}")
                .toObject(DataVersionBaseResourceArmPaginatedResult.class);
        Assertions.assertEquals("vfcluyovwxnbkfe", model.nextLink());
        Assertions.assertEquals("bzbomvzzbtdcqvpn", model.value().get(0).properties().description());
        Assertions.assertEquals(false, model.value().get(0).properties().isAnonymous());
        Assertions.assertEquals(false, model.value().get(0).properties().isArchived());
        Assertions.assertEquals("scyhwz", model.value().get(0).properties().dataUri());
    }

    @Test
    public void testSerialize() {
        DataVersionBaseResourceArmPaginatedResult model =
            new DataVersionBaseResourceArmPaginatedResult()
                .withNextLink("vfcluyovwxnbkfe")
                .withValue(
                    Arrays
                        .asList(
                            new DataVersionBaseInner()
                                .withProperties(
                                    new DataVersionBaseProperties()
                                        .withDescription("bzbomvzzbtdcqvpn")
                                        .withProperties(mapOf())
                                        .withTags(mapOf())
                                        .withIsAnonymous(false)
                                        .withIsArchived(false)
                                        .withDataUri("scyhwz")),
                            new DataVersionBaseInner()
                                .withProperties(
                                    new DataVersionBaseProperties()
                                        .withDescription("xacpqjli")
                                        .withProperties(mapOf())
                                        .withTags(mapOf())
                                        .withIsAnonymous(true)
                                        .withIsArchived(false)
                                        .withDataUri("hirctymoxoftpipi")),
                            new DataVersionBaseInner()
                                .withProperties(
                                    new DataVersionBaseProperties()
                                        .withDescription("ublwpcesutrg")
                                        .withProperties(mapOf())
                                        .withTags(mapOf())
                                        .withIsAnonymous(false)
                                        .withIsArchived(true)
                                        .withDataUri("urisjnhnytxifqj")),
                            new DataVersionBaseInner()
                                .withProperties(
                                    new DataVersionBaseProperties()
                                        .withDescription("xvydfceacvlhvygd")
                                        .withProperties(mapOf())
                                        .withTags(mapOf())
                                        .withIsAnonymous(true)
                                        .withIsArchived(true)
                                        .withDataUri("xjvfoimwksl"))));
        model = BinaryData.fromObject(model).toObject(DataVersionBaseResourceArmPaginatedResult.class);
        Assertions.assertEquals("vfcluyovwxnbkfe", model.nextLink());
        Assertions.assertEquals("bzbomvzzbtdcqvpn", model.value().get(0).properties().description());
        Assertions.assertEquals(false, model.value().get(0).properties().isAnonymous());
        Assertions.assertEquals(false, model.value().get(0).properties().isArchived());
        Assertions.assertEquals("scyhwz", model.value().get(0).properties().dataUri());
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
