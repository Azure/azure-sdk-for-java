// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.SkuResourceInner;
import com.azure.resourcemanager.machinelearning.models.SkuCapacity;
import com.azure.resourcemanager.machinelearning.models.SkuScaleType;
import com.azure.resourcemanager.machinelearning.models.SkuSetting;
import com.azure.resourcemanager.machinelearning.models.SkuTier;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class SkuResourceInnerTests {
    @Test
    public void testDeserialize() {
        SkuResourceInner model =
            BinaryData
                .fromString(
                    "{\"capacity\":{\"default\":1794019366,\"maximum\":128430456,\"minimum\":1889348640,\"scaleType\":\"None\"},\"resourceType\":\"mlfmkqs\",\"sku\":{\"name\":\"zuawxtzxpuamwa\",\"tier\":\"Premium\"}}")
                .toObject(SkuResourceInner.class);
        Assertions.assertEquals(1794019366, model.capacity().defaultProperty());
        Assertions.assertEquals(128430456, model.capacity().maximum());
        Assertions.assertEquals(1889348640, model.capacity().minimum());
        Assertions.assertEquals(SkuScaleType.NONE, model.capacity().scaleType());
        Assertions.assertEquals("zuawxtzxpuamwa", model.sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, model.sku().tier());
    }

    @Test
    public void testSerialize() {
        SkuResourceInner model =
            new SkuResourceInner()
                .withCapacity(
                    new SkuCapacity()
                        .withDefaultProperty(1794019366)
                        .withMaximum(128430456)
                        .withMinimum(1889348640)
                        .withScaleType(SkuScaleType.NONE))
                .withSku(new SkuSetting().withName("zuawxtzxpuamwa").withTier(SkuTier.PREMIUM));
        model = BinaryData.fromObject(model).toObject(SkuResourceInner.class);
        Assertions.assertEquals(1794019366, model.capacity().defaultProperty());
        Assertions.assertEquals(128430456, model.capacity().maximum());
        Assertions.assertEquals(1889348640, model.capacity().minimum());
        Assertions.assertEquals(SkuScaleType.NONE, model.capacity().scaleType());
        Assertions.assertEquals("zuawxtzxpuamwa", model.sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, model.sku().tier());
    }
}
