// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.SkuResourceInner;
import com.azure.resourcemanager.machinelearning.models.SkuCapacity;
import com.azure.resourcemanager.machinelearning.models.SkuScaleType;
import com.azure.resourcemanager.machinelearning.models.SkuSetting;
import com.azure.resourcemanager.machinelearning.models.SkuTier;
import org.junit.jupiter.api.Assertions;

public final class SkuResourceInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        SkuResourceInner model = BinaryData.fromString(
            "{\"resourceType\":\"tyrilkfbnrqqxvz\",\"sku\":{\"name\":\"bnfnqtxjtoma\",\"tier\":\"Standard\"},\"capacity\":{\"minimum\":1063969738,\"maximum\":1165250795,\"default\":574415772,\"scaleType\":\"Manual\"}}")
            .toObject(SkuResourceInner.class);
        Assertions.assertEquals("bnfnqtxjtoma", model.sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, model.sku().tier());
        Assertions.assertEquals(1063969738, model.capacity().minimum());
        Assertions.assertEquals(1165250795, model.capacity().maximum());
        Assertions.assertEquals(574415772, model.capacity().defaultProperty());
        Assertions.assertEquals(SkuScaleType.MANUAL, model.capacity().scaleType());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        SkuResourceInner model
            = new SkuResourceInner().withSku(new SkuSetting().withName("bnfnqtxjtoma").withTier(SkuTier.STANDARD))
                .withCapacity(new SkuCapacity().withMinimum(1063969738)
                    .withMaximum(1165250795)
                    .withDefaultProperty(574415772)
                    .withScaleType(SkuScaleType.MANUAL));
        model = BinaryData.fromObject(model).toObject(SkuResourceInner.class);
        Assertions.assertEquals("bnfnqtxjtoma", model.sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, model.sku().tier());
        Assertions.assertEquals(1063969738, model.capacity().minimum());
        Assertions.assertEquals(1165250795, model.capacity().maximum());
        Assertions.assertEquals(574415772, model.capacity().defaultProperty());
        Assertions.assertEquals(SkuScaleType.MANUAL, model.capacity().scaleType());
    }
}
