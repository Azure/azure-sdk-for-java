// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.MonitoringThreshold;
import com.azure.resourcemanager.machinelearning.models.NumericalPredictionDriftMetric;
import com.azure.resourcemanager.machinelearning.models.NumericalPredictionDriftMetricThreshold;
import org.junit.jupiter.api.Assertions;

public final class NumericalPredictionDriftMetricThresholdTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        NumericalPredictionDriftMetricThreshold model = BinaryData.fromString(
            "{\"dataType\":\"Numerical\",\"metric\":\"TwoSampleKolmogorovSmirnovTest\",\"threshold\":{\"value\":63.51610151085381}}")
            .toObject(NumericalPredictionDriftMetricThreshold.class);
        Assertions.assertEquals(63.51610151085381D, model.threshold().value());
        Assertions.assertEquals(NumericalPredictionDriftMetric.TWO_SAMPLE_KOLMOGOROV_SMIRNOV_TEST, model.metric());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        NumericalPredictionDriftMetricThreshold model = new NumericalPredictionDriftMetricThreshold()
            .withThreshold(new MonitoringThreshold().withValue(63.51610151085381D))
            .withMetric(NumericalPredictionDriftMetric.TWO_SAMPLE_KOLMOGOROV_SMIRNOV_TEST);
        model = BinaryData.fromObject(model).toObject(NumericalPredictionDriftMetricThreshold.class);
        Assertions.assertEquals(63.51610151085381D, model.threshold().value());
        Assertions.assertEquals(NumericalPredictionDriftMetric.TWO_SAMPLE_KOLMOGOROV_SMIRNOV_TEST, model.metric());
    }
}
