// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.machinelearning.MachineLearningManager;
import com.azure.resourcemanager.machinelearning.models.ModelVersion;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ModelVersionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"flavors\":{\"wcaicd\":{\"data\":{\"aptexzylqhew\":\"suyqvmxnavxzp\",\"wggmitdwolfmfaz\":\"cchexczrmyn\"}},\"nyhivhyujqxyfb\":{\"data\":{\"wohddli\":\"tzf\",\"evuuk\":\"kkosqpliegemtnb\",\"tlrbzqtu\":\"diksncrz\",\"ftohdlpcixpx\":\"gajfa\"}},\"mcivhwwhyej\":{\"data\":{\"ohgcnr\":\"ylayabrdnovuduww\"}},\"dispasxwiicfsbj\":{\"data\":{\"fsqbcfqaqoveqowq\":\"dfcfyzwkmr\"}}},\"modelType\":\"adndowkxq\",\"modelUri\":\"sax\",\"jobName\":\"ieehpvqfifrr\",\"provisioningState\":\"Deleting\",\"stage\":\"gjgyovcpgqiism\",\"isArchived\":false,\"isAnonymous\":false,\"description\":\"oykrbk\",\"tags\":{\"mtrhwwdfncquty\":\"cmjkron\",\"mepbmogtfpksk\":\"zhzlvkmirnvdbza\",\"rlyynkgnychu\":\"syoh\",\"oeodgnu\":\"hngwtbhjgli\"},\"properties\":{\"mfixtyavv\":\"fgtw\",\"o\":\"xjqdj\"}},\"id\":\"gegwxjgkrppmvno\",\"name\":\"t\",\"type\":\"qciqawhkdk\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MachineLearningManager manager = MachineLearningManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ModelVersion response = manager.modelVersions()
            .getWithResponse("j", "fkjd", "lqtqjabwtk", "jytvq", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("oykrbk", response.properties().description());
        Assertions.assertEquals("cmjkron", response.properties().tags().get("mtrhwwdfncquty"));
        Assertions.assertEquals("fgtw", response.properties().properties().get("mfixtyavv"));
        Assertions.assertEquals(false, response.properties().isArchived());
        Assertions.assertEquals(false, response.properties().isAnonymous());
        Assertions.assertEquals("suyqvmxnavxzp",
            response.properties().flavors().get("wcaicd").data().get("aptexzylqhew"));
        Assertions.assertEquals("adndowkxq", response.properties().modelType());
        Assertions.assertEquals("sax", response.properties().modelUri());
        Assertions.assertEquals("ieehpvqfifrr", response.properties().jobName());
        Assertions.assertEquals("gjgyovcpgqiism", response.properties().stage());
    }
}
