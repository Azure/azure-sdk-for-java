// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.EarlyTerminationPolicy;
import com.azure.resourcemanager.machinelearning.models.ImageLimitSettings;
import com.azure.resourcemanager.machinelearning.models.ImageModelDistributionSettingsObjectDetection;
import com.azure.resourcemanager.machinelearning.models.ImageModelSettingsObjectDetection;
import com.azure.resourcemanager.machinelearning.models.ImageObjectDetectionBase;
import com.azure.resourcemanager.machinelearning.models.ImageSweepSettings;
import com.azure.resourcemanager.machinelearning.models.InputDeliveryMode;
import com.azure.resourcemanager.machinelearning.models.LearningRateScheduler;
import com.azure.resourcemanager.machinelearning.models.MLFlowModelJobInput;
import com.azure.resourcemanager.machinelearning.models.MLTableJobInput;
import com.azure.resourcemanager.machinelearning.models.ModelSize;
import com.azure.resourcemanager.machinelearning.models.SamplingAlgorithmType;
import com.azure.resourcemanager.machinelearning.models.StochasticOptimizer;
import com.azure.resourcemanager.machinelearning.models.ValidationMetricType;
import java.time.Duration;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class ImageObjectDetectionBaseTests {
    @Test
    public void testDeserialize() {
        ImageObjectDetectionBase model =
            BinaryData
                .fromString(
                    "{\"modelSettings\":{\"boxDetectionsPerImage\":535686320,\"boxScoreThreshold\":81.63317,\"imageSize\":419191991,\"maxSize\":652596420,\"minSize\":286301552,\"modelSize\":\"Large\",\"multiScale\":false,\"nmsIouThreshold\":70.345695,\"tileGridSize\":\"eojhtollhsvi\",\"tileOverlapRatio\":17.49817,\"tilePredictionsNmsThreshold\":15.531773,\"validationIouThreshold\":36.93536,\"validationMetricType\":\"Voc\",\"advancedSettings\":\"pnovyoanfbcs\",\"amsGradient\":false,\"augmentations\":\"ywv\",\"beta1\":49.63614,\"beta2\":96.43286,\"checkpointFrequency\":2057113519,\"checkpointModel\":{\"jobInputType\":\"mlflow_model\",\"mode\":\"Direct\",\"uri\":\"gaeukyawohpm\",\"description\":\"qnucs\"},\"checkpointRunId\":\"hsidsjtdlpbnin\",\"distributed\":true,\"earlyStopping\":true,\"earlyStoppingDelay\":401834432,\"earlyStoppingPatience\":1120208471,\"enableOnnxNormalization\":false,\"evaluationFrequency\":416464470,\"gradientAccumulationStep\":63190145,\"layersToFreeze\":476616488,\"learningRate\":64.128784,\"learningRateScheduler\":\"Step\",\"modelName\":\"klhsyekrdrenxol\",\"momentum\":88.83367,\"nesterov\":false,\"numberOfEpochs\":1746488181,\"numberOfWorkers\":322712945,\"optimizer\":\"None\",\"randomSeed\":950141294,\"stepLRGamma\":2.1940768,\"stepLRStepSize\":2054893353,\"trainingBatchSize\":1860251154,\"validationBatchSize\":1656773310,\"warmupCosineLRCycles\":15.856802,\"warmupCosineLRWarmupEpochs\":383669214,\"weightDecay\":76.37597},\"searchSpace\":[{\"boxDetectionsPerImage\":\"k\",\"boxScoreThreshold\":\"mmpathu\",\"imageSize\":\"ah\",\"maxSize\":\"an\",\"minSize\":\"wllbv\",\"modelSize\":\"zsffte\",\"multiScale\":\"us\",\"nmsIouThreshold\":\"tjtgravaqogfkb\",\"tileGridSize\":\"auzlqbtxxw\",\"tileOverlapRatio\":\"h\",\"tilePredictionsNmsThreshold\":\"zudrtpzk\",\"validationIouThreshold\":\"eboywhczzqrhm\",\"validationMetricType\":\"qbedygisrzwn\",\"amsGradient\":\"d\",\"augmentations\":\"jch\",\"beta1\":\"mpwctoflds\",\"beta2\":\"cdhz\",\"distributed\":\"kbrfgdrwji\",\"earlyStopping\":\"whfjsrwqrxe\",\"earlyStoppingDelay\":\"gcwvrrmdqntycna\",\"earlyStoppingPatience\":\"hvmaxgnuyeamcmhu\",\"enableOnnxNormalization\":\"jecehokwc\",\"evaluationFrequency\":\"twloesqr\",\"gradientAccumulationStep\":\"vrbnyrukoil\",\"layersToFreeze\":\"iduw\",\"learningRate\":\"e\",\"learningRateScheduler\":\"jlhwyxpzruzyt\",\"modelName\":\"kkwhbgxvellvulnx\",\"momentum\":\"nitmujdtvmclyymf\",\"nesterov\":\"mjpddnyxf\",\"numberOfEpochs\":\"v\",\"numberOfWorkers\":\"mzqmzjqrb\",\"optimizer\":\"vnmdyfoeboj\",\"randomSeed\":\"pp\",\"stepLRGamma\":\"aohoqkpjtnq\",\"stepLRStepSize\":\"l\",\"trainingBatchSize\":\"wkdcwmqs\",\"validationBatchSize\":\"ilm\",\"warmupCosineLRCycles\":\"dqaolfylnkk\",\"warmupCosineLRWarmupEpochs\":\"pjvlywltmfwo\",\"weightDecay\":\"jw\"},{\"boxDetectionsPerImage\":\"wyjfnqzocrdzgcze\",\"boxScoreThreshold\":\"tgxdncaqt\",\"imageSize\":\"ekoifuvnyttzgi\",\"maxSize\":\"yri\",\"minSize\":\"gm\",\"modelSize\":\"ehlq\",\"multiScale\":\"nrflkndrndpg\",\"nmsIouThreshold\":\"odhda\",\"tileGridSize\":\"twfhi\",\"tileOverlapRatio\":\"wgsabvcipo\",\"tilePredictionsNmsThreshold\":\"afcz\",\"validationIouThreshold\":\"mlj\",\"validationMetricType\":\"rvpe\",\"amsGradient\":\"cdveititj\",\"augmentations\":\"xzajlnsjhwjuyxxb\",\"beta1\":\"vmv\",\"beta2\":\"ytuadxkxeqbwp\",\"distributed\":\"ghyksarcdrnxs\",\"earlyStopping\":\"vlzladl\",\"earlyStoppingDelay\":\"kpbqhvfdqqjw\",\"earlyStoppingPatience\":\"hwzdanojisgglmv\",\"enableOnnxNormalization\":\"atuztjct\",\"evaluationFrequency\":\"pvbkaehxsmzyg\",\"gradientAccumulationStep\":\"wakwseivmakxhys\",\"layersToFreeze\":\"ljuxl\",\"learningRate\":\"ect\",\"learningRateScheduler\":\"fjmskdchmaiu\",\"modelName\":\"vlzw\",\"momentum\":\"gmfalkzazmgoked\",\"nesterov\":\"qafkmkrokzrth\",\"numberOfEpochs\":\"twpqrtva\",\"numberOfWorkers\":\"nqnixiezeagmce\",\"optimizer\":\"uugedhfp\",\"randomSeed\":\"tlzm\",\"stepLRGamma\":\"syjdeolctae\",\"stepLRStepSize\":\"syrled\",\"trainingBatchSize\":\"ustbvtqigdx\",\"validationBatchSize\":\"sgeafgfosehx\",\"warmupCosineLRCycles\":\"sxezppkkwaa\",\"warmupCosineLRWarmupEpochs\":\"k\",\"weightDecay\":\"jlpzeqtoyrp\"},{\"boxDetectionsPerImage\":\"xlaj\",\"boxScoreThreshold\":\"lpquevhamfow\",\"imageSize\":\"btmkekxpkzwaq\",\"maxSize\":\"fqovc\",\"minSize\":\"qbplvfiduszte\",\"modelSize\":\"byjgmsfepx\",\"multiScale\":\"hpqadagrhrdicxdw\",\"nmsIouThreshold\":\"fowxwyovcxjsgbi\",\"tileGridSize\":\"ukdveksbuhoduc\",\"tileOverlapRatio\":\"lscrdpibfdyjduss\",\"tilePredictionsNmsThreshold\":\"szekbh\",\"validationIouThreshold\":\"kaaggkreh\",\"validationMetricType\":\"rnuybffljfii\",\"amsGradient\":\"eoagsqta\",\"augmentations\":\"usrexxf\",\"beta1\":\"sqwudohzilfmnli\",\"beta2\":\"simsfeypofqpmb\",\"distributed\":\"qgsdr\",\"earlyStopping\":\"ttjxophgerhsmvgo\",\"earlyStoppingDelay\":\"wzm\",\"earlyStoppingPatience\":\"lrixysfnimsq\",\"enableOnnxNormalization\":\"wwmhkruwae\",\"evaluationFrequency\":\"ympmlqoin\",\"gradientAccumulationStep\":\"duewihapfj\",\"layersToFreeze\":\"knjdiqfliejhp\",\"learningRate\":\"bi\",\"learningRateScheduler\":\"fsbw\",\"modelName\":\"ivbvzi\",\"momentum\":\"wxgoooxzpra\",\"nesterov\":\"s\",\"numberOfEpochs\":\"knpdgzigjsu\",\"numberOfWorkers\":\"whgsaodkww\",\"optimizer\":\"afoctohz\",\"randomSeed\":\"quvwsxbgn\",\"stepLRGamma\":\"ervqchoadhrsxqvz\",\"stepLRStepSize\":\"pabdsrg\",\"trainingBatchSize\":\"jglzrsubklrxhjnl\",\"validationBatchSize\":\"etjdvqydieqqkwa\",\"warmupCosineLRCycles\":\"wdxvqzxoebwg\",\"warmupCosineLRWarmupEpochs\":\"bibanbau\",\"weightDecay\":\"tzvp\"}],\"limitSettings\":{\"maxConcurrentTrials\":49588289,\"maxTrials\":1206228769,\"timeout\":\"PT46H27M22S\"},\"sweepSettings\":{\"earlyTermination\":{\"policyType\":\"EarlyTerminationPolicy\",\"delayEvaluation\":1904568051,\"evaluationInterval\":1794717453},\"samplingAlgorithm\":\"Bayesian\"},\"validationData\":{\"jobInputType\":\"mltable\",\"mode\":\"Download\",\"uri\":\"anbtttkgsu\",\"description\":\"nrswgkpjhboyik\"},\"validationDataSize\":63.02897835620131}")
                .toObject(ImageObjectDetectionBase.class);
        Assertions.assertEquals(49588289, model.limitSettings().maxConcurrentTrials());
        Assertions.assertEquals(1206228769, model.limitSettings().maxTrials());
        Assertions.assertEquals(Duration.parse("PT46H27M22S"), model.limitSettings().timeout());
        Assertions.assertEquals(1904568051, model.sweepSettings().earlyTermination().delayEvaluation());
        Assertions.assertEquals(1794717453, model.sweepSettings().earlyTermination().evaluationInterval());
        Assertions.assertEquals(SamplingAlgorithmType.BAYESIAN, model.sweepSettings().samplingAlgorithm());
        Assertions.assertEquals("nrswgkpjhboyik", model.validationData().description());
        Assertions.assertEquals(InputDeliveryMode.DOWNLOAD, model.validationData().mode());
        Assertions.assertEquals("anbtttkgsu", model.validationData().uri());
        Assertions.assertEquals(63.02897835620131D, model.validationDataSize());
        Assertions.assertEquals("pnovyoanfbcs", model.modelSettings().advancedSettings());
        Assertions.assertEquals(false, model.modelSettings().amsGradient());
        Assertions.assertEquals("ywv", model.modelSettings().augmentations());
        Assertions.assertEquals(49.63614F, model.modelSettings().beta1());
        Assertions.assertEquals(96.43286F, model.modelSettings().beta2());
        Assertions.assertEquals(2057113519, model.modelSettings().checkpointFrequency());
        Assertions.assertEquals("qnucs", model.modelSettings().checkpointModel().description());
        Assertions.assertEquals(InputDeliveryMode.DIRECT, model.modelSettings().checkpointModel().mode());
        Assertions.assertEquals("gaeukyawohpm", model.modelSettings().checkpointModel().uri());
        Assertions.assertEquals("hsidsjtdlpbnin", model.modelSettings().checkpointRunId());
        Assertions.assertEquals(true, model.modelSettings().distributed());
        Assertions.assertEquals(true, model.modelSettings().earlyStopping());
        Assertions.assertEquals(401834432, model.modelSettings().earlyStoppingDelay());
        Assertions.assertEquals(1120208471, model.modelSettings().earlyStoppingPatience());
        Assertions.assertEquals(false, model.modelSettings().enableOnnxNormalization());
        Assertions.assertEquals(416464470, model.modelSettings().evaluationFrequency());
        Assertions.assertEquals(63190145, model.modelSettings().gradientAccumulationStep());
        Assertions.assertEquals(476616488, model.modelSettings().layersToFreeze());
        Assertions.assertEquals(64.128784F, model.modelSettings().learningRate());
        Assertions.assertEquals(LearningRateScheduler.STEP, model.modelSettings().learningRateScheduler());
        Assertions.assertEquals("klhsyekrdrenxol", model.modelSettings().modelName());
        Assertions.assertEquals(88.83367F, model.modelSettings().momentum());
        Assertions.assertEquals(false, model.modelSettings().nesterov());
        Assertions.assertEquals(1746488181, model.modelSettings().numberOfEpochs());
        Assertions.assertEquals(322712945, model.modelSettings().numberOfWorkers());
        Assertions.assertEquals(StochasticOptimizer.NONE, model.modelSettings().optimizer());
        Assertions.assertEquals(950141294, model.modelSettings().randomSeed());
        Assertions.assertEquals(2.1940768F, model.modelSettings().stepLRGamma());
        Assertions.assertEquals(2054893353, model.modelSettings().stepLRStepSize());
        Assertions.assertEquals(1860251154, model.modelSettings().trainingBatchSize());
        Assertions.assertEquals(1656773310, model.modelSettings().validationBatchSize());
        Assertions.assertEquals(15.856802F, model.modelSettings().warmupCosineLRCycles());
        Assertions.assertEquals(383669214, model.modelSettings().warmupCosineLRWarmupEpochs());
        Assertions.assertEquals(76.37597F, model.modelSettings().weightDecay());
        Assertions.assertEquals(535686320, model.modelSettings().boxDetectionsPerImage());
        Assertions.assertEquals(81.63317F, model.modelSettings().boxScoreThreshold());
        Assertions.assertEquals(419191991, model.modelSettings().imageSize());
        Assertions.assertEquals(652596420, model.modelSettings().maxSize());
        Assertions.assertEquals(286301552, model.modelSettings().minSize());
        Assertions.assertEquals(ModelSize.LARGE, model.modelSettings().modelSize());
        Assertions.assertEquals(false, model.modelSettings().multiScale());
        Assertions.assertEquals(70.345695F, model.modelSettings().nmsIouThreshold());
        Assertions.assertEquals("eojhtollhsvi", model.modelSettings().tileGridSize());
        Assertions.assertEquals(17.49817F, model.modelSettings().tileOverlapRatio());
        Assertions.assertEquals(15.531773F, model.modelSettings().tilePredictionsNmsThreshold());
        Assertions.assertEquals(36.93536F, model.modelSettings().validationIouThreshold());
        Assertions.assertEquals(ValidationMetricType.VOC, model.modelSettings().validationMetricType());
        Assertions.assertEquals("d", model.searchSpace().get(0).amsGradient());
        Assertions.assertEquals("jch", model.searchSpace().get(0).augmentations());
        Assertions.assertEquals("mpwctoflds", model.searchSpace().get(0).beta1());
        Assertions.assertEquals("cdhz", model.searchSpace().get(0).beta2());
        Assertions.assertEquals("kbrfgdrwji", model.searchSpace().get(0).distributed());
        Assertions.assertEquals("whfjsrwqrxe", model.searchSpace().get(0).earlyStopping());
        Assertions.assertEquals("gcwvrrmdqntycna", model.searchSpace().get(0).earlyStoppingDelay());
        Assertions.assertEquals("hvmaxgnuyeamcmhu", model.searchSpace().get(0).earlyStoppingPatience());
        Assertions.assertEquals("jecehokwc", model.searchSpace().get(0).enableOnnxNormalization());
        Assertions.assertEquals("twloesqr", model.searchSpace().get(0).evaluationFrequency());
        Assertions.assertEquals("vrbnyrukoil", model.searchSpace().get(0).gradientAccumulationStep());
        Assertions.assertEquals("iduw", model.searchSpace().get(0).layersToFreeze());
        Assertions.assertEquals("e", model.searchSpace().get(0).learningRate());
        Assertions.assertEquals("jlhwyxpzruzyt", model.searchSpace().get(0).learningRateScheduler());
        Assertions.assertEquals("kkwhbgxvellvulnx", model.searchSpace().get(0).modelName());
        Assertions.assertEquals("nitmujdtvmclyymf", model.searchSpace().get(0).momentum());
        Assertions.assertEquals("mjpddnyxf", model.searchSpace().get(0).nesterov());
        Assertions.assertEquals("v", model.searchSpace().get(0).numberOfEpochs());
        Assertions.assertEquals("mzqmzjqrb", model.searchSpace().get(0).numberOfWorkers());
        Assertions.assertEquals("vnmdyfoeboj", model.searchSpace().get(0).optimizer());
        Assertions.assertEquals("pp", model.searchSpace().get(0).randomSeed());
        Assertions.assertEquals("aohoqkpjtnq", model.searchSpace().get(0).stepLRGamma());
        Assertions.assertEquals("l", model.searchSpace().get(0).stepLRStepSize());
        Assertions.assertEquals("wkdcwmqs", model.searchSpace().get(0).trainingBatchSize());
        Assertions.assertEquals("ilm", model.searchSpace().get(0).validationBatchSize());
        Assertions.assertEquals("dqaolfylnkk", model.searchSpace().get(0).warmupCosineLRCycles());
        Assertions.assertEquals("pjvlywltmfwo", model.searchSpace().get(0).warmupCosineLRWarmupEpochs());
        Assertions.assertEquals("jw", model.searchSpace().get(0).weightDecay());
        Assertions.assertEquals("k", model.searchSpace().get(0).boxDetectionsPerImage());
        Assertions.assertEquals("mmpathu", model.searchSpace().get(0).boxScoreThreshold());
        Assertions.assertEquals("ah", model.searchSpace().get(0).imageSize());
        Assertions.assertEquals("an", model.searchSpace().get(0).maxSize());
        Assertions.assertEquals("wllbv", model.searchSpace().get(0).minSize());
        Assertions.assertEquals("zsffte", model.searchSpace().get(0).modelSize());
        Assertions.assertEquals("us", model.searchSpace().get(0).multiScale());
        Assertions.assertEquals("tjtgravaqogfkb", model.searchSpace().get(0).nmsIouThreshold());
        Assertions.assertEquals("auzlqbtxxw", model.searchSpace().get(0).tileGridSize());
        Assertions.assertEquals("h", model.searchSpace().get(0).tileOverlapRatio());
        Assertions.assertEquals("zudrtpzk", model.searchSpace().get(0).tilePredictionsNmsThreshold());
        Assertions.assertEquals("eboywhczzqrhm", model.searchSpace().get(0).validationIouThreshold());
        Assertions.assertEquals("qbedygisrzwn", model.searchSpace().get(0).validationMetricType());
    }

    @Test
    public void testSerialize() {
        ImageObjectDetectionBase model =
            new ImageObjectDetectionBase()
                .withLimitSettings(
                    new ImageLimitSettings()
                        .withMaxConcurrentTrials(49588289)
                        .withMaxTrials(1206228769)
                        .withTimeout(Duration.parse("PT46H27M22S")))
                .withSweepSettings(
                    new ImageSweepSettings()
                        .withEarlyTermination(
                            new EarlyTerminationPolicy()
                                .withDelayEvaluation(1904568051)
                                .withEvaluationInterval(1794717453))
                        .withSamplingAlgorithm(SamplingAlgorithmType.BAYESIAN))
                .withValidationData(
                    new MLTableJobInput()
                        .withDescription("nrswgkpjhboyik")
                        .withMode(InputDeliveryMode.DOWNLOAD)
                        .withUri("anbtttkgsu"))
                .withValidationDataSize(63.02897835620131D)
                .withModelSettings(
                    new ImageModelSettingsObjectDetection()
                        .withAdvancedSettings("pnovyoanfbcs")
                        .withAmsGradient(false)
                        .withAugmentations("ywv")
                        .withBeta1(49.63614F)
                        .withBeta2(96.43286F)
                        .withCheckpointFrequency(2057113519)
                        .withCheckpointModel(
                            new MLFlowModelJobInput()
                                .withDescription("qnucs")
                                .withMode(InputDeliveryMode.DIRECT)
                                .withUri("gaeukyawohpm"))
                        .withCheckpointRunId("hsidsjtdlpbnin")
                        .withDistributed(true)
                        .withEarlyStopping(true)
                        .withEarlyStoppingDelay(401834432)
                        .withEarlyStoppingPatience(1120208471)
                        .withEnableOnnxNormalization(false)
                        .withEvaluationFrequency(416464470)
                        .withGradientAccumulationStep(63190145)
                        .withLayersToFreeze(476616488)
                        .withLearningRate(64.128784F)
                        .withLearningRateScheduler(LearningRateScheduler.STEP)
                        .withModelName("klhsyekrdrenxol")
                        .withMomentum(88.83367F)
                        .withNesterov(false)
                        .withNumberOfEpochs(1746488181)
                        .withNumberOfWorkers(322712945)
                        .withOptimizer(StochasticOptimizer.NONE)
                        .withRandomSeed(950141294)
                        .withStepLRGamma(2.1940768F)
                        .withStepLRStepSize(2054893353)
                        .withTrainingBatchSize(1860251154)
                        .withValidationBatchSize(1656773310)
                        .withWarmupCosineLRCycles(15.856802F)
                        .withWarmupCosineLRWarmupEpochs(383669214)
                        .withWeightDecay(76.37597F)
                        .withBoxDetectionsPerImage(535686320)
                        .withBoxScoreThreshold(81.63317F)
                        .withImageSize(419191991)
                        .withMaxSize(652596420)
                        .withMinSize(286301552)
                        .withModelSize(ModelSize.LARGE)
                        .withMultiScale(false)
                        .withNmsIouThreshold(70.345695F)
                        .withTileGridSize("eojhtollhsvi")
                        .withTileOverlapRatio(17.49817F)
                        .withTilePredictionsNmsThreshold(15.531773F)
                        .withValidationIouThreshold(36.93536F)
                        .withValidationMetricType(ValidationMetricType.VOC))
                .withSearchSpace(
                    Arrays
                        .asList(
                            new ImageModelDistributionSettingsObjectDetection()
                                .withAmsGradient("d")
                                .withAugmentations("jch")
                                .withBeta1("mpwctoflds")
                                .withBeta2("cdhz")
                                .withDistributed("kbrfgdrwji")
                                .withEarlyStopping("whfjsrwqrxe")
                                .withEarlyStoppingDelay("gcwvrrmdqntycna")
                                .withEarlyStoppingPatience("hvmaxgnuyeamcmhu")
                                .withEnableOnnxNormalization("jecehokwc")
                                .withEvaluationFrequency("twloesqr")
                                .withGradientAccumulationStep("vrbnyrukoil")
                                .withLayersToFreeze("iduw")
                                .withLearningRate("e")
                                .withLearningRateScheduler("jlhwyxpzruzyt")
                                .withModelName("kkwhbgxvellvulnx")
                                .withMomentum("nitmujdtvmclyymf")
                                .withNesterov("mjpddnyxf")
                                .withNumberOfEpochs("v")
                                .withNumberOfWorkers("mzqmzjqrb")
                                .withOptimizer("vnmdyfoeboj")
                                .withRandomSeed("pp")
                                .withStepLRGamma("aohoqkpjtnq")
                                .withStepLRStepSize("l")
                                .withTrainingBatchSize("wkdcwmqs")
                                .withValidationBatchSize("ilm")
                                .withWarmupCosineLRCycles("dqaolfylnkk")
                                .withWarmupCosineLRWarmupEpochs("pjvlywltmfwo")
                                .withWeightDecay("jw")
                                .withBoxDetectionsPerImage("k")
                                .withBoxScoreThreshold("mmpathu")
                                .withImageSize("ah")
                                .withMaxSize("an")
                                .withMinSize("wllbv")
                                .withModelSize("zsffte")
                                .withMultiScale("us")
                                .withNmsIouThreshold("tjtgravaqogfkb")
                                .withTileGridSize("auzlqbtxxw")
                                .withTileOverlapRatio("h")
                                .withTilePredictionsNmsThreshold("zudrtpzk")
                                .withValidationIouThreshold("eboywhczzqrhm")
                                .withValidationMetricType("qbedygisrzwn"),
                            new ImageModelDistributionSettingsObjectDetection()
                                .withAmsGradient("cdveititj")
                                .withAugmentations("xzajlnsjhwjuyxxb")
                                .withBeta1("vmv")
                                .withBeta2("ytuadxkxeqbwp")
                                .withDistributed("ghyksarcdrnxs")
                                .withEarlyStopping("vlzladl")
                                .withEarlyStoppingDelay("kpbqhvfdqqjw")
                                .withEarlyStoppingPatience("hwzdanojisgglmv")
                                .withEnableOnnxNormalization("atuztjct")
                                .withEvaluationFrequency("pvbkaehxsmzyg")
                                .withGradientAccumulationStep("wakwseivmakxhys")
                                .withLayersToFreeze("ljuxl")
                                .withLearningRate("ect")
                                .withLearningRateScheduler("fjmskdchmaiu")
                                .withModelName("vlzw")
                                .withMomentum("gmfalkzazmgoked")
                                .withNesterov("qafkmkrokzrth")
                                .withNumberOfEpochs("twpqrtva")
                                .withNumberOfWorkers("nqnixiezeagmce")
                                .withOptimizer("uugedhfp")
                                .withRandomSeed("tlzm")
                                .withStepLRGamma("syjdeolctae")
                                .withStepLRStepSize("syrled")
                                .withTrainingBatchSize("ustbvtqigdx")
                                .withValidationBatchSize("sgeafgfosehx")
                                .withWarmupCosineLRCycles("sxezppkkwaa")
                                .withWarmupCosineLRWarmupEpochs("k")
                                .withWeightDecay("jlpzeqtoyrp")
                                .withBoxDetectionsPerImage("wyjfnqzocrdzgcze")
                                .withBoxScoreThreshold("tgxdncaqt")
                                .withImageSize("ekoifuvnyttzgi")
                                .withMaxSize("yri")
                                .withMinSize("gm")
                                .withModelSize("ehlq")
                                .withMultiScale("nrflkndrndpg")
                                .withNmsIouThreshold("odhda")
                                .withTileGridSize("twfhi")
                                .withTileOverlapRatio("wgsabvcipo")
                                .withTilePredictionsNmsThreshold("afcz")
                                .withValidationIouThreshold("mlj")
                                .withValidationMetricType("rvpe"),
                            new ImageModelDistributionSettingsObjectDetection()
                                .withAmsGradient("eoagsqta")
                                .withAugmentations("usrexxf")
                                .withBeta1("sqwudohzilfmnli")
                                .withBeta2("simsfeypofqpmb")
                                .withDistributed("qgsdr")
                                .withEarlyStopping("ttjxophgerhsmvgo")
                                .withEarlyStoppingDelay("wzm")
                                .withEarlyStoppingPatience("lrixysfnimsq")
                                .withEnableOnnxNormalization("wwmhkruwae")
                                .withEvaluationFrequency("ympmlqoin")
                                .withGradientAccumulationStep("duewihapfj")
                                .withLayersToFreeze("knjdiqfliejhp")
                                .withLearningRate("bi")
                                .withLearningRateScheduler("fsbw")
                                .withModelName("ivbvzi")
                                .withMomentum("wxgoooxzpra")
                                .withNesterov("s")
                                .withNumberOfEpochs("knpdgzigjsu")
                                .withNumberOfWorkers("whgsaodkww")
                                .withOptimizer("afoctohz")
                                .withRandomSeed("quvwsxbgn")
                                .withStepLRGamma("ervqchoadhrsxqvz")
                                .withStepLRStepSize("pabdsrg")
                                .withTrainingBatchSize("jglzrsubklrxhjnl")
                                .withValidationBatchSize("etjdvqydieqqkwa")
                                .withWarmupCosineLRCycles("wdxvqzxoebwg")
                                .withWarmupCosineLRWarmupEpochs("bibanbau")
                                .withWeightDecay("tzvp")
                                .withBoxDetectionsPerImage("xlaj")
                                .withBoxScoreThreshold("lpquevhamfow")
                                .withImageSize("btmkekxpkzwaq")
                                .withMaxSize("fqovc")
                                .withMinSize("qbplvfiduszte")
                                .withModelSize("byjgmsfepx")
                                .withMultiScale("hpqadagrhrdicxdw")
                                .withNmsIouThreshold("fowxwyovcxjsgbi")
                                .withTileGridSize("ukdveksbuhoduc")
                                .withTileOverlapRatio("lscrdpibfdyjduss")
                                .withTilePredictionsNmsThreshold("szekbh")
                                .withValidationIouThreshold("kaaggkreh")
                                .withValidationMetricType("rnuybffljfii")));
        model = BinaryData.fromObject(model).toObject(ImageObjectDetectionBase.class);
        Assertions.assertEquals(49588289, model.limitSettings().maxConcurrentTrials());
        Assertions.assertEquals(1206228769, model.limitSettings().maxTrials());
        Assertions.assertEquals(Duration.parse("PT46H27M22S"), model.limitSettings().timeout());
        Assertions.assertEquals(1904568051, model.sweepSettings().earlyTermination().delayEvaluation());
        Assertions.assertEquals(1794717453, model.sweepSettings().earlyTermination().evaluationInterval());
        Assertions.assertEquals(SamplingAlgorithmType.BAYESIAN, model.sweepSettings().samplingAlgorithm());
        Assertions.assertEquals("nrswgkpjhboyik", model.validationData().description());
        Assertions.assertEquals(InputDeliveryMode.DOWNLOAD, model.validationData().mode());
        Assertions.assertEquals("anbtttkgsu", model.validationData().uri());
        Assertions.assertEquals(63.02897835620131D, model.validationDataSize());
        Assertions.assertEquals("pnovyoanfbcs", model.modelSettings().advancedSettings());
        Assertions.assertEquals(false, model.modelSettings().amsGradient());
        Assertions.assertEquals("ywv", model.modelSettings().augmentations());
        Assertions.assertEquals(49.63614F, model.modelSettings().beta1());
        Assertions.assertEquals(96.43286F, model.modelSettings().beta2());
        Assertions.assertEquals(2057113519, model.modelSettings().checkpointFrequency());
        Assertions.assertEquals("qnucs", model.modelSettings().checkpointModel().description());
        Assertions.assertEquals(InputDeliveryMode.DIRECT, model.modelSettings().checkpointModel().mode());
        Assertions.assertEquals("gaeukyawohpm", model.modelSettings().checkpointModel().uri());
        Assertions.assertEquals("hsidsjtdlpbnin", model.modelSettings().checkpointRunId());
        Assertions.assertEquals(true, model.modelSettings().distributed());
        Assertions.assertEquals(true, model.modelSettings().earlyStopping());
        Assertions.assertEquals(401834432, model.modelSettings().earlyStoppingDelay());
        Assertions.assertEquals(1120208471, model.modelSettings().earlyStoppingPatience());
        Assertions.assertEquals(false, model.modelSettings().enableOnnxNormalization());
        Assertions.assertEquals(416464470, model.modelSettings().evaluationFrequency());
        Assertions.assertEquals(63190145, model.modelSettings().gradientAccumulationStep());
        Assertions.assertEquals(476616488, model.modelSettings().layersToFreeze());
        Assertions.assertEquals(64.128784F, model.modelSettings().learningRate());
        Assertions.assertEquals(LearningRateScheduler.STEP, model.modelSettings().learningRateScheduler());
        Assertions.assertEquals("klhsyekrdrenxol", model.modelSettings().modelName());
        Assertions.assertEquals(88.83367F, model.modelSettings().momentum());
        Assertions.assertEquals(false, model.modelSettings().nesterov());
        Assertions.assertEquals(1746488181, model.modelSettings().numberOfEpochs());
        Assertions.assertEquals(322712945, model.modelSettings().numberOfWorkers());
        Assertions.assertEquals(StochasticOptimizer.NONE, model.modelSettings().optimizer());
        Assertions.assertEquals(950141294, model.modelSettings().randomSeed());
        Assertions.assertEquals(2.1940768F, model.modelSettings().stepLRGamma());
        Assertions.assertEquals(2054893353, model.modelSettings().stepLRStepSize());
        Assertions.assertEquals(1860251154, model.modelSettings().trainingBatchSize());
        Assertions.assertEquals(1656773310, model.modelSettings().validationBatchSize());
        Assertions.assertEquals(15.856802F, model.modelSettings().warmupCosineLRCycles());
        Assertions.assertEquals(383669214, model.modelSettings().warmupCosineLRWarmupEpochs());
        Assertions.assertEquals(76.37597F, model.modelSettings().weightDecay());
        Assertions.assertEquals(535686320, model.modelSettings().boxDetectionsPerImage());
        Assertions.assertEquals(81.63317F, model.modelSettings().boxScoreThreshold());
        Assertions.assertEquals(419191991, model.modelSettings().imageSize());
        Assertions.assertEquals(652596420, model.modelSettings().maxSize());
        Assertions.assertEquals(286301552, model.modelSettings().minSize());
        Assertions.assertEquals(ModelSize.LARGE, model.modelSettings().modelSize());
        Assertions.assertEquals(false, model.modelSettings().multiScale());
        Assertions.assertEquals(70.345695F, model.modelSettings().nmsIouThreshold());
        Assertions.assertEquals("eojhtollhsvi", model.modelSettings().tileGridSize());
        Assertions.assertEquals(17.49817F, model.modelSettings().tileOverlapRatio());
        Assertions.assertEquals(15.531773F, model.modelSettings().tilePredictionsNmsThreshold());
        Assertions.assertEquals(36.93536F, model.modelSettings().validationIouThreshold());
        Assertions.assertEquals(ValidationMetricType.VOC, model.modelSettings().validationMetricType());
        Assertions.assertEquals("d", model.searchSpace().get(0).amsGradient());
        Assertions.assertEquals("jch", model.searchSpace().get(0).augmentations());
        Assertions.assertEquals("mpwctoflds", model.searchSpace().get(0).beta1());
        Assertions.assertEquals("cdhz", model.searchSpace().get(0).beta2());
        Assertions.assertEquals("kbrfgdrwji", model.searchSpace().get(0).distributed());
        Assertions.assertEquals("whfjsrwqrxe", model.searchSpace().get(0).earlyStopping());
        Assertions.assertEquals("gcwvrrmdqntycna", model.searchSpace().get(0).earlyStoppingDelay());
        Assertions.assertEquals("hvmaxgnuyeamcmhu", model.searchSpace().get(0).earlyStoppingPatience());
        Assertions.assertEquals("jecehokwc", model.searchSpace().get(0).enableOnnxNormalization());
        Assertions.assertEquals("twloesqr", model.searchSpace().get(0).evaluationFrequency());
        Assertions.assertEquals("vrbnyrukoil", model.searchSpace().get(0).gradientAccumulationStep());
        Assertions.assertEquals("iduw", model.searchSpace().get(0).layersToFreeze());
        Assertions.assertEquals("e", model.searchSpace().get(0).learningRate());
        Assertions.assertEquals("jlhwyxpzruzyt", model.searchSpace().get(0).learningRateScheduler());
        Assertions.assertEquals("kkwhbgxvellvulnx", model.searchSpace().get(0).modelName());
        Assertions.assertEquals("nitmujdtvmclyymf", model.searchSpace().get(0).momentum());
        Assertions.assertEquals("mjpddnyxf", model.searchSpace().get(0).nesterov());
        Assertions.assertEquals("v", model.searchSpace().get(0).numberOfEpochs());
        Assertions.assertEquals("mzqmzjqrb", model.searchSpace().get(0).numberOfWorkers());
        Assertions.assertEquals("vnmdyfoeboj", model.searchSpace().get(0).optimizer());
        Assertions.assertEquals("pp", model.searchSpace().get(0).randomSeed());
        Assertions.assertEquals("aohoqkpjtnq", model.searchSpace().get(0).stepLRGamma());
        Assertions.assertEquals("l", model.searchSpace().get(0).stepLRStepSize());
        Assertions.assertEquals("wkdcwmqs", model.searchSpace().get(0).trainingBatchSize());
        Assertions.assertEquals("ilm", model.searchSpace().get(0).validationBatchSize());
        Assertions.assertEquals("dqaolfylnkk", model.searchSpace().get(0).warmupCosineLRCycles());
        Assertions.assertEquals("pjvlywltmfwo", model.searchSpace().get(0).warmupCosineLRWarmupEpochs());
        Assertions.assertEquals("jw", model.searchSpace().get(0).weightDecay());
        Assertions.assertEquals("k", model.searchSpace().get(0).boxDetectionsPerImage());
        Assertions.assertEquals("mmpathu", model.searchSpace().get(0).boxScoreThreshold());
        Assertions.assertEquals("ah", model.searchSpace().get(0).imageSize());
        Assertions.assertEquals("an", model.searchSpace().get(0).maxSize());
        Assertions.assertEquals("wllbv", model.searchSpace().get(0).minSize());
        Assertions.assertEquals("zsffte", model.searchSpace().get(0).modelSize());
        Assertions.assertEquals("us", model.searchSpace().get(0).multiScale());
        Assertions.assertEquals("tjtgravaqogfkb", model.searchSpace().get(0).nmsIouThreshold());
        Assertions.assertEquals("auzlqbtxxw", model.searchSpace().get(0).tileGridSize());
        Assertions.assertEquals("h", model.searchSpace().get(0).tileOverlapRatio());
        Assertions.assertEquals("zudrtpzk", model.searchSpace().get(0).tilePredictionsNmsThreshold());
        Assertions.assertEquals("eboywhczzqrhm", model.searchSpace().get(0).validationIouThreshold());
        Assertions.assertEquals("qbedygisrzwn", model.searchSpace().get(0).validationMetricType());
    }
}
