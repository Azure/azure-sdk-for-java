// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.machinelearning.MachineLearningManager;
import com.azure.resourcemanager.machinelearning.models.ContentSafetyStatus;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.machinelearning.models.ServerlessEndpoint;
import com.azure.resourcemanager.machinelearning.models.ServerlessInferenceEndpointAuthMode;
import com.azure.resourcemanager.machinelearning.models.SkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ServerlessEndpointsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"modelSettings\":{\"modelId\":\"gfjdt\"},\"authMode\":\"Key\",\"inferenceEndpoint\":{\"uri\":\"safr\",\"headers\":{\"gbk\":\"uebrvrhwqkfff\",\"ybwh\":\"ei\"}},\"provisioningState\":\"Succeeded\",\"endpointState\":\"Deleting\",\"marketplaceSubscriptionId\":\"kmtljzilkyvyblj\",\"contentSafety\":{\"contentSafetyStatus\":\"Enabled\"}},\"kind\":\"pitzqrmxcuk\",\"identity\":{\"principalId\":\"b756d0d8-4768-4552-9449-d70284a512cb\",\"tenantId\":\"ea72289c-9226-4971-b3de-bfb804761187\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"nrkhc\":{\"principalId\":\"33bd7f03-d0ab-4067-b04b-6d52d637ce14\",\"clientId\":\"2da74659-f64b-4ef3-b4f9-c225ac9b39d4\"},\"svfbjcnadw\":{\"principalId\":\"c7e1ddf5-93ce-4655-a2c6-549568ab92d1\",\"clientId\":\"b6825432-0cfa-4261-a95e-3f90d00127b7\"}}},\"sku\":{\"name\":\"rntvhppykrlzuals\",\"tier\":\"Standard\",\"size\":\"latorjmsa\",\"family\":\"muxlthyxryvwn\",\"capacity\":886224238},\"location\":\"gddgbcnq\",\"tags\":{\"lemzrw\":\"ybffcvtij\",\"kmkwddgyqeni\":\"gvgogczgcm\"},\"id\":\"rznam\",\"name\":\"rtcbvifcrnxst\",\"type\":\"wvgwv\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MachineLearningManager manager = MachineLearningManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        ServerlessEndpoint response = manager.serverlessEndpoints()
            .getWithResponse("rys", "reebjmslb", "fkiiarl", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("gddgbcnq", response.location());
        Assertions.assertEquals("ybffcvtij", response.tags().get("lemzrw"));
        Assertions.assertEquals("gfjdt", response.properties().modelSettings().modelId());
        Assertions.assertEquals(ServerlessInferenceEndpointAuthMode.KEY, response.properties().authMode());
        Assertions.assertEquals(ContentSafetyStatus.ENABLED,
            response.properties().contentSafety().contentSafetyStatus());
        Assertions.assertEquals("pitzqrmxcuk", response.kind());
        Assertions.assertEquals(ManagedServiceIdentityType.USER_ASSIGNED, response.identity().type());
        Assertions.assertEquals("rntvhppykrlzuals", response.sku().name());
        Assertions.assertEquals(SkuTier.STANDARD, response.sku().tier());
        Assertions.assertEquals("latorjmsa", response.sku().size());
        Assertions.assertEquals("muxlthyxryvwn", response.sku().family());
        Assertions.assertEquals(886224238, response.sku().capacity());
    }
}
