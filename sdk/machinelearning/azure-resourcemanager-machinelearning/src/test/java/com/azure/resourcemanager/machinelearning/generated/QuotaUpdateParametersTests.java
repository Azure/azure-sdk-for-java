// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.QuotaBaseProperties;
import com.azure.resourcemanager.machinelearning.models.QuotaUnit;
import com.azure.resourcemanager.machinelearning.models.QuotaUpdateParameters;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public final class QuotaUpdateParametersTests {
    @Test
    public void testDeserialize() {
        QuotaUpdateParameters model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"id\":\"qbzvddntwnd\",\"type\":\"cbtwnpzaoqvuh\",\"limit\":2446371757978717753,\"unit\":\"Count\"},{\"id\":\"ddglm\",\"type\":\"hjq\",\"limit\":6943639735240918018,\"unit\":\"Count\"},{\"id\":\"xmqci\",\"type\":\"vhkhixu\",\"limit\":7360318284111753754,\"unit\":\"Count\"}],\"location\":\"objoghmewu\"}")
                .toObject(QuotaUpdateParameters.class);
        Assertions.assertEquals("qbzvddntwnd", model.value().get(0).id());
        Assertions.assertEquals("cbtwnpzaoqvuh", model.value().get(0).type());
        Assertions.assertEquals(2446371757978717753L, model.value().get(0).limit());
        Assertions.assertEquals(QuotaUnit.COUNT, model.value().get(0).unit());
        Assertions.assertEquals("objoghmewu", model.location());
    }

    @Test
    public void testSerialize() {
        QuotaUpdateParameters model =
            new QuotaUpdateParameters()
                .withValue(
                    Arrays
                        .asList(
                            new QuotaBaseProperties()
                                .withId("qbzvddntwnd")
                                .withType("cbtwnpzaoqvuh")
                                .withLimit(2446371757978717753L)
                                .withUnit(QuotaUnit.COUNT),
                            new QuotaBaseProperties()
                                .withId("ddglm")
                                .withType("hjq")
                                .withLimit(6943639735240918018L)
                                .withUnit(QuotaUnit.COUNT),
                            new QuotaBaseProperties()
                                .withId("xmqci")
                                .withType("vhkhixu")
                                .withLimit(7360318284111753754L)
                                .withUnit(QuotaUnit.COUNT)))
                .withLocation("objoghmewu");
        model = BinaryData.fromObject(model).toObject(QuotaUpdateParameters.class);
        Assertions.assertEquals("qbzvddntwnd", model.value().get(0).id());
        Assertions.assertEquals("cbtwnpzaoqvuh", model.value().get(0).type());
        Assertions.assertEquals(2446371757978717753L, model.value().get(0).limit());
        Assertions.assertEquals(QuotaUnit.COUNT, model.value().get(0).unit());
        Assertions.assertEquals("objoghmewu", model.location());
    }
}
