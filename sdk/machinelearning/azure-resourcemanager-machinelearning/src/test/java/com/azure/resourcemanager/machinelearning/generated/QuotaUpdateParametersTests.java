// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.models.QuotaBaseProperties;
import com.azure.resourcemanager.machinelearning.models.QuotaUnit;
import com.azure.resourcemanager.machinelearning.models.QuotaUpdateParameters;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class QuotaUpdateParametersTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        QuotaUpdateParameters model = BinaryData.fromString(
            "{\"value\":[{\"id\":\"zpuzycisp\",\"type\":\"zahmgkbrpyydhibn\",\"limit\":8775255286630911729,\"unit\":\"Count\"},{\"id\":\"a\",\"type\":\"gvtqagnbuynh\",\"limit\":2182211353058323076,\"unit\":\"Count\"},{\"id\":\"fsiarbutr\",\"type\":\"pnazzm\",\"limit\":4980695192319165499,\"unit\":\"Count\"}],\"location\":\"xttd\"}")
            .toObject(QuotaUpdateParameters.class);
        Assertions.assertEquals("zpuzycisp", model.value().get(0).id());
        Assertions.assertEquals("zahmgkbrpyydhibn", model.value().get(0).type());
        Assertions.assertEquals(8775255286630911729L, model.value().get(0).limit());
        Assertions.assertEquals(QuotaUnit.COUNT, model.value().get(0).unit());
        Assertions.assertEquals("xttd", model.location());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        QuotaUpdateParameters model = new QuotaUpdateParameters().withValue(Arrays.asList(
            new QuotaBaseProperties().withId("zpuzycisp")
                .withType("zahmgkbrpyydhibn")
                .withLimit(8775255286630911729L)
                .withUnit(QuotaUnit.COUNT),
            new QuotaBaseProperties().withId("a")
                .withType("gvtqagnbuynh")
                .withLimit(2182211353058323076L)
                .withUnit(QuotaUnit.COUNT),
            new QuotaBaseProperties().withId("fsiarbutr")
                .withType("pnazzm")
                .withLimit(4980695192319165499L)
                .withUnit(QuotaUnit.COUNT)))
            .withLocation("xttd");
        model = BinaryData.fromObject(model).toObject(QuotaUpdateParameters.class);
        Assertions.assertEquals("zpuzycisp", model.value().get(0).id());
        Assertions.assertEquals("zahmgkbrpyydhibn", model.value().get(0).type());
        Assertions.assertEquals(8775255286630911729L, model.value().get(0).limit());
        Assertions.assertEquals(QuotaUnit.COUNT, model.value().get(0).unit());
        Assertions.assertEquals("xttd", model.location());
    }
}
