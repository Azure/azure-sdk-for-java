// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.ServerlessEndpointInner;
import com.azure.resourcemanager.machinelearning.models.ContentSafety;
import com.azure.resourcemanager.machinelearning.models.ContentSafetyStatus;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentity;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.machinelearning.models.ModelSettings;
import com.azure.resourcemanager.machinelearning.models.ServerlessEndpointProperties;
import com.azure.resourcemanager.machinelearning.models.ServerlessEndpointTrackedResourceArmPaginatedResult;
import com.azure.resourcemanager.machinelearning.models.ServerlessInferenceEndpointAuthMode;
import com.azure.resourcemanager.machinelearning.models.Sku;
import com.azure.resourcemanager.machinelearning.models.SkuTier;
import com.azure.resourcemanager.machinelearning.models.UserAssignedIdentity;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ServerlessEndpointTrackedResourceArmPaginatedResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServerlessEndpointTrackedResourceArmPaginatedResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"modelSettings\":{\"modelId\":\"vqvogf\"},\"authMode\":\"Key\",\"inferenceEndpoint\":{\"uri\":\"wvbhlimbyq\",\"headers\":{\"ikcdrdaasax\":\"ood\"}},\"provisioningState\":\"Creating\",\"endpointState\":\"Suspended\",\"marketplaceSubscriptionId\":\"kwiy\",\"contentSafety\":{\"contentSafetyStatus\":\"Enabled\"}},\"kind\":\"ko\",\"identity\":{\"principalId\":\"d441b598-0f0e-4378-a6eb-cbbc3287da28\",\"tenantId\":\"e6ecb5bb-7552-4bcb-881c-3843fabd10fe\",\"type\":\"None\",\"userAssignedIdentities\":{\"lnk\":{\"principalId\":\"f61e00f0-1210-432e-a996-dd5638249a4f\",\"clientId\":\"e3a873dd-e092-434b-a67f-eb3f147eba88\"},\"sxvjabjqqaxuyvy\":{\"principalId\":\"85d47a5e-73c4-4239-b7bb-f50d9bd49bca\",\"clientId\":\"09fe5980-cc46-4aff-9c4c-9d6300e0de87\"},\"udndoabhjxw\":{\"principalId\":\"fbea1d4b-6c13-4265-a75b-c5e829c3dbe5\",\"clientId\":\"6d598115-f107-4139-aa00-b5a55c31652e\"}}},\"sku\":{\"name\":\"weuipmpvksmi\",\"tier\":\"Premium\",\"size\":\"xtlt\",\"family\":\"krdpqgfhyrfr\",\"capacity\":1004449156},\"location\":\"d\",\"tags\":{\"ajqmat\":\"wfcmfcnr\"},\"id\":\"jti\",\"name\":\"ln\",\"type\":\"qgxxgfbb\"},{\"properties\":{\"modelSettings\":{\"modelId\":\"pqagynoiprn\"},\"authMode\":\"Key\",\"inferenceEndpoint\":{\"uri\":\"lin\",\"headers\":{\"bmqimi\":\"qxzxaqz\",\"asvvoqsbpkfl\":\"mqruqguhfupe\",\"hdkcprgu\":\"nfkgxsyaowuzowpu\",\"ixmqrudjizcbf\":\"xrztiochlu\"}},\"provisioningState\":\"Succeeded\",\"endpointState\":\"Suspending\",\"marketplaceSubscriptionId\":\"fhi\",\"contentSafety\":{\"contentSafetyStatus\":\"Enabled\"}},\"kind\":\"fbcpaqktkrumzu\",\"identity\":{\"principalId\":\"36ca8462-8982-44d4-a1e7-dc4cd6ae4a64\",\"tenantId\":\"5b8963aa-e49d-4818-881b-d3ddea0d76d0\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"ovqkxiu\":{\"principalId\":\"2ebad04e-1a3f-44c2-8235-0bf697538b30\",\"clientId\":\"8d1dee69-f10e-4fb7-8aa1-31a0e89ecda6\"}}},\"sku\":{\"name\":\"ggvqrnhyhlwcjs\",\"tier\":\"Basic\",\"size\":\"hffbxrq\",\"family\":\"ijpeuql\",\"capacity\":236408023},\"location\":\"qztvx\",\"tags\":{\"me\":\"wmjswenaww\",\"yoeojhtollhs\":\"leqioulndh\"},\"id\":\"idmytzln\",\"name\":\"lxpnovyoanf\",\"type\":\"cswqa\"},{\"properties\":{\"modelSettings\":{\"modelId\":\"vtxigvjr\"},\"authMode\":\"Key\",\"inferenceEndpoint\":{\"uri\":\"gaeukyawohpm\",\"headers\":{\"hsidsjtdlpbnin\":\"nucsk\",\"cpuo\":\"gazlsvbz\"}},\"provisioningState\":\"Succeeded\",\"endpointState\":\"Suspending\",\"marketplaceSubscriptionId\":\"ciklh\",\"contentSafety\":{\"contentSafetyStatus\":\"Enabled\"}},\"kind\":\"rdrenxo\",\"identity\":{\"principalId\":\"b1cb2edb-89af-467e-8d2e-ec2822d83461\",\"tenantId\":\"2798490e-fcf8-4d7a-a025-d0e419b7769d\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"iv\":{\"principalId\":\"36c4ea74-00d8-422e-bad4-3a6b231e0e03\",\"clientId\":\"19ea3b90-2398-4526-ab45-c0b0e475ebf1\"},\"ydwbdbfgrlpunytj\":{\"principalId\":\"51dc5a58-1a67-40bb-943a-6311b55d5a4e\",\"clientId\":\"672fd93a-f13c-490f-ab8a-df7d93ac7c58\"}}},\"sku\":{\"name\":\"esmmpathubtahd\",\"tier\":\"Standard\",\"size\":\"iwllbvgwzsffted\",\"family\":\"snkt\",\"capacity\":1883511618},\"location\":\"avaqogfkbebau\",\"tags\":{\"tpzkgmeboywhcz\":\"btxxwpfhnjzud\",\"gqbedygi\":\"qrhm\"},\"id\":\"rzwnyk\",\"name\":\"id\",\"type\":\"chl\"},{\"properties\":{\"modelSettings\":{\"modelId\":\"wctofldseacdhz\"},\"authMode\":\"Key\",\"inferenceEndpoint\":{\"uri\":\"brfgdrwji\",\"headers\":{\"cwv\":\"hfjsrwqrxetf\",\"dqntycnawthv\":\"r\",\"nuyeamcmhud\":\"ax\"}},\"provisioningState\":\"Failed\",\"endpointState\":\"Reinstating\",\"marketplaceSubscriptionId\":\"okwcpqtwl\",\"contentSafety\":{\"contentSafetyStatus\":\"Disabled\"}},\"kind\":\"rg\",\"identity\":{\"principalId\":\"47a71b64-ccea-451f-8977-4c9dcca25065\",\"tenantId\":\"62b23e6c-c0a8-4e50-a532-0923fae8689b\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"oilacidu\":{\"principalId\":\"66f061ed-fb03-4ce2-b658-2aa31a9b2adc\",\"clientId\":\"fb14a1d3-62da-489a-9bb5-335073d4799e\"},\"e\":{\"principalId\":\"8d08c226-08e7-4533-8509-b3bd4eb326b3\",\"clientId\":\"377de5ba-3bf5-4644-ae7d-8a658b0250f0\"}}},\"sku\":{\"name\":\"jlhwyxpzruzyt\",\"tier\":\"Premium\",\"size\":\"whbgxvellvul\",\"family\":\"d\",\"capacity\":237918150},\"location\":\"mujd\",\"tags\":{\"xfzuvrzmzqmzj\":\"clyymffhmjpddn\"},\"id\":\"rb\",\"name\":\"pv\",\"type\":\"mdyfoebojtj\"}],\"nextLink\":\"g\"}")
            .toObject(ServerlessEndpointTrackedResourceArmPaginatedResult.class);
        Assertions.assertEquals("d", model.value().get(0).location());
        Assertions.assertEquals("wfcmfcnr", model.value().get(0).tags().get("ajqmat"));
        Assertions.assertEquals("vqvogf", model.value().get(0).properties().modelSettings().modelId());
        Assertions.assertEquals(ServerlessInferenceEndpointAuthMode.KEY, model.value().get(0).properties().authMode());
        Assertions.assertEquals(ContentSafetyStatus.ENABLED,
            model.value().get(0).properties().contentSafety().contentSafetyStatus());
        Assertions.assertEquals("ko", model.value().get(0).kind());
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.value().get(0).identity().type());
        Assertions.assertEquals("weuipmpvksmi", model.value().get(0).sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, model.value().get(0).sku().tier());
        Assertions.assertEquals("xtlt", model.value().get(0).sku().size());
        Assertions.assertEquals("krdpqgfhyrfr", model.value().get(0).sku().family());
        Assertions.assertEquals(1004449156, model.value().get(0).sku().capacity());
        Assertions.assertEquals("g", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServerlessEndpointTrackedResourceArmPaginatedResult model
            = new ServerlessEndpointTrackedResourceArmPaginatedResult()
                .withValue(Arrays
                    .asList(
                        new ServerlessEndpointInner().withLocation("d")
                            .withTags(mapOf("ajqmat", "wfcmfcnr"))
                            .withProperties(new ServerlessEndpointProperties()
                                .withModelSettings(new ModelSettings().withModelId("vqvogf"))
                                .withAuthMode(ServerlessInferenceEndpointAuthMode.KEY)
                                .withContentSafety(
                                    new ContentSafety().withContentSafetyStatus(ContentSafetyStatus.ENABLED)))
                            .withKind("ko")
                            .withIdentity(new ManagedServiceIdentity()
                                .withType(ManagedServiceIdentityType.NONE)
                                .withUserAssignedIdentities(mapOf("lnk", new UserAssignedIdentity(), "sxvjabjqqaxuyvy",
                                    new UserAssignedIdentity(), "udndoabhjxw", new UserAssignedIdentity())))
                            .withSku(
                                new Sku().withName("weuipmpvksmi")
                                    .withTier(SkuTier.PREMIUM)
                                    .withSize("xtlt")
                                    .withFamily("krdpqgfhyrfr")
                                    .withCapacity(1004449156)),
                        new ServerlessEndpointInner().withLocation("qztvx")
                            .withTags(mapOf("me", "wmjswenaww", "yoeojhtollhs", "leqioulndh"))
                            .withProperties(new ServerlessEndpointProperties()
                                .withModelSettings(new ModelSettings().withModelId("pqagynoiprn"))
                                .withAuthMode(ServerlessInferenceEndpointAuthMode.KEY)
                                .withContentSafety(
                                    new ContentSafety().withContentSafetyStatus(ContentSafetyStatus.ENABLED)))
                            .withKind("fbcpaqktkrumzu")
                            .withIdentity(
                                new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
                                    .withUserAssignedIdentities(mapOf("ovqkxiu", new UserAssignedIdentity())))
                            .withSku(new Sku()
                                .withName("ggvqrnhyhlwcjs")
                                .withTier(SkuTier.BASIC)
                                .withSize("hffbxrq")
                                .withFamily("ijpeuql")
                                .withCapacity(236408023)),
                        new ServerlessEndpointInner().withLocation("avaqogfkbebau")
                            .withTags(mapOf("tpzkgmeboywhcz", "btxxwpfhnjzud", "gqbedygi", "qrhm"))
                            .withProperties(new ServerlessEndpointProperties()
                                .withModelSettings(new ModelSettings().withModelId("vtxigvjr"))
                                .withAuthMode(ServerlessInferenceEndpointAuthMode.KEY)
                                .withContentSafety(
                                    new ContentSafety().withContentSafetyStatus(ContentSafetyStatus.ENABLED)))
                            .withKind("rdrenxo")
                            .withIdentity(new ManagedServiceIdentity()
                                .withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                                .withUserAssignedIdentities(mapOf("iv", new UserAssignedIdentity(), "ydwbdbfgrlpunytj",
                                    new UserAssignedIdentity())))
                            .withSku(
                                new Sku().withName("esmmpathubtahd")
                                    .withTier(SkuTier.STANDARD)
                                    .withSize("iwllbvgwzsffted")
                                    .withFamily("snkt")
                                    .withCapacity(1883511618)),
                        new ServerlessEndpointInner().withLocation("mujd")
                            .withTags(mapOf("xfzuvrzmzqmzj", "clyymffhmjpddn"))
                            .withProperties(new ServerlessEndpointProperties()
                                .withModelSettings(new ModelSettings().withModelId("wctofldseacdhz"))
                                .withAuthMode(ServerlessInferenceEndpointAuthMode.KEY)
                                .withContentSafety(
                                    new ContentSafety().withContentSafetyStatus(ContentSafetyStatus.DISABLED)))
                            .withKind("rg")
                            .withIdentity(
                                new ManagedServiceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED)
                                    .withUserAssignedIdentities(
                                        mapOf("oilacidu", new UserAssignedIdentity(), "e", new UserAssignedIdentity())))
                            .withSku(new Sku().withName("jlhwyxpzruzyt")
                                .withTier(SkuTier.PREMIUM)
                                .withSize("whbgxvellvul")
                                .withFamily("d")
                                .withCapacity(237918150))))
                .withNextLink("g");
        model = BinaryData.fromObject(model).toObject(ServerlessEndpointTrackedResourceArmPaginatedResult.class);
        Assertions.assertEquals("d", model.value().get(0).location());
        Assertions.assertEquals("wfcmfcnr", model.value().get(0).tags().get("ajqmat"));
        Assertions.assertEquals("vqvogf", model.value().get(0).properties().modelSettings().modelId());
        Assertions.assertEquals(ServerlessInferenceEndpointAuthMode.KEY, model.value().get(0).properties().authMode());
        Assertions.assertEquals(ContentSafetyStatus.ENABLED,
            model.value().get(0).properties().contentSafety().contentSafetyStatus());
        Assertions.assertEquals("ko", model.value().get(0).kind());
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.value().get(0).identity().type());
        Assertions.assertEquals("weuipmpvksmi", model.value().get(0).sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, model.value().get(0).sku().tier());
        Assertions.assertEquals("xtlt", model.value().get(0).sku().size());
        Assertions.assertEquals("krdpqgfhyrfr", model.value().get(0).sku().family());
        Assertions.assertEquals(1004449156, model.value().get(0).sku().capacity());
        Assertions.assertEquals("g", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
