// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.machinelearning.fluent.models.ServerlessEndpointInner;
import com.azure.resourcemanager.machinelearning.models.ContentSafety;
import com.azure.resourcemanager.machinelearning.models.ContentSafetyStatus;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentity;
import com.azure.resourcemanager.machinelearning.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.machinelearning.models.ModelSettings;
import com.azure.resourcemanager.machinelearning.models.ServerlessEndpointProperties;
import com.azure.resourcemanager.machinelearning.models.ServerlessEndpointTrackedResourceArmPaginatedResult;
import com.azure.resourcemanager.machinelearning.models.ServerlessInferenceEndpointAuthMode;
import com.azure.resourcemanager.machinelearning.models.Sku;
import com.azure.resourcemanager.machinelearning.models.SkuTier;
import com.azure.resourcemanager.machinelearning.models.UserAssignedIdentity;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class ServerlessEndpointTrackedResourceArmPaginatedResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServerlessEndpointTrackedResourceArmPaginatedResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"modelSettings\":{\"modelId\":\"vqvogf\"},\"authMode\":\"Key\",\"inferenceEndpoint\":{\"uri\":\"wvbhlimbyq\",\"headers\":{\"ikcdrdaasax\":\"ood\"}},\"provisioningState\":\"Creating\",\"endpointState\":\"Suspended\",\"marketplaceSubscriptionId\":\"kwiy\",\"contentSafety\":{\"contentSafetyStatus\":\"Enabled\"}},\"kind\":\"ko\",\"identity\":{\"principalId\":\"14063356-96fa-45ba-8878-ff13f4524052\",\"tenantId\":\"77a755f2-7770-4ca6-9abd-449f44d7b996\",\"type\":\"None\",\"userAssignedIdentities\":{\"lnk\":{\"principalId\":\"c7f1f32f-3690-4721-bd7b-ad3e9b209cb1\",\"clientId\":\"660b2bbe-eed1-499d-807d-f4d4e01e1b62\"},\"sxvjabjqqaxuyvy\":{\"principalId\":\"ea6039e0-1d6f-436d-9837-b7fa0188de5c\",\"clientId\":\"ff04f5a9-5340-461d-8be1-947c37c924fe\"},\"udndoabhjxw\":{\"principalId\":\"9ed4a089-b353-4958-8615-103f7a62f4ac\",\"clientId\":\"3faf461d-3003-4d91-bb53-3baea908b2e6\"}}},\"sku\":{\"name\":\"weuipmpvksmi\",\"tier\":\"Premium\",\"size\":\"xtlt\",\"family\":\"krdpqgfhyrfr\",\"capacity\":1004449156},\"location\":\"d\",\"tags\":{\"ajqmat\":\"wfcmfcnr\"},\"id\":\"jti\",\"name\":\"ln\",\"type\":\"qgxxgfbb\"},{\"properties\":{\"modelSettings\":{\"modelId\":\"pqagynoiprn\"},\"authMode\":\"Key\",\"inferenceEndpoint\":{\"uri\":\"lin\",\"headers\":{\"bmqimi\":\"qxzxaqz\",\"asvvoqsbpkfl\":\"mqruqguhfupe\",\"hdkcprgu\":\"nfkgxsyaowuzowpu\",\"ixmqrudjizcbf\":\"xrztiochlu\"}},\"provisioningState\":\"Succeeded\",\"endpointState\":\"Suspending\",\"marketplaceSubscriptionId\":\"fhi\",\"contentSafety\":{\"contentSafetyStatus\":\"Enabled\"}},\"kind\":\"fbcpaqktkrumzu\",\"identity\":{\"principalId\":\"92df8603-76c4-4be3-b906-0be862094d12\",\"tenantId\":\"abe3eb5a-5604-44a4-b322-0fada0fa3f0b\",\"type\":\"UserAssigned\",\"userAssignedIdentities\":{\"ovqkxiu\":{\"principalId\":\"d8548fb4-6d4f-46ad-9f3d-43dc502ab8a2\",\"clientId\":\"17c480b0-1ac8-486d-945f-bd809759d2fb\"}}},\"sku\":{\"name\":\"ggvqrnhyhlwcjs\",\"tier\":\"Basic\",\"size\":\"hffbxrq\",\"family\":\"ijpeuql\",\"capacity\":236408023},\"location\":\"qztvx\",\"tags\":{\"me\":\"wmjswenaww\",\"yoeojhtollhs\":\"leqioulndh\"},\"id\":\"idmytzln\",\"name\":\"lxpnovyoanf\",\"type\":\"cswqa\"},{\"properties\":{\"modelSettings\":{\"modelId\":\"vtxigvjr\"},\"authMode\":\"Key\",\"inferenceEndpoint\":{\"uri\":\"gaeukyawohpm\",\"headers\":{\"hsidsjtdlpbnin\":\"nucsk\",\"cpuo\":\"gazlsvbz\"}},\"provisioningState\":\"Succeeded\",\"endpointState\":\"Suspending\",\"marketplaceSubscriptionId\":\"ciklh\",\"contentSafety\":{\"contentSafetyStatus\":\"Enabled\"}},\"kind\":\"rdrenxo\",\"identity\":{\"principalId\":\"90de711a-93f1-4f44-9afc-df8d628f892a\",\"tenantId\":\"9837c157-1789-47da-b8b0-3218ae1ace1a\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"iv\":{\"principalId\":\"b85b9f19-d2be-46d0-bd5c-b52751e2627e\",\"clientId\":\"96ff4b61-596a-4aa3-9e32-6587148ed8e3\"},\"ydwbdbfgrlpunytj\":{\"principalId\":\"faa3abfe-813e-48b4-90eb-141f0b34dfe0\",\"clientId\":\"727c2538-29ea-49bb-b1f9-164ccade35e5\"}}},\"sku\":{\"name\":\"esmmpathubtahd\",\"tier\":\"Standard\",\"size\":\"iwllbvgwzsffted\",\"family\":\"snkt\",\"capacity\":1883511618},\"location\":\"avaqogfkbebau\",\"tags\":{\"tpzkgmeboywhcz\":\"btxxwpfhnjzud\",\"gqbedygi\":\"qrhm\"},\"id\":\"rzwnyk\",\"name\":\"id\",\"type\":\"chl\"},{\"properties\":{\"modelSettings\":{\"modelId\":\"wctofldseacdhz\"},\"authMode\":\"Key\",\"inferenceEndpoint\":{\"uri\":\"brfgdrwji\",\"headers\":{\"cwv\":\"hfjsrwqrxetf\",\"dqntycnawthv\":\"r\",\"nuyeamcmhud\":\"ax\"}},\"provisioningState\":\"Failed\",\"endpointState\":\"Reinstating\",\"marketplaceSubscriptionId\":\"okwcpqtwl\",\"contentSafety\":{\"contentSafetyStatus\":\"Disabled\"}},\"kind\":\"rg\",\"identity\":{\"principalId\":\"43e56463-5899-46b6-962d-6f31f58a1909\",\"tenantId\":\"a5fff899-0096-4286-ad6c-b647d6821fe1\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"oilacidu\":{\"principalId\":\"988cb364-d0a9-42f6-b45f-c3f75f9da422\",\"clientId\":\"443617dc-222b-49c1-b7dd-935af1210df3\"},\"e\":{\"principalId\":\"333a8344-5efd-46b5-9adb-b30d6608f1a6\",\"clientId\":\"4f117368-7336-4b20-87fd-799eb0e3ce98\"}}},\"sku\":{\"name\":\"jlhwyxpzruzyt\",\"tier\":\"Premium\",\"size\":\"whbgxvellvul\",\"family\":\"d\",\"capacity\":237918150},\"location\":\"mujd\",\"tags\":{\"xfzuvrzmzqmzj\":\"clyymffhmjpddn\"},\"id\":\"rb\",\"name\":\"pv\",\"type\":\"mdyfoebojtj\"}],\"nextLink\":\"g\"}")
            .toObject(ServerlessEndpointTrackedResourceArmPaginatedResult.class);
        Assertions.assertEquals("d", model.value().get(0).location());
        Assertions.assertEquals("wfcmfcnr", model.value().get(0).tags().get("ajqmat"));
        Assertions.assertEquals("vqvogf", model.value().get(0).properties().modelSettings().modelId());
        Assertions.assertEquals(ServerlessInferenceEndpointAuthMode.KEY, model.value().get(0).properties().authMode());
        Assertions.assertEquals(ContentSafetyStatus.ENABLED,
            model.value().get(0).properties().contentSafety().contentSafetyStatus());
        Assertions.assertEquals("ko", model.value().get(0).kind());
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.value().get(0).identity().type());
        Assertions.assertEquals("weuipmpvksmi", model.value().get(0).sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, model.value().get(0).sku().tier());
        Assertions.assertEquals("xtlt", model.value().get(0).sku().size());
        Assertions.assertEquals("krdpqgfhyrfr", model.value().get(0).sku().family());
        Assertions.assertEquals(1004449156, model.value().get(0).sku().capacity());
        Assertions.assertEquals("g", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServerlessEndpointTrackedResourceArmPaginatedResult model
            = new ServerlessEndpointTrackedResourceArmPaginatedResult()
                .withValue(Arrays
                    .asList(
                        new ServerlessEndpointInner().withLocation("d")
                            .withTags(mapOf("ajqmat", "wfcmfcnr"))
                            .withProperties(new ServerlessEndpointProperties()
                                .withModelSettings(new ModelSettings().withModelId("vqvogf"))
                                .withAuthMode(ServerlessInferenceEndpointAuthMode.KEY)
                                .withContentSafety(
                                    new ContentSafety().withContentSafetyStatus(ContentSafetyStatus.ENABLED)))
                            .withKind("ko")
                            .withIdentity(new ManagedServiceIdentity()
                                .withType(ManagedServiceIdentityType.NONE)
                                .withUserAssignedIdentities(mapOf("lnk", new UserAssignedIdentity(), "sxvjabjqqaxuyvy",
                                    new UserAssignedIdentity(), "udndoabhjxw", new UserAssignedIdentity())))
                            .withSku(
                                new Sku().withName("weuipmpvksmi")
                                    .withTier(SkuTier.PREMIUM)
                                    .withSize("xtlt")
                                    .withFamily("krdpqgfhyrfr")
                                    .withCapacity(1004449156)),
                        new ServerlessEndpointInner().withLocation("qztvx")
                            .withTags(mapOf("me", "wmjswenaww", "yoeojhtollhs", "leqioulndh"))
                            .withProperties(new ServerlessEndpointProperties()
                                .withModelSettings(new ModelSettings().withModelId("pqagynoiprn"))
                                .withAuthMode(ServerlessInferenceEndpointAuthMode.KEY)
                                .withContentSafety(
                                    new ContentSafety().withContentSafetyStatus(ContentSafetyStatus.ENABLED)))
                            .withKind("fbcpaqktkrumzu")
                            .withIdentity(
                                new ManagedServiceIdentity().withType(ManagedServiceIdentityType.USER_ASSIGNED)
                                    .withUserAssignedIdentities(mapOf("ovqkxiu", new UserAssignedIdentity())))
                            .withSku(new Sku()
                                .withName("ggvqrnhyhlwcjs")
                                .withTier(SkuTier.BASIC)
                                .withSize("hffbxrq")
                                .withFamily("ijpeuql")
                                .withCapacity(236408023)),
                        new ServerlessEndpointInner().withLocation("avaqogfkbebau")
                            .withTags(mapOf("tpzkgmeboywhcz", "btxxwpfhnjzud", "gqbedygi", "qrhm"))
                            .withProperties(new ServerlessEndpointProperties()
                                .withModelSettings(new ModelSettings().withModelId("vtxigvjr"))
                                .withAuthMode(ServerlessInferenceEndpointAuthMode.KEY)
                                .withContentSafety(
                                    new ContentSafety().withContentSafetyStatus(ContentSafetyStatus.ENABLED)))
                            .withKind("rdrenxo")
                            .withIdentity(new ManagedServiceIdentity()
                                .withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                                .withUserAssignedIdentities(mapOf("iv", new UserAssignedIdentity(), "ydwbdbfgrlpunytj",
                                    new UserAssignedIdentity())))
                            .withSku(
                                new Sku().withName("esmmpathubtahd")
                                    .withTier(SkuTier.STANDARD)
                                    .withSize("iwllbvgwzsffted")
                                    .withFamily("snkt")
                                    .withCapacity(1883511618)),
                        new ServerlessEndpointInner().withLocation("mujd")
                            .withTags(mapOf("xfzuvrzmzqmzj", "clyymffhmjpddn"))
                            .withProperties(new ServerlessEndpointProperties()
                                .withModelSettings(new ModelSettings().withModelId("wctofldseacdhz"))
                                .withAuthMode(ServerlessInferenceEndpointAuthMode.KEY)
                                .withContentSafety(
                                    new ContentSafety().withContentSafetyStatus(ContentSafetyStatus.DISABLED)))
                            .withKind("rg")
                            .withIdentity(
                                new ManagedServiceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED)
                                    .withUserAssignedIdentities(
                                        mapOf("oilacidu", new UserAssignedIdentity(), "e", new UserAssignedIdentity())))
                            .withSku(new Sku().withName("jlhwyxpzruzyt")
                                .withTier(SkuTier.PREMIUM)
                                .withSize("whbgxvellvul")
                                .withFamily("d")
                                .withCapacity(237918150))))
                .withNextLink("g");
        model = BinaryData.fromObject(model).toObject(ServerlessEndpointTrackedResourceArmPaginatedResult.class);
        Assertions.assertEquals("d", model.value().get(0).location());
        Assertions.assertEquals("wfcmfcnr", model.value().get(0).tags().get("ajqmat"));
        Assertions.assertEquals("vqvogf", model.value().get(0).properties().modelSettings().modelId());
        Assertions.assertEquals(ServerlessInferenceEndpointAuthMode.KEY, model.value().get(0).properties().authMode());
        Assertions.assertEquals(ContentSafetyStatus.ENABLED,
            model.value().get(0).properties().contentSafety().contentSafetyStatus());
        Assertions.assertEquals("ko", model.value().get(0).kind());
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, model.value().get(0).identity().type());
        Assertions.assertEquals("weuipmpvksmi", model.value().get(0).sku().name());
        Assertions.assertEquals(SkuTier.PREMIUM, model.value().get(0).sku().tier());
        Assertions.assertEquals("xtlt", model.value().get(0).sku().size());
        Assertions.assertEquals("krdpqgfhyrfr", model.value().get(0).sku().family());
        Assertions.assertEquals(1004449156, model.value().get(0).sku().capacity());
        Assertions.assertEquals("g", model.nextLink());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
