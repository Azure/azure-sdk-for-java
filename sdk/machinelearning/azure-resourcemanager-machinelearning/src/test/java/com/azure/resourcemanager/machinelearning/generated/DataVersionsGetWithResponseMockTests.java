// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearning.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.machinelearning.MachineLearningManager;
import com.azure.resourcemanager.machinelearning.models.DataVersionBase;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DataVersionsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"dataType\":\"DataVersionBaseProperties\",\"dataUri\":\"regykjmpad\",\"isArchived\":false,\"isAnonymous\":true,\"description\":\"hcz\",\"tags\":{\"af\":\"itydljgrpq\",\"sihumwafapctglj\":\"gjqqbactffxdb\",\"qdd\":\"pizqqihvbkufq\",\"ajlfpsvrljlhe\":\"ynpgomzmkj\"},\"properties\":{\"bnwitafjjevp\":\"cp\",\"vkparskplqft\":\"vitghzq\"}},\"id\":\"xqmbsu\",\"name\":\"cykgulellfwrmsux\",\"type\":\"qbmqo\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        MachineLearningManager manager = MachineLearningManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DataVersionBase response = manager.dataVersions()
            .getWithResponse("lkwqisnlpaymket", "tkt", "mewwlkryz", "pgqqdhtctx", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("hcz", response.properties().description());
        Assertions.assertEquals("itydljgrpq", response.properties().tags().get("af"));
        Assertions.assertEquals("cp", response.properties().properties().get("bnwitafjjevp"));
        Assertions.assertEquals(false, response.properties().isArchived());
        Assertions.assertEquals(true, response.properties().isAnonymous());
        Assertions.assertEquals("regykjmpad", response.properties().dataUri());
    }
}
