// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devhub.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.devhub.DevHubManager;
import com.azure.resourcemanager.devhub.models.GitHubOAuthResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class ResourceProvidersGitHubOAuthCallbackWithResponseMockTests {
    @Test
    public void testGitHubOAuthCallbackWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"username\":\"eo\"},\"id\":\"okeyyienj\",\"name\":\"dlwtgrhpdj\",\"type\":\"jumasx\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        DevHubManager manager = DevHubManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        GitHubOAuthResponse response = manager.resourceProviders()
            .gitHubOAuthCallbackWithResponse("zscxaqwo", "chcbonqvpkvlrxnj", "ase", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("eo", response.username());
    }
}
