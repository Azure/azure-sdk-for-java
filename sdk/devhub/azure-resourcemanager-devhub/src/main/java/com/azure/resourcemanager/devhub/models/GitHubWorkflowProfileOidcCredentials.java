// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.devhub.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The fields needed for OIDC with GitHub.
 */
@Fluent
public final class GitHubWorkflowProfileOidcCredentials
    implements JsonSerializable<GitHubWorkflowProfileOidcCredentials> {
    /*
     * Azure Application Client ID
     */
    private String azureClientId;

    /*
     * Azure Directory (tenant) ID
     */
    private String azureTenantId;

    /**
     * Creates an instance of GitHubWorkflowProfileOidcCredentials class.
     */
    public GitHubWorkflowProfileOidcCredentials() {
    }

    /**
     * Get the azureClientId property: Azure Application Client ID.
     * 
     * @return the azureClientId value.
     */
    public String azureClientId() {
        return this.azureClientId;
    }

    /**
     * Set the azureClientId property: Azure Application Client ID.
     * 
     * @param azureClientId the azureClientId value to set.
     * @return the GitHubWorkflowProfileOidcCredentials object itself.
     */
    public GitHubWorkflowProfileOidcCredentials withAzureClientId(String azureClientId) {
        this.azureClientId = azureClientId;
        return this;
    }

    /**
     * Get the azureTenantId property: Azure Directory (tenant) ID.
     * 
     * @return the azureTenantId value.
     */
    public String azureTenantId() {
        return this.azureTenantId;
    }

    /**
     * Set the azureTenantId property: Azure Directory (tenant) ID.
     * 
     * @param azureTenantId the azureTenantId value to set.
     * @return the GitHubWorkflowProfileOidcCredentials object itself.
     */
    public GitHubWorkflowProfileOidcCredentials withAzureTenantId(String azureTenantId) {
        this.azureTenantId = azureTenantId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("azureClientId", this.azureClientId);
        jsonWriter.writeStringField("azureTenantId", this.azureTenantId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of GitHubWorkflowProfileOidcCredentials from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of GitHubWorkflowProfileOidcCredentials if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the GitHubWorkflowProfileOidcCredentials.
     */
    public static GitHubWorkflowProfileOidcCredentials fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            GitHubWorkflowProfileOidcCredentials deserializedGitHubWorkflowProfileOidcCredentials
                = new GitHubWorkflowProfileOidcCredentials();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("azureClientId".equals(fieldName)) {
                    deserializedGitHubWorkflowProfileOidcCredentials.azureClientId = reader.getString();
                } else if ("azureTenantId".equals(fieldName)) {
                    deserializedGitHubWorkflowProfileOidcCredentials.azureTenantId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedGitHubWorkflowProfileOidcCredentials;
        });
    }
}
