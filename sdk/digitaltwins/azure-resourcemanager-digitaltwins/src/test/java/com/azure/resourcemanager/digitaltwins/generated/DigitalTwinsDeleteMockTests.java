// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.digitaltwins.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.digitaltwins.AzureDigitalTwinsManager;
import com.azure.resourcemanager.digitaltwins.models.DigitalTwinsDescription;
import com.azure.resourcemanager.digitaltwins.models.DigitalTwinsIdentityType;
import com.azure.resourcemanager.digitaltwins.models.PrivateLinkServiceConnectionStatus;
import com.azure.resourcemanager.digitaltwins.models.PublicNetworkAccess;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class DigitalTwinsDeleteMockTests {
    @Test
    public void testDelete() throws Exception {
        String responseStr
            = "{\"properties\":{\"createdTime\":\"2021-08-15T16:49:16Z\",\"lastUpdatedTime\":\"2021-02-03T03:57:15Z\",\"provisioningState\":\"Succeeded\",\"hostName\":\"xsbkyvpyca\",\"privateEndpointConnections\":[{\"properties\":{\"provisioningState\":\"Pending\",\"privateEndpoint\":{},\"groupIds\":[\"fkuwbcrnwbmehhse\",\"v\"],\"privateLinkServiceConnectionState\":{\"status\":\"Disconnected\",\"description\":\"rts\"}},\"id\":\"spkdee\",\"name\":\"aofmxagkvtme\",\"type\":\"mqkrhahvljuahaqu\"}],\"publicNetworkAccess\":\"Enabled\"},\"identity\":{\"type\":\"SystemAssigned\",\"principalId\":\"alaexqpvfadmwsrc\",\"tenantId\":\"vxpvgomz\",\"userAssignedIdentities\":{\"baliourqhakauha\":{\"clientId\":\"sgwbnbbeld\",\"principalId\":\"k\"},\"jooxdjebw\":{\"clientId\":\"sfwxosowzxc\",\"principalId\":\"i\"}}},\"location\":\"cwwfvovbvme\",\"tags\":{\"iotwmcdytdxwit\":\"ivyhzceuojgjrwju\",\"hniskxfbkpyc\":\"nrjawgqwg\",\"l\":\"klwndnhjdauwhv\"},\"id\":\"zbtd\",\"name\":\"xujznbmpowu\",\"type\":\"przqlveu\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureDigitalTwinsManager manager = AzureDigitalTwinsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        DigitalTwinsDescription response
            = manager.digitalTwins().delete("wfudwpzntxhdzhl", "qj", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("cwwfvovbvme", response.location());
        Assertions.assertEquals("ivyhzceuojgjrwju", response.tags().get("iotwmcdytdxwit"));
        Assertions.assertEquals(DigitalTwinsIdentityType.SYSTEM_ASSIGNED, response.identity().type());
        Assertions.assertEquals("fkuwbcrnwbmehhse",
            response.privateEndpointConnections().get(0).properties().groupIds().get(0));
        Assertions.assertEquals(PrivateLinkServiceConnectionStatus.DISCONNECTED,
            response.privateEndpointConnections().get(0).properties().privateLinkServiceConnectionState().status());
        Assertions.assertEquals("rts",
            response.privateEndpointConnections()
                .get(0)
                .properties()
                .privateLinkServiceConnectionState()
                .description());
        Assertions.assertEquals(PublicNetworkAccess.ENABLED, response.publicNetworkAccess());
    }
}
