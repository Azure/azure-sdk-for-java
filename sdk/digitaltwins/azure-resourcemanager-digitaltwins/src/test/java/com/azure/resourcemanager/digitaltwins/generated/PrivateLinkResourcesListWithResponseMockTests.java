// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.digitaltwins.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.digitaltwins.AzureDigitalTwinsManager;
import com.azure.resourcemanager.digitaltwins.models.GroupIdInformationResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class PrivateLinkResourcesListWithResponseMockTests {
    @Test
    public void testListWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"groupId\":\"iohgwxrtfud\",\"requiredMembers\":[\"xg\"],\"requiredZoneNames\":[\"gvr\",\"mnpkukghimdblxg\",\"imfnjhfjx\"]},\"id\":\"szkkfoqre\",\"name\":\"kzikfjawneaivxwc\",\"type\":\"lpcirelsf\"},{\"properties\":{\"groupId\":\"enwabfatk\",\"requiredMembers\":[\"xbjhwuaanozjosph\",\"oulpjrv\",\"ag\",\"rvimjwosytxitcsk\"],\"requiredZoneNames\":[\"tq\"]},\"id\":\"iekkezz\",\"name\":\"hlyfjhdgqgg\",\"type\":\"dunyg\"},{\"properties\":{\"groupId\":\"qidbqfatpxllrxcy\",\"requiredMembers\":[\"a\",\"su\"],\"requiredZoneNames\":[\"m\"]},\"id\":\"dmjsjqb\",\"name\":\"hyxxrwlycoduhpk\",\"type\":\"gymare\"},{\"properties\":{\"groupId\":\"ajxq\",\"requiredMembers\":[\"hky\",\"ubeddg\"],\"requiredZoneNames\":[\"fwqmzqalkrmn\"]},\"id\":\"jpxac\",\"name\":\"udfnbyxba\",\"type\":\"bjyvay\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        AzureDigitalTwinsManager manager = AzureDigitalTwinsManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        GroupIdInformationResponse response = manager.privateLinkResources()
            .listWithResponse("mtdaa", "gdv", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("iohgwxrtfud", response.value().get(0).properties().groupId());
        Assertions.assertEquals("xg", response.value().get(0).properties().requiredMembers().get(0));
        Assertions.assertEquals("gvr", response.value().get(0).properties().requiredZoneNames().get(0));
        Assertions.assertEquals("szkkfoqre", response.value().get(0).id());
    }
}
