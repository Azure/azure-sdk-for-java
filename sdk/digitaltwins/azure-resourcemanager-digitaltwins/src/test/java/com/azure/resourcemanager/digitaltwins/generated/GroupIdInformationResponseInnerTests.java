// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.digitaltwins.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.digitaltwins.fluent.models.GroupIdInformationInner;
import com.azure.resourcemanager.digitaltwins.fluent.models.GroupIdInformationResponseInner;
import com.azure.resourcemanager.digitaltwins.models.GroupIdInformationProperties;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class GroupIdInformationResponseInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        GroupIdInformationResponseInner model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"groupId\":\"wd\",\"requiredMembers\":[\"avo\"],\"requiredZoneNames\":[\"dmoh\",\"tbqvudw\",\"dndnvow\"]},\"id\":\"jjugwdkcglhslaz\",\"name\":\"yggdtjixh\",\"type\":\"uofqwe\"},{\"properties\":{\"groupId\":\"hmenevfyexfwhybc\",\"requiredMembers\":[\"yvdcsitynnaa\",\"dectehfiqsc\"],\"requiredZoneNames\":[\"pvhez\",\"kgqhcjrefovg\",\"kqsleyyvxy\"]},\"id\":\"pkc\",\"name\":\"tpngjcrcczsqpjh\",\"type\":\"daj\"}]}")
            .toObject(GroupIdInformationResponseInner.class);
        Assertions.assertEquals("wd", model.value().get(0).properties().groupId());
        Assertions.assertEquals("avo", model.value().get(0).properties().requiredMembers().get(0));
        Assertions.assertEquals("dmoh", model.value().get(0).properties().requiredZoneNames().get(0));
        Assertions.assertEquals("jjugwdkcglhslaz", model.value().get(0).id());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        GroupIdInformationResponseInner model
            = new GroupIdInformationResponseInner()
                .withValue(Arrays.asList(
                    new GroupIdInformationInner()
                        .withProperties(new GroupIdInformationProperties().withGroupId("wd")
                            .withRequiredMembers(Arrays.asList("avo"))
                            .withRequiredZoneNames(Arrays.asList("dmoh", "tbqvudw", "dndnvow")))
                        .withId("jjugwdkcglhslaz"),
                    new GroupIdInformationInner()
                        .withProperties(new GroupIdInformationProperties().withGroupId("hmenevfyexfwhybc")
                            .withRequiredMembers(Arrays.asList("yvdcsitynnaa", "dectehfiqsc"))
                            .withRequiredZoneNames(Arrays.asList("pvhez", "kgqhcjrefovg", "kqsleyyvxy")))
                        .withId("pkc")));
        model = BinaryData.fromObject(model).toObject(GroupIdInformationResponseInner.class);
        Assertions.assertEquals("wd", model.value().get(0).properties().groupId());
        Assertions.assertEquals("avo", model.value().get(0).properties().requiredMembers().get(0));
        Assertions.assertEquals("dmoh", model.value().get(0).properties().requiredZoneNames().get(0));
        Assertions.assertEquals("jjugwdkcglhslaz", model.value().get(0).id());
    }
}
