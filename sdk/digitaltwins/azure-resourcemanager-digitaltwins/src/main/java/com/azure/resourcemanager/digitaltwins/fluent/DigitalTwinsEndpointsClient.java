// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.digitaltwins.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.digitaltwins.fluent.models.DigitalTwinsEndpointResourceInner;

/** An instance of this class provides access to all the operations defined in DigitalTwinsEndpointsClient. */
public interface DigitalTwinsEndpointsClient {
    /**
     * Get DigitalTwinsInstance Endpoints.
     *
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param resourceName The name of the DigitalTwinsInstance.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return digitalTwinsInstance Endpoints.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DigitalTwinsEndpointResourceInner> list(String resourceGroupName, String resourceName);

    /**
     * Get DigitalTwinsInstance Endpoints.
     *
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param resourceName The name of the DigitalTwinsInstance.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return digitalTwinsInstance Endpoints.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<DigitalTwinsEndpointResourceInner> list(
        String resourceGroupName, String resourceName, Context context);

    /**
     * Get DigitalTwinsInstances Endpoint.
     *
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param resourceName The name of the DigitalTwinsInstance.
     * @param endpointName Name of Endpoint Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return digitalTwinsInstances Endpoint.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DigitalTwinsEndpointResourceInner get(String resourceGroupName, String resourceName, String endpointName);

    /**
     * Get DigitalTwinsInstances Endpoint.
     *
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param resourceName The name of the DigitalTwinsInstance.
     * @param endpointName Name of Endpoint Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return digitalTwinsInstances Endpoint.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<DigitalTwinsEndpointResourceInner> getWithResponse(
        String resourceGroupName, String resourceName, String endpointName, Context context);

    /**
     * Create or update DigitalTwinsInstance endpoint.
     *
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param resourceName The name of the DigitalTwinsInstance.
     * @param endpointName Name of Endpoint Resource.
     * @param endpointDescription The DigitalTwinsInstance endpoint metadata and security metadata.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return digitalTwinsInstance endpoint resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<DigitalTwinsEndpointResourceInner>, DigitalTwinsEndpointResourceInner> beginCreateOrUpdate(
        String resourceGroupName,
        String resourceName,
        String endpointName,
        DigitalTwinsEndpointResourceInner endpointDescription);

    /**
     * Create or update DigitalTwinsInstance endpoint.
     *
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param resourceName The name of the DigitalTwinsInstance.
     * @param endpointName Name of Endpoint Resource.
     * @param endpointDescription The DigitalTwinsInstance endpoint metadata and security metadata.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return digitalTwinsInstance endpoint resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<DigitalTwinsEndpointResourceInner>, DigitalTwinsEndpointResourceInner> beginCreateOrUpdate(
        String resourceGroupName,
        String resourceName,
        String endpointName,
        DigitalTwinsEndpointResourceInner endpointDescription,
        Context context);

    /**
     * Create or update DigitalTwinsInstance endpoint.
     *
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param resourceName The name of the DigitalTwinsInstance.
     * @param endpointName Name of Endpoint Resource.
     * @param endpointDescription The DigitalTwinsInstance endpoint metadata and security metadata.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return digitalTwinsInstance endpoint resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DigitalTwinsEndpointResourceInner createOrUpdate(
        String resourceGroupName,
        String resourceName,
        String endpointName,
        DigitalTwinsEndpointResourceInner endpointDescription);

    /**
     * Create or update DigitalTwinsInstance endpoint.
     *
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param resourceName The name of the DigitalTwinsInstance.
     * @param endpointName Name of Endpoint Resource.
     * @param endpointDescription The DigitalTwinsInstance endpoint metadata and security metadata.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return digitalTwinsInstance endpoint resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DigitalTwinsEndpointResourceInner createOrUpdate(
        String resourceGroupName,
        String resourceName,
        String endpointName,
        DigitalTwinsEndpointResourceInner endpointDescription,
        Context context);

    /**
     * Delete a DigitalTwinsInstance endpoint.
     *
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param resourceName The name of the DigitalTwinsInstance.
     * @param endpointName Name of Endpoint Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return digitalTwinsInstance endpoint resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<DigitalTwinsEndpointResourceInner>, DigitalTwinsEndpointResourceInner> beginDelete(
        String resourceGroupName, String resourceName, String endpointName);

    /**
     * Delete a DigitalTwinsInstance endpoint.
     *
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param resourceName The name of the DigitalTwinsInstance.
     * @param endpointName Name of Endpoint Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return digitalTwinsInstance endpoint resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SyncPoller<PollResult<DigitalTwinsEndpointResourceInner>, DigitalTwinsEndpointResourceInner> beginDelete(
        String resourceGroupName, String resourceName, String endpointName, Context context);

    /**
     * Delete a DigitalTwinsInstance endpoint.
     *
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param resourceName The name of the DigitalTwinsInstance.
     * @param endpointName Name of Endpoint Resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return digitalTwinsInstance endpoint resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DigitalTwinsEndpointResourceInner delete(String resourceGroupName, String resourceName, String endpointName);

    /**
     * Delete a DigitalTwinsInstance endpoint.
     *
     * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance.
     * @param resourceName The name of the DigitalTwinsInstance.
     * @param endpointName Name of Endpoint Resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return digitalTwinsInstance endpoint resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    DigitalTwinsEndpointResourceInner delete(
        String resourceGroupName, String resourceName, String endpointName, Context context);
}
