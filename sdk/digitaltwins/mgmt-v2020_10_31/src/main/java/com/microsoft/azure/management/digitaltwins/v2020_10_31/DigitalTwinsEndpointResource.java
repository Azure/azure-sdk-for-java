/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.digitaltwins.v2020_10_31;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.digitaltwins.v2020_10_31.implementation.DigitalTwinsEndpointResourceInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.digitaltwins.v2020_10_31.implementation.DigitalTwinsManager;
import org.joda.time.DateTime;

/**
 * Type representing DigitalTwinsEndpointResource.
 */
public interface DigitalTwinsEndpointResource extends HasInner<DigitalTwinsEndpointResourceInner>, Indexable, Refreshable<DigitalTwinsEndpointResource>, Updatable<DigitalTwinsEndpointResource.Update>, HasManager<DigitalTwinsManager> {
    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the properties value.
     */
    DigitalTwinsEndpointResourceProperties properties();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the DigitalTwinsEndpointResource definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithDigitalTwinsInstance, DefinitionStages.WithProperties, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of DigitalTwinsEndpointResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a DigitalTwinsEndpointResource definition.
         */
        interface Blank extends WithDigitalTwinsInstance {
        }

        /**
         * The stage of the digitaltwinsendpointresource definition allowing to specify DigitalTwinsInstance.
         */
        interface WithDigitalTwinsInstance {
           /**
            * Specifies resourceGroupName, resourceName.
            * @param resourceGroupName The name of the resource group that contains the DigitalTwinsInstance
            * @param resourceName The name of the DigitalTwinsInstance
            * @return the next definition stage
            */
            WithProperties withExistingDigitalTwinsInstance(String resourceGroupName, String resourceName);
        }

        /**
         * The stage of the digitaltwinsendpointresource definition allowing to specify Properties.
         */
        interface WithProperties {
           /**
            * Specifies properties.
            * @param properties DigitalTwinsInstance endpoint resource properties
            * @return the next definition stage
            */
            WithCreate withProperties(DigitalTwinsEndpointResourceProperties properties);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<DigitalTwinsEndpointResource> {
        }
    }
    /**
     * The template for a DigitalTwinsEndpointResource update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<DigitalTwinsEndpointResource>, UpdateStages.WithProperties {
    }

    /**
     * Grouping of DigitalTwinsEndpointResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the digitaltwinsendpointresource update allowing to specify Properties.
         */
        interface WithProperties {
            /**
             * Specifies properties.
             * @param properties DigitalTwinsInstance endpoint resource properties
             * @return the next update stage
             */
            Update withProperties(DigitalTwinsEndpointResourceProperties properties);
        }

    }
}
