// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.digitaltwins.core.implementation;

import com.azure.core.annotation.BodyParam;
import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.HeaderParam;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.Post;
import com.azure.core.annotation.QueryParam;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.ResponseBase;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.util.Context;
import com.azure.core.util.FluxUtil;
import com.azure.digitaltwins.core.implementation.models.ErrorResponseException;
import com.azure.digitaltwins.core.implementation.models.QueriesQueryTwinsHeaders;
import com.azure.digitaltwins.core.implementation.models.QueryResult;
import com.azure.digitaltwins.core.implementation.models.QuerySpecification;
import com.azure.digitaltwins.core.implementation.models.QueryTwinsOptions;
import reactor.core.publisher.Mono;

/**
 * An instance of this class provides access to all the operations defined in Queries.
 */
public final class QueriesImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final QueriesService service;

    /**
     * The service client containing this operation class.
     */
    private final AzureDigitalTwinsAPIImpl client;

    /**
     * Initializes an instance of QueriesImpl.
     * 
     * @param client the instance of the service client containing this operation class.
     */
    QueriesImpl(AzureDigitalTwinsAPIImpl client) {
        this.service = RestProxy.create(QueriesService.class, client.getHttpPipeline(), client.getSerializerAdapter());
        this.client = client;
    }

    /**
     * The interface defining all the services for AzureDigitalTwinsAPIQueries to be used by the proxy service to
     * perform REST calls.
     */
    @Host("{$host}")
    @ServiceInterface(name = "AzureDigitalTwinsAPI")
    public interface QueriesService {
        @Post("/query")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(ErrorResponseException.class)
        Mono<ResponseBase<QueriesQueryTwinsHeaders, QueryResult>> queryTwins(@HostParam("$host") String host,
            @HeaderParam("traceparent") String traceparent, @HeaderParam("tracestate") String tracestate,
            @HeaderParam("max-items-per-page") Integer maxItemsPerPage, @QueryParam("api-version") String apiVersion,
            @BodyParam("application/json") QuerySpecification querySpecification, @HeaderParam("Accept") String accept,
            Context context);

        @Post("/query")
        @ExpectedResponses({ 200 })
        @UnexpectedResponseExceptionType(ErrorResponseException.class)
        Mono<Response<QueryResult>> queryTwinsNoCustomHeaders(@HostParam("$host") String host,
            @HeaderParam("traceparent") String traceparent, @HeaderParam("tracestate") String tracestate,
            @HeaderParam("max-items-per-page") Integer maxItemsPerPage, @QueryParam("api-version") String apiVersion,
            @BodyParam("application/json") QuerySpecification querySpecification, @HeaderParam("Accept") String accept,
            Context context);
    }

    /**
     * Executes a query that allows traversing relationships and filtering by property values.
     * Status codes:
     * * 200 OK
     * * 400 Bad Request
     * * BadRequest - The continuation token is invalid.
     * * SqlQueryError - The query contains some errors.
     * * TimeoutError - The query execution timed out after 60 seconds. Try simplifying the query or adding conditions
     * to reduce the result size.
     * * 429 Too Many Requests
     * * QuotaReachedError - The maximum query rate limit has been reached.
     * 
     * @param querySpecification The query specification to execute.
     * @param queryTwinsOptions Parameter group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the results of a query operation and an optional continuation token along with {@link ResponseBase} on
     * successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<ResponseBase<QueriesQueryTwinsHeaders, QueryResult>>
        queryTwinsWithResponseAsync(QuerySpecification querySpecification, QueryTwinsOptions queryTwinsOptions) {
        final String accept = "application/json";
        String traceparentInternal = null;
        if (queryTwinsOptions != null) {
            traceparentInternal = queryTwinsOptions.getTraceparent();
        }
        String traceparent = traceparentInternal;
        String tracestateInternal = null;
        if (queryTwinsOptions != null) {
            tracestateInternal = queryTwinsOptions.getTracestate();
        }
        String tracestate = tracestateInternal;
        Integer maxItemsPerPageInternal = null;
        if (queryTwinsOptions != null) {
            maxItemsPerPageInternal = queryTwinsOptions.getMaxItemsPerPage();
        }
        Integer maxItemsPerPage = maxItemsPerPageInternal;
        return FluxUtil.withContext(context -> service.queryTwins(this.client.getHost(), traceparent, tracestate,
            maxItemsPerPage, this.client.getApiVersion(), querySpecification, accept, context));
    }

    /**
     * Executes a query that allows traversing relationships and filtering by property values.
     * Status codes:
     * * 200 OK
     * * 400 Bad Request
     * * BadRequest - The continuation token is invalid.
     * * SqlQueryError - The query contains some errors.
     * * TimeoutError - The query execution timed out after 60 seconds. Try simplifying the query or adding conditions
     * to reduce the result size.
     * * 429 Too Many Requests
     * * QuotaReachedError - The maximum query rate limit has been reached.
     * 
     * @param querySpecification The query specification to execute.
     * @param queryTwinsOptions Parameter group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the results of a query operation and an optional continuation token along with {@link ResponseBase} on
     * successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<ResponseBase<QueriesQueryTwinsHeaders, QueryResult>> queryTwinsWithResponseAsync(
        QuerySpecification querySpecification, QueryTwinsOptions queryTwinsOptions, Context context) {
        final String accept = "application/json";
        String traceparentInternal = null;
        if (queryTwinsOptions != null) {
            traceparentInternal = queryTwinsOptions.getTraceparent();
        }
        String traceparent = traceparentInternal;
        String tracestateInternal = null;
        if (queryTwinsOptions != null) {
            tracestateInternal = queryTwinsOptions.getTracestate();
        }
        String tracestate = tracestateInternal;
        Integer maxItemsPerPageInternal = null;
        if (queryTwinsOptions != null) {
            maxItemsPerPageInternal = queryTwinsOptions.getMaxItemsPerPage();
        }
        Integer maxItemsPerPage = maxItemsPerPageInternal;
        return service.queryTwins(this.client.getHost(), traceparent, tracestate, maxItemsPerPage,
            this.client.getApiVersion(), querySpecification, accept, context);
    }

    /**
     * Executes a query that allows traversing relationships and filtering by property values.
     * Status codes:
     * * 200 OK
     * * 400 Bad Request
     * * BadRequest - The continuation token is invalid.
     * * SqlQueryError - The query contains some errors.
     * * TimeoutError - The query execution timed out after 60 seconds. Try simplifying the query or adding conditions
     * to reduce the result size.
     * * 429 Too Many Requests
     * * QuotaReachedError - The maximum query rate limit has been reached.
     * 
     * @param querySpecification The query specification to execute.
     * @param queryTwinsOptions Parameter group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the results of a query operation and an optional continuation token on successful completion of
     * {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<QueryResult> queryTwinsAsync(QuerySpecification querySpecification,
        QueryTwinsOptions queryTwinsOptions) {
        return queryTwinsWithResponseAsync(querySpecification, queryTwinsOptions)
            .flatMap(res -> Mono.justOrEmpty(res.getValue()));
    }

    /**
     * Executes a query that allows traversing relationships and filtering by property values.
     * Status codes:
     * * 200 OK
     * * 400 Bad Request
     * * BadRequest - The continuation token is invalid.
     * * SqlQueryError - The query contains some errors.
     * * TimeoutError - The query execution timed out after 60 seconds. Try simplifying the query or adding conditions
     * to reduce the result size.
     * * 429 Too Many Requests
     * * QuotaReachedError - The maximum query rate limit has been reached.
     * 
     * @param querySpecification The query specification to execute.
     * @param queryTwinsOptions Parameter group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the results of a query operation and an optional continuation token on successful completion of
     * {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<QueryResult> queryTwinsAsync(QuerySpecification querySpecification, QueryTwinsOptions queryTwinsOptions,
        Context context) {
        return queryTwinsWithResponseAsync(querySpecification, queryTwinsOptions, context)
            .flatMap(res -> Mono.justOrEmpty(res.getValue()));
    }

    /**
     * Executes a query that allows traversing relationships and filtering by property values.
     * Status codes:
     * * 200 OK
     * * 400 Bad Request
     * * BadRequest - The continuation token is invalid.
     * * SqlQueryError - The query contains some errors.
     * * TimeoutError - The query execution timed out after 60 seconds. Try simplifying the query or adding conditions
     * to reduce the result size.
     * * 429 Too Many Requests
     * * QuotaReachedError - The maximum query rate limit has been reached.
     * 
     * @param querySpecification The query specification to execute.
     * @param queryTwinsOptions Parameter group.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the results of a query operation and an optional continuation token along with {@link Response} on
     * successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<QueryResult>> queryTwinsNoCustomHeadersWithResponseAsync(QuerySpecification querySpecification,
        QueryTwinsOptions queryTwinsOptions) {
        final String accept = "application/json";
        String traceparentInternal = null;
        if (queryTwinsOptions != null) {
            traceparentInternal = queryTwinsOptions.getTraceparent();
        }
        String traceparent = traceparentInternal;
        String tracestateInternal = null;
        if (queryTwinsOptions != null) {
            tracestateInternal = queryTwinsOptions.getTracestate();
        }
        String tracestate = tracestateInternal;
        Integer maxItemsPerPageInternal = null;
        if (queryTwinsOptions != null) {
            maxItemsPerPageInternal = queryTwinsOptions.getMaxItemsPerPage();
        }
        Integer maxItemsPerPage = maxItemsPerPageInternal;
        return FluxUtil.withContext(context -> service.queryTwinsNoCustomHeaders(this.client.getHost(), traceparent,
            tracestate, maxItemsPerPage, this.client.getApiVersion(), querySpecification, accept, context));
    }

    /**
     * Executes a query that allows traversing relationships and filtering by property values.
     * Status codes:
     * * 200 OK
     * * 400 Bad Request
     * * BadRequest - The continuation token is invalid.
     * * SqlQueryError - The query contains some errors.
     * * TimeoutError - The query execution timed out after 60 seconds. Try simplifying the query or adding conditions
     * to reduce the result size.
     * * 429 Too Many Requests
     * * QuotaReachedError - The maximum query rate limit has been reached.
     * 
     * @param querySpecification The query specification to execute.
     * @param queryTwinsOptions Parameter group.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws ErrorResponseException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the results of a query operation and an optional continuation token along with {@link Response} on
     * successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<QueryResult>> queryTwinsNoCustomHeadersWithResponseAsync(QuerySpecification querySpecification,
        QueryTwinsOptions queryTwinsOptions, Context context) {
        final String accept = "application/json";
        String traceparentInternal = null;
        if (queryTwinsOptions != null) {
            traceparentInternal = queryTwinsOptions.getTraceparent();
        }
        String traceparent = traceparentInternal;
        String tracestateInternal = null;
        if (queryTwinsOptions != null) {
            tracestateInternal = queryTwinsOptions.getTracestate();
        }
        String tracestate = tracestateInternal;
        Integer maxItemsPerPageInternal = null;
        if (queryTwinsOptions != null) {
            maxItemsPerPageInternal = queryTwinsOptions.getMaxItemsPerPage();
        }
        Integer maxItemsPerPage = maxItemsPerPageInternal;
        return service.queryTwinsNoCustomHeaders(this.client.getHost(), traceparent, tracestate, maxItemsPerPage,
            this.client.getApiVersion(), querySpecification, accept, context);
    }
}
