/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.digitaltwins.v2020_12_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.digitaltwins.v2020_12_01.implementation.DigitalTwinsManager;
import org.joda.time.DateTime;
import java.util.List;
import com.microsoft.azure.management.digitaltwins.v2020_12_01.implementation.PrivateEndpointConnectionInner;
import com.microsoft.azure.management.digitaltwins.v2020_12_01.implementation.DigitalTwinsDescriptionInner;

/**
 * Type representing DigitalTwinsDescription.
 */
public interface DigitalTwinsDescription extends HasInner<DigitalTwinsDescriptionInner>, Resource, GroupableResourceCore<DigitalTwinsManager, DigitalTwinsDescriptionInner>, HasResourceGroup, Refreshable<DigitalTwinsDescription>, Updatable<DigitalTwinsDescription.Update>, HasManager<DigitalTwinsManager> {
    /**
     * @return the createdTime value.
     */
    DateTime createdTime();

    /**
     * @return the hostName value.
     */
    String hostName();

    /**
     * @return the identity value.
     */
    DigitalTwinsIdentity identity();

    /**
     * @return the lastUpdatedTime value.
     */
    DateTime lastUpdatedTime();

    /**
     * @return the privateEndpointConnections value.
     */
    List<PrivateEndpointConnection> privateEndpointConnections();

    /**
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * @return the publicNetworkAccess value.
     */
    PublicNetworkAccess publicNetworkAccess();

    /**
     * The entirety of the DigitalTwinsDescription definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of DigitalTwinsDescription definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a DigitalTwinsDescription definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the DigitalTwinsDescription definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreate> {
        }

        /**
         * The stage of the digitaltwinsdescription definition allowing to specify Identity.
         */
        interface WithIdentity {
            /**
             * Specifies identity.
             * @param identity The managed identity for the DigitalTwinsInstance
             * @return the next definition stage
             */
            WithCreate withIdentity(DigitalTwinsIdentity identity);
        }

        /**
         * The stage of the digitaltwinsdescription definition allowing to specify PrivateEndpointConnections.
         */
        interface WithPrivateEndpointConnections {
            /**
             * Specifies privateEndpointConnections.
             * @param privateEndpointConnections the privateEndpointConnections parameter value
             * @return the next definition stage
             */
            WithCreate withPrivateEndpointConnections(List<PrivateEndpointConnectionInner> privateEndpointConnections);
        }

        /**
         * The stage of the digitaltwinsdescription definition allowing to specify PublicNetworkAccess.
         */
        interface WithPublicNetworkAccess {
            /**
             * Specifies publicNetworkAccess.
             * @param publicNetworkAccess Public network access for the DigitalTwinsInstance. Possible values include: 'Enabled', 'Disabled'
             * @return the next definition stage
             */
            WithCreate withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<DigitalTwinsDescription>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithIdentity, DefinitionStages.WithPrivateEndpointConnections, DefinitionStages.WithPublicNetworkAccess {
        }
    }
    /**
     * The template for a DigitalTwinsDescription update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<DigitalTwinsDescription>, Resource.UpdateWithTags<Update>, UpdateStages.WithIdentity, UpdateStages.WithProperties {
    }

    /**
     * Grouping of DigitalTwinsDescription update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the digitaltwinsdescription update allowing to specify Identity.
         */
        interface WithIdentity {
            /**
             * Specifies identity.
             * @param identity The managed identity for the DigitalTwinsInstance
             * @return the next update stage
             */
            Update withIdentity(DigitalTwinsIdentity identity);
        }

        /**
         * The stage of the digitaltwinsdescription update allowing to specify Properties.
         */
        interface WithProperties {
            /**
             * Specifies properties.
             * @param properties Properties for the DigitalTwinsInstance
             * @return the next update stage
             */
            Update withProperties(DigitalTwinsPatchProperties properties);
        }

    }
}
