// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningcompute.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.management.exception.ManagementError;
import com.azure.resourcemanager.machinelearningcompute.models.AcsClusterProperties;
import com.azure.resourcemanager.machinelearningcompute.models.AppInsightsProperties;
import com.azure.resourcemanager.machinelearningcompute.models.ClusterType;
import com.azure.resourcemanager.machinelearningcompute.models.ContainerRegistryProperties;
import com.azure.resourcemanager.machinelearningcompute.models.GlobalServiceConfiguration;
import com.azure.resourcemanager.machinelearningcompute.models.OperationStatus;
import com.azure.resourcemanager.machinelearningcompute.models.StorageAccountProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Map;

/** Instance of an Azure ML Operationalization Cluster resource. */
@Fluent
public final class OperationalizationClusterInner extends Resource {
    /*
     * Properties of an operationalization cluster.
     */
    @JsonProperty(value = "properties")
    private OperationalizationClusterProperties innerProperties;

    /** Creates an instance of OperationalizationClusterInner class. */
    public OperationalizationClusterInner() {
    }

    /**
     * Get the innerProperties property: Properties of an operationalization cluster.
     *
     * @return the innerProperties value.
     */
    private OperationalizationClusterProperties innerProperties() {
        return this.innerProperties;
    }

    /** {@inheritDoc} */
    @Override
    public OperationalizationClusterInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public OperationalizationClusterInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the description property: The description of the cluster.
     *
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: The description of the cluster.
     *
     * @param description the description value to set.
     * @return the OperationalizationClusterInner object itself.
     */
    public OperationalizationClusterInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OperationalizationClusterProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the createdOn property: The date and time when the cluster was created.
     *
     * @return the createdOn value.
     */
    public OffsetDateTime createdOn() {
        return this.innerProperties() == null ? null : this.innerProperties().createdOn();
    }

    /**
     * Get the modifiedOn property: The date and time when the cluster was last modified.
     *
     * @return the modifiedOn value.
     */
    public OffsetDateTime modifiedOn() {
        return this.innerProperties() == null ? null : this.innerProperties().modifiedOn();
    }

    /**
     * Get the provisioningState property: The provision state of the cluster. Valid values are Unknown, Updating,
     * Provisioning, Succeeded, and Failed.
     *
     * @return the provisioningState value.
     */
    public OperationStatus provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Get the provisioningErrors property: List of provisioning errors reported by the resource provider.
     *
     * @return the provisioningErrors value.
     */
    public List<ManagementError> provisioningErrors() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningErrors();
    }

    /**
     * Get the clusterType property: The cluster type.
     *
     * @return the clusterType value.
     */
    public ClusterType clusterType() {
        return this.innerProperties() == null ? null : this.innerProperties().clusterType();
    }

    /**
     * Set the clusterType property: The cluster type.
     *
     * @param clusterType the clusterType value to set.
     * @return the OperationalizationClusterInner object itself.
     */
    public OperationalizationClusterInner withClusterType(ClusterType clusterType) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OperationalizationClusterProperties();
        }
        this.innerProperties().withClusterType(clusterType);
        return this;
    }

    /**
     * Get the storageAccount property: Storage Account properties.
     *
     * @return the storageAccount value.
     */
    public StorageAccountProperties storageAccount() {
        return this.innerProperties() == null ? null : this.innerProperties().storageAccount();
    }

    /**
     * Set the storageAccount property: Storage Account properties.
     *
     * @param storageAccount the storageAccount value to set.
     * @return the OperationalizationClusterInner object itself.
     */
    public OperationalizationClusterInner withStorageAccount(StorageAccountProperties storageAccount) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OperationalizationClusterProperties();
        }
        this.innerProperties().withStorageAccount(storageAccount);
        return this;
    }

    /**
     * Get the containerRegistry property: Container Registry properties.
     *
     * @return the containerRegistry value.
     */
    public ContainerRegistryProperties containerRegistry() {
        return this.innerProperties() == null ? null : this.innerProperties().containerRegistry();
    }

    /**
     * Set the containerRegistry property: Container Registry properties.
     *
     * @param containerRegistry the containerRegistry value to set.
     * @return the OperationalizationClusterInner object itself.
     */
    public OperationalizationClusterInner withContainerRegistry(ContainerRegistryProperties containerRegistry) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OperationalizationClusterProperties();
        }
        this.innerProperties().withContainerRegistry(containerRegistry);
        return this;
    }

    /**
     * Get the containerService property: Parameters for the Azure Container Service cluster.
     *
     * @return the containerService value.
     */
    public AcsClusterProperties containerService() {
        return this.innerProperties() == null ? null : this.innerProperties().containerService();
    }

    /**
     * Set the containerService property: Parameters for the Azure Container Service cluster.
     *
     * @param containerService the containerService value to set.
     * @return the OperationalizationClusterInner object itself.
     */
    public OperationalizationClusterInner withContainerService(AcsClusterProperties containerService) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OperationalizationClusterProperties();
        }
        this.innerProperties().withContainerService(containerService);
        return this;
    }

    /**
     * Get the appInsights property: AppInsights configuration.
     *
     * @return the appInsights value.
     */
    public AppInsightsProperties appInsights() {
        return this.innerProperties() == null ? null : this.innerProperties().appInsights();
    }

    /**
     * Set the appInsights property: AppInsights configuration.
     *
     * @param appInsights the appInsights value to set.
     * @return the OperationalizationClusterInner object itself.
     */
    public OperationalizationClusterInner withAppInsights(AppInsightsProperties appInsights) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OperationalizationClusterProperties();
        }
        this.innerProperties().withAppInsights(appInsights);
        return this;
    }

    /**
     * Get the globalServiceConfiguration property: Contains global configuration for the web services in the cluster.
     *
     * @return the globalServiceConfiguration value.
     */
    public GlobalServiceConfiguration globalServiceConfiguration() {
        return this.innerProperties() == null ? null : this.innerProperties().globalServiceConfiguration();
    }

    /**
     * Set the globalServiceConfiguration property: Contains global configuration for the web services in the cluster.
     *
     * @param globalServiceConfiguration the globalServiceConfiguration value to set.
     * @return the OperationalizationClusterInner object itself.
     */
    public OperationalizationClusterInner withGlobalServiceConfiguration(
        GlobalServiceConfiguration globalServiceConfiguration) {
        if (this.innerProperties() == null) {
            this.innerProperties = new OperationalizationClusterProperties();
        }
        this.innerProperties().withGlobalServiceConfiguration(globalServiceConfiguration);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }
}
