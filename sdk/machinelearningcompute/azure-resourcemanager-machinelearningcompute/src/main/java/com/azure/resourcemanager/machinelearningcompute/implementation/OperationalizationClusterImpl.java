// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningcompute.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.management.exception.ManagementError;
import com.azure.core.util.Context;
import com.azure.resourcemanager.machinelearningcompute.fluent.models.OperationalizationClusterInner;
import com.azure.resourcemanager.machinelearningcompute.models.AcsClusterProperties;
import com.azure.resourcemanager.machinelearningcompute.models.AppInsightsProperties;
import com.azure.resourcemanager.machinelearningcompute.models.CheckSystemServicesUpdatesAvailableResponse;
import com.azure.resourcemanager.machinelearningcompute.models.ClusterType;
import com.azure.resourcemanager.machinelearningcompute.models.ContainerRegistryProperties;
import com.azure.resourcemanager.machinelearningcompute.models.GlobalServiceConfiguration;
import com.azure.resourcemanager.machinelearningcompute.models.OperationStatus;
import com.azure.resourcemanager.machinelearningcompute.models.OperationalizationCluster;
import com.azure.resourcemanager.machinelearningcompute.models.OperationalizationClusterCredentials;
import com.azure.resourcemanager.machinelearningcompute.models.OperationalizationClusterUpdateParameters;
import com.azure.resourcemanager.machinelearningcompute.models.StorageAccountProperties;
import com.azure.resourcemanager.machinelearningcompute.models.UpdateSystemServicesResponse;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class OperationalizationClusterImpl
    implements OperationalizationCluster, OperationalizationCluster.Definition, OperationalizationCluster.Update {
    private OperationalizationClusterInner innerObject;

    private final com.azure.resourcemanager.machinelearningcompute.MachineLearningComputeManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String description() {
        return this.innerModel().description();
    }

    public OffsetDateTime createdOn() {
        return this.innerModel().createdOn();
    }

    public OffsetDateTime modifiedOn() {
        return this.innerModel().modifiedOn();
    }

    public OperationStatus provisioningState() {
        return this.innerModel().provisioningState();
    }

    public List<ManagementError> provisioningErrors() {
        List<ManagementError> inner = this.innerModel().provisioningErrors();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ClusterType clusterType() {
        return this.innerModel().clusterType();
    }

    public StorageAccountProperties storageAccount() {
        return this.innerModel().storageAccount();
    }

    public ContainerRegistryProperties containerRegistry() {
        return this.innerModel().containerRegistry();
    }

    public AcsClusterProperties containerService() {
        return this.innerModel().containerService();
    }

    public AppInsightsProperties appInsights() {
        return this.innerModel().appInsights();
    }

    public GlobalServiceConfiguration globalServiceConfiguration() {
        return this.innerModel().globalServiceConfiguration();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public OperationalizationClusterInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.machinelearningcompute.MachineLearningComputeManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String clusterName;

    private OperationalizationClusterUpdateParameters updateParameters;

    public OperationalizationClusterImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public OperationalizationCluster create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOperationalizationClusters()
                .createOrUpdate(resourceGroupName, clusterName, this.innerModel(), Context.NONE);
        return this;
    }

    public OperationalizationCluster create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOperationalizationClusters()
                .createOrUpdate(resourceGroupName, clusterName, this.innerModel(), context);
        return this;
    }

    OperationalizationClusterImpl(
        String name, com.azure.resourcemanager.machinelearningcompute.MachineLearningComputeManager serviceManager) {
        this.innerObject = new OperationalizationClusterInner();
        this.serviceManager = serviceManager;
        this.clusterName = name;
    }

    public OperationalizationClusterImpl update() {
        this.updateParameters = new OperationalizationClusterUpdateParameters();
        return this;
    }

    public OperationalizationCluster apply() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOperationalizationClusters()
                .updateWithResponse(resourceGroupName, clusterName, updateParameters, Context.NONE)
                .getValue();
        return this;
    }

    public OperationalizationCluster apply(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOperationalizationClusters()
                .updateWithResponse(resourceGroupName, clusterName, updateParameters, context)
                .getValue();
        return this;
    }

    OperationalizationClusterImpl(
        OperationalizationClusterInner innerObject,
        com.azure.resourcemanager.machinelearningcompute.MachineLearningComputeManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = Utils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.clusterName = Utils.getValueFromIdByName(innerObject.id(), "operationalizationClusters");
    }

    public OperationalizationCluster refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOperationalizationClusters()
                .getByResourceGroupWithResponse(resourceGroupName, clusterName, Context.NONE)
                .getValue();
        return this;
    }

    public OperationalizationCluster refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getOperationalizationClusters()
                .getByResourceGroupWithResponse(resourceGroupName, clusterName, context)
                .getValue();
        return this;
    }

    public OperationalizationClusterCredentials listKeys() {
        return serviceManager.operationalizationClusters().listKeys(resourceGroupName, clusterName);
    }

    public Response<OperationalizationClusterCredentials> listKeysWithResponse(Context context) {
        return serviceManager
            .operationalizationClusters()
            .listKeysWithResponse(resourceGroupName, clusterName, context);
    }

    public CheckSystemServicesUpdatesAvailableResponse checkSystemServicesUpdatesAvailable() {
        return serviceManager
            .operationalizationClusters()
            .checkSystemServicesUpdatesAvailable(resourceGroupName, clusterName);
    }

    public Response<CheckSystemServicesUpdatesAvailableResponse> checkSystemServicesUpdatesAvailableWithResponse(
        Context context) {
        return serviceManager
            .operationalizationClusters()
            .checkSystemServicesUpdatesAvailableWithResponse(resourceGroupName, clusterName, context);
    }

    public UpdateSystemServicesResponse updateSystemServices() {
        return serviceManager.operationalizationClusters().updateSystemServices(resourceGroupName, clusterName);
    }

    public UpdateSystemServicesResponse updateSystemServices(Context context) {
        return serviceManager
            .operationalizationClusters()
            .updateSystemServices(resourceGroupName, clusterName, context);
    }

    public OperationalizationClusterImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public OperationalizationClusterImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public OperationalizationClusterImpl withTags(Map<String, String> tags) {
        if (isInCreateMode()) {
            this.innerModel().withTags(tags);
            return this;
        } else {
            this.updateParameters.withTags(tags);
            return this;
        }
    }

    public OperationalizationClusterImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public OperationalizationClusterImpl withClusterType(ClusterType clusterType) {
        this.innerModel().withClusterType(clusterType);
        return this;
    }

    public OperationalizationClusterImpl withStorageAccount(StorageAccountProperties storageAccount) {
        this.innerModel().withStorageAccount(storageAccount);
        return this;
    }

    public OperationalizationClusterImpl withContainerRegistry(ContainerRegistryProperties containerRegistry) {
        this.innerModel().withContainerRegistry(containerRegistry);
        return this;
    }

    public OperationalizationClusterImpl withContainerService(AcsClusterProperties containerService) {
        this.innerModel().withContainerService(containerService);
        return this;
    }

    public OperationalizationClusterImpl withAppInsights(AppInsightsProperties appInsights) {
        this.innerModel().withAppInsights(appInsights);
        return this;
    }

    public OperationalizationClusterImpl withGlobalServiceConfiguration(
        GlobalServiceConfiguration globalServiceConfiguration) {
        this.innerModel().withGlobalServiceConfiguration(globalServiceConfiguration);
        return this;
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
