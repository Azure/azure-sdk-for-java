// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningcompute.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Information about the container service backing the cluster. */
@Fluent
public final class AcsClusterProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AcsClusterProperties.class);

    /*
     * The FQDN of the cluster.
     */
    @JsonProperty(value = "clusterFqdn", access = JsonProperty.Access.WRITE_ONLY)
    private String clusterFqdn;

    /*
     * Type of orchestrator. It cannot be changed once the cluster is created.
     */
    @JsonProperty(value = "orchestratorType", required = true)
    private OrchestratorType orchestratorType;

    /*
     * Orchestrator specific properties
     */
    @JsonProperty(value = "orchestratorProperties")
    private KubernetesClusterProperties orchestratorProperties;

    /*
     * The system services deployed to the cluster
     */
    @JsonProperty(value = "systemServices")
    private List<SystemService> systemServices;

    /*
     * The number of master nodes in the container service.
     */
    @JsonProperty(value = "masterCount")
    private Integer masterCount;

    /*
     * The number of agent nodes in the Container Service. This can be changed
     * to scale the cluster.
     */
    @JsonProperty(value = "agentCount")
    private Integer agentCount;

    /*
     * The Azure VM size of the agent VM nodes. This cannot be changed once the
     * cluster is created. This list is non exhaustive; refer to
     * https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes
     * for the possible VM sizes.
     */
    @JsonProperty(value = "agentVmSize")
    private AgentVMSizeTypes agentVmSize;

    /**
     * Get the clusterFqdn property: The FQDN of the cluster.
     *
     * @return the clusterFqdn value.
     */
    public String clusterFqdn() {
        return this.clusterFqdn;
    }

    /**
     * Get the orchestratorType property: Type of orchestrator. It cannot be changed once the cluster is created.
     *
     * @return the orchestratorType value.
     */
    public OrchestratorType orchestratorType() {
        return this.orchestratorType;
    }

    /**
     * Set the orchestratorType property: Type of orchestrator. It cannot be changed once the cluster is created.
     *
     * @param orchestratorType the orchestratorType value to set.
     * @return the AcsClusterProperties object itself.
     */
    public AcsClusterProperties withOrchestratorType(OrchestratorType orchestratorType) {
        this.orchestratorType = orchestratorType;
        return this;
    }

    /**
     * Get the orchestratorProperties property: Orchestrator specific properties.
     *
     * @return the orchestratorProperties value.
     */
    public KubernetesClusterProperties orchestratorProperties() {
        return this.orchestratorProperties;
    }

    /**
     * Set the orchestratorProperties property: Orchestrator specific properties.
     *
     * @param orchestratorProperties the orchestratorProperties value to set.
     * @return the AcsClusterProperties object itself.
     */
    public AcsClusterProperties withOrchestratorProperties(KubernetesClusterProperties orchestratorProperties) {
        this.orchestratorProperties = orchestratorProperties;
        return this;
    }

    /**
     * Get the systemServices property: The system services deployed to the cluster.
     *
     * @return the systemServices value.
     */
    public List<SystemService> systemServices() {
        return this.systemServices;
    }

    /**
     * Set the systemServices property: The system services deployed to the cluster.
     *
     * @param systemServices the systemServices value to set.
     * @return the AcsClusterProperties object itself.
     */
    public AcsClusterProperties withSystemServices(List<SystemService> systemServices) {
        this.systemServices = systemServices;
        return this;
    }

    /**
     * Get the masterCount property: The number of master nodes in the container service.
     *
     * @return the masterCount value.
     */
    public Integer masterCount() {
        return this.masterCount;
    }

    /**
     * Set the masterCount property: The number of master nodes in the container service.
     *
     * @param masterCount the masterCount value to set.
     * @return the AcsClusterProperties object itself.
     */
    public AcsClusterProperties withMasterCount(Integer masterCount) {
        this.masterCount = masterCount;
        return this;
    }

    /**
     * Get the agentCount property: The number of agent nodes in the Container Service. This can be changed to scale the
     * cluster.
     *
     * @return the agentCount value.
     */
    public Integer agentCount() {
        return this.agentCount;
    }

    /**
     * Set the agentCount property: The number of agent nodes in the Container Service. This can be changed to scale the
     * cluster.
     *
     * @param agentCount the agentCount value to set.
     * @return the AcsClusterProperties object itself.
     */
    public AcsClusterProperties withAgentCount(Integer agentCount) {
        this.agentCount = agentCount;
        return this;
    }

    /**
     * Get the agentVmSize property: The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is
     * created. This list is non exhaustive; refer to
     * https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes for the possible VM sizes.
     *
     * @return the agentVmSize value.
     */
    public AgentVMSizeTypes agentVmSize() {
        return this.agentVmSize;
    }

    /**
     * Set the agentVmSize property: The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is
     * created. This list is non exhaustive; refer to
     * https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes for the possible VM sizes.
     *
     * @param agentVmSize the agentVmSize value to set.
     * @return the AcsClusterProperties object itself.
     */
    public AcsClusterProperties withAgentVmSize(AgentVMSizeTypes agentVmSize) {
        this.agentVmSize = agentVmSize;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (orchestratorType() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property orchestratorType in model AcsClusterProperties"));
        }
        if (orchestratorProperties() != null) {
            orchestratorProperties().validate();
        }
        if (systemServices() != null) {
            systemServices().forEach(e -> e.validate());
        }
    }
}
