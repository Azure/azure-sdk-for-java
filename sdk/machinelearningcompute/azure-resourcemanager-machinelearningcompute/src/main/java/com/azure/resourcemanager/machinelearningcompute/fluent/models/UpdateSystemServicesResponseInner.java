// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningcompute.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.machinelearningcompute.models.OperationStatus;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/** Response of the update system services API. */
@Immutable
public final class UpdateSystemServicesResponseInner {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(UpdateSystemServicesResponseInner.class);

    /*
     * Update status
     */
    @JsonProperty(value = "updateStatus", access = JsonProperty.Access.WRITE_ONLY)
    private OperationStatus updateStatus;

    /*
     * The date and time when the last system services update was started.
     */
    @JsonProperty(value = "updateStartedOn", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime updateStartedOn;

    /*
     * The date and time when the last system services update completed.
     */
    @JsonProperty(value = "updateCompletedOn", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime updateCompletedOn;

    /**
     * Get the updateStatus property: Update status.
     *
     * @return the updateStatus value.
     */
    public OperationStatus updateStatus() {
        return this.updateStatus;
    }

    /**
     * Get the updateStartedOn property: The date and time when the last system services update was started.
     *
     * @return the updateStartedOn value.
     */
    public OffsetDateTime updateStartedOn() {
        return this.updateStartedOn;
    }

    /**
     * Get the updateCompletedOn property: The date and time when the last system services update completed.
     *
     * @return the updateCompletedOn value.
     */
    public OffsetDateTime updateCompletedOn() {
        return this.updateCompletedOn;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
