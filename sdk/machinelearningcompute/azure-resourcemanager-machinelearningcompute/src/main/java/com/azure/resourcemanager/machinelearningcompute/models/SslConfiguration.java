// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningcompute.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** SSL configuration. If configured data-plane calls to user services will be exposed over SSL only. */
@Fluent
public final class SslConfiguration {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(SslConfiguration.class);

    /*
     * SSL status. Allowed values are Enabled and Disabled.
     */
    @JsonProperty(value = "status")
    private Status status;

    /*
     * The SSL cert data in PEM format.
     */
    @JsonProperty(value = "cert")
    private String cert;

    /*
     * The SSL key data in PEM format. This is not returned in response of
     * GET/PUT on the resource. To see this please call listKeys API.
     */
    @JsonProperty(value = "key")
    private String key;

    /*
     * The CName of the certificate.
     */
    @JsonProperty(value = "cname")
    private String cname;

    /**
     * Get the status property: SSL status. Allowed values are Enabled and Disabled.
     *
     * @return the status value.
     */
    public Status status() {
        return this.status;
    }

    /**
     * Set the status property: SSL status. Allowed values are Enabled and Disabled.
     *
     * @param status the status value to set.
     * @return the SslConfiguration object itself.
     */
    public SslConfiguration withStatus(Status status) {
        this.status = status;
        return this;
    }

    /**
     * Get the cert property: The SSL cert data in PEM format.
     *
     * @return the cert value.
     */
    public String cert() {
        return this.cert;
    }

    /**
     * Set the cert property: The SSL cert data in PEM format.
     *
     * @param cert the cert value to set.
     * @return the SslConfiguration object itself.
     */
    public SslConfiguration withCert(String cert) {
        this.cert = cert;
        return this;
    }

    /**
     * Get the key property: The SSL key data in PEM format. This is not returned in response of GET/PUT on the
     * resource. To see this please call listKeys API.
     *
     * @return the key value.
     */
    public String key() {
        return this.key;
    }

    /**
     * Set the key property: The SSL key data in PEM format. This is not returned in response of GET/PUT on the
     * resource. To see this please call listKeys API.
     *
     * @param key the key value to set.
     * @return the SslConfiguration object itself.
     */
    public SslConfiguration withKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Get the cname property: The CName of the certificate.
     *
     * @return the cname value.
     */
    public String cname() {
        return this.cname;
    }

    /**
     * Set the cname property: The CName of the certificate.
     *
     * @param cname the cname value to set.
     * @return the SslConfiguration object itself.
     */
    public SslConfiguration withCname(String cname) {
        this.cname = cname;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
