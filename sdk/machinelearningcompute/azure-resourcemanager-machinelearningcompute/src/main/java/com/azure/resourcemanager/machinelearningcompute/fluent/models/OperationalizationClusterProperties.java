// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningcompute.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.exception.ManagementError;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.machinelearningcompute.models.AcsClusterProperties;
import com.azure.resourcemanager.machinelearningcompute.models.AppInsightsProperties;
import com.azure.resourcemanager.machinelearningcompute.models.ClusterType;
import com.azure.resourcemanager.machinelearningcompute.models.ContainerRegistryProperties;
import com.azure.resourcemanager.machinelearningcompute.models.GlobalServiceConfiguration;
import com.azure.resourcemanager.machinelearningcompute.models.OperationStatus;
import com.azure.resourcemanager.machinelearningcompute.models.StorageAccountProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** Properties of an operationalization cluster. */
@Fluent
public final class OperationalizationClusterProperties {
    /*
     * The description of the cluster.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * The date and time when the cluster was created.
     */
    @JsonProperty(value = "createdOn", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime createdOn;

    /*
     * The date and time when the cluster was last modified.
     */
    @JsonProperty(value = "modifiedOn", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime modifiedOn;

    /*
     * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning, Succeeded, and Failed.
     */
    @JsonProperty(value = "provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private OperationStatus provisioningState;

    /*
     * List of provisioning errors reported by the resource provider.
     */
    @JsonProperty(value = "provisioningErrors", access = JsonProperty.Access.WRITE_ONLY)
    private List<ManagementError> provisioningErrors;

    /*
     * The cluster type.
     */
    @JsonProperty(value = "clusterType", required = true)
    private ClusterType clusterType;

    /*
     * Storage Account properties.
     */
    @JsonProperty(value = "storageAccount")
    private StorageAccountProperties storageAccount;

    /*
     * Container Registry properties.
     */
    @JsonProperty(value = "containerRegistry")
    private ContainerRegistryProperties containerRegistry;

    /*
     * Parameters for the Azure Container Service cluster.
     */
    @JsonProperty(value = "containerService")
    private AcsClusterProperties containerService;

    /*
     * AppInsights configuration.
     */
    @JsonProperty(value = "appInsights")
    private AppInsightsProperties appInsights;

    /*
     * Contains global configuration for the web services in the cluster.
     */
    @JsonProperty(value = "globalServiceConfiguration")
    private GlobalServiceConfiguration globalServiceConfiguration;

    /** Creates an instance of OperationalizationClusterProperties class. */
    public OperationalizationClusterProperties() {
    }

    /**
     * Get the description property: The description of the cluster.
     *
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The description of the cluster.
     *
     * @param description the description value to set.
     * @return the OperationalizationClusterProperties object itself.
     */
    public OperationalizationClusterProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the createdOn property: The date and time when the cluster was created.
     *
     * @return the createdOn value.
     */
    public OffsetDateTime createdOn() {
        return this.createdOn;
    }

    /**
     * Get the modifiedOn property: The date and time when the cluster was last modified.
     *
     * @return the modifiedOn value.
     */
    public OffsetDateTime modifiedOn() {
        return this.modifiedOn;
    }

    /**
     * Get the provisioningState property: The provision state of the cluster. Valid values are Unknown, Updating,
     * Provisioning, Succeeded, and Failed.
     *
     * @return the provisioningState value.
     */
    public OperationStatus provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the provisioningErrors property: List of provisioning errors reported by the resource provider.
     *
     * @return the provisioningErrors value.
     */
    public List<ManagementError> provisioningErrors() {
        return this.provisioningErrors;
    }

    /**
     * Get the clusterType property: The cluster type.
     *
     * @return the clusterType value.
     */
    public ClusterType clusterType() {
        return this.clusterType;
    }

    /**
     * Set the clusterType property: The cluster type.
     *
     * @param clusterType the clusterType value to set.
     * @return the OperationalizationClusterProperties object itself.
     */
    public OperationalizationClusterProperties withClusterType(ClusterType clusterType) {
        this.clusterType = clusterType;
        return this;
    }

    /**
     * Get the storageAccount property: Storage Account properties.
     *
     * @return the storageAccount value.
     */
    public StorageAccountProperties storageAccount() {
        return this.storageAccount;
    }

    /**
     * Set the storageAccount property: Storage Account properties.
     *
     * @param storageAccount the storageAccount value to set.
     * @return the OperationalizationClusterProperties object itself.
     */
    public OperationalizationClusterProperties withStorageAccount(StorageAccountProperties storageAccount) {
        this.storageAccount = storageAccount;
        return this;
    }

    /**
     * Get the containerRegistry property: Container Registry properties.
     *
     * @return the containerRegistry value.
     */
    public ContainerRegistryProperties containerRegistry() {
        return this.containerRegistry;
    }

    /**
     * Set the containerRegistry property: Container Registry properties.
     *
     * @param containerRegistry the containerRegistry value to set.
     * @return the OperationalizationClusterProperties object itself.
     */
    public OperationalizationClusterProperties withContainerRegistry(ContainerRegistryProperties containerRegistry) {
        this.containerRegistry = containerRegistry;
        return this;
    }

    /**
     * Get the containerService property: Parameters for the Azure Container Service cluster.
     *
     * @return the containerService value.
     */
    public AcsClusterProperties containerService() {
        return this.containerService;
    }

    /**
     * Set the containerService property: Parameters for the Azure Container Service cluster.
     *
     * @param containerService the containerService value to set.
     * @return the OperationalizationClusterProperties object itself.
     */
    public OperationalizationClusterProperties withContainerService(AcsClusterProperties containerService) {
        this.containerService = containerService;
        return this;
    }

    /**
     * Get the appInsights property: AppInsights configuration.
     *
     * @return the appInsights value.
     */
    public AppInsightsProperties appInsights() {
        return this.appInsights;
    }

    /**
     * Set the appInsights property: AppInsights configuration.
     *
     * @param appInsights the appInsights value to set.
     * @return the OperationalizationClusterProperties object itself.
     */
    public OperationalizationClusterProperties withAppInsights(AppInsightsProperties appInsights) {
        this.appInsights = appInsights;
        return this;
    }

    /**
     * Get the globalServiceConfiguration property: Contains global configuration for the web services in the cluster.
     *
     * @return the globalServiceConfiguration value.
     */
    public GlobalServiceConfiguration globalServiceConfiguration() {
        return this.globalServiceConfiguration;
    }

    /**
     * Set the globalServiceConfiguration property: Contains global configuration for the web services in the cluster.
     *
     * @param globalServiceConfiguration the globalServiceConfiguration value to set.
     * @return the OperationalizationClusterProperties object itself.
     */
    public OperationalizationClusterProperties withGlobalServiceConfiguration(
        GlobalServiceConfiguration globalServiceConfiguration) {
        this.globalServiceConfiguration = globalServiceConfiguration;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (clusterType() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property clusterType in model OperationalizationClusterProperties"));
        }
        if (storageAccount() != null) {
            storageAccount().validate();
        }
        if (containerRegistry() != null) {
            containerRegistry().validate();
        }
        if (containerService() != null) {
            containerService().validate();
        }
        if (appInsights() != null) {
            appInsights().validate();
        }
        if (globalServiceConfiguration() != null) {
            globalServiceConfiguration().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(OperationalizationClusterProperties.class);
}
