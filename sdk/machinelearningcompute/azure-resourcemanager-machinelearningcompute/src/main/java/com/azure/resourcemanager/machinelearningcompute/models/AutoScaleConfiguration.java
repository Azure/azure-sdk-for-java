// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.machinelearningcompute.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** AutoScale configuration properties. */
@Fluent
public final class AutoScaleConfiguration {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AutoScaleConfiguration.class);

    /*
     * If auto-scale is enabled for all services. Each service can turn it off
     * individually.
     */
    @JsonProperty(value = "status")
    private Status status;

    /*
     * The minimum number of replicas for each service.
     */
    @JsonProperty(value = "minReplicas")
    private Integer minReplicas;

    /*
     * The maximum number of replicas for each service.
     */
    @JsonProperty(value = "maxReplicas")
    private Integer maxReplicas;

    /*
     * The target utilization.
     */
    @JsonProperty(value = "targetUtilization")
    private Float targetUtilization;

    /*
     * Refresh period in seconds.
     */
    @JsonProperty(value = "refreshPeriodInSeconds")
    private Integer refreshPeriodInSeconds;

    /**
     * Get the status property: If auto-scale is enabled for all services. Each service can turn it off individually.
     *
     * @return the status value.
     */
    public Status status() {
        return this.status;
    }

    /**
     * Set the status property: If auto-scale is enabled for all services. Each service can turn it off individually.
     *
     * @param status the status value to set.
     * @return the AutoScaleConfiguration object itself.
     */
    public AutoScaleConfiguration withStatus(Status status) {
        this.status = status;
        return this;
    }

    /**
     * Get the minReplicas property: The minimum number of replicas for each service.
     *
     * @return the minReplicas value.
     */
    public Integer minReplicas() {
        return this.minReplicas;
    }

    /**
     * Set the minReplicas property: The minimum number of replicas for each service.
     *
     * @param minReplicas the minReplicas value to set.
     * @return the AutoScaleConfiguration object itself.
     */
    public AutoScaleConfiguration withMinReplicas(Integer minReplicas) {
        this.minReplicas = minReplicas;
        return this;
    }

    /**
     * Get the maxReplicas property: The maximum number of replicas for each service.
     *
     * @return the maxReplicas value.
     */
    public Integer maxReplicas() {
        return this.maxReplicas;
    }

    /**
     * Set the maxReplicas property: The maximum number of replicas for each service.
     *
     * @param maxReplicas the maxReplicas value to set.
     * @return the AutoScaleConfiguration object itself.
     */
    public AutoScaleConfiguration withMaxReplicas(Integer maxReplicas) {
        this.maxReplicas = maxReplicas;
        return this;
    }

    /**
     * Get the targetUtilization property: The target utilization.
     *
     * @return the targetUtilization value.
     */
    public Float targetUtilization() {
        return this.targetUtilization;
    }

    /**
     * Set the targetUtilization property: The target utilization.
     *
     * @param targetUtilization the targetUtilization value to set.
     * @return the AutoScaleConfiguration object itself.
     */
    public AutoScaleConfiguration withTargetUtilization(Float targetUtilization) {
        this.targetUtilization = targetUtilization;
        return this;
    }

    /**
     * Get the refreshPeriodInSeconds property: Refresh period in seconds.
     *
     * @return the refreshPeriodInSeconds value.
     */
    public Integer refreshPeriodInSeconds() {
        return this.refreshPeriodInSeconds;
    }

    /**
     * Set the refreshPeriodInSeconds property: Refresh period in seconds.
     *
     * @param refreshPeriodInSeconds the refreshPeriodInSeconds value to set.
     * @return the AutoScaleConfiguration object itself.
     */
    public AutoScaleConfiguration withRefreshPeriodInSeconds(Integer refreshPeriodInSeconds) {
        this.refreshPeriodInSeconds = refreshPeriodInSeconds;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
