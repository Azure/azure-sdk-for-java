// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.fabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.fabric.FabricManager;
import com.azure.resourcemanager.fabric.models.PagedQuota;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FabricCapacitiesListUsagesWithResponseMockTests {
    @Test
    public void testListUsagesWithResponse() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":{\"value\":\"gual\",\"localizedValue\":\"xxhejjzzvd\"},\"unit\":\"dgwdslfhot\",\"currentValue\":3195177507284571701,\"limit\":7606829911936395537}],\"nextLink\":\"wlbjnpgacftade\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        FabricManager manager = FabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedQuota response
            = manager.fabricCapacities().listUsagesWithResponse("zj", com.azure.core.util.Context.NONE).getValue();

        Assertions.assertEquals("dgwdslfhot", response.value().get(0).unit());
        Assertions.assertEquals(3195177507284571701L, response.value().get(0).currentValue());
        Assertions.assertEquals(7606829911936395537L, response.value().get(0).limit());
        Assertions.assertEquals("wlbjnpgacftade", response.nextLink());
    }
}
