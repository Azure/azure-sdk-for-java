// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.fabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.fabric.FabricManager;
import com.azure.resourcemanager.fabric.models.FabricCapacity;
import com.azure.resourcemanager.fabric.models.RpSkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FabricCapacitiesListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Succeeded\",\"state\":\"Suspended\",\"administration\":{\"members\":[\"vswjdk\",\"rsoodqxhcrmnoh\",\"t\"]}},\"sku\":{\"name\":\"kwh\",\"tier\":\"Fabric\"},\"location\":\"ifiyipjxsqwpgrj\",\"tags\":{\"qabnmoc\":\"orcjxvsnby\",\"toqcjmklja\":\"cyshurzafbljjgp\",\"yulpkudjkr\":\"bqidtqaj\",\"e\":\"khbzhfepgzg\"},\"id\":\"zloc\",\"name\":\"scpai\",\"type\":\"rhhbcs\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        FabricManager manager = FabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<FabricCapacity> response
            = manager.fabricCapacities().listByResourceGroup("pyqr", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("ifiyipjxsqwpgrj", response.iterator().next().location());
        Assertions.assertEquals("orcjxvsnby", response.iterator().next().tags().get("qabnmoc"));
        Assertions.assertEquals("kwh", response.iterator().next().sku().name());
        Assertions.assertEquals(RpSkuTier.FABRIC, response.iterator().next().sku().tier());
        Assertions.assertEquals("vswjdk", response.iterator().next().administration().members().get(0));
    }
}
