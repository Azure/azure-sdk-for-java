// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.fabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.fabric.fluent.models.RpSkuDetailsForExistingResourceInner;
import com.azure.resourcemanager.fabric.models.RpSku;
import com.azure.resourcemanager.fabric.models.RpSkuEnumerationForExistingResourceResult;
import com.azure.resourcemanager.fabric.models.RpSkuTier;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RpSkuEnumerationForExistingResourceResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RpSkuEnumerationForExistingResourceResult model = BinaryData.fromString(
            "{\"value\":[{\"resourceType\":\"hejkotynqgou\",\"sku\":{\"name\":\"zndlikwy\",\"tier\":\"Fabric\"}},{\"resourceType\":\"gfgibm\",\"sku\":{\"name\":\"dgak\",\"tier\":\"Fabric\"}},{\"resourceType\":\"s\",\"sku\":{\"name\":\"xybz\",\"tier\":\"Fabric\"}},{\"resourceType\":\"e\",\"sku\":{\"name\":\"qytbciq\",\"tier\":\"Fabric\"}}],\"nextLink\":\"flmmnk\"}")
            .toObject(RpSkuEnumerationForExistingResourceResult.class);
        Assertions.assertEquals("hejkotynqgou", model.value().get(0).resourceType());
        Assertions.assertEquals("zndlikwy", model.value().get(0).sku().name());
        Assertions.assertEquals(RpSkuTier.FABRIC, model.value().get(0).sku().tier());
        Assertions.assertEquals("flmmnk", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RpSkuEnumerationForExistingResourceResult model
            = new RpSkuEnumerationForExistingResourceResult().withValue(Arrays.asList(
                new RpSkuDetailsForExistingResourceInner().withResourceType("hejkotynqgou")
                    .withSku(new RpSku().withName("zndlikwy").withTier(RpSkuTier.FABRIC)),
                new RpSkuDetailsForExistingResourceInner().withResourceType("gfgibm")
                    .withSku(new RpSku().withName("dgak").withTier(RpSkuTier.FABRIC)),
                new RpSkuDetailsForExistingResourceInner().withResourceType("s")
                    .withSku(new RpSku().withName("xybz").withTier(RpSkuTier.FABRIC)),
                new RpSkuDetailsForExistingResourceInner().withResourceType("e")
                    .withSku(new RpSku().withName("qytbciq").withTier(RpSkuTier.FABRIC))))
                .withNextLink("flmmnk");
        model = BinaryData.fromObject(model).toObject(RpSkuEnumerationForExistingResourceResult.class);
        Assertions.assertEquals("hejkotynqgou", model.value().get(0).resourceType());
        Assertions.assertEquals("zndlikwy", model.value().get(0).sku().name());
        Assertions.assertEquals(RpSkuTier.FABRIC, model.value().get(0).sku().tier());
        Assertions.assertEquals("flmmnk", model.nextLink());
    }
}
