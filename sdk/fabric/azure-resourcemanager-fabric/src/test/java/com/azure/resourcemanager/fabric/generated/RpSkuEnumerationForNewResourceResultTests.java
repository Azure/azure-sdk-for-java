// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.fabric.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.fabric.fluent.models.RpSkuDetailsForNewResourceInner;
import com.azure.resourcemanager.fabric.models.RpSkuEnumerationForNewResourceResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class RpSkuEnumerationForNewResourceResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        RpSkuEnumerationForNewResourceResult model = BinaryData.fromString(
            "{\"value\":[{\"resourceType\":\"nuvamiheogna\",\"name\":\"xzxtheo\",\"locations\":[\"si\",\"yevc\"]},{\"resourceType\":\"iqihn\",\"name\":\"un\",\"locations\":[\"wjzrnfygxgisp\",\"mvtzfkufub\"]},{\"resourceType\":\"jofxqe\",\"name\":\"fjaeq\",\"locations\":[\"qjbasvms\",\"jqul\",\"gsntnbybkzgcwr\"]}],\"nextLink\":\"lxxwrljdouskc\"}")
            .toObject(RpSkuEnumerationForNewResourceResult.class);
        Assertions.assertEquals("nuvamiheogna", model.value().get(0).resourceType());
        Assertions.assertEquals("xzxtheo", model.value().get(0).name());
        Assertions.assertEquals("si", model.value().get(0).locations().get(0));
        Assertions.assertEquals("lxxwrljdouskc", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        RpSkuEnumerationForNewResourceResult model
            = new RpSkuEnumerationForNewResourceResult()
                .withValue(Arrays.asList(
                    new RpSkuDetailsForNewResourceInner().withResourceType("nuvamiheogna")
                        .withName("xzxtheo")
                        .withLocations(Arrays.asList("si", "yevc")),
                    new RpSkuDetailsForNewResourceInner().withResourceType("iqihn")
                        .withName("un")
                        .withLocations(Arrays.asList("wjzrnfygxgisp", "mvtzfkufub")),
                    new RpSkuDetailsForNewResourceInner().withResourceType("jofxqe")
                        .withName("fjaeq")
                        .withLocations(Arrays.asList("qjbasvms", "jqul", "gsntnbybkzgcwr"))))
                .withNextLink("lxxwrljdouskc");
        model = BinaryData.fromObject(model).toObject(RpSkuEnumerationForNewResourceResult.class);
        Assertions.assertEquals("nuvamiheogna", model.value().get(0).resourceType());
        Assertions.assertEquals("xzxtheo", model.value().get(0).name());
        Assertions.assertEquals("si", model.value().get(0).locations().get(0));
        Assertions.assertEquals("lxxwrljdouskc", model.nextLink());
    }
}
