// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.fabric.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.fabric.FabricManager;
import com.azure.resourcemanager.fabric.models.RpSkuDetailsForNewResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FabricCapacitiesListSkusMockTests {
    @Test
    public void testListSkus() throws Exception {
        String responseStr
            = "{\"value\":[{\"resourceType\":\"thz\",\"name\":\"vqdra\",\"locations\":[\"jybige\",\"oqfbowskanyk\",\"zlcuiywgqywgndrv\",\"nhzgpphrcgyn\"]}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        FabricManager manager = FabricManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<RpSkuDetailsForNewResource> response
            = manager.fabricCapacities().listSkus(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("thz", response.iterator().next().resourceType());
        Assertions.assertEquals("vqdra", response.iterator().next().name());
        Assertions.assertEquals("jybige", response.iterator().next().locations().get(0));
    }
}
