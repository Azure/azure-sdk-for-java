// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.fabric.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.management.polling.PollResult;
import com.azure.core.util.Context;
import com.azure.core.util.polling.SyncPoller;
import com.azure.resourcemanager.fabric.fluent.models.CheckNameAvailabilityResponseInner;
import com.azure.resourcemanager.fabric.fluent.models.FabricCapacityInner;
import com.azure.resourcemanager.fabric.fluent.models.RpSkuDetailsForExistingResourceInner;
import com.azure.resourcemanager.fabric.fluent.models.RpSkuDetailsForNewResourceInner;
import com.azure.resourcemanager.fabric.models.CheckNameAvailabilityRequest;
import com.azure.resourcemanager.fabric.models.FabricCapacityUpdate;

/**
 * An instance of this class provides access to all the operations defined in FabricCapacitiesClient.
 */
public interface FabricCapacitiesClient {
    /**
     * Get a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a FabricCapacity along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<FabricCapacityInner> getByResourceGroupWithResponse(String resourceGroupName, String capacityName,
        Context context);

    /**
     * Get a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a FabricCapacity.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FabricCapacityInner getByResourceGroup(String resourceGroupName, String capacityName);

    /**
     * Create a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of fabric Capacity resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FabricCapacityInner>, FabricCapacityInner> beginCreateOrUpdate(String resourceGroupName,
        String capacityName, FabricCapacityInner resource);

    /**
     * Create a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of fabric Capacity resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FabricCapacityInner>, FabricCapacityInner> beginCreateOrUpdate(String resourceGroupName,
        String capacityName, FabricCapacityInner resource, Context context);

    /**
     * Create a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric Capacity resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FabricCapacityInner createOrUpdate(String resourceGroupName, String capacityName, FabricCapacityInner resource);

    /**
     * Create a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric Capacity resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FabricCapacityInner createOrUpdate(String resourceGroupName, String capacityName, FabricCapacityInner resource,
        Context context);

    /**
     * Update a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of fabric Capacity resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FabricCapacityInner>, FabricCapacityInner> beginUpdate(String resourceGroupName,
        String capacityName, FabricCapacityUpdate properties);

    /**
     * Update a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of fabric Capacity resource.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<FabricCapacityInner>, FabricCapacityInner> beginUpdate(String resourceGroupName,
        String capacityName, FabricCapacityUpdate properties, Context context);

    /**
     * Update a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param properties The resource properties to be updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric Capacity resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FabricCapacityInner update(String resourceGroupName, String capacityName, FabricCapacityUpdate properties);

    /**
     * Update a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param properties The resource properties to be updated.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return fabric Capacity resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    FabricCapacityInner update(String resourceGroupName, String capacityName, FabricCapacityUpdate properties,
        Context context);

    /**
     * Delete a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String capacityName);

    /**
     * Delete a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginDelete(String resourceGroupName, String capacityName, Context context);

    /**
     * Delete a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String capacityName);

    /**
     * Delete a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String capacityName, Context context);

    /**
     * List FabricCapacity resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a FabricCapacity list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<FabricCapacityInner> listByResourceGroup(String resourceGroupName);

    /**
     * List FabricCapacity resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a FabricCapacity list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<FabricCapacityInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List FabricCapacity resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a FabricCapacity list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<FabricCapacityInner> list();

    /**
     * List FabricCapacity resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a FabricCapacity list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<FabricCapacityInner> list(Context context);

    /**
     * Resume operation of the specified Fabric capacity instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginResume(String resourceGroupName, String capacityName);

    /**
     * Resume operation of the specified Fabric capacity instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginResume(String resourceGroupName, String capacityName, Context context);

    /**
     * Resume operation of the specified Fabric capacity instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void resume(String resourceGroupName, String capacityName);

    /**
     * Resume operation of the specified Fabric capacity instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void resume(String resourceGroupName, String capacityName, Context context);

    /**
     * Suspend operation of the specified Fabric capacity instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginSuspend(String resourceGroupName, String capacityName);

    /**
     * Suspend operation of the specified Fabric capacity instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link SyncPoller} for polling of long-running operation.
     */
    @ServiceMethod(returns = ReturnType.LONG_RUNNING_OPERATION)
    SyncPoller<PollResult<Void>, Void> beginSuspend(String resourceGroupName, String capacityName, Context context);

    /**
     * Suspend operation of the specified Fabric capacity instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void suspend(String resourceGroupName, String capacityName);

    /**
     * Suspend operation of the specified Fabric capacity instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void suspend(String resourceGroupName, String capacityName, Context context);

    /**
     * Implements local CheckNameAvailability operations.
     * 
     * @param location The name of the Azure region.
     * @param body The CheckAvailability request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the check availability result along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<CheckNameAvailabilityResponseInner> checkNameAvailabilityWithResponse(String location,
        CheckNameAvailabilityRequest body, Context context);

    /**
     * Implements local CheckNameAvailability operations.
     * 
     * @param location The name of the Azure region.
     * @param body The CheckAvailability request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the check availability result.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    CheckNameAvailabilityResponseInner checkNameAvailability(String location, CheckNameAvailabilityRequest body);

    /**
     * List eligible SKUs for a Microsoft Fabric resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the capacity.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an object that represents enumerating SKUs for existing resources as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RpSkuDetailsForExistingResourceInner> listSkusForCapacity(String resourceGroupName,
        String capacityName);

    /**
     * List eligible SKUs for a Microsoft Fabric resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the capacity.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an object that represents enumerating SKUs for existing resources as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RpSkuDetailsForExistingResourceInner> listSkusForCapacity(String resourceGroupName,
        String capacityName, Context context);

    /**
     * List eligible SKUs for Microsoft Fabric resource provider.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an object that represents enumerating SKUs for new resources as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RpSkuDetailsForNewResourceInner> listSkus();

    /**
     * List eligible SKUs for Microsoft Fabric resource provider.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an object that represents enumerating SKUs for new resources as paginated response with
     * {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<RpSkuDetailsForNewResourceInner> listSkus(Context context);
}
