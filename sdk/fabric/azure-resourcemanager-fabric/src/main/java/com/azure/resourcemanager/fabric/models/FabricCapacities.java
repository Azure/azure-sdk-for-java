// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.fabric.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of FabricCapacities.
 */
public interface FabricCapacities {
    /**
     * Get a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a FabricCapacity along with {@link Response}.
     */
    Response<FabricCapacity> getByResourceGroupWithResponse(String resourceGroupName, String capacityName,
        Context context);

    /**
     * Get a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a FabricCapacity.
     */
    FabricCapacity getByResourceGroup(String resourceGroupName, String capacityName);

    /**
     * Delete a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String capacityName);

    /**
     * Delete a FabricCapacity.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void delete(String resourceGroupName, String capacityName, Context context);

    /**
     * List FabricCapacity resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a FabricCapacity list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<FabricCapacity> listByResourceGroup(String resourceGroupName);

    /**
     * List FabricCapacity resources by resource group.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a FabricCapacity list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<FabricCapacity> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * List FabricCapacity resources by subscription ID.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a FabricCapacity list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<FabricCapacity> list();

    /**
     * List FabricCapacity resources by subscription ID.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a FabricCapacity list operation as paginated response with {@link PagedIterable}.
     */
    PagedIterable<FabricCapacity> list(Context context);

    /**
     * Resume operation of the specified Fabric capacity instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void resume(String resourceGroupName, String capacityName);

    /**
     * Resume operation of the specified Fabric capacity instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void resume(String resourceGroupName, String capacityName, Context context);

    /**
     * Suspend operation of the specified Fabric capacity instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void suspend(String resourceGroupName, String capacityName);

    /**
     * Suspend operation of the specified Fabric capacity instance.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the Microsoft Fabric capacity. It must be a minimum of 3 characters, and a
     * maximum of 63.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void suspend(String resourceGroupName, String capacityName, Context context);

    /**
     * Implements local CheckNameAvailability operations.
     * 
     * @param location The name of the Azure region.
     * @param body The CheckAvailability request.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the check availability result along with {@link Response}.
     */
    Response<CheckNameAvailabilityResponse> checkNameAvailabilityWithResponse(String location,
        CheckNameAvailabilityRequest body, Context context);

    /**
     * Implements local CheckNameAvailability operations.
     * 
     * @param location The name of the Azure region.
     * @param body The CheckAvailability request.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the check availability result.
     */
    CheckNameAvailabilityResponse checkNameAvailability(String location, CheckNameAvailabilityRequest body);

    /**
     * List eligible SKUs for a Microsoft Fabric resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the capacity.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an object that represents enumerating SKUs for existing resources as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<RpSkuDetailsForExistingResource> listSkusForCapacity(String resourceGroupName, String capacityName);

    /**
     * List eligible SKUs for a Microsoft Fabric resource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param capacityName The name of the capacity.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an object that represents enumerating SKUs for existing resources as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<RpSkuDetailsForExistingResource> listSkusForCapacity(String resourceGroupName, String capacityName,
        Context context);

    /**
     * List eligible SKUs for Microsoft Fabric resource provider.
     * 
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an object that represents enumerating SKUs for new resources as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<RpSkuDetailsForNewResource> listSkus();

    /**
     * List eligible SKUs for Microsoft Fabric resource provider.
     * 
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an object that represents enumerating SKUs for new resources as paginated response with
     * {@link PagedIterable}.
     */
    PagedIterable<RpSkuDetailsForNewResource> listSkus(Context context);

    /**
     * Get a FabricCapacity.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a FabricCapacity along with {@link Response}.
     */
    FabricCapacity getById(String id);

    /**
     * Get a FabricCapacity.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a FabricCapacity along with {@link Response}.
     */
    Response<FabricCapacity> getByIdWithResponse(String id, Context context);

    /**
     * Delete a FabricCapacity.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a FabricCapacity.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new FabricCapacity resource.
     * 
     * @param name resource name.
     * @return the first stage of the new FabricCapacity definition.
     */
    FabricCapacity.DefinitionStages.Blank define(String name);
}
