// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmesh.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/** Describes parameters for creating application-scoped volumes provided by Service Fabric Volume Disks. */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("ServiceFabricVolumeDisk")
@Fluent
public final class ApplicationScopedVolumeCreationParametersServiceFabricVolumeDisk
    extends ApplicationScopedVolumeCreationParameters {
    @JsonIgnore
    private final ClientLogger logger =
        new ClientLogger(ApplicationScopedVolumeCreationParametersServiceFabricVolumeDisk.class);

    /*
     * Volume size
     */
    @JsonProperty(value = "sizeDisk", required = true)
    private SizeTypes sizeDisk;

    /**
     * Get the sizeDisk property: Volume size.
     *
     * @return the sizeDisk value.
     */
    public SizeTypes sizeDisk() {
        return this.sizeDisk;
    }

    /**
     * Set the sizeDisk property: Volume size.
     *
     * @param sizeDisk the sizeDisk value to set.
     * @return the ApplicationScopedVolumeCreationParametersServiceFabricVolumeDisk object itself.
     */
    public ApplicationScopedVolumeCreationParametersServiceFabricVolumeDisk withSizeDisk(SizeTypes sizeDisk) {
        this.sizeDisk = sizeDisk;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ApplicationScopedVolumeCreationParametersServiceFabricVolumeDisk withDescription(String description) {
        super.withDescription(description);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (sizeDisk() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property sizeDisk in model"
                            + " ApplicationScopedVolumeCreationParametersServiceFabricVolumeDisk"));
        }
    }
}
