// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmesh.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.servicefabricmesh.fluent.models.ApplicationResourceDescriptionInner;
import com.azure.resourcemanager.servicefabricmesh.fluent.models.ServiceResourceDescriptionInner;
import com.azure.resourcemanager.servicefabricmesh.models.ApplicationResourceDescription;
import com.azure.resourcemanager.servicefabricmesh.models.DiagnosticsDescription;
import com.azure.resourcemanager.servicefabricmesh.models.HealthState;
import com.azure.resourcemanager.servicefabricmesh.models.ResourceStatus;
import com.azure.resourcemanager.servicefabricmesh.models.ServiceResourceDescription;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public final class ApplicationResourceDescriptionImpl
    implements ApplicationResourceDescription, ApplicationResourceDescription.Definition {
    private ApplicationResourceDescriptionInner innerObject;

    private final com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager serviceManager;

    ApplicationResourceDescriptionImpl(
        ApplicationResourceDescriptionInner innerObject,
        com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String description() {
        return this.innerModel().description();
    }

    public List<ServiceResourceDescription> services() {
        List<ServiceResourceDescriptionInner> inner = this.innerModel().services();
        if (inner != null) {
            return Collections
                .unmodifiableList(
                    inner
                        .stream()
                        .map(inner1 -> new ServiceResourceDescriptionImpl(inner1, this.manager()))
                        .collect(Collectors.toList()));
        } else {
            return Collections.emptyList();
        }
    }

    public DiagnosticsDescription diagnostics() {
        return this.innerModel().diagnostics();
    }

    public String debugParams() {
        return this.innerModel().debugParams();
    }

    public List<String> serviceNames() {
        List<String> inner = this.innerModel().serviceNames();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ResourceStatus status() {
        return this.innerModel().status();
    }

    public String statusDetails() {
        return this.innerModel().statusDetails();
    }

    public HealthState healthState() {
        return this.innerModel().healthState();
    }

    public String unhealthyEvaluation() {
        return this.innerModel().unhealthyEvaluation();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public ApplicationResourceDescriptionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String applicationResourceName;

    public ApplicationResourceDescriptionImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public ApplicationResourceDescription create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplications()
                .createWithResponse(resourceGroupName, applicationResourceName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public ApplicationResourceDescription create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplications()
                .createWithResponse(resourceGroupName, applicationResourceName, this.innerModel(), context)
                .getValue();
        return this;
    }

    ApplicationResourceDescriptionImpl(
        String name, com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager serviceManager) {
        this.innerObject = new ApplicationResourceDescriptionInner();
        this.serviceManager = serviceManager;
        this.applicationResourceName = name;
    }

    public ApplicationResourceDescription refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplications()
                .getByResourceGroupWithResponse(resourceGroupName, applicationResourceName, Context.NONE)
                .getValue();
        return this;
    }

    public ApplicationResourceDescription refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getApplications()
                .getByResourceGroupWithResponse(resourceGroupName, applicationResourceName, context)
                .getValue();
        return this;
    }

    public ApplicationResourceDescriptionImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public ApplicationResourceDescriptionImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public ApplicationResourceDescriptionImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public ApplicationResourceDescriptionImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public ApplicationResourceDescriptionImpl withServices(List<ServiceResourceDescriptionInner> services) {
        this.innerModel().withServices(services);
        return this;
    }

    public ApplicationResourceDescriptionImpl withDiagnostics(DiagnosticsDescription diagnostics) {
        this.innerModel().withDiagnostics(diagnostics);
        return this;
    }

    public ApplicationResourceDescriptionImpl withDebugParams(String debugParams) {
        this.innerModel().withDebugParams(debugParams);
        return this;
    }
}
