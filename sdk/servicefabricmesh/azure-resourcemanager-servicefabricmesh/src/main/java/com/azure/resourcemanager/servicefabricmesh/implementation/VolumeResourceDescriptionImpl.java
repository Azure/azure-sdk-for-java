// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmesh.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.servicefabricmesh.fluent.models.VolumeResourceDescriptionInner;
import com.azure.resourcemanager.servicefabricmesh.models.ResourceStatus;
import com.azure.resourcemanager.servicefabricmesh.models.VolumeProvider;
import com.azure.resourcemanager.servicefabricmesh.models.VolumeProviderParametersAzureFile;
import com.azure.resourcemanager.servicefabricmesh.models.VolumeResourceDescription;
import java.util.Collections;
import java.util.Map;

public final class VolumeResourceDescriptionImpl
    implements VolumeResourceDescription, VolumeResourceDescription.Definition {
    private VolumeResourceDescriptionInner innerObject;

    private final com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager serviceManager;

    VolumeResourceDescriptionImpl(
        VolumeResourceDescriptionInner innerObject,
        com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String description() {
        return this.innerModel().description();
    }

    public ResourceStatus status() {
        return this.innerModel().status();
    }

    public String statusDetails() {
        return this.innerModel().statusDetails();
    }

    public VolumeProvider provider() {
        return this.innerModel().provider();
    }

    public VolumeProviderParametersAzureFile azureFileParameters() {
        return this.innerModel().azureFileParameters();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public VolumeResourceDescriptionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String volumeResourceName;

    public VolumeResourceDescriptionImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public VolumeResourceDescription create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVolumes()
                .createWithResponse(resourceGroupName, volumeResourceName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public VolumeResourceDescription create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVolumes()
                .createWithResponse(resourceGroupName, volumeResourceName, this.innerModel(), context)
                .getValue();
        return this;
    }

    VolumeResourceDescriptionImpl(
        String name, com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager serviceManager) {
        this.innerObject = new VolumeResourceDescriptionInner();
        this.serviceManager = serviceManager;
        this.volumeResourceName = name;
    }

    public VolumeResourceDescription refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVolumes()
                .getByResourceGroupWithResponse(resourceGroupName, volumeResourceName, Context.NONE)
                .getValue();
        return this;
    }

    public VolumeResourceDescription refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getVolumes()
                .getByResourceGroupWithResponse(resourceGroupName, volumeResourceName, context)
                .getValue();
        return this;
    }

    public VolumeResourceDescriptionImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public VolumeResourceDescriptionImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public VolumeResourceDescriptionImpl withProvider(VolumeProvider provider) {
        this.innerModel().withProvider(provider);
        return this;
    }

    public VolumeResourceDescriptionImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public VolumeResourceDescriptionImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public VolumeResourceDescriptionImpl withAzureFileParameters(
        VolumeProviderParametersAzureFile azureFileParameters) {
        this.innerModel().withAzureFileParameters(azureFileParameters);
        return this;
    }
}
