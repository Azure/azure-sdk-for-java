// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmesh.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.servicefabricmesh.fluent.models.ApplicationResourceDescriptionInner;
import com.azure.resourcemanager.servicefabricmesh.fluent.models.ServiceResourceDescriptionInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of ApplicationResourceDescription. */
public interface ApplicationResourceDescription {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the description property: User readable description of the application.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the services property: Describes the services in the application. This property is used to create or modify
     * services of the application. On get only the name of the service is returned. The service description can be
     * obtained by querying for the service resource.
     *
     * @return the services value.
     */
    List<ServiceResourceDescription> services();

    /**
     * Gets the diagnostics property: Describes the diagnostics definition and usage for an application resource.
     *
     * @return the diagnostics value.
     */
    DiagnosticsDescription diagnostics();

    /**
     * Gets the debugParams property: Internal - used by Visual Studio to setup the debugging session on the local
     * development environment.
     *
     * @return the debugParams value.
     */
    String debugParams();

    /**
     * Gets the serviceNames property: Names of the services in the application.
     *
     * @return the serviceNames value.
     */
    List<String> serviceNames();

    /**
     * Gets the status property: Status of the application.
     *
     * @return the status value.
     */
    ResourceStatus status();

    /**
     * Gets the statusDetails property: Gives additional information about the current status of the application.
     *
     * @return the statusDetails value.
     */
    String statusDetails();

    /**
     * Gets the healthState property: Describes the health state of an application resource.
     *
     * @return the healthState value.
     */
    HealthState healthState();

    /**
     * Gets the unhealthyEvaluation property: When the application's health state is not 'Ok', this additional details
     * from service fabric Health Manager for the user to know why the application is marked unhealthy.
     *
     * @return the unhealthyEvaluation value.
     */
    String unhealthyEvaluation();

    /**
     * Gets the provisioningState property: State of the resource.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.servicefabricmesh.fluent.models.ApplicationResourceDescriptionInner
     * object.
     *
     * @return the inner object.
     */
    ApplicationResourceDescriptionInner innerModel();

    /** The entirety of the ApplicationResourceDescription definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithCreate {
    }
    /** The ApplicationResourceDescription definition stages. */
    interface DefinitionStages {
        /** The first stage of the ApplicationResourceDescription definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the ApplicationResourceDescription definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the ApplicationResourceDescription definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName Azure resource group name.
             * @return the next definition stage.
             */
            WithCreate withExistingResourceGroup(String resourceGroupName);
        }
        /**
         * The stage of the ApplicationResourceDescription definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithDescription,
                DefinitionStages.WithServices,
                DefinitionStages.WithDiagnostics,
                DefinitionStages.WithDebugParams {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ApplicationResourceDescription create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ApplicationResourceDescription create(Context context);
        }
        /** The stage of the ApplicationResourceDescription definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the ApplicationResourceDescription definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: User readable description of the application..
             *
             * @param description User readable description of the application.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
        /** The stage of the ApplicationResourceDescription definition allowing to specify services. */
        interface WithServices {
            /**
             * Specifies the services property: Describes the services in the application. This property is used to
             * create or modify services of the application. On get only the name of the service is returned. The
             * service description can be obtained by querying for the service resource..
             *
             * @param services Describes the services in the application. This property is used to create or modify
             *     services of the application. On get only the name of the service is returned. The service description
             *     can be obtained by querying for the service resource.
             * @return the next definition stage.
             */
            WithCreate withServices(List<ServiceResourceDescriptionInner> services);
        }
        /** The stage of the ApplicationResourceDescription definition allowing to specify diagnostics. */
        interface WithDiagnostics {
            /**
             * Specifies the diagnostics property: Describes the diagnostics definition and usage for an application
             * resource..
             *
             * @param diagnostics Describes the diagnostics definition and usage for an application resource.
             * @return the next definition stage.
             */
            WithCreate withDiagnostics(DiagnosticsDescription diagnostics);
        }
        /** The stage of the ApplicationResourceDescription definition allowing to specify debugParams. */
        interface WithDebugParams {
            /**
             * Specifies the debugParams property: Internal - used by Visual Studio to setup the debugging session on
             * the local development environment..
             *
             * @param debugParams Internal - used by Visual Studio to setup the debugging session on the local
             *     development environment.
             * @return the next definition stage.
             */
            WithCreate withDebugParams(String debugParams);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ApplicationResourceDescription refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ApplicationResourceDescription refresh(Context context);
}
