// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmesh.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.servicefabricmesh.fluent.models.GatewayResourceDescriptionInner;

/** An instance of this class provides access to all the operations defined in GatewaysClient. */
public interface GatewaysClient {
    /**
     * Creates a gateway resource with the specified name, description and properties. If a gateway resource with the
     * same name exists, then it is updated with the specified description and properties. Use gateway resources to
     * create a gateway for public connectivity for services within your application.
     *
     * @param resourceGroupName Azure resource group name.
     * @param gatewayResourceName The identity of the gateway.
     * @param gatewayResourceDescription Description for creating a Gateway resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return this type describes a gateway resource.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GatewayResourceDescriptionInner create(
        String resourceGroupName,
        String gatewayResourceName,
        GatewayResourceDescriptionInner gatewayResourceDescription);

    /**
     * Creates a gateway resource with the specified name, description and properties. If a gateway resource with the
     * same name exists, then it is updated with the specified description and properties. Use gateway resources to
     * create a gateway for public connectivity for services within your application.
     *
     * @param resourceGroupName Azure resource group name.
     * @param gatewayResourceName The identity of the gateway.
     * @param gatewayResourceDescription Description for creating a Gateway resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return this type describes a gateway resource along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<GatewayResourceDescriptionInner> createWithResponse(
        String resourceGroupName,
        String gatewayResourceName,
        GatewayResourceDescriptionInner gatewayResourceDescription,
        Context context);

    /**
     * Gets the information about the gateway resource with the given name. The information include the description and
     * other properties of the gateway.
     *
     * @param resourceGroupName Azure resource group name.
     * @param gatewayResourceName The identity of the gateway.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about the gateway resource with the given name.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    GatewayResourceDescriptionInner getByResourceGroup(String resourceGroupName, String gatewayResourceName);

    /**
     * Gets the information about the gateway resource with the given name. The information include the description and
     * other properties of the gateway.
     *
     * @param resourceGroupName Azure resource group name.
     * @param gatewayResourceName The identity of the gateway.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about the gateway resource with the given name along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<GatewayResourceDescriptionInner> getByResourceGroupWithResponse(
        String resourceGroupName, String gatewayResourceName, Context context);

    /**
     * Deletes the gateway resource identified by the name.
     *
     * @param resourceGroupName Azure resource group name.
     * @param gatewayResourceName The identity of the gateway.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String gatewayResourceName);

    /**
     * Deletes the gateway resource identified by the name.
     *
     * @param resourceGroupName Azure resource group name.
     * @param gatewayResourceName The identity of the gateway.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String gatewayResourceName, Context context);

    /**
     * Gets the information about all gateway resources in a given resource group. The information include the
     * description and other properties of the Gateway.
     *
     * @param resourceGroupName Azure resource group name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about all gateway resources in a given resource group as paginated response with {@link
     *     PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GatewayResourceDescriptionInner> listByResourceGroup(String resourceGroupName);

    /**
     * Gets the information about all gateway resources in a given resource group. The information include the
     * description and other properties of the Gateway.
     *
     * @param resourceGroupName Azure resource group name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about all gateway resources in a given resource group as paginated response with {@link
     *     PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GatewayResourceDescriptionInner> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets the information about all gateway resources in a given resource group. The information include the
     * description and other properties of the gateway.
     *
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about all gateway resources in a given resource group as paginated response with {@link
     *     PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GatewayResourceDescriptionInner> list();

    /**
     * Gets the information about all gateway resources in a given resource group. The information include the
     * description and other properties of the gateway.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about all gateway resources in a given resource group as paginated response with {@link
     *     PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<GatewayResourceDescriptionInner> list(Context context);
}
