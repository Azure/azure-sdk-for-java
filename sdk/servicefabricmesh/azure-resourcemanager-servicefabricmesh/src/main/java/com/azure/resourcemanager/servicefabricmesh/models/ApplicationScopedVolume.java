// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmesh.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Describes a volume whose lifetime is scoped to the application's lifetime. */
@Fluent
public final class ApplicationScopedVolume extends VolumeReference {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ApplicationScopedVolume.class);

    /*
     * Describes parameters for creating application-scoped volumes.
     */
    @JsonProperty(value = "creationParameters", required = true)
    private ApplicationScopedVolumeCreationParameters creationParameters;

    /**
     * Get the creationParameters property: Describes parameters for creating application-scoped volumes.
     *
     * @return the creationParameters value.
     */
    public ApplicationScopedVolumeCreationParameters creationParameters() {
        return this.creationParameters;
    }

    /**
     * Set the creationParameters property: Describes parameters for creating application-scoped volumes.
     *
     * @param creationParameters the creationParameters value to set.
     * @return the ApplicationScopedVolume object itself.
     */
    public ApplicationScopedVolume withCreationParameters(
        ApplicationScopedVolumeCreationParameters creationParameters) {
        this.creationParameters = creationParameters;
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ApplicationScopedVolume withName(String name) {
        super.withName(name);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ApplicationScopedVolume withReadOnly(Boolean readOnly) {
        super.withReadOnly(readOnly);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public ApplicationScopedVolume withDestinationPath(String destinationPath) {
        super.withDestinationPath(destinationPath);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (creationParameters() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property creationParameters in model ApplicationScopedVolume"));
        } else {
            creationParameters().validate();
        }
    }
}
