// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmesh.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.management.Resource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.servicefabricmesh.models.ResourceStatus;
import com.azure.resourcemanager.servicefabricmesh.models.VolumeProvider;
import com.azure.resourcemanager.servicefabricmesh.models.VolumeProviderParametersAzureFile;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/** This type describes a volume resource. */
@Fluent
public final class VolumeResourceDescriptionInner extends Resource {
    /*
     * This type describes properties of a volume resource.
     */
    @JsonProperty(value = "properties", required = true)
    private VolumeResourceProperties innerProperties = new VolumeResourceProperties();

    /**
     * Get the innerProperties property: This type describes properties of a volume resource.
     *
     * @return the innerProperties value.
     */
    private VolumeResourceProperties innerProperties() {
        return this.innerProperties;
    }

    /** {@inheritDoc} */
    @Override
    public VolumeResourceDescriptionInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public VolumeResourceDescriptionInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Get the description property: User readable description of the volume.
     *
     * @return the description value.
     */
    public String description() {
        return this.innerProperties() == null ? null : this.innerProperties().description();
    }

    /**
     * Set the description property: User readable description of the volume.
     *
     * @param description the description value to set.
     * @return the VolumeResourceDescriptionInner object itself.
     */
    public VolumeResourceDescriptionInner withDescription(String description) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VolumeResourceProperties();
        }
        this.innerProperties().withDescription(description);
        return this;
    }

    /**
     * Get the status property: Status of the volume.
     *
     * @return the status value.
     */
    public ResourceStatus status() {
        return this.innerProperties() == null ? null : this.innerProperties().status();
    }

    /**
     * Get the statusDetails property: Gives additional information about the current status of the volume.
     *
     * @return the statusDetails value.
     */
    public String statusDetails() {
        return this.innerProperties() == null ? null : this.innerProperties().statusDetails();
    }

    /**
     * Get the provider property: Provider of the volume.
     *
     * @return the provider value.
     */
    public VolumeProvider provider() {
        return this.innerProperties() == null ? null : this.innerProperties().provider();
    }

    /**
     * Set the provider property: Provider of the volume.
     *
     * @param provider the provider value to set.
     * @return the VolumeResourceDescriptionInner object itself.
     */
    public VolumeResourceDescriptionInner withProvider(VolumeProvider provider) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VolumeResourceProperties();
        }
        this.innerProperties().withProvider(provider);
        return this;
    }

    /**
     * Get the azureFileParameters property: This type describes a volume provided by an Azure Files file share.
     *
     * @return the azureFileParameters value.
     */
    public VolumeProviderParametersAzureFile azureFileParameters() {
        return this.innerProperties() == null ? null : this.innerProperties().azureFileParameters();
    }

    /**
     * Set the azureFileParameters property: This type describes a volume provided by an Azure Files file share.
     *
     * @param azureFileParameters the azureFileParameters value to set.
     * @return the VolumeResourceDescriptionInner object itself.
     */
    public VolumeResourceDescriptionInner withAzureFileParameters(
        VolumeProviderParametersAzureFile azureFileParameters) {
        if (this.innerProperties() == null) {
            this.innerProperties = new VolumeResourceProperties();
        }
        this.innerProperties().withAzureFileParameters(azureFileParameters);
        return this;
    }

    /**
     * Get the provisioningState property: State of the resource.
     *
     * @return the provisioningState value.
     */
    public String provisioningState() {
        return this.innerProperties() == null ? null : this.innerProperties().provisioningState();
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() == null) {
            throw LOGGER
                .logExceptionAsError(
                    new IllegalArgumentException(
                        "Missing required property innerProperties in model VolumeResourceDescriptionInner"));
        } else {
            innerProperties().validate();
        }
    }

    private static final ClientLogger LOGGER = new ClientLogger(VolumeResourceDescriptionInner.class);
}
