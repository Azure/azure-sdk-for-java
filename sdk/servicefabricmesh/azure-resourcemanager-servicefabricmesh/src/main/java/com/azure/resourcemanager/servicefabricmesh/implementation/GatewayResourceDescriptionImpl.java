// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmesh.implementation;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.servicefabricmesh.fluent.models.GatewayResourceDescriptionInner;
import com.azure.resourcemanager.servicefabricmesh.models.GatewayResourceDescription;
import com.azure.resourcemanager.servicefabricmesh.models.HttpConfig;
import com.azure.resourcemanager.servicefabricmesh.models.NetworkRef;
import com.azure.resourcemanager.servicefabricmesh.models.ResourceStatus;
import com.azure.resourcemanager.servicefabricmesh.models.TcpConfig;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public final class GatewayResourceDescriptionImpl
    implements GatewayResourceDescription, GatewayResourceDescription.Definition {
    private GatewayResourceDescriptionInner innerObject;

    private final com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager serviceManager;

    GatewayResourceDescriptionImpl(
        GatewayResourceDescriptionInner innerObject,
        com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String location() {
        return this.innerModel().location();
    }

    public Map<String, String> tags() {
        Map<String, String> inner = this.innerModel().tags();
        if (inner != null) {
            return Collections.unmodifiableMap(inner);
        } else {
            return Collections.emptyMap();
        }
    }

    public String description() {
        return this.innerModel().description();
    }

    public NetworkRef sourceNetwork() {
        return this.innerModel().sourceNetwork();
    }

    public NetworkRef destinationNetwork() {
        return this.innerModel().destinationNetwork();
    }

    public List<TcpConfig> tcp() {
        List<TcpConfig> inner = this.innerModel().tcp();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public List<HttpConfig> http() {
        List<HttpConfig> inner = this.innerModel().http();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public ResourceStatus status() {
        return this.innerModel().status();
    }

    public String statusDetails() {
        return this.innerModel().statusDetails();
    }

    public String ipAddress() {
        return this.innerModel().ipAddress();
    }

    public String provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Region region() {
        return Region.fromName(this.regionName());
    }

    public String regionName() {
        return this.location();
    }

    public GatewayResourceDescriptionInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String gatewayResourceName;

    public GatewayResourceDescriptionImpl withExistingResourceGroup(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    public GatewayResourceDescription create() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getGateways()
                .createWithResponse(resourceGroupName, gatewayResourceName, this.innerModel(), Context.NONE)
                .getValue();
        return this;
    }

    public GatewayResourceDescription create(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getGateways()
                .createWithResponse(resourceGroupName, gatewayResourceName, this.innerModel(), context)
                .getValue();
        return this;
    }

    GatewayResourceDescriptionImpl(
        String name, com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager serviceManager) {
        this.innerObject = new GatewayResourceDescriptionInner();
        this.serviceManager = serviceManager;
        this.gatewayResourceName = name;
    }

    public GatewayResourceDescription refresh() {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getGateways()
                .getByResourceGroupWithResponse(resourceGroupName, gatewayResourceName, Context.NONE)
                .getValue();
        return this;
    }

    public GatewayResourceDescription refresh(Context context) {
        this.innerObject =
            serviceManager
                .serviceClient()
                .getGateways()
                .getByResourceGroupWithResponse(resourceGroupName, gatewayResourceName, context)
                .getValue();
        return this;
    }

    public GatewayResourceDescriptionImpl withRegion(Region location) {
        this.innerModel().withLocation(location.toString());
        return this;
    }

    public GatewayResourceDescriptionImpl withRegion(String location) {
        this.innerModel().withLocation(location);
        return this;
    }

    public GatewayResourceDescriptionImpl withSourceNetwork(NetworkRef sourceNetwork) {
        this.innerModel().withSourceNetwork(sourceNetwork);
        return this;
    }

    public GatewayResourceDescriptionImpl withDestinationNetwork(NetworkRef destinationNetwork) {
        this.innerModel().withDestinationNetwork(destinationNetwork);
        return this;
    }

    public GatewayResourceDescriptionImpl withTags(Map<String, String> tags) {
        this.innerModel().withTags(tags);
        return this;
    }

    public GatewayResourceDescriptionImpl withDescription(String description) {
        this.innerModel().withDescription(description);
        return this;
    }

    public GatewayResourceDescriptionImpl withTcp(List<TcpConfig> tcp) {
        this.innerModel().withTcp(tcp);
        return this;
    }

    public GatewayResourceDescriptionImpl withHttp(List<HttpConfig> http) {
        this.innerModel().withHttp(http);
        return this;
    }
}
