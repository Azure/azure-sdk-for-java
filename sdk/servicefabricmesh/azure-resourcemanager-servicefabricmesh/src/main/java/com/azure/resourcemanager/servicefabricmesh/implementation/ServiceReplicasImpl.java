// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmesh.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.servicefabricmesh.fluent.ServiceReplicasClient;
import com.azure.resourcemanager.servicefabricmesh.fluent.models.ServiceReplicaDescriptionInner;
import com.azure.resourcemanager.servicefabricmesh.models.ServiceReplicaDescription;
import com.azure.resourcemanager.servicefabricmesh.models.ServiceReplicas;
import com.fasterxml.jackson.annotation.JsonIgnore;

public final class ServiceReplicasImpl implements ServiceReplicas {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ServiceReplicasImpl.class);

    private final ServiceReplicasClient innerClient;

    private final com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager serviceManager;

    public ServiceReplicasImpl(
        ServiceReplicasClient innerClient,
        com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public ServiceReplicaDescription get(
        String resourceGroupName, String applicationResourceName, String serviceResourceName, String replicaName) {
        ServiceReplicaDescriptionInner inner =
            this.serviceClient().get(resourceGroupName, applicationResourceName, serviceResourceName, replicaName);
        if (inner != null) {
            return new ServiceReplicaDescriptionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ServiceReplicaDescription> getWithResponse(
        String resourceGroupName,
        String applicationResourceName,
        String serviceResourceName,
        String replicaName,
        Context context) {
        Response<ServiceReplicaDescriptionInner> inner =
            this
                .serviceClient()
                .getWithResponse(resourceGroupName, applicationResourceName, serviceResourceName, replicaName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ServiceReplicaDescriptionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PagedIterable<ServiceReplicaDescription> list(
        String resourceGroupName, String applicationResourceName, String serviceResourceName) {
        PagedIterable<ServiceReplicaDescriptionInner> inner =
            this.serviceClient().list(resourceGroupName, applicationResourceName, serviceResourceName);
        return Utils.mapPage(inner, inner1 -> new ServiceReplicaDescriptionImpl(inner1, this.manager()));
    }

    public PagedIterable<ServiceReplicaDescription> list(
        String resourceGroupName, String applicationResourceName, String serviceResourceName, Context context) {
        PagedIterable<ServiceReplicaDescriptionInner> inner =
            this.serviceClient().list(resourceGroupName, applicationResourceName, serviceResourceName, context);
        return Utils.mapPage(inner, inner1 -> new ServiceReplicaDescriptionImpl(inner1, this.manager()));
    }

    private ServiceReplicasClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager manager() {
        return this.serviceManager;
    }
}
