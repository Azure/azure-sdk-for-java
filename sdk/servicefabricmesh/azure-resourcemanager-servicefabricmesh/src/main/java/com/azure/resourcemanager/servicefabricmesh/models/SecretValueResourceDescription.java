// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmesh.models;

import com.azure.core.http.rest.Response;
import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.servicefabricmesh.fluent.models.SecretValueResourceDescriptionInner;
import java.util.Map;

/** An immutable client-side representation of SecretValueResourceDescription. */
public interface SecretValueResourceDescription {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the value property: The actual value of the secret.
     *
     * @return the value value.
     */
    String value();

    /**
     * Gets the provisioningState property: State of the resource.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.servicefabricmesh.fluent.models.SecretValueResourceDescriptionInner
     * object.
     *
     * @return the inner object.
     */
    SecretValueResourceDescriptionInner innerModel();

    /** The entirety of the SecretValueResourceDescription definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithParentResource,
            DefinitionStages.WithCreate {
    }
    /** The SecretValueResourceDescription definition stages. */
    interface DefinitionStages {
        /** The first stage of the SecretValueResourceDescription definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the SecretValueResourceDescription definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithParentResource withRegion(String location);
        }
        /** The stage of the SecretValueResourceDescription definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, secretResourceName.
             *
             * @param resourceGroupName Azure resource group name.
             * @param secretResourceName The name of the secret resource.
             * @return the next definition stage.
             */
            WithCreate withExistingSecret(String resourceGroupName, String secretResourceName);
        }
        /**
         * The stage of the SecretValueResourceDescription definition which contains all the minimum required properties
         * for the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithTags, DefinitionStages.WithValue {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            SecretValueResourceDescription create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            SecretValueResourceDescription create(Context context);
        }
        /** The stage of the SecretValueResourceDescription definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the SecretValueResourceDescription definition allowing to specify value. */
        interface WithValue {
            /**
             * Specifies the value property: The actual value of the secret..
             *
             * @param value The actual value of the secret.
             * @return the next definition stage.
             */
            WithCreate withValue(String value);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    SecretValueResourceDescription refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    SecretValueResourceDescription refresh(Context context);

    /**
     * Lists the decrypted value of the specified named value of the secret resource. This is a privileged operation.
     *
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return this type represents the unencrypted value of the secret.
     */
    SecretValue listValue();

    /**
     * Lists the decrypted value of the specified named value of the secret resource. This is a privileged operation.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return this type represents the unencrypted value of the secret.
     */
    Response<SecretValue> listValueWithResponse(Context context);
}
