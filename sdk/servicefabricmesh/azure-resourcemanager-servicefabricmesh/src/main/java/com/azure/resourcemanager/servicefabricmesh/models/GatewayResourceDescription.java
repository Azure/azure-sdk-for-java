// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmesh.models;

import com.azure.core.management.Region;
import com.azure.core.util.Context;
import com.azure.resourcemanager.servicefabricmesh.fluent.models.GatewayResourceDescriptionInner;
import java.util.List;
import java.util.Map;

/** An immutable client-side representation of GatewayResourceDescription. */
public interface GatewayResourceDescription {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the location property: The geo-location where the resource lives.
     *
     * @return the location value.
     */
    String location();

    /**
     * Gets the tags property: Resource tags.
     *
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * Gets the description property: User readable description of the gateway.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the sourceNetwork property: Network the gateway should listen on for requests.
     *
     * @return the sourceNetwork value.
     */
    NetworkRef sourceNetwork();

    /**
     * Gets the destinationNetwork property: Network that the Application is using.
     *
     * @return the destinationNetwork value.
     */
    NetworkRef destinationNetwork();

    /**
     * Gets the tcp property: Configuration for tcp connectivity for this gateway.
     *
     * @return the tcp value.
     */
    List<TcpConfig> tcp();

    /**
     * Gets the http property: Configuration for http connectivity for this gateway.
     *
     * @return the http value.
     */
    List<HttpConfig> http();

    /**
     * Gets the status property: Status of the resource.
     *
     * @return the status value.
     */
    ResourceStatus status();

    /**
     * Gets the statusDetails property: Gives additional information about the current status of the gateway.
     *
     * @return the statusDetails value.
     */
    String statusDetails();

    /**
     * Gets the ipAddress property: IP address of the gateway. This is populated in the response and is ignored for
     * incoming requests.
     *
     * @return the ipAddress value.
     */
    String ipAddress();

    /**
     * Gets the provisioningState property: State of the resource.
     *
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * Gets the region of the resource.
     *
     * @return the region of the resource.
     */
    Region region();

    /**
     * Gets the name of the resource region.
     *
     * @return the name of the resource region.
     */
    String regionName();

    /**
     * Gets the inner com.azure.resourcemanager.servicefabricmesh.fluent.models.GatewayResourceDescriptionInner object.
     *
     * @return the inner object.
     */
    GatewayResourceDescriptionInner innerModel();

    /** The entirety of the GatewayResourceDescription definition. */
    interface Definition
        extends DefinitionStages.Blank,
            DefinitionStages.WithLocation,
            DefinitionStages.WithResourceGroup,
            DefinitionStages.WithSourceNetwork,
            DefinitionStages.WithDestinationNetwork,
            DefinitionStages.WithCreate {
    }
    /** The GatewayResourceDescription definition stages. */
    interface DefinitionStages {
        /** The first stage of the GatewayResourceDescription definition. */
        interface Blank extends WithLocation {
        }
        /** The stage of the GatewayResourceDescription definition allowing to specify location. */
        interface WithLocation {
            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(Region location);

            /**
             * Specifies the region for the resource.
             *
             * @param location The geo-location where the resource lives.
             * @return the next definition stage.
             */
            WithResourceGroup withRegion(String location);
        }
        /** The stage of the GatewayResourceDescription definition allowing to specify parent resource. */
        interface WithResourceGroup {
            /**
             * Specifies resourceGroupName.
             *
             * @param resourceGroupName Azure resource group name.
             * @return the next definition stage.
             */
            WithSourceNetwork withExistingResourceGroup(String resourceGroupName);
        }
        /** The stage of the GatewayResourceDescription definition allowing to specify sourceNetwork. */
        interface WithSourceNetwork {
            /**
             * Specifies the sourceNetwork property: Network the gateway should listen on for requests..
             *
             * @param sourceNetwork Network the gateway should listen on for requests.
             * @return the next definition stage.
             */
            WithDestinationNetwork withSourceNetwork(NetworkRef sourceNetwork);
        }
        /** The stage of the GatewayResourceDescription definition allowing to specify destinationNetwork. */
        interface WithDestinationNetwork {
            /**
             * Specifies the destinationNetwork property: Network that the Application is using..
             *
             * @param destinationNetwork Network that the Application is using.
             * @return the next definition stage.
             */
            WithCreate withDestinationNetwork(NetworkRef destinationNetwork);
        }
        /**
         * The stage of the GatewayResourceDescription definition which contains all the minimum required properties for
         * the resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate
            extends DefinitionStages.WithTags,
                DefinitionStages.WithDescription,
                DefinitionStages.WithTcp,
                DefinitionStages.WithHttp {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            GatewayResourceDescription create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            GatewayResourceDescription create(Context context);
        }
        /** The stage of the GatewayResourceDescription definition allowing to specify tags. */
        interface WithTags {
            /**
             * Specifies the tags property: Resource tags..
             *
             * @param tags Resource tags.
             * @return the next definition stage.
             */
            WithCreate withTags(Map<String, String> tags);
        }
        /** The stage of the GatewayResourceDescription definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: User readable description of the gateway..
             *
             * @param description User readable description of the gateway.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
        /** The stage of the GatewayResourceDescription definition allowing to specify tcp. */
        interface WithTcp {
            /**
             * Specifies the tcp property: Configuration for tcp connectivity for this gateway..
             *
             * @param tcp Configuration for tcp connectivity for this gateway.
             * @return the next definition stage.
             */
            WithCreate withTcp(List<TcpConfig> tcp);
        }
        /** The stage of the GatewayResourceDescription definition allowing to specify http. */
        interface WithHttp {
            /**
             * Specifies the http property: Configuration for http connectivity for this gateway..
             *
             * @param http Configuration for http connectivity for this gateway.
             * @return the next definition stage.
             */
            WithCreate withHttp(List<HttpConfig> http);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    GatewayResourceDescription refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    GatewayResourceDescription refresh(Context context);
}
