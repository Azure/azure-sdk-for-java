// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmesh.models;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/** Resource collection API of Secrets. */
public interface Secrets {
    /**
     * Gets the information about the secret resource with the given name. The information include the description and
     * other properties of the secret.
     *
     * @param resourceGroupName Azure resource group name.
     * @param secretResourceName The name of the secret resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about the secret resource with the given name.
     */
    SecretResourceDescription getByResourceGroup(String resourceGroupName, String secretResourceName);

    /**
     * Gets the information about the secret resource with the given name. The information include the description and
     * other properties of the secret.
     *
     * @param resourceGroupName Azure resource group name.
     * @param secretResourceName The name of the secret resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about the secret resource with the given name along with {@link Response}.
     */
    Response<SecretResourceDescription> getByResourceGroupWithResponse(
        String resourceGroupName, String secretResourceName, Context context);

    /**
     * Deletes the secret resource identified by the name.
     *
     * @param resourceGroupName Azure resource group name.
     * @param secretResourceName The name of the secret resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String resourceGroupName, String secretResourceName);

    /**
     * Deletes the secret resource identified by the name.
     *
     * @param resourceGroupName Azure resource group name.
     * @param secretResourceName The name of the secret resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteWithResponse(String resourceGroupName, String secretResourceName, Context context);

    /**
     * Gets the information about all secret resources in a given resource group. The information include the
     * description and other properties of the Secret.
     *
     * @param resourceGroupName Azure resource group name.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about all secret resources in a given resource group as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<SecretResourceDescription> listByResourceGroup(String resourceGroupName);

    /**
     * Gets the information about all secret resources in a given resource group. The information include the
     * description and other properties of the Secret.
     *
     * @param resourceGroupName Azure resource group name.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about all secret resources in a given resource group as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<SecretResourceDescription> listByResourceGroup(String resourceGroupName, Context context);

    /**
     * Gets the information about all secret resources in a given resource group. The information include the
     * description and other properties of the secret.
     *
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about all secret resources in a given resource group as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<SecretResourceDescription> list();

    /**
     * Gets the information about all secret resources in a given resource group. The information include the
     * description and other properties of the secret.
     *
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about all secret resources in a given resource group as paginated response with {@link
     *     PagedIterable}.
     */
    PagedIterable<SecretResourceDescription> list(Context context);

    /**
     * Gets the information about the secret resource with the given name. The information include the description and
     * other properties of the secret.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about the secret resource with the given name along with {@link Response}.
     */
    SecretResourceDescription getById(String id);

    /**
     * Gets the information about the secret resource with the given name. The information include the description and
     * other properties of the secret.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the information about the secret resource with the given name along with {@link Response}.
     */
    Response<SecretResourceDescription> getByIdWithResponse(String id, Context context);

    /**
     * Deletes the secret resource identified by the name.
     *
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Deletes the secret resource identified by the name.
     *
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.resourcemanager.servicefabricmesh.models.ErrorErrorModelException thrown if the request is
     *     rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new SecretResourceDescription resource.
     *
     * @param name resource name.
     * @return the first stage of the new SecretResourceDescription definition.
     */
    SecretResourceDescription.DefinitionStages.Blank define(String name);
}
