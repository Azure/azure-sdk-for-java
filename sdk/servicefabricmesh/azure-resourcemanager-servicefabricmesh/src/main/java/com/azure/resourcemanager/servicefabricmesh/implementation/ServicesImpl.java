// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.servicefabricmesh.implementation;

import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.servicefabricmesh.fluent.ServicesClient;
import com.azure.resourcemanager.servicefabricmesh.fluent.models.ServiceResourceDescriptionInner;
import com.azure.resourcemanager.servicefabricmesh.models.ServiceResourceDescription;
import com.azure.resourcemanager.servicefabricmesh.models.Services;

public final class ServicesImpl implements Services {
    private static final ClientLogger LOGGER = new ClientLogger(ServicesImpl.class);

    private final ServicesClient innerClient;

    private final com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager serviceManager;

    public ServicesImpl(
        ServicesClient innerClient,
        com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public ServiceResourceDescription get(
        String resourceGroupName, String applicationResourceName, String serviceResourceName) {
        ServiceResourceDescriptionInner inner =
            this.serviceClient().get(resourceGroupName, applicationResourceName, serviceResourceName);
        if (inner != null) {
            return new ServiceResourceDescriptionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ServiceResourceDescription> getWithResponse(
        String resourceGroupName, String applicationResourceName, String serviceResourceName, Context context) {
        Response<ServiceResourceDescriptionInner> inner =
            this
                .serviceClient()
                .getWithResponse(resourceGroupName, applicationResourceName, serviceResourceName, context);
        if (inner != null) {
            return new SimpleResponse<>(
                inner.getRequest(),
                inner.getStatusCode(),
                inner.getHeaders(),
                new ServiceResourceDescriptionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public PagedIterable<ServiceResourceDescription> list(String resourceGroupName, String applicationResourceName) {
        PagedIterable<ServiceResourceDescriptionInner> inner =
            this.serviceClient().list(resourceGroupName, applicationResourceName);
        return Utils.mapPage(inner, inner1 -> new ServiceResourceDescriptionImpl(inner1, this.manager()));
    }

    public PagedIterable<ServiceResourceDescription> list(
        String resourceGroupName, String applicationResourceName, Context context) {
        PagedIterable<ServiceResourceDescriptionInner> inner =
            this.serviceClient().list(resourceGroupName, applicationResourceName, context);
        return Utils.mapPage(inner, inner1 -> new ServiceResourceDescriptionImpl(inner1, this.manager()));
    }

    private ServicesClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.resourcemanager.servicefabricmesh.ServiceFabricMeshManager manager() {
        return this.serviceManager;
    }
}
