// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.signalr.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.signalr.models.ManagedIdentitySettings;
import com.azure.resourcemanager.signalr.models.ServerlessUpstreamSettings;
import com.azure.resourcemanager.signalr.models.UpstreamAuthSettings;
import com.azure.resourcemanager.signalr.models.UpstreamAuthType;
import com.azure.resourcemanager.signalr.models.UpstreamTemplate;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ServerlessUpstreamSettingsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ServerlessUpstreamSettings model =
            BinaryData
                .fromString(
                    "{\"templates\":[{\"hubPattern\":\"qwjygvja\",\"eventPattern\":\"blmhvkzuhb\",\"categoryPattern\":\"vyhgs\",\"urlTemplate\":\"pbyrqufegxu\",\"auth\":{\"type\":\"None\",\"managedIdentity\":{\"resource\":\"hlmctlpdngitvgb\"}}},{\"hubPattern\":\"rixkwmyijejve\",\"eventPattern\":\"hbpnaixexccbd\",\"categoryPattern\":\"ax\",\"urlTemplate\":\"cexdrrvqa\",\"auth\":{\"type\":\"None\",\"managedIdentity\":{\"resource\":\"pwijnhy\"}}},{\"hubPattern\":\"vfycxzb\",\"eventPattern\":\"oowvrv\",\"categoryPattern\":\"gjqppy\",\"urlTemplate\":\"s\",\"auth\":{\"type\":\"None\",\"managedIdentity\":{\"resource\":\"yhgfipnsx\"}}},{\"hubPattern\":\"cwaekrrjre\",\"eventPattern\":\"xt\",\"categoryPattern\":\"umh\",\"urlTemplate\":\"glikkxwslolb\",\"auth\":{\"type\":\"None\",\"managedIdentity\":{\"resource\":\"m\"}}}]}")
                .toObject(ServerlessUpstreamSettings.class);
        Assertions.assertEquals("qwjygvja", model.templates().get(0).hubPattern());
        Assertions.assertEquals("blmhvkzuhb", model.templates().get(0).eventPattern());
        Assertions.assertEquals("vyhgs", model.templates().get(0).categoryPattern());
        Assertions.assertEquals("pbyrqufegxu", model.templates().get(0).urlTemplate());
        Assertions.assertEquals(UpstreamAuthType.NONE, model.templates().get(0).auth().type());
        Assertions.assertEquals("hlmctlpdngitvgb", model.templates().get(0).auth().managedIdentity().resource());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ServerlessUpstreamSettings model =
            new ServerlessUpstreamSettings()
                .withTemplates(
                    Arrays
                        .asList(
                            new UpstreamTemplate()
                                .withHubPattern("qwjygvja")
                                .withEventPattern("blmhvkzuhb")
                                .withCategoryPattern("vyhgs")
                                .withUrlTemplate("pbyrqufegxu")
                                .withAuth(
                                    new UpstreamAuthSettings()
                                        .withType(UpstreamAuthType.NONE)
                                        .withManagedIdentity(
                                            new ManagedIdentitySettings().withResource("hlmctlpdngitvgb"))),
                            new UpstreamTemplate()
                                .withHubPattern("rixkwmyijejve")
                                .withEventPattern("hbpnaixexccbd")
                                .withCategoryPattern("ax")
                                .withUrlTemplate("cexdrrvqa")
                                .withAuth(
                                    new UpstreamAuthSettings()
                                        .withType(UpstreamAuthType.NONE)
                                        .withManagedIdentity(new ManagedIdentitySettings().withResource("pwijnhy"))),
                            new UpstreamTemplate()
                                .withHubPattern("vfycxzb")
                                .withEventPattern("oowvrv")
                                .withCategoryPattern("gjqppy")
                                .withUrlTemplate("s")
                                .withAuth(
                                    new UpstreamAuthSettings()
                                        .withType(UpstreamAuthType.NONE)
                                        .withManagedIdentity(new ManagedIdentitySettings().withResource("yhgfipnsx"))),
                            new UpstreamTemplate()
                                .withHubPattern("cwaekrrjre")
                                .withEventPattern("xt")
                                .withCategoryPattern("umh")
                                .withUrlTemplate("glikkxwslolb")
                                .withAuth(
                                    new UpstreamAuthSettings()
                                        .withType(UpstreamAuthType.NONE)
                                        .withManagedIdentity(new ManagedIdentitySettings().withResource("m")))));
        model = BinaryData.fromObject(model).toObject(ServerlessUpstreamSettings.class);
        Assertions.assertEquals("qwjygvja", model.templates().get(0).hubPattern());
        Assertions.assertEquals("blmhvkzuhb", model.templates().get(0).eventPattern());
        Assertions.assertEquals("vyhgs", model.templates().get(0).categoryPattern());
        Assertions.assertEquals("pbyrqufegxu", model.templates().get(0).urlTemplate());
        Assertions.assertEquals(UpstreamAuthType.NONE, model.templates().get(0).auth().type());
        Assertions.assertEquals("hlmctlpdngitvgb", model.templates().get(0).auth().managedIdentity().resource());
    }
}
