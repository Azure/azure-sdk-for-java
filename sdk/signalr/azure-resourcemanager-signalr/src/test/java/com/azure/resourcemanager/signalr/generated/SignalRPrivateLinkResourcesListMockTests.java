// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.signalr.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.signalr.SignalRManager;
import com.azure.resourcemanager.signalr.models.PrivateLinkResource;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SignalRPrivateLinkResourcesListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"groupId\":\"khvuhxepmrutz\",\"requiredMembers\":[\"aobn\",\"lujdjltymkmv\"],\"requiredZoneNames\":[\"hywartspph\",\"ixkykxd\",\"sj\"],\"shareablePrivateLinkResourceTypes\":[{\"name\":\"ucfx\",\"properties\":{\"description\":\"kflrmymy\",\"groupId\":\"cqlh\",\"type\":\"s\"}}]},\"id\":\"sl\",\"name\":\"iiiovgqcgxuugq\",\"type\":\"ctotiowlx\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SignalRManager manager = SignalRManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<PrivateLinkResource> response
            = manager.signalRPrivateLinkResources().list("gfsxzec", "axwk", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("khvuhxepmrutz", response.iterator().next().groupId());
        Assertions.assertEquals("aobn", response.iterator().next().requiredMembers().get(0));
        Assertions.assertEquals("hywartspph", response.iterator().next().requiredZoneNames().get(0));
        Assertions.assertEquals("ucfx", response.iterator().next().shareablePrivateLinkResourceTypes().get(0).name());
        Assertions.assertEquals("kflrmymy",
            response.iterator().next().shareablePrivateLinkResourceTypes().get(0).properties().description());
        Assertions.assertEquals("cqlh",
            response.iterator().next().shareablePrivateLinkResourceTypes().get(0).properties().groupId());
        Assertions.assertEquals("s",
            response.iterator().next().shareablePrivateLinkResourceTypes().get(0).properties().type());
    }
}
