// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.signalr.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.signalr.fluent.models.CustomDomainInner;
import com.azure.resourcemanager.signalr.models.CustomDomainList;
import com.azure.resourcemanager.signalr.models.ResourceReference;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class CustomDomainListTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        CustomDomainList model =
            BinaryData
                .fromString(
                    "{\"value\":[{\"properties\":{\"provisioningState\":\"Creating\",\"domainName\":\"jw\",\"customCertificate\":{\"id\":\"wqiok\"}},\"id\":\"sx\",\"name\":\"ojmsvpkjprvkwc\",\"type\":\"zqljyxgtczh\"}],\"nextLink\":\"dbsdshm\"}")
                .toObject(CustomDomainList.class);
        Assertions.assertEquals("jw", model.value().get(0).domainName());
        Assertions.assertEquals("wqiok", model.value().get(0).customCertificate().id());
        Assertions.assertEquals("dbsdshm", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        CustomDomainList model =
            new CustomDomainList()
                .withValue(
                    Arrays
                        .asList(
                            new CustomDomainInner()
                                .withDomainName("jw")
                                .withCustomCertificate(new ResourceReference().withId("wqiok"))))
                .withNextLink("dbsdshm");
        model = BinaryData.fromObject(model).toObject(CustomDomainList.class);
        Assertions.assertEquals("jw", model.value().get(0).domainName());
        Assertions.assertEquals("wqiok", model.value().get(0).customCertificate().id());
        Assertions.assertEquals("dbsdshm", model.nextLink());
    }
}
