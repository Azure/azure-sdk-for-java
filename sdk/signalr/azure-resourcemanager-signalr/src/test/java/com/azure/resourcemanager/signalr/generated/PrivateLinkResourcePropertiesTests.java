// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.signalr.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.signalr.fluent.models.PrivateLinkResourceProperties;
import com.azure.resourcemanager.signalr.models.ShareablePrivateLinkResourceProperties;
import com.azure.resourcemanager.signalr.models.ShareablePrivateLinkResourceType;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class PrivateLinkResourcePropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        PrivateLinkResourceProperties model =
            BinaryData
                .fromString(
                    "{\"groupId\":\"mnnrwr\",\"requiredMembers\":[\"rk\"],\"requiredZoneNames\":[\"ywjhhgdnhx\",\"sivfomilo\"],\"shareablePrivateLinkResourceTypes\":[{\"name\":\"ufiqndieuzaof\",\"properties\":{\"description\":\"vcyy\",\"groupId\":\"fgdo\",\"type\":\"ubiipuipwoqonma\"}},{\"name\":\"ekni\",\"properties\":{\"description\":\"qvci\",\"groupId\":\"ev\",\"type\":\"mblrrilbywd\"}}]}")
                .toObject(PrivateLinkResourceProperties.class);
        Assertions.assertEquals("mnnrwr", model.groupId());
        Assertions.assertEquals("rk", model.requiredMembers().get(0));
        Assertions.assertEquals("ywjhhgdnhx", model.requiredZoneNames().get(0));
        Assertions.assertEquals("ufiqndieuzaof", model.shareablePrivateLinkResourceTypes().get(0).name());
        Assertions.assertEquals("vcyy", model.shareablePrivateLinkResourceTypes().get(0).properties().description());
        Assertions.assertEquals("fgdo", model.shareablePrivateLinkResourceTypes().get(0).properties().groupId());
        Assertions
            .assertEquals("ubiipuipwoqonma", model.shareablePrivateLinkResourceTypes().get(0).properties().type());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        PrivateLinkResourceProperties model =
            new PrivateLinkResourceProperties()
                .withGroupId("mnnrwr")
                .withRequiredMembers(Arrays.asList("rk"))
                .withRequiredZoneNames(Arrays.asList("ywjhhgdnhx", "sivfomilo"))
                .withShareablePrivateLinkResourceTypes(
                    Arrays
                        .asList(
                            new ShareablePrivateLinkResourceType()
                                .withName("ufiqndieuzaof")
                                .withProperties(
                                    new ShareablePrivateLinkResourceProperties()
                                        .withDescription("vcyy")
                                        .withGroupId("fgdo")
                                        .withType("ubiipuipwoqonma")),
                            new ShareablePrivateLinkResourceType()
                                .withName("ekni")
                                .withProperties(
                                    new ShareablePrivateLinkResourceProperties()
                                        .withDescription("qvci")
                                        .withGroupId("ev")
                                        .withType("mblrrilbywd"))));
        model = BinaryData.fromObject(model).toObject(PrivateLinkResourceProperties.class);
        Assertions.assertEquals("mnnrwr", model.groupId());
        Assertions.assertEquals("rk", model.requiredMembers().get(0));
        Assertions.assertEquals("ywjhhgdnhx", model.requiredZoneNames().get(0));
        Assertions.assertEquals("ufiqndieuzaof", model.shareablePrivateLinkResourceTypes().get(0).name());
        Assertions.assertEquals("vcyy", model.shareablePrivateLinkResourceTypes().get(0).properties().description());
        Assertions.assertEquals("fgdo", model.shareablePrivateLinkResourceTypes().get(0).properties().groupId());
        Assertions
            .assertEquals("ubiipuipwoqonma", model.shareablePrivateLinkResourceTypes().get(0).properties().type());
    }
}
