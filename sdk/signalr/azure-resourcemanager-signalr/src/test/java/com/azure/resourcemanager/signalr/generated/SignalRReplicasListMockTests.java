// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.signalr.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.signalr.SignalRManager;
import com.azure.resourcemanager.signalr.models.Replica;
import com.azure.resourcemanager.signalr.models.SignalRSkuTier;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class SignalRReplicasListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"sku\":{\"name\":\"ohcmbu\",\"tier\":\"Standard\",\"size\":\"r\",\"family\":\"mbpyryxamebly\",\"capacity\":1356441160},\"properties\":{\"provisioningState\":\"Creating\",\"regionEndpointEnabled\":\"rocxnehvs\",\"resourceStopped\":\"odlfpyapucygvo\"},\"location\":\"yunssx\",\"tags\":{\"vvpa\":\"ieegjl\"},\"id\":\"eksgbuxantuygd\",\"name\":\"gaqi\",\"type\":\"irpiwrqofulopmj\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SignalRManager manager = SignalRManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Replica> response
            = manager.signalRReplicas().list("qfutlxjo", "zasunwqrjzfrgq", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("yunssx", response.iterator().next().location());
        Assertions.assertEquals("ieegjl", response.iterator().next().tags().get("vvpa"));
        Assertions.assertEquals("ohcmbu", response.iterator().next().sku().name());
        Assertions.assertEquals(SignalRSkuTier.STANDARD, response.iterator().next().sku().tier());
        Assertions.assertEquals(1356441160, response.iterator().next().sku().capacity());
        Assertions.assertEquals("rocxnehvs", response.iterator().next().regionEndpointEnabled());
        Assertions.assertEquals("odlfpyapucygvo", response.iterator().next().resourceStopped());
    }
}
