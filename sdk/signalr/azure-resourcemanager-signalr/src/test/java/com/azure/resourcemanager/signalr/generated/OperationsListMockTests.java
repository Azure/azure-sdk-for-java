// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.signalr.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.signalr.SignalRManager;
import com.azure.resourcemanager.signalr.models.Operation;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class OperationsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"name\":\"uqgsj\",\"isDataAction\":true,\"display\":{\"provider\":\"xgketwz\",\"resource\":\"zjhfjmhvv\",\"operation\":\"vgpmun\",\"description\":\"sx\"},\"origin\":\"hfbuzjyihsasbhud\",\"properties\":{\"serviceSpecification\":{\"metricSpecifications\":[{\"name\":\"emslynsqyrp\",\"displayName\":\"obrltt\",\"displayDescription\":\"sjnygqdnfwqzdzgt\",\"unit\":\"axhnfh\",\"aggregationType\":\"yvi\",\"fillGapWithZero\":\"uwivkxoy\",\"category\":\"nbixxrti\",\"dimensions\":[{},{}]}],\"logSpecifications\":[{\"name\":\"gclrci\",\"displayName\":\"soxfrken\"},{\"name\":\"m\",\"displayName\":\"efrp\"},{\"name\":\"dnqqskawaoqvmmb\",\"displayName\":\"qfr\"}]}}}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        SignalRManager manager = SignalRManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Operation> response = manager.operations().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("uqgsj", response.iterator().next().name());
        Assertions.assertEquals(true, response.iterator().next().isDataAction());
        Assertions.assertEquals("xgketwz", response.iterator().next().display().provider());
        Assertions.assertEquals("zjhfjmhvv", response.iterator().next().display().resource());
        Assertions.assertEquals("vgpmun", response.iterator().next().display().operation());
        Assertions.assertEquals("sx", response.iterator().next().display().description());
        Assertions.assertEquals("hfbuzjyihsasbhud", response.iterator().next().origin());
        Assertions.assertEquals("emslynsqyrp",
            response.iterator().next().properties().serviceSpecification().metricSpecifications().get(0).name());
        Assertions.assertEquals("obrltt",
            response.iterator().next().properties().serviceSpecification().metricSpecifications().get(0).displayName());
        Assertions.assertEquals("sjnygqdnfwqzdzgt",
            response.iterator()
                .next()
                .properties()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .displayDescription());
        Assertions.assertEquals("axhnfh",
            response.iterator().next().properties().serviceSpecification().metricSpecifications().get(0).unit());
        Assertions.assertEquals("yvi",
            response.iterator()
                .next()
                .properties()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .aggregationType());
        Assertions.assertEquals("uwivkxoy",
            response.iterator()
                .next()
                .properties()
                .serviceSpecification()
                .metricSpecifications()
                .get(0)
                .fillGapWithZero());
        Assertions.assertEquals("nbixxrti",
            response.iterator().next().properties().serviceSpecification().metricSpecifications().get(0).category());
        Assertions.assertEquals("gclrci",
            response.iterator().next().properties().serviceSpecification().logSpecifications().get(0).name());
        Assertions.assertEquals("soxfrken",
            response.iterator().next().properties().serviceSpecification().logSpecifications().get(0).displayName());
    }
}
