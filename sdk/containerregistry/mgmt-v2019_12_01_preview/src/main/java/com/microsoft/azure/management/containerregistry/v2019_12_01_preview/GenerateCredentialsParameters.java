/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.containerregistry.v2019_12_01_preview;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The parameters used to generate credentials for a specified token or user of
 * a container registry.
 */
public class GenerateCredentialsParameters {
    /**
     * The resource ID of the token for which credentials have to be generated.
     */
    @JsonProperty(value = "tokenId")
    private String tokenId;

    /**
     * The expiry date of the generated credentials after which the credentials
     * become invalid.
     */
    @JsonProperty(value = "expiry")
    private DateTime expiry;

    /**
     * Specifies name of the password which should be regenerated if any --
     * password1 or password2. Possible values include: 'password1',
     * 'password2'.
     */
    @JsonProperty(value = "name")
    private TokenPasswordName name;

    /**
     * Get the resource ID of the token for which credentials have to be generated.
     *
     * @return the tokenId value
     */
    public String tokenId() {
        return this.tokenId;
    }

    /**
     * Set the resource ID of the token for which credentials have to be generated.
     *
     * @param tokenId the tokenId value to set
     * @return the GenerateCredentialsParameters object itself.
     */
    public GenerateCredentialsParameters withTokenId(String tokenId) {
        this.tokenId = tokenId;
        return this;
    }

    /**
     * Get the expiry date of the generated credentials after which the credentials become invalid.
     *
     * @return the expiry value
     */
    public DateTime expiry() {
        return this.expiry;
    }

    /**
     * Set the expiry date of the generated credentials after which the credentials become invalid.
     *
     * @param expiry the expiry value to set
     * @return the GenerateCredentialsParameters object itself.
     */
    public GenerateCredentialsParameters withExpiry(DateTime expiry) {
        this.expiry = expiry;
        return this;
    }

    /**
     * Get specifies name of the password which should be regenerated if any -- password1 or password2. Possible values include: 'password1', 'password2'.
     *
     * @return the name value
     */
    public TokenPasswordName name() {
        return this.name;
    }

    /**
     * Set specifies name of the password which should be regenerated if any -- password1 or password2. Possible values include: 'password1', 'password2'.
     *
     * @param name the name value to set
     * @return the GenerateCredentialsParameters object itself.
     */
    public GenerateCredentialsParameters withName(TokenPasswordName name) {
        this.name = name;
        return this;
    }

}
