/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.containerregistry.v2019_12_01_preview;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The properties of a certificate used for authenticating a token.
 */
public class TokenCertificate {
    /**
     * Possible values include: 'certificate1', 'certificate2'.
     */
    @JsonProperty(value = "name")
    private TokenCertificateName name;

    /**
     * The expiry datetime of the certificate.
     */
    @JsonProperty(value = "expiry")
    private DateTime expiry;

    /**
     * The thumbprint of the certificate.
     */
    @JsonProperty(value = "thumbprint")
    private String thumbprint;

    /**
     * Base 64 encoded string of the public certificate1 in PEM format that
     * will be used for authenticating the token.
     */
    @JsonProperty(value = "encodedPemCertificate")
    private String encodedPemCertificate;

    /**
     * Get possible values include: 'certificate1', 'certificate2'.
     *
     * @return the name value
     */
    public TokenCertificateName name() {
        return this.name;
    }

    /**
     * Set possible values include: 'certificate1', 'certificate2'.
     *
     * @param name the name value to set
     * @return the TokenCertificate object itself.
     */
    public TokenCertificate withName(TokenCertificateName name) {
        this.name = name;
        return this;
    }

    /**
     * Get the expiry datetime of the certificate.
     *
     * @return the expiry value
     */
    public DateTime expiry() {
        return this.expiry;
    }

    /**
     * Set the expiry datetime of the certificate.
     *
     * @param expiry the expiry value to set
     * @return the TokenCertificate object itself.
     */
    public TokenCertificate withExpiry(DateTime expiry) {
        this.expiry = expiry;
        return this;
    }

    /**
     * Get the thumbprint of the certificate.
     *
     * @return the thumbprint value
     */
    public String thumbprint() {
        return this.thumbprint;
    }

    /**
     * Set the thumbprint of the certificate.
     *
     * @param thumbprint the thumbprint value to set
     * @return the TokenCertificate object itself.
     */
    public TokenCertificate withThumbprint(String thumbprint) {
        this.thumbprint = thumbprint;
        return this;
    }

    /**
     * Get base 64 encoded string of the public certificate1 in PEM format that will be used for authenticating the token.
     *
     * @return the encodedPemCertificate value
     */
    public String encodedPemCertificate() {
        return this.encodedPemCertificate;
    }

    /**
     * Set base 64 encoded string of the public certificate1 in PEM format that will be used for authenticating the token.
     *
     * @param encodedPemCertificate the encodedPemCertificate value to set
     * @return the TokenCertificate object itself.
     */
    public TokenCertificate withEncodedPemCertificate(String encodedPemCertificate) {
        this.encodedPemCertificate = encodedPemCertificate;
        return this;
    }

}
