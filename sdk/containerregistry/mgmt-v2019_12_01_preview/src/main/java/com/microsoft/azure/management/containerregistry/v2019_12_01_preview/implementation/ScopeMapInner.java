/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.containerregistry.v2019_12_01_preview.implementation;

import org.joda.time.DateTime;
import com.microsoft.azure.management.containerregistry.v2019_12_01_preview.ProvisioningState;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * An object that represents a scope map for a container registry.
 */
@JsonFlatten
public class ScopeMapInner extends ProxyResource {
    /**
     * The user friendly description of the scope map.
     */
    @JsonProperty(value = "properties.description")
    private String description;

    /**
     * The type of the scope map. E.g. BuildIn scope map.
     */
    @JsonProperty(value = "properties.type", access = JsonProperty.Access.WRITE_ONLY)
    private String scopeMapType;

    /**
     * The creation date of scope map.
     */
    @JsonProperty(value = "properties.creationDate", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime creationDate;

    /**
     * Provisioning state of the resource. Possible values include: 'Creating',
     * 'Updating', 'Deleting', 'Succeeded', 'Failed', 'Canceled'.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /**
     * The list of scoped permissions for registry artifacts.
     * E.g. repositories/repository-name/content/read,
     * repositories/repository-name/metadata/write.
     */
    @JsonProperty(value = "properties.actions", required = true)
    private List<String> actions;

    /**
     * Get the user friendly description of the scope map.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the user friendly description of the scope map.
     *
     * @param description the description value to set
     * @return the ScopeMapInner object itself.
     */
    public ScopeMapInner withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the type of the scope map. E.g. BuildIn scope map.
     *
     * @return the scopeMapType value
     */
    public String scopeMapType() {
        return this.scopeMapType;
    }

    /**
     * Get the creation date of scope map.
     *
     * @return the creationDate value
     */
    public DateTime creationDate() {
        return this.creationDate;
    }

    /**
     * Get provisioning state of the resource. Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed', 'Canceled'.
     *
     * @return the provisioningState value
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the list of scoped permissions for registry artifacts.
     E.g. repositories/repository-name/content/read,
     repositories/repository-name/metadata/write.
     *
     * @return the actions value
     */
    public List<String> actions() {
        return this.actions;
    }

    /**
     * Set the list of scoped permissions for registry artifacts.
     E.g. repositories/repository-name/content/read,
     repositories/repository-name/metadata/write.
     *
     * @param actions the actions value to set
     * @return the ScopeMapInner object itself.
     */
    public ScopeMapInner withActions(List<String> actions) {
        this.actions = actions;
        return this;
    }

}
