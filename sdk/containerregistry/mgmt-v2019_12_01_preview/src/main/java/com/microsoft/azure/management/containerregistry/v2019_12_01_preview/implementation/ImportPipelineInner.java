/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.containerregistry.v2019_12_01_preview.implementation;

import com.microsoft.azure.management.containerregistry.v2019_12_01_preview.IdentityProperties;
import com.microsoft.azure.management.containerregistry.v2019_12_01_preview.ImportPipelineSourceProperties;
import com.microsoft.azure.management.containerregistry.v2019_12_01_preview.PipelineTriggerProperties;
import java.util.List;
import com.microsoft.azure.management.containerregistry.v2019_12_01_preview.PipelineOptions;
import com.microsoft.azure.management.containerregistry.v2019_12_01_preview.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * An object that represents an import pipeline for a container registry.
 */
@JsonFlatten
public class ImportPipelineInner extends ProxyResource {
    /**
     * The identity of the import pipeline.
     */
    @JsonProperty(value = "identity")
    private IdentityProperties identity;

    /**
     * The source properties of the import pipeline.
     */
    @JsonProperty(value = "properties.source", required = true)
    private ImportPipelineSourceProperties source;

    /**
     * The properties that describe the trigger of the import pipeline.
     */
    @JsonProperty(value = "properties.trigger")
    private PipelineTriggerProperties trigger;

    /**
     * The list of all options configured for the pipeline.
     */
    @JsonProperty(value = "properties.options")
    private List<PipelineOptions> options;

    /**
     * The provisioning state of the pipeline at the time the operation was
     * called. Possible values include: 'Creating', 'Updating', 'Deleting',
     * 'Succeeded', 'Failed', 'Canceled'.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /**
     * Get the identity of the import pipeline.
     *
     * @return the identity value
     */
    public IdentityProperties identity() {
        return this.identity;
    }

    /**
     * Set the identity of the import pipeline.
     *
     * @param identity the identity value to set
     * @return the ImportPipelineInner object itself.
     */
    public ImportPipelineInner withIdentity(IdentityProperties identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the source properties of the import pipeline.
     *
     * @return the source value
     */
    public ImportPipelineSourceProperties source() {
        return this.source;
    }

    /**
     * Set the source properties of the import pipeline.
     *
     * @param source the source value to set
     * @return the ImportPipelineInner object itself.
     */
    public ImportPipelineInner withSource(ImportPipelineSourceProperties source) {
        this.source = source;
        return this;
    }

    /**
     * Get the properties that describe the trigger of the import pipeline.
     *
     * @return the trigger value
     */
    public PipelineTriggerProperties trigger() {
        return this.trigger;
    }

    /**
     * Set the properties that describe the trigger of the import pipeline.
     *
     * @param trigger the trigger value to set
     * @return the ImportPipelineInner object itself.
     */
    public ImportPipelineInner withTrigger(PipelineTriggerProperties trigger) {
        this.trigger = trigger;
        return this;
    }

    /**
     * Get the list of all options configured for the pipeline.
     *
     * @return the options value
     */
    public List<PipelineOptions> options() {
        return this.options;
    }

    /**
     * Set the list of all options configured for the pipeline.
     *
     * @param options the options value to set
     * @return the ImportPipelineInner object itself.
     */
    public ImportPipelineInner withOptions(List<PipelineOptions> options) {
        this.options = options;
        return this;
    }

    /**
     * Get the provisioning state of the pipeline at the time the operation was called. Possible values include: 'Creating', 'Updating', 'Deleting', 'Succeeded', 'Failed', 'Canceled'.
     *
     * @return the provisioningState value
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

}
