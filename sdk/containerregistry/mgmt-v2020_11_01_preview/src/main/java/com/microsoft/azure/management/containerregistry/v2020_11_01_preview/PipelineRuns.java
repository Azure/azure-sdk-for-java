/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.containerregistry.v2020_11_01_preview;

import com.microsoft.azure.arm.collection.SupportsCreating;
import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.containerregistry.v2020_11_01_preview.implementation.PipelineRunsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing PipelineRuns.
 */
public interface PipelineRuns extends SupportsCreating<PipelineRun.DefinitionStages.Blank>, HasInner<PipelineRunsInner> {
    /**
     * Gets the detailed information for a given pipeline run.
     *
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param pipelineRunName The name of the pipeline run.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<PipelineRun> getAsync(String resourceGroupName, String registryName, String pipelineRunName);

    /**
     * Lists all the pipeline runs for the specified container registry.
     *
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<PipelineRun> listAsync(final String resourceGroupName, final String registryName);

    /**
     * Deletes a pipeline run from a container registry.
     *
     * @param resourceGroupName The name of the resource group to which the container registry belongs.
     * @param registryName The name of the container registry.
     * @param pipelineRunName The name of the pipeline run.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String registryName, String pipelineRunName);

}
