/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.containerregistry.v2020_11_01_preview;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * The parameters for updating a token.
 */
@JsonFlatten
public class TokenUpdateParameters {
    /**
     * The resource ID of the scope map to which the token will be associated
     * with.
     */
    @JsonProperty(value = "properties.scopeMapId")
    private String scopeMapId;

    /**
     * The status of the token example enabled or disabled. Possible values
     * include: 'enabled', 'disabled'.
     */
    @JsonProperty(value = "properties.status")
    private TokenStatus status;

    /**
     * The credentials that can be used for authenticating the token.
     */
    @JsonProperty(value = "properties.credentials")
    private TokenCredentialsProperties credentials;

    /**
     * Get the resource ID of the scope map to which the token will be associated with.
     *
     * @return the scopeMapId value
     */
    public String scopeMapId() {
        return this.scopeMapId;
    }

    /**
     * Set the resource ID of the scope map to which the token will be associated with.
     *
     * @param scopeMapId the scopeMapId value to set
     * @return the TokenUpdateParameters object itself.
     */
    public TokenUpdateParameters withScopeMapId(String scopeMapId) {
        this.scopeMapId = scopeMapId;
        return this;
    }

    /**
     * Get the status of the token example enabled or disabled. Possible values include: 'enabled', 'disabled'.
     *
     * @return the status value
     */
    public TokenStatus status() {
        return this.status;
    }

    /**
     * Set the status of the token example enabled or disabled. Possible values include: 'enabled', 'disabled'.
     *
     * @param status the status value to set
     * @return the TokenUpdateParameters object itself.
     */
    public TokenUpdateParameters withStatus(TokenStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the credentials that can be used for authenticating the token.
     *
     * @return the credentials value
     */
    public TokenCredentialsProperties credentials() {
        return this.credentials;
    }

    /**
     * Set the credentials that can be used for authenticating the token.
     *
     * @param credentials the credentials value to set
     * @return the TokenUpdateParameters object itself.
     */
    public TokenUpdateParameters withCredentials(TokenCredentialsProperties credentials) {
        this.credentials = credentials;
        return this;
    }

}
