/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.containerregistry.v2020_11_01_preview;

import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * The parameters for updating a container registry.
 */
@JsonFlatten
public class RegistryUpdateParameters {
    /**
     * The tags for the container registry.
     */
    @JsonProperty(value = "tags")
    private Map<String, String> tags;

    /**
     * The SKU of the container registry.
     */
    @JsonProperty(value = "sku")
    private Sku sku;

    /**
     * The identity of the container registry.
     */
    @JsonProperty(value = "identity")
    private IdentityProperties identity;

    /**
     * The value that indicates whether the admin user is enabled.
     */
    @JsonProperty(value = "properties.adminUserEnabled")
    private Boolean adminUserEnabled;

    /**
     * The network rule set for a container registry.
     */
    @JsonProperty(value = "properties.networkRuleSet")
    private NetworkRuleSet networkRuleSet;

    /**
     * The policies for a container registry.
     */
    @JsonProperty(value = "properties.policies")
    private Policies policies;

    /**
     * The encryption settings of container registry.
     */
    @JsonProperty(value = "properties.encryption")
    private EncryptionProperty encryption;

    /**
     * Enable a single data endpoint per region for serving data.
     */
    @JsonProperty(value = "properties.dataEndpointEnabled")
    private Boolean dataEndpointEnabled;

    /**
     * Whether or not public network access is allowed for the container
     * registry. Possible values include: 'Enabled', 'Disabled'.
     */
    @JsonProperty(value = "properties.publicNetworkAccess")
    private PublicNetworkAccess publicNetworkAccess;

    /**
     * Whether to allow trusted Azure services to access a network restricted
     * registry. Possible values include: 'AzureServices', 'None'.
     */
    @JsonProperty(value = "properties.networkRuleBypassOptions")
    private NetworkRuleBypassOptions networkRuleBypassOptions;

    /**
     * Get the tags for the container registry.
     *
     * @return the tags value
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags for the container registry.
     *
     * @param tags the tags value to set
     * @return the RegistryUpdateParameters object itself.
     */
    public RegistryUpdateParameters withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get the SKU of the container registry.
     *
     * @return the sku value
     */
    public Sku sku() {
        return this.sku;
    }

    /**
     * Set the SKU of the container registry.
     *
     * @param sku the sku value to set
     * @return the RegistryUpdateParameters object itself.
     */
    public RegistryUpdateParameters withSku(Sku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get the identity of the container registry.
     *
     * @return the identity value
     */
    public IdentityProperties identity() {
        return this.identity;
    }

    /**
     * Set the identity of the container registry.
     *
     * @param identity the identity value to set
     * @return the RegistryUpdateParameters object itself.
     */
    public RegistryUpdateParameters withIdentity(IdentityProperties identity) {
        this.identity = identity;
        return this;
    }

    /**
     * Get the value that indicates whether the admin user is enabled.
     *
     * @return the adminUserEnabled value
     */
    public Boolean adminUserEnabled() {
        return this.adminUserEnabled;
    }

    /**
     * Set the value that indicates whether the admin user is enabled.
     *
     * @param adminUserEnabled the adminUserEnabled value to set
     * @return the RegistryUpdateParameters object itself.
     */
    public RegistryUpdateParameters withAdminUserEnabled(Boolean adminUserEnabled) {
        this.adminUserEnabled = adminUserEnabled;
        return this;
    }

    /**
     * Get the network rule set for a container registry.
     *
     * @return the networkRuleSet value
     */
    public NetworkRuleSet networkRuleSet() {
        return this.networkRuleSet;
    }

    /**
     * Set the network rule set for a container registry.
     *
     * @param networkRuleSet the networkRuleSet value to set
     * @return the RegistryUpdateParameters object itself.
     */
    public RegistryUpdateParameters withNetworkRuleSet(NetworkRuleSet networkRuleSet) {
        this.networkRuleSet = networkRuleSet;
        return this;
    }

    /**
     * Get the policies for a container registry.
     *
     * @return the policies value
     */
    public Policies policies() {
        return this.policies;
    }

    /**
     * Set the policies for a container registry.
     *
     * @param policies the policies value to set
     * @return the RegistryUpdateParameters object itself.
     */
    public RegistryUpdateParameters withPolicies(Policies policies) {
        this.policies = policies;
        return this;
    }

    /**
     * Get the encryption settings of container registry.
     *
     * @return the encryption value
     */
    public EncryptionProperty encryption() {
        return this.encryption;
    }

    /**
     * Set the encryption settings of container registry.
     *
     * @param encryption the encryption value to set
     * @return the RegistryUpdateParameters object itself.
     */
    public RegistryUpdateParameters withEncryption(EncryptionProperty encryption) {
        this.encryption = encryption;
        return this;
    }

    /**
     * Get enable a single data endpoint per region for serving data.
     *
     * @return the dataEndpointEnabled value
     */
    public Boolean dataEndpointEnabled() {
        return this.dataEndpointEnabled;
    }

    /**
     * Set enable a single data endpoint per region for serving data.
     *
     * @param dataEndpointEnabled the dataEndpointEnabled value to set
     * @return the RegistryUpdateParameters object itself.
     */
    public RegistryUpdateParameters withDataEndpointEnabled(Boolean dataEndpointEnabled) {
        this.dataEndpointEnabled = dataEndpointEnabled;
        return this;
    }

    /**
     * Get whether or not public network access is allowed for the container registry. Possible values include: 'Enabled', 'Disabled'.
     *
     * @return the publicNetworkAccess value
     */
    public PublicNetworkAccess publicNetworkAccess() {
        return this.publicNetworkAccess;
    }

    /**
     * Set whether or not public network access is allowed for the container registry. Possible values include: 'Enabled', 'Disabled'.
     *
     * @param publicNetworkAccess the publicNetworkAccess value to set
     * @return the RegistryUpdateParameters object itself.
     */
    public RegistryUpdateParameters withPublicNetworkAccess(PublicNetworkAccess publicNetworkAccess) {
        this.publicNetworkAccess = publicNetworkAccess;
        return this;
    }

    /**
     * Get whether to allow trusted Azure services to access a network restricted registry. Possible values include: 'AzureServices', 'None'.
     *
     * @return the networkRuleBypassOptions value
     */
    public NetworkRuleBypassOptions networkRuleBypassOptions() {
        return this.networkRuleBypassOptions;
    }

    /**
     * Set whether to allow trusted Azure services to access a network restricted registry. Possible values include: 'AzureServices', 'None'.
     *
     * @param networkRuleBypassOptions the networkRuleBypassOptions value to set
     * @return the RegistryUpdateParameters object itself.
     */
    public RegistryUpdateParameters withNetworkRuleBypassOptions(NetworkRuleBypassOptions networkRuleBypassOptions) {
        this.networkRuleBypassOptions = networkRuleBypassOptions;
        return this;
    }

}
