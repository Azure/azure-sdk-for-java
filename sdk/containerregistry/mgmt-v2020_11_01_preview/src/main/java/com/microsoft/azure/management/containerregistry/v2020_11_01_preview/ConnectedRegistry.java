/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.containerregistry.v2020_11_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.containerregistry.v2020_11_01_preview.implementation.ConnectedRegistryInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.containerregistry.v2020_11_01_preview.implementation.ContainerRegistryManager;
import java.util.List;
import org.joda.time.DateTime;

/**
 * Type representing ConnectedRegistry.
 */
public interface ConnectedRegistry extends HasInner<ConnectedRegistryInner>, Indexable, Refreshable<ConnectedRegistry>, Updatable<ConnectedRegistry.Update>, HasManager<ContainerRegistryManager> {
    /**
     * @return the activation value.
     */
    ActivationProperties activation();

    /**
     * @return the clientTokenIds value.
     */
    List<String> clientTokenIds();

    /**
     * @return the connectionState value.
     */
    ConnectionState connectionState();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the lastActivityTime value.
     */
    DateTime lastActivityTime();

    /**
     * @return the logging value.
     */
    LoggingProperties logging();

    /**
     * @return the loginServer value.
     */
    LoginServerProperties loginServer();

    /**
     * @return the mode value.
     */
    ConnectedRegistryMode mode();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the parent value.
     */
    ParentProperties parent();

    /**
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * @return the statusDetails value.
     */
    List<StatusDetailProperties> statusDetails();

    /**
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the version value.
     */
    String version();

    /**
     * The entirety of the ConnectedRegistry definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithRegistry, DefinitionStages.WithMode, DefinitionStages.WithParent, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of ConnectedRegistry definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a ConnectedRegistry definition.
         */
        interface Blank extends WithRegistry {
        }

        /**
         * The stage of the connectedregistry definition allowing to specify Registry.
         */
        interface WithRegistry {
           /**
            * Specifies resourceGroupName, registryName.
            * @param resourceGroupName The name of the resource group to which the container registry belongs
            * @param registryName The name of the container registry
            * @return the next definition stage
            */
            WithMode withExistingRegistry(String resourceGroupName, String registryName);
        }

        /**
         * The stage of the connectedregistry definition allowing to specify Mode.
         */
        interface WithMode {
           /**
            * Specifies mode.
            * @param mode The mode of the connected registry resource that indicates the permissions of the registry. Possible values include: 'Registry', 'Mirror'
            * @return the next definition stage
            */
            WithParent withMode(ConnectedRegistryMode mode);
        }

        /**
         * The stage of the connectedregistry definition allowing to specify Parent.
         */
        interface WithParent {
           /**
            * Specifies parent.
            * @param parent The parent of the connected registry
            * @return the next definition stage
            */
            WithCreate withParent(ParentProperties parent);
        }

        /**
         * The stage of the connectedregistry definition allowing to specify ClientTokenIds.
         */
        interface WithClientTokenIds {
            /**
             * Specifies clientTokenIds.
             * @param clientTokenIds The list of the ACR token resource IDs used to authenticate clients to the connected registry
             * @return the next definition stage
             */
            WithCreate withClientTokenIds(List<String> clientTokenIds);
        }

        /**
         * The stage of the connectedregistry definition allowing to specify Logging.
         */
        interface WithLogging {
            /**
             * Specifies logging.
             * @param logging The logging properties of the connected registry
             * @return the next definition stage
             */
            WithCreate withLogging(LoggingProperties logging);
        }

        /**
         * The stage of the connectedregistry definition allowing to specify LoginServer.
         */
        interface WithLoginServer {
            /**
             * Specifies loginServer.
             * @param loginServer The login server properties of the connected registry
             * @return the next definition stage
             */
            WithCreate withLoginServer(LoginServerProperties loginServer);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<ConnectedRegistry>, DefinitionStages.WithClientTokenIds, DefinitionStages.WithLogging, DefinitionStages.WithLoginServer {
        }
    }
    /**
     * The template for a ConnectedRegistry update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<ConnectedRegistry>, UpdateStages.WithClientTokenIds, UpdateStages.WithLogging, UpdateStages.WithSyncProperties {
    }

    /**
     * Grouping of ConnectedRegistry update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the connectedregistry update allowing to specify ClientTokenIds.
         */
        interface WithClientTokenIds {
            /**
             * Specifies clientTokenIds.
             * @param clientTokenIds The list of the ACR token resource IDs used to authenticate clients to the connected registry
             * @return the next update stage
             */
            Update withClientTokenIds(List<String> clientTokenIds);
        }

        /**
         * The stage of the connectedregistry update allowing to specify Logging.
         */
        interface WithLogging {
            /**
             * Specifies logging.
             * @param logging The logging properties of the connected registry
             * @return the next update stage
             */
            Update withLogging(LoggingProperties logging);
        }

        /**
         * The stage of the connectedregistry update allowing to specify SyncProperties.
         */
        interface WithSyncProperties {
            /**
             * Specifies syncProperties.
             * @param syncProperties The sync properties of the connected registry with its parent
             * @return the next update stage
             */
            Update withSyncProperties(SyncUpdateProperties syncProperties);
        }

    }
}
