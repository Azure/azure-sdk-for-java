// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.containers.containerregistry.implementation.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;

/** Additional information provided through arbitrary metadata. */
@Fluent
public final class Annotations {
    /*
     * Date and time on which the image was built (string, date-time as defined
     * by https://tools.ietf.org/html/rfc3339#section-5.6)
     */
    @JsonProperty(value = "org.opencontainers.image.created")
    private OffsetDateTime created;

    /*
     * Contact details of the people or organization responsible for the image.
     */
    @JsonProperty(value = "org.opencontainers.image.authors")
    private String authors;

    /*
     * URL to find more information on the image.
     */
    @JsonProperty(value = "org.opencontainers.image.url")
    private String url;

    /*
     * URL to get documentation on the image.
     */
    @JsonProperty(value = "org.opencontainers.image.documentation")
    private String documentation;

    /*
     * URL to get source code for building the image.
     */
    @JsonProperty(value = "org.opencontainers.image.source")
    private String source;

    /*
     * Version of the packaged software. The version MAY match a label or tag
     * in the source code repository, may also be Semantic
     * versioning-compatible
     */
    @JsonProperty(value = "org.opencontainers.image.version")
    private String version;

    /*
     * Source control revision identifier for the packaged software.
     */
    @JsonProperty(value = "org.opencontainers.image.revision")
    private String revision;

    /*
     * Name of the distributing entity, organization or individual.
     */
    @JsonProperty(value = "org.opencontainers.image.vendor")
    private String vendor;

    /*
     * License(s) under which contained software is distributed as an SPDX
     * License Expression.
     */
    @JsonProperty(value = "org.opencontainers.image.licenses")
    private String licenses;

    /*
     * Name of the reference for a target.
     */
    @JsonProperty(value = "org.opencontainers.image.ref.name")
    private String name;

    /*
     * Human-readable title of the image
     */
    @JsonProperty(value = "org.opencontainers.image.title")
    private String title;

    /*
     * Human-readable description of the software packaged in the image
     */
    @JsonProperty(value = "org.opencontainers.image.description")
    private String description;

    /*
     * Additional information provided through arbitrary metadata.
     */
    @JsonIgnore private Map<String, Object> additionalProperties;

    /**
     * Get the created property: Date and time on which the image was built (string, date-time as defined by
     * https://tools.ietf.org/html/rfc3339#section-5.6).
     *
     * @return the created value.
     */
    public OffsetDateTime getCreated() {
        return this.created;
    }

    /**
     * Set the created property: Date and time on which the image was built (string, date-time as defined by
     * https://tools.ietf.org/html/rfc3339#section-5.6).
     *
     * @param created the created value to set.
     * @return the Annotations object itself.
     */
    public Annotations setCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }

    /**
     * Get the authors property: Contact details of the people or organization responsible for the image.
     *
     * @return the authors value.
     */
    public String getAuthors() {
        return this.authors;
    }

    /**
     * Set the authors property: Contact details of the people or organization responsible for the image.
     *
     * @param authors the authors value to set.
     * @return the Annotations object itself.
     */
    public Annotations setAuthors(String authors) {
        this.authors = authors;
        return this;
    }

    /**
     * Get the url property: URL to find more information on the image.
     *
     * @return the url value.
     */
    public String getUrl() {
        return this.url;
    }

    /**
     * Set the url property: URL to find more information on the image.
     *
     * @param url the url value to set.
     * @return the Annotations object itself.
     */
    public Annotations setUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * Get the documentation property: URL to get documentation on the image.
     *
     * @return the documentation value.
     */
    public String getDocumentation() {
        return this.documentation;
    }

    /**
     * Set the documentation property: URL to get documentation on the image.
     *
     * @param documentation the documentation value to set.
     * @return the Annotations object itself.
     */
    public Annotations setDocumentation(String documentation) {
        this.documentation = documentation;
        return this;
    }

    /**
     * Get the source property: URL to get source code for building the image.
     *
     * @return the source value.
     */
    public String getSource() {
        return this.source;
    }

    /**
     * Set the source property: URL to get source code for building the image.
     *
     * @param source the source value to set.
     * @return the Annotations object itself.
     */
    public Annotations setSource(String source) {
        this.source = source;
        return this;
    }

    /**
     * Get the version property: Version of the packaged software. The version MAY match a label or tag in the source
     * code repository, may also be Semantic versioning-compatible.
     *
     * @return the version value.
     */
    public String getVersion() {
        return this.version;
    }

    /**
     * Set the version property: Version of the packaged software. The version MAY match a label or tag in the source
     * code repository, may also be Semantic versioning-compatible.
     *
     * @param version the version value to set.
     * @return the Annotations object itself.
     */
    public Annotations setVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get the revision property: Source control revision identifier for the packaged software.
     *
     * @return the revision value.
     */
    public String getRevision() {
        return this.revision;
    }

    /**
     * Set the revision property: Source control revision identifier for the packaged software.
     *
     * @param revision the revision value to set.
     * @return the Annotations object itself.
     */
    public Annotations setRevision(String revision) {
        this.revision = revision;
        return this;
    }

    /**
     * Get the vendor property: Name of the distributing entity, organization or individual.
     *
     * @return the vendor value.
     */
    public String getVendor() {
        return this.vendor;
    }

    /**
     * Set the vendor property: Name of the distributing entity, organization or individual.
     *
     * @param vendor the vendor value to set.
     * @return the Annotations object itself.
     */
    public Annotations setVendor(String vendor) {
        this.vendor = vendor;
        return this;
    }

    /**
     * Get the licenses property: License(s) under which contained software is distributed as an SPDX License
     * Expression.
     *
     * @return the licenses value.
     */
    public String getLicenses() {
        return this.licenses;
    }

    /**
     * Set the licenses property: License(s) under which contained software is distributed as an SPDX License
     * Expression.
     *
     * @param licenses the licenses value to set.
     * @return the Annotations object itself.
     */
    public Annotations setLicenses(String licenses) {
        this.licenses = licenses;
        return this;
    }

    /**
     * Get the name property: Name of the reference for a target.
     *
     * @return the name value.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Set the name property: Name of the reference for a target.
     *
     * @param name the name value to set.
     * @return the Annotations object itself.
     */
    public Annotations setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the title property: Human-readable title of the image.
     *
     * @return the title value.
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Set the title property: Human-readable title of the image.
     *
     * @param title the title value to set.
     * @return the Annotations object itself.
     */
    public Annotations setTitle(String title) {
        this.title = title;
        return this;
    }

    /**
     * Get the description property: Human-readable description of the software packaged in the image.
     *
     * @return the description value.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Set the description property: Human-readable description of the software packaged in the image.
     *
     * @param description the description value to set.
     * @return the Annotations object itself.
     */
    public Annotations setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the additionalProperties property: Additional information provided through arbitrary metadata.
     *
     * @return the additionalProperties value.
     */
    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set the additionalProperties property: Additional information provided through arbitrary metadata.
     *
     * @param additionalProperties the additionalProperties value to set.
     * @return the Annotations object itself.
     */
    public Annotations setAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    @JsonAnySetter
    void setAdditionalProperties(String key, Object value) {
        if (additionalProperties == null) {
            additionalProperties = new HashMap<>();
        }
        additionalProperties.put(key, value);
    }
}
