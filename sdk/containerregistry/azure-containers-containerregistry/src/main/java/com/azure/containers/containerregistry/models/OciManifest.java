// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.containers.containerregistry.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** Returns the requested OCI Manifest file. */
@Fluent
public final class OciManifest {
    /*
     * V2 image config descriptor
     */
    @JsonProperty(value = "config")
    private OciBlobDescriptor config;

    /*
     * List of V2 image layer information
     */
    @JsonProperty(value = "layers")
    private List<OciBlobDescriptor> layers;

    /*
     * Additional information provided through arbitrary metadata.
     */
    @JsonProperty(value = "annotations")
    private OciAnnotations annotations;

    /*
     * Schema version
     */
    @JsonProperty(value = "schemaVersion")
    private Integer schemaVersion;

    /** Creates an instance of OciManifest class. */
    public OciManifest() {}

    /**
     * Get the config property: V2 image config descriptor.
     *
     * @return the config value.
     */
    public OciBlobDescriptor getConfig() {
        return this.config;
    }

    /**
     * Set the config property: V2 image config descriptor.
     *
     * @param config the config value to set.
     * @return the OciManifest object itself.
     */
    public OciManifest setConfig(OciBlobDescriptor config) {
        this.config = config;
        return this;
    }

    /**
     * Get the layers property: List of V2 image layer information.
     *
     * @return the layers value.
     */
    public List<OciBlobDescriptor> getLayers() {
        return this.layers;
    }

    /**
     * Set the layers property: List of V2 image layer information.
     *
     * @param layers the layers value to set.
     * @return the OciManifest object itself.
     */
    public OciManifest setLayers(List<OciBlobDescriptor> layers) {
        this.layers = layers;
        return this;
    }

    /**
     * Get the annotations property: Additional information provided through arbitrary metadata.
     *
     * @return the annotations value.
     */
    public OciAnnotations getAnnotations() {
        return this.annotations;
    }

    /**
     * Set the annotations property: Additional information provided through arbitrary metadata.
     *
     * @param annotations the annotations value to set.
     * @return the OciManifest object itself.
     */
    public OciManifest setAnnotations(OciAnnotations annotations) {
        this.annotations = annotations;
        return this;
    }

    /**
     * Get the schemaVersion property: Schema version.
     *
     * @return the schemaVersion value.
     */
    public Integer getSchemaVersion() {
        return this.schemaVersion;
    }

    /**
     * Set the schemaVersion property: Schema version.
     *
     * @param schemaVersion the schemaVersion value to set.
     * @return the OciManifest object itself.
     */
    public OciManifest setSchemaVersion(Integer schemaVersion) {
        this.schemaVersion = schemaVersion;
        return this;
    }
}
