// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.implementation;

import com.azure.core.annotation.ServiceClient;
import com.azure.core.http.HttpPipeline;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.util.serializer.SerializerAdapter;
import com.azure.resourcemanager.containerregistry.fluent.AgentPoolsClient;
import com.azure.resourcemanager.containerregistry.fluent.ContainerRegistryTasksManagementClient;
import com.azure.resourcemanager.containerregistry.fluent.RegistryTasksClient;
import com.azure.resourcemanager.containerregistry.fluent.RunsClient;
import com.azure.resourcemanager.containerregistry.fluent.TaskRunsClient;
import com.azure.resourcemanager.containerregistry.fluent.TasksClient;
import com.azure.resourcemanager.resources.fluentcore.AzureServiceClient;
import java.time.Duration;

/**
 * Initializes a new instance of the ContainerRegistryTasksManagementClientImpl type.
 */
@ServiceClient(builder = ContainerRegistryTasksManagementClientBuilder.class)
public final class ContainerRegistryTasksManagementClientImpl extends AzureServiceClient
    implements ContainerRegistryTasksManagementClient {
    /**
     * The Microsoft Azure subscription ID.
     */
    private final String subscriptionId;

    /**
     * Gets The Microsoft Azure subscription ID.
     * 
     * @return the subscriptionId value.
     */
    public String getSubscriptionId() {
        return this.subscriptionId;
    }

    /**
     * server parameter.
     */
    private final String endpoint;

    /**
     * Gets server parameter.
     * 
     * @return the endpoint value.
     */
    public String getEndpoint() {
        return this.endpoint;
    }

    /**
     * Api Version.
     */
    private final String apiVersion;

    /**
     * Gets Api Version.
     * 
     * @return the apiVersion value.
     */
    public String getApiVersion() {
        return this.apiVersion;
    }

    /**
     * The HTTP pipeline to send requests through.
     */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     * 
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /**
     * The serializer to serialize an object into a string.
     */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     * 
     * @return the serializerAdapter value.
     */
    SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /**
     * The default poll interval for long-running operation.
     */
    private final Duration defaultPollInterval;

    /**
     * Gets The default poll interval for long-running operation.
     * 
     * @return the defaultPollInterval value.
     */
    public Duration getDefaultPollInterval() {
        return this.defaultPollInterval;
    }

    /**
     * The AgentPoolsClient object to access its operations.
     */
    private final AgentPoolsClient agentPools;

    /**
     * Gets the AgentPoolsClient object to access its operations.
     * 
     * @return the AgentPoolsClient object.
     */
    public AgentPoolsClient getAgentPools() {
        return this.agentPools;
    }

    /**
     * The RegistryTasksClient object to access its operations.
     */
    private final RegistryTasksClient registryTasks;

    /**
     * Gets the RegistryTasksClient object to access its operations.
     * 
     * @return the RegistryTasksClient object.
     */
    public RegistryTasksClient getRegistryTasks() {
        return this.registryTasks;
    }

    /**
     * The RunsClient object to access its operations.
     */
    private final RunsClient runs;

    /**
     * Gets the RunsClient object to access its operations.
     * 
     * @return the RunsClient object.
     */
    public RunsClient getRuns() {
        return this.runs;
    }

    /**
     * The TaskRunsClient object to access its operations.
     */
    private final TaskRunsClient taskRuns;

    /**
     * Gets the TaskRunsClient object to access its operations.
     * 
     * @return the TaskRunsClient object.
     */
    public TaskRunsClient getTaskRuns() {
        return this.taskRuns;
    }

    /**
     * The TasksClient object to access its operations.
     */
    private final TasksClient tasks;

    /**
     * Gets the TasksClient object to access its operations.
     * 
     * @return the TasksClient object.
     */
    public TasksClient getTasks() {
        return this.tasks;
    }

    /**
     * Initializes an instance of ContainerRegistryTasksManagementClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     * @param defaultPollInterval The default poll interval for long-running operation.
     * @param environment The Azure environment.
     * @param subscriptionId The Microsoft Azure subscription ID.
     * @param endpoint server parameter.
     */
    ContainerRegistryTasksManagementClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter,
        Duration defaultPollInterval, AzureEnvironment environment, String subscriptionId, String endpoint) {
        super(httpPipeline, serializerAdapter, environment);
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.defaultPollInterval = defaultPollInterval;
        this.subscriptionId = subscriptionId;
        this.endpoint = endpoint;
        this.apiVersion = "2019-06-01-preview";
        this.agentPools = new AgentPoolsClientImpl(this);
        this.registryTasks = new RegistryTasksClientImpl(this);
        this.runs = new RunsClientImpl(this);
        this.taskRuns = new TaskRunsClientImpl(this);
        this.tasks = new TasksClientImpl(this);
    }
}
