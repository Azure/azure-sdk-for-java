// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.generated.generated;

import com.azure.core.util.Context;
import com.azure.resourcemanager.containerregistry.generated.models.AgentProperties;
import com.azure.resourcemanager.containerregistry.generated.models.AuthInfoUpdateParameters;
import com.azure.resourcemanager.containerregistry.generated.models.Credentials;
import com.azure.resourcemanager.containerregistry.generated.models.CustomRegistryCredentials;
import com.azure.resourcemanager.containerregistry.generated.models.DockerBuildStepUpdateParameters;
import com.azure.resourcemanager.containerregistry.generated.models.SecretObject;
import com.azure.resourcemanager.containerregistry.generated.models.SecretObjectType;
import com.azure.resourcemanager.containerregistry.generated.models.SourceTriggerEvent;
import com.azure.resourcemanager.containerregistry.generated.models.SourceTriggerUpdateParameters;
import com.azure.resourcemanager.containerregistry.generated.models.SourceUpdateParameters;
import com.azure.resourcemanager.containerregistry.generated.models.Task;
import com.azure.resourcemanager.containerregistry.generated.models.TaskStatus;
import com.azure.resourcemanager.containerregistry.generated.models.TokenType;
import com.azure.resourcemanager.containerregistry.generated.models.TriggerUpdateParameters;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

/** Samples for Tasks Update. */
public final class TasksUpdateSamples {
    /*
     * x-ms-original-file: specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/preview/2019-06-01-preview/examples/TasksUpdate_QuickTask.json
     */
    /**
     * Sample code: Tasks_Update_QuickTask.
     *
     * @param manager Entry point to ContainerRegistryManager.
     */
    public static void tasksUpdateQuickTask(
        com.azure.resourcemanager.containerregistry.generated.ContainerRegistryManager manager) {
        Task resource =
            manager.tasks().getWithResponse("myResourceGroup", "myRegistry", "quicktask", Context.NONE).getValue();
        resource
            .update()
            .withTags(mapOf("testkey", "value"))
            .withStatus(TaskStatus.ENABLED)
            .withLogTemplate("acr/tasks:{{.Run.OS}}")
            .apply();
    }

    /*
     * x-ms-original-file: specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/preview/2019-06-01-preview/examples/ManagedIdentity/TasksUpdate_WithMSICustomCredentials.json
     */
    /**
     * Sample code: Tasks_Update_WithMSICustomCredentials.
     *
     * @param manager Entry point to ContainerRegistryManager.
     */
    public static void tasksUpdateWithMSICustomCredentials(
        com.azure.resourcemanager.containerregistry.generated.ContainerRegistryManager manager) {
        Task resource =
            manager.tasks().getWithResponse("myResourceGroup", "myRegistry", "myTask", Context.NONE).getValue();
        resource
            .update()
            .withTags(mapOf("testkey", "value"))
            .withStatus(TaskStatus.ENABLED)
            .withAgentConfiguration(new AgentProperties().withCpu(3))
            .withStep(
                new DockerBuildStepUpdateParameters()
                    .withImageNames(Arrays.asList("azurerest:testtag1"))
                    .withDockerFilePath("src/DockerFile"))
            .withTrigger(
                new TriggerUpdateParameters()
                    .withSourceTriggers(
                        Arrays
                            .asList(
                                new SourceTriggerUpdateParameters()
                                    .withSourceRepository(
                                        new SourceUpdateParameters()
                                            .withSourceControlAuthProperties(
                                                new AuthInfoUpdateParameters()
                                                    .withTokenType(TokenType.PAT)
                                                    .withToken("xxxxx")))
                                    .withSourceTriggerEvents(Arrays.asList(SourceTriggerEvent.COMMIT))
                                    .withName("mySourceTrigger"))))
            .withCredentials(
                new Credentials()
                    .withCustomRegistries(
                        mapOf("myregistry.azurecr.io", new CustomRegistryCredentials().withIdentity("[system]"))))
            .apply();
    }

    /*
     * x-ms-original-file: specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/preview/2019-06-01-preview/examples/ManagedIdentity/TasksUpdate_WithKeyVaultCustomCredentials.json
     */
    /**
     * Sample code: Tasks_Update_WithKeyVaultCustomCredentials.
     *
     * @param manager Entry point to ContainerRegistryManager.
     */
    public static void tasksUpdateWithKeyVaultCustomCredentials(
        com.azure.resourcemanager.containerregistry.generated.ContainerRegistryManager manager) {
        Task resource =
            manager.tasks().getWithResponse("myResourceGroup", "myRegistry", "myTask", Context.NONE).getValue();
        resource
            .update()
            .withTags(mapOf("testkey", "value"))
            .withStatus(TaskStatus.ENABLED)
            .withAgentConfiguration(new AgentProperties().withCpu(3))
            .withStep(
                new DockerBuildStepUpdateParameters()
                    .withImageNames(Arrays.asList("azurerest:testtag1"))
                    .withDockerFilePath("src/DockerFile"))
            .withTrigger(
                new TriggerUpdateParameters()
                    .withSourceTriggers(
                        Arrays
                            .asList(
                                new SourceTriggerUpdateParameters()
                                    .withSourceRepository(
                                        new SourceUpdateParameters()
                                            .withSourceControlAuthProperties(
                                                new AuthInfoUpdateParameters()
                                                    .withTokenType(TokenType.PAT)
                                                    .withToken("xxxxx")))
                                    .withSourceTriggerEvents(Arrays.asList(SourceTriggerEvent.COMMIT))
                                    .withName("mySourceTrigger"))))
            .withCredentials(
                new Credentials()
                    .withCustomRegistries(
                        mapOf(
                            "myregistry.azurecr.io",
                            new CustomRegistryCredentials()
                                .withUsername(
                                    new SecretObject()
                                        .withValue("https://myacbvault.vault.azure.net/secrets/username")
                                        .withType(SecretObjectType.VAULTSECRET))
                                .withPassword(
                                    new SecretObject()
                                        .withValue("https://myacbvault.vault.azure.net/secrets/password")
                                        .withType(SecretObjectType.VAULTSECRET))
                                .withIdentity("[system]"))))
            .apply();
    }

    /*
     * x-ms-original-file: specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/preview/2019-06-01-preview/examples/TasksUpdate.json
     */
    /**
     * Sample code: Tasks_Update.
     *
     * @param manager Entry point to ContainerRegistryManager.
     */
    public static void tasksUpdate(
        com.azure.resourcemanager.containerregistry.generated.ContainerRegistryManager manager) {
        Task resource =
            manager.tasks().getWithResponse("myResourceGroup", "myRegistry", "myTask", Context.NONE).getValue();
        resource
            .update()
            .withTags(mapOf("testkey", "value"))
            .withStatus(TaskStatus.ENABLED)
            .withAgentConfiguration(new AgentProperties().withCpu(3))
            .withStep(
                new DockerBuildStepUpdateParameters()
                    .withImageNames(Arrays.asList("azurerest:testtag1"))
                    .withDockerFilePath("src/DockerFile"))
            .withTrigger(
                new TriggerUpdateParameters()
                    .withSourceTriggers(
                        Arrays
                            .asList(
                                new SourceTriggerUpdateParameters()
                                    .withSourceRepository(
                                        new SourceUpdateParameters()
                                            .withSourceControlAuthProperties(
                                                new AuthInfoUpdateParameters()
                                                    .withTokenType(TokenType.PAT)
                                                    .withToken("xxxxx")))
                                    .withSourceTriggerEvents(Arrays.asList(SourceTriggerEvent.COMMIT))
                                    .withName("mySourceTrigger"))))
            .withCredentials(
                new Credentials()
                    .withCustomRegistries(
                        mapOf(
                            "myregistry.azurecr.io",
                            new CustomRegistryCredentials()
                                .withUsername(
                                    new SecretObject().withValue("username").withType(SecretObjectType.OPAQUE))
                                .withPassword(
                                    new SecretObject()
                                        .withValue("https://myacbvault.vault.azure.net/secrets/password")
                                        .withType(SecretObjectType.VAULTSECRET))
                                .withIdentity("[system]"))))
            .withLogTemplate("acr/tasks:{{.Run.OS}}")
            .apply();
    }

    /*
     * x-ms-original-file: specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/preview/2019-06-01-preview/examples/TasksUpdate_WithOpaqueCustomCredentials.json
     */
    /**
     * Sample code: Tasks_Update_WithOpaqueCustomCredentials.
     *
     * @param manager Entry point to ContainerRegistryManager.
     */
    public static void tasksUpdateWithOpaqueCustomCredentials(
        com.azure.resourcemanager.containerregistry.generated.ContainerRegistryManager manager) {
        Task resource =
            manager.tasks().getWithResponse("myResourceGroup", "myRegistry", "myTask", Context.NONE).getValue();
        resource
            .update()
            .withTags(mapOf("testkey", "value"))
            .withStatus(TaskStatus.ENABLED)
            .withAgentConfiguration(new AgentProperties().withCpu(3))
            .withStep(
                new DockerBuildStepUpdateParameters()
                    .withImageNames(Arrays.asList("azurerest:testtag1"))
                    .withDockerFilePath("src/DockerFile"))
            .withTrigger(
                new TriggerUpdateParameters()
                    .withSourceTriggers(
                        Arrays
                            .asList(
                                new SourceTriggerUpdateParameters()
                                    .withSourceRepository(
                                        new SourceUpdateParameters()
                                            .withSourceControlAuthProperties(
                                                new AuthInfoUpdateParameters()
                                                    .withTokenType(TokenType.PAT)
                                                    .withToken("xxxxx")))
                                    .withSourceTriggerEvents(Arrays.asList(SourceTriggerEvent.COMMIT))
                                    .withName("mySourceTrigger"))))
            .withCredentials(
                new Credentials()
                    .withCustomRegistries(
                        mapOf(
                            "myregistry.azurecr.io",
                            new CustomRegistryCredentials()
                                .withUsername(
                                    new SecretObject().withValue("username").withType(SecretObjectType.OPAQUE))
                                .withPassword(new SecretObject().withValue("***").withType(SecretObjectType.OPAQUE)))))
            .apply();
    }

    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
