// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.generated.generated;

import com.azure.core.util.Context;
import com.azure.resourcemanager.containerregistry.generated.models.Architecture;
import com.azure.resourcemanager.containerregistry.generated.models.Credentials;
import com.azure.resourcemanager.containerregistry.generated.models.EncodedTaskRunRequest;
import com.azure.resourcemanager.containerregistry.generated.models.OS;
import com.azure.resourcemanager.containerregistry.generated.models.PlatformProperties;
import com.azure.resourcemanager.containerregistry.generated.models.TaskRun;
import java.util.Arrays;

/** Samples for TaskRuns Update. */
public final class TaskRunsUpdateSamples {
    /*
     * x-ms-original-file: specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/preview/2019-06-01-preview/examples/TaskRunsUpdate.json
     */
    /**
     * Sample code: TaskRuns_Update.
     *
     * @param manager Entry point to ContainerRegistryManager.
     */
    public static void taskRunsUpdate(
        com.azure.resourcemanager.containerregistry.generated.ContainerRegistryManager manager) {
        TaskRun resource =
            manager.taskRuns().getWithResponse("myResourceGroup", "myRegistry", "myRun", Context.NONE).getValue();
        resource
            .update()
            .withRunRequest(
                new EncodedTaskRunRequest()
                    .withIsArchiveEnabled(true)
                    .withEncodedTaskContent("c3RlcHM6IAogIC0gY21kOiB7eyAuVmFsdWVzLmNvbW1hbmQgfX0K")
                    .withEncodedValuesContent("Y29tbWFuZDogYmFzaCBlY2hvIHt7LlJ1bi5SZWdpc3RyeX19Cg==")
                    .withValues(Arrays.asList())
                    .withPlatform(new PlatformProperties().withOs(OS.LINUX).withArchitecture(Architecture.AMD64))
                    .withCredentials(new Credentials()))
            .withForceUpdateTag("test")
            .apply();
    }
}
