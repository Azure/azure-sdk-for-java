// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.generated.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The properties of the connected registry parent. */
@Fluent
public final class ParentProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ParentProperties.class);

    /*
     * The resource ID of the parent to which the connected registry will be
     * associated.
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * The sync properties of the connected registry with its parent.
     */
    @JsonProperty(value = "syncProperties", required = true)
    private SyncProperties syncProperties;

    /**
     * Get the id property: The resource ID of the parent to which the connected registry will be associated.
     *
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: The resource ID of the parent to which the connected registry will be associated.
     *
     * @param id the id value to set.
     * @return the ParentProperties object itself.
     */
    public ParentProperties withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the syncProperties property: The sync properties of the connected registry with its parent.
     *
     * @return the syncProperties value.
     */
    public SyncProperties syncProperties() {
        return this.syncProperties;
    }

    /**
     * Set the syncProperties property: The sync properties of the connected registry with its parent.
     *
     * @param syncProperties the syncProperties value to set.
     * @return the ParentProperties object itself.
     */
    public ParentProperties withSyncProperties(SyncProperties syncProperties) {
        this.syncProperties = syncProperties;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (syncProperties() == null) {
            throw logger
                .logExceptionAsError(
                    new IllegalArgumentException("Missing required property syncProperties in model ParentProperties"));
        } else {
            syncProperties().validate();
        }
    }
}
