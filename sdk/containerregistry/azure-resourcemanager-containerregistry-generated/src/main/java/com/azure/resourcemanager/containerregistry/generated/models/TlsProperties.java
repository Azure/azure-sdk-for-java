// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.generated.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** The TLS properties of the connected registry login server. */
@Immutable
public final class TlsProperties {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(TlsProperties.class);

    /*
     * Indicates whether HTTPS is enabled for the login server.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private TlsStatus status;

    /*
     * The certificate used to configure HTTPS for the login server.
     */
    @JsonProperty(value = "certificate", access = JsonProperty.Access.WRITE_ONLY)
    private TlsCertificateProperties certificate;

    /**
     * Get the status property: Indicates whether HTTPS is enabled for the login server.
     *
     * @return the status value.
     */
    public TlsStatus status() {
        return this.status;
    }

    /**
     * Get the certificate property: The certificate used to configure HTTPS for the login server.
     *
     * @return the certificate value.
     */
    public TlsCertificateProperties certificate() {
        return this.certificate;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (certificate() != null) {
            certificate().validate();
        }
    }
}
