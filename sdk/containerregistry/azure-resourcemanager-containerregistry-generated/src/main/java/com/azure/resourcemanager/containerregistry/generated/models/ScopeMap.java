// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.generated.models;

import com.azure.core.util.Context;
import com.azure.resourcemanager.containerregistry.generated.fluent.models.ScopeMapInner;
import java.time.OffsetDateTime;
import java.util.List;

/** An immutable client-side representation of ScopeMap. */
public interface ScopeMap {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the description property: The user friendly description of the scope map.
     *
     * @return the description value.
     */
    String description();

    /**
     * Gets the typePropertiesType property: The type of the scope map. E.g. BuildIn scope map.
     *
     * @return the typePropertiesType value.
     */
    String typePropertiesType();

    /**
     * Gets the creationDate property: The creation date of scope map.
     *
     * @return the creationDate value.
     */
    OffsetDateTime creationDate();

    /**
     * Gets the provisioningState property: Provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the actions property: The list of scoped permissions for registry artifacts. E.g.
     * repositories/repository-name/content/read, repositories/repository-name/metadata/write.
     *
     * @return the actions value.
     */
    List<String> actions();

    /**
     * Gets the systemData property: Metadata pertaining to creation and last modification of the resource.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the inner com.azure.resourcemanager.containerregistry.generated.fluent.models.ScopeMapInner object.
     *
     * @return the inner object.
     */
    ScopeMapInner innerModel();

    /** The entirety of the ScopeMap definition. */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }
    /** The ScopeMap definition stages. */
    interface DefinitionStages {
        /** The first stage of the ScopeMap definition. */
        interface Blank extends WithParentResource {
        }
        /** The stage of the ScopeMap definition allowing to specify parent resource. */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, registryName.
             *
             * @param resourceGroupName The name of the resource group to which the container registry belongs.
             * @param registryName The name of the container registry.
             * @return the next definition stage.
             */
            WithCreate withExistingRegistry(String resourceGroupName, String registryName);
        }
        /**
         * The stage of the ScopeMap definition which contains all the minimum required properties for the resource to
         * be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithDescription, DefinitionStages.WithActions {
            /**
             * Executes the create request.
             *
             * @return the created resource.
             */
            ScopeMap create();

            /**
             * Executes the create request.
             *
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            ScopeMap create(Context context);
        }
        /** The stage of the ScopeMap definition allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: The user friendly description of the scope map..
             *
             * @param description The user friendly description of the scope map.
             * @return the next definition stage.
             */
            WithCreate withDescription(String description);
        }
        /** The stage of the ScopeMap definition allowing to specify actions. */
        interface WithActions {
            /**
             * Specifies the actions property: The list of scoped permissions for registry artifacts. E.g.
             * repositories/repository-name/content/read, repositories/repository-name/metadata/write.
             *
             * @param actions The list of scoped permissions for registry artifacts. E.g.
             *     repositories/repository-name/content/read, repositories/repository-name/metadata/write.
             * @return the next definition stage.
             */
            WithCreate withActions(List<String> actions);
        }
    }
    /**
     * Begins update for the ScopeMap resource.
     *
     * @return the stage of resource update.
     */
    ScopeMap.Update update();

    /** The template for ScopeMap update. */
    interface Update extends UpdateStages.WithDescription, UpdateStages.WithActions {
        /**
         * Executes the update request.
         *
         * @return the updated resource.
         */
        ScopeMap apply();

        /**
         * Executes the update request.
         *
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        ScopeMap apply(Context context);
    }
    /** The ScopeMap update stages. */
    interface UpdateStages {
        /** The stage of the ScopeMap update allowing to specify description. */
        interface WithDescription {
            /**
             * Specifies the description property: The user friendly description of the scope map..
             *
             * @param description The user friendly description of the scope map.
             * @return the next definition stage.
             */
            Update withDescription(String description);
        }
        /** The stage of the ScopeMap update allowing to specify actions. */
        interface WithActions {
            /**
             * Specifies the actions property: The list of scope permissions for registry artifacts. E.g.
             * repositories/repository-name/pull, repositories/repository-name/delete.
             *
             * @param actions The list of scope permissions for registry artifacts. E.g.
             *     repositories/repository-name/pull, repositories/repository-name/delete.
             * @return the next definition stage.
             */
            Update withActions(List<String> actions);
        }
    }
    /**
     * Refreshes the resource to sync with Azure.
     *
     * @return the refreshed resource.
     */
    ScopeMap refresh();

    /**
     * Refreshes the resource to sync with Azure.
     *
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    ScopeMap refresh(Context context);
}
