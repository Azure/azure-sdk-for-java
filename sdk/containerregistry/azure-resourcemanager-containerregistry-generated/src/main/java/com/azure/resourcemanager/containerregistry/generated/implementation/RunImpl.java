// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.generated.implementation;

import com.azure.resourcemanager.containerregistry.generated.ContainerRegistryManager;
import com.azure.resourcemanager.containerregistry.generated.fluent.models.RunInner;
import com.azure.resourcemanager.containerregistry.generated.models.AgentProperties;
import com.azure.resourcemanager.containerregistry.generated.models.ImageDescriptor;
import com.azure.resourcemanager.containerregistry.generated.models.ImageUpdateTrigger;
import com.azure.resourcemanager.containerregistry.generated.models.PlatformProperties;
import com.azure.resourcemanager.containerregistry.generated.models.ProvisioningState;
import com.azure.resourcemanager.containerregistry.generated.models.Run;
import com.azure.resourcemanager.containerregistry.generated.models.RunStatus;
import com.azure.resourcemanager.containerregistry.generated.models.RunType;
import com.azure.resourcemanager.containerregistry.generated.models.SourceTriggerDescriptor;
import com.azure.resourcemanager.containerregistry.generated.models.SystemData;
import com.azure.resourcemanager.containerregistry.generated.models.TimerTriggerDescriptor;
import java.time.OffsetDateTime;
import java.util.Collections;
import java.util.List;

public final class RunImpl implements Run {
    private RunInner innerObject;

    private final ContainerRegistryManager serviceManager;

    RunImpl(RunInner innerObject, ContainerRegistryManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
    }

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String runId() {
        return this.innerModel().runId();
    }

    public RunStatus status() {
        return this.innerModel().status();
    }

    public OffsetDateTime lastUpdatedTime() {
        return this.innerModel().lastUpdatedTime();
    }

    public RunType runType() {
        return this.innerModel().runType();
    }

    public String agentPoolName() {
        return this.innerModel().agentPoolName();
    }

    public OffsetDateTime createTime() {
        return this.innerModel().createTime();
    }

    public OffsetDateTime startTime() {
        return this.innerModel().startTime();
    }

    public OffsetDateTime finishTime() {
        return this.innerModel().finishTime();
    }

    public List<ImageDescriptor> outputImages() {
        List<ImageDescriptor> inner = this.innerModel().outputImages();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String task() {
        return this.innerModel().task();
    }

    public ImageUpdateTrigger imageUpdateTrigger() {
        return this.innerModel().imageUpdateTrigger();
    }

    public SourceTriggerDescriptor sourceTrigger() {
        return this.innerModel().sourceTrigger();
    }

    public TimerTriggerDescriptor timerTrigger() {
        return this.innerModel().timerTrigger();
    }

    public PlatformProperties platform() {
        return this.innerModel().platform();
    }

    public AgentProperties agentConfiguration() {
        return this.innerModel().agentConfiguration();
    }

    public String sourceRegistryAuth() {
        return this.innerModel().sourceRegistryAuth();
    }

    public List<String> customRegistries() {
        List<String> inner = this.innerModel().customRegistries();
        if (inner != null) {
            return Collections.unmodifiableList(inner);
        } else {
            return Collections.emptyList();
        }
    }

    public String runErrorMessage() {
        return this.innerModel().runErrorMessage();
    }

    public String updateTriggerToken() {
        return this.innerModel().updateTriggerToken();
    }

    public ImageDescriptor logArtifact() {
        return this.innerModel().logArtifact();
    }

    public ProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public Boolean isArchiveEnabled() {
        return this.innerModel().isArchiveEnabled();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public RunInner innerModel() {
        return this.innerObject;
    }

    private ContainerRegistryManager manager() {
        return this.serviceManager;
    }
}
