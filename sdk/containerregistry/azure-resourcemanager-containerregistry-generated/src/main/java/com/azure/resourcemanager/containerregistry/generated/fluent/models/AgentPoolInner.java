// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.Resource;
import com.azure.core.management.SystemData;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.containerregistry.generated.models.OS;
import com.azure.resourcemanager.containerregistry.generated.models.ProvisioningState;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * The agentpool that has the ARM resource and properties. The agentpool will have all information to create an agent
 * pool.
 */
@JsonFlatten
@Fluent
public class AgentPoolInner extends Resource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(AgentPoolInner.class);

    /*
     * The count of agent machine
     */
    @JsonProperty(value = "properties.count")
    private Integer count;

    /*
     * The Tier of agent machine
     */
    @JsonProperty(value = "properties.tier")
    private String tier;

    /*
     * The OS of agent machine
     */
    @JsonProperty(value = "properties.os")
    private OS os;

    /*
     * The Virtual Network Subnet Resource Id of the agent machine
     */
    @JsonProperty(value = "properties.virtualNetworkSubnetResourceId")
    private String virtualNetworkSubnetResourceId;

    /*
     * The provisioning state of this agent pool
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * Metadata pertaining to creation and last modification of the resource.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Get the count property: The count of agent machine.
     *
     * @return the count value.
     */
    public Integer count() {
        return this.count;
    }

    /**
     * Set the count property: The count of agent machine.
     *
     * @param count the count value to set.
     * @return the AgentPoolInner object itself.
     */
    public AgentPoolInner withCount(Integer count) {
        this.count = count;
        return this;
    }

    /**
     * Get the tier property: The Tier of agent machine.
     *
     * @return the tier value.
     */
    public String tier() {
        return this.tier;
    }

    /**
     * Set the tier property: The Tier of agent machine.
     *
     * @param tier the tier value to set.
     * @return the AgentPoolInner object itself.
     */
    public AgentPoolInner withTier(String tier) {
        this.tier = tier;
        return this;
    }

    /**
     * Get the os property: The OS of agent machine.
     *
     * @return the os value.
     */
    public OS os() {
        return this.os;
    }

    /**
     * Set the os property: The OS of agent machine.
     *
     * @param os the os value to set.
     * @return the AgentPoolInner object itself.
     */
    public AgentPoolInner withOs(OS os) {
        this.os = os;
        return this;
    }

    /**
     * Get the virtualNetworkSubnetResourceId property: The Virtual Network Subnet Resource Id of the agent machine.
     *
     * @return the virtualNetworkSubnetResourceId value.
     */
    public String virtualNetworkSubnetResourceId() {
        return this.virtualNetworkSubnetResourceId;
    }

    /**
     * Set the virtualNetworkSubnetResourceId property: The Virtual Network Subnet Resource Id of the agent machine.
     *
     * @param virtualNetworkSubnetResourceId the virtualNetworkSubnetResourceId value to set.
     * @return the AgentPoolInner object itself.
     */
    public AgentPoolInner withVirtualNetworkSubnetResourceId(String virtualNetworkSubnetResourceId) {
        this.virtualNetworkSubnetResourceId = virtualNetworkSubnetResourceId;
        return this;
    }

    /**
     * Get the provisioningState property: The provisioning state of this agent pool.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the systemData property: Metadata pertaining to creation and last modification of the resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /** {@inheritDoc} */
    @Override
    public AgentPoolInner withLocation(String location) {
        super.withLocation(location);
        return this;
    }

    /** {@inheritDoc} */
    @Override
    public AgentPoolInner withTags(Map<String, String> tags) {
        super.withTags(tags);
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
