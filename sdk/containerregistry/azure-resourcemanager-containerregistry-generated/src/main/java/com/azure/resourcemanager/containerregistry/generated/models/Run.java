// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.generated.models;

import com.azure.resourcemanager.containerregistry.generated.fluent.models.RunInner;
import java.time.OffsetDateTime;
import java.util.List;

/** An immutable client-side representation of Run. */
public interface Run {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     *
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     *
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     *
     * @return the type value.
     */
    String type();

    /**
     * Gets the runId property: The unique identifier for the run.
     *
     * @return the runId value.
     */
    String runId();

    /**
     * Gets the status property: The current status of the run.
     *
     * @return the status value.
     */
    RunStatus status();

    /**
     * Gets the lastUpdatedTime property: The last updated time for the run.
     *
     * @return the lastUpdatedTime value.
     */
    OffsetDateTime lastUpdatedTime();

    /**
     * Gets the runType property: The type of run.
     *
     * @return the runType value.
     */
    RunType runType();

    /**
     * Gets the agentPoolName property: The dedicated agent pool for the run.
     *
     * @return the agentPoolName value.
     */
    String agentPoolName();

    /**
     * Gets the createTime property: The time the run was scheduled.
     *
     * @return the createTime value.
     */
    OffsetDateTime createTime();

    /**
     * Gets the startTime property: The time the run started.
     *
     * @return the startTime value.
     */
    OffsetDateTime startTime();

    /**
     * Gets the finishTime property: The time the run finished.
     *
     * @return the finishTime value.
     */
    OffsetDateTime finishTime();

    /**
     * Gets the outputImages property: The list of all images that were generated from the run. This is applicable if
     * the run generates base image dependencies.
     *
     * @return the outputImages value.
     */
    List<ImageDescriptor> outputImages();

    /**
     * Gets the task property: The task against which run was scheduled.
     *
     * @return the task value.
     */
    String task();

    /**
     * Gets the imageUpdateTrigger property: The image update trigger that caused the run. This is applicable if the
     * task has base image trigger configured.
     *
     * @return the imageUpdateTrigger value.
     */
    ImageUpdateTrigger imageUpdateTrigger();

    /**
     * Gets the sourceTrigger property: The source trigger that caused the run.
     *
     * @return the sourceTrigger value.
     */
    SourceTriggerDescriptor sourceTrigger();

    /**
     * Gets the timerTrigger property: The timer trigger that caused the run.
     *
     * @return the timerTrigger value.
     */
    TimerTriggerDescriptor timerTrigger();

    /**
     * Gets the platform property: The platform properties against which the run will happen.
     *
     * @return the platform value.
     */
    PlatformProperties platform();

    /**
     * Gets the agentConfiguration property: The machine configuration of the run agent.
     *
     * @return the agentConfiguration value.
     */
    AgentProperties agentConfiguration();

    /**
     * Gets the sourceRegistryAuth property: The scope of the credentials that were used to login to the source registry
     * during this run.
     *
     * @return the sourceRegistryAuth value.
     */
    String sourceRegistryAuth();

    /**
     * Gets the customRegistries property: The list of custom registries that were logged in during this run.
     *
     * @return the customRegistries value.
     */
    List<String> customRegistries();

    /**
     * Gets the runErrorMessage property: The error message received from backend systems after the run is scheduled.
     *
     * @return the runErrorMessage value.
     */
    String runErrorMessage();

    /**
     * Gets the updateTriggerToken property: The update trigger token passed for the Run.
     *
     * @return the updateTriggerToken value.
     */
    String updateTriggerToken();

    /**
     * Gets the logArtifact property: The image description for the log artifact.
     *
     * @return the logArtifact value.
     */
    ImageDescriptor logArtifact();

    /**
     * Gets the provisioningState property: The provisioning state of a run.
     *
     * @return the provisioningState value.
     */
    ProvisioningState provisioningState();

    /**
     * Gets the isArchiveEnabled property: The value that indicates whether archiving is enabled or not.
     *
     * @return the isArchiveEnabled value.
     */
    Boolean isArchiveEnabled();

    /**
     * Gets the systemData property: Metadata pertaining to creation and last modification of the resource.
     *
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the inner com.azure.resourcemanager.containerregistry.generated.fluent.models.RunInner object.
     *
     * @return the inner object.
     */
    RunInner innerModel();
}
