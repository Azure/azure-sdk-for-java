// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerregistry.generated.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.annotation.JsonFlatten;
import com.azure.core.management.ProxyResource;
import com.azure.core.util.logging.ClientLogger;
import com.azure.resourcemanager.containerregistry.generated.models.ActivationProperties;
import com.azure.resourcemanager.containerregistry.generated.models.ConnectedRegistryMode;
import com.azure.resourcemanager.containerregistry.generated.models.ConnectionState;
import com.azure.resourcemanager.containerregistry.generated.models.LoggingProperties;
import com.azure.resourcemanager.containerregistry.generated.models.LoginServerProperties;
import com.azure.resourcemanager.containerregistry.generated.models.ParentProperties;
import com.azure.resourcemanager.containerregistry.generated.models.ProvisioningState;
import com.azure.resourcemanager.containerregistry.generated.models.StatusDetailProperties;
import com.azure.resourcemanager.containerregistry.generated.models.SystemData;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import java.util.List;

/** An object that represents a connected registry for a container registry. */
@JsonFlatten
@Fluent
public class ConnectedRegistryInner extends ProxyResource {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(ConnectedRegistryInner.class);

    /*
     * Provisioning state of the resource.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningState provisioningState;

    /*
     * The mode of the connected registry resource that indicates the
     * permissions of the registry.
     */
    @JsonProperty(value = "properties.mode")
    private ConnectedRegistryMode mode;

    /*
     * The current version of ACR runtime on the connected registry.
     */
    @JsonProperty(value = "properties.version", access = JsonProperty.Access.WRITE_ONLY)
    private String version;

    /*
     * The current connection state of the connected registry.
     */
    @JsonProperty(value = "properties.connectionState", access = JsonProperty.Access.WRITE_ONLY)
    private ConnectionState connectionState;

    /*
     * The last activity time of the connected registry.
     */
    @JsonProperty(value = "properties.lastActivityTime", access = JsonProperty.Access.WRITE_ONLY)
    private OffsetDateTime lastActivityTime;

    /*
     * The activation properties of the connected registry.
     */
    @JsonProperty(value = "properties.activation", access = JsonProperty.Access.WRITE_ONLY)
    private ActivationProperties activation;

    /*
     * The parent of the connected registry.
     */
    @JsonProperty(value = "properties.parent")
    private ParentProperties parent;

    /*
     * The list of the ACR token resource IDs used to authenticate clients to
     * the connected registry.
     */
    @JsonProperty(value = "properties.clientTokenIds")
    private List<String> clientTokenIds;

    /*
     * The login server properties of the connected registry.
     */
    @JsonProperty(value = "properties.loginServer")
    private LoginServerProperties loginServer;

    /*
     * The logging properties of the connected registry.
     */
    @JsonProperty(value = "properties.logging")
    private LoggingProperties logging;

    /*
     * The list of current statuses of the connected registry.
     */
    @JsonProperty(value = "properties.statusDetails", access = JsonProperty.Access.WRITE_ONLY)
    private List<StatusDetailProperties> statusDetails;

    /*
     * Metadata pertaining to creation and last modification of the resource.
     */
    @JsonProperty(value = "systemData", access = JsonProperty.Access.WRITE_ONLY)
    private SystemData systemData;

    /**
     * Get the provisioningState property: Provisioning state of the resource.
     *
     * @return the provisioningState value.
     */
    public ProvisioningState provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the mode property: The mode of the connected registry resource that indicates the permissions of the
     * registry.
     *
     * @return the mode value.
     */
    public ConnectedRegistryMode mode() {
        return this.mode;
    }

    /**
     * Set the mode property: The mode of the connected registry resource that indicates the permissions of the
     * registry.
     *
     * @param mode the mode value to set.
     * @return the ConnectedRegistryInner object itself.
     */
    public ConnectedRegistryInner withMode(ConnectedRegistryMode mode) {
        this.mode = mode;
        return this;
    }

    /**
     * Get the version property: The current version of ACR runtime on the connected registry.
     *
     * @return the version value.
     */
    public String version() {
        return this.version;
    }

    /**
     * Get the connectionState property: The current connection state of the connected registry.
     *
     * @return the connectionState value.
     */
    public ConnectionState connectionState() {
        return this.connectionState;
    }

    /**
     * Get the lastActivityTime property: The last activity time of the connected registry.
     *
     * @return the lastActivityTime value.
     */
    public OffsetDateTime lastActivityTime() {
        return this.lastActivityTime;
    }

    /**
     * Get the activation property: The activation properties of the connected registry.
     *
     * @return the activation value.
     */
    public ActivationProperties activation() {
        return this.activation;
    }

    /**
     * Get the parent property: The parent of the connected registry.
     *
     * @return the parent value.
     */
    public ParentProperties parent() {
        return this.parent;
    }

    /**
     * Set the parent property: The parent of the connected registry.
     *
     * @param parent the parent value to set.
     * @return the ConnectedRegistryInner object itself.
     */
    public ConnectedRegistryInner withParent(ParentProperties parent) {
        this.parent = parent;
        return this;
    }

    /**
     * Get the clientTokenIds property: The list of the ACR token resource IDs used to authenticate clients to the
     * connected registry.
     *
     * @return the clientTokenIds value.
     */
    public List<String> clientTokenIds() {
        return this.clientTokenIds;
    }

    /**
     * Set the clientTokenIds property: The list of the ACR token resource IDs used to authenticate clients to the
     * connected registry.
     *
     * @param clientTokenIds the clientTokenIds value to set.
     * @return the ConnectedRegistryInner object itself.
     */
    public ConnectedRegistryInner withClientTokenIds(List<String> clientTokenIds) {
        this.clientTokenIds = clientTokenIds;
        return this;
    }

    /**
     * Get the loginServer property: The login server properties of the connected registry.
     *
     * @return the loginServer value.
     */
    public LoginServerProperties loginServer() {
        return this.loginServer;
    }

    /**
     * Set the loginServer property: The login server properties of the connected registry.
     *
     * @param loginServer the loginServer value to set.
     * @return the ConnectedRegistryInner object itself.
     */
    public ConnectedRegistryInner withLoginServer(LoginServerProperties loginServer) {
        this.loginServer = loginServer;
        return this;
    }

    /**
     * Get the logging property: The logging properties of the connected registry.
     *
     * @return the logging value.
     */
    public LoggingProperties logging() {
        return this.logging;
    }

    /**
     * Set the logging property: The logging properties of the connected registry.
     *
     * @param logging the logging value to set.
     * @return the ConnectedRegistryInner object itself.
     */
    public ConnectedRegistryInner withLogging(LoggingProperties logging) {
        this.logging = logging;
        return this;
    }

    /**
     * Get the statusDetails property: The list of current statuses of the connected registry.
     *
     * @return the statusDetails value.
     */
    public List<StatusDetailProperties> statusDetails() {
        return this.statusDetails;
    }

    /**
     * Get the systemData property: Metadata pertaining to creation and last modification of the resource.
     *
     * @return the systemData value.
     */
    public SystemData systemData() {
        return this.systemData;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (activation() != null) {
            activation().validate();
        }
        if (parent() != null) {
            parent().validate();
        }
        if (loginServer() != null) {
            loginServer().validate();
        }
        if (logging() != null) {
            logging().validate();
        }
        if (statusDetails() != null) {
            statusDetails().forEach(e -> e.validate());
        }
        if (systemData() != null) {
            systemData().validate();
        }
    }
}
