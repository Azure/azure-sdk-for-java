// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.cloudhealth.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cloudhealth.fluent.models.EntityInner;
import com.azure.resourcemanager.cloudhealth.models.Entity;
import com.azure.resourcemanager.cloudhealth.models.EntityProperties;

public final class EntityImpl implements Entity, Entity.Definition, Entity.Update {
    private EntityInner innerObject;

    private final com.azure.resourcemanager.cloudhealth.CloudHealthManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public EntityProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public EntityInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.cloudhealth.CloudHealthManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String healthModelName;

    private String entityName;

    public EntityImpl withExistingHealthmodel(String resourceGroupName, String healthModelName) {
        this.resourceGroupName = resourceGroupName;
        this.healthModelName = healthModelName;
        return this;
    }

    public Entity create() {
        this.innerObject = serviceManager.serviceClient()
            .getEntities()
            .createOrUpdateWithResponse(resourceGroupName, healthModelName, entityName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public Entity create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getEntities()
            .createOrUpdateWithResponse(resourceGroupName, healthModelName, entityName, this.innerModel(), context)
            .getValue();
        return this;
    }

    EntityImpl(String name, com.azure.resourcemanager.cloudhealth.CloudHealthManager serviceManager) {
        this.innerObject = new EntityInner();
        this.serviceManager = serviceManager;
        this.entityName = name;
    }

    public EntityImpl update() {
        return this;
    }

    public Entity apply() {
        this.innerObject = serviceManager.serviceClient()
            .getEntities()
            .createOrUpdateWithResponse(resourceGroupName, healthModelName, entityName, this.innerModel(), Context.NONE)
            .getValue();
        return this;
    }

    public Entity apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getEntities()
            .createOrUpdateWithResponse(resourceGroupName, healthModelName, entityName, this.innerModel(), context)
            .getValue();
        return this;
    }

    EntityImpl(EntityInner innerObject, com.azure.resourcemanager.cloudhealth.CloudHealthManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.healthModelName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "healthmodels");
        this.entityName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "entities");
    }

    public Entity refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getEntities()
            .getWithResponse(resourceGroupName, healthModelName, entityName, Context.NONE)
            .getValue();
        return this;
    }

    public Entity refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getEntities()
            .getWithResponse(resourceGroupName, healthModelName, entityName, context)
            .getValue();
        return this;
    }

    public EntityImpl withProperties(EntityProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
