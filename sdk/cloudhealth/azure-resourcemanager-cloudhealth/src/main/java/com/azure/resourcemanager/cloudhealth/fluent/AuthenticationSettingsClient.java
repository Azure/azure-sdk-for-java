// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.cloudhealth.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cloudhealth.fluent.models.AuthenticationSettingInner;

/**
 * An instance of this class provides access to all the operations defined in AuthenticationSettingsClient.
 */
public interface AuthenticationSettingsClient {
    /**
     * Get a AuthenticationSetting.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @param authenticationSettingName Name of the authentication setting. Must be unique within a health model.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AuthenticationSetting along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AuthenticationSettingInner> getWithResponse(String resourceGroupName, String healthModelName,
        String authenticationSettingName, Context context);

    /**
     * Get a AuthenticationSetting.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @param authenticationSettingName Name of the authentication setting. Must be unique within a health model.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a AuthenticationSetting.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AuthenticationSettingInner get(String resourceGroupName, String healthModelName, String authenticationSettingName);

    /**
     * Create a AuthenticationSetting.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @param authenticationSettingName Name of the authentication setting. Must be unique within a health model.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an authentication setting in a health model along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<AuthenticationSettingInner> createOrUpdateWithResponse(String resourceGroupName, String healthModelName,
        String authenticationSettingName, AuthenticationSettingInner resource, Context context);

    /**
     * Create a AuthenticationSetting.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @param authenticationSettingName Name of the authentication setting. Must be unique within a health model.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return an authentication setting in a health model.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    AuthenticationSettingInner createOrUpdate(String resourceGroupName, String healthModelName,
        String authenticationSettingName, AuthenticationSettingInner resource);

    /**
     * Delete a AuthenticationSetting.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @param authenticationSettingName Name of the authentication setting. Must be unique within a health model.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String healthModelName,
        String authenticationSettingName, Context context);

    /**
     * Delete a AuthenticationSetting.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @param authenticationSettingName Name of the authentication setting. Must be unique within a health model.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String healthModelName, String authenticationSettingName);

    /**
     * List AuthenticationSetting resources by HealthModel.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AuthenticationSetting list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AuthenticationSettingInner> listByHealthModel(String resourceGroupName, String healthModelName);

    /**
     * List AuthenticationSetting resources by HealthModel.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a AuthenticationSetting list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<AuthenticationSettingInner> listByHealthModel(String resourceGroupName, String healthModelName,
        Context context);
}
