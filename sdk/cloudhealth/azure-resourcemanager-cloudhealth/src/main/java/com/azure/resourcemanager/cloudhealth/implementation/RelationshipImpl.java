// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.cloudhealth.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cloudhealth.fluent.models.RelationshipInner;
import com.azure.resourcemanager.cloudhealth.models.Relationship;
import com.azure.resourcemanager.cloudhealth.models.RelationshipProperties;

public final class RelationshipImpl implements Relationship, Relationship.Definition, Relationship.Update {
    private RelationshipInner innerObject;

    private final com.azure.resourcemanager.cloudhealth.CloudHealthManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public RelationshipProperties properties() {
        return this.innerModel().properties();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public RelationshipInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.cloudhealth.CloudHealthManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String healthModelName;

    private String relationshipName;

    public RelationshipImpl withExistingHealthmodel(String resourceGroupName, String healthModelName) {
        this.resourceGroupName = resourceGroupName;
        this.healthModelName = healthModelName;
        return this;
    }

    public Relationship create() {
        this.innerObject = serviceManager.serviceClient()
            .getRelationships()
            .createOrUpdateWithResponse(resourceGroupName, healthModelName, relationshipName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public Relationship create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRelationships()
            .createOrUpdateWithResponse(resourceGroupName, healthModelName, relationshipName, this.innerModel(),
                context)
            .getValue();
        return this;
    }

    RelationshipImpl(String name, com.azure.resourcemanager.cloudhealth.CloudHealthManager serviceManager) {
        this.innerObject = new RelationshipInner();
        this.serviceManager = serviceManager;
        this.relationshipName = name;
    }

    public RelationshipImpl update() {
        return this;
    }

    public Relationship apply() {
        this.innerObject = serviceManager.serviceClient()
            .getRelationships()
            .createOrUpdateWithResponse(resourceGroupName, healthModelName, relationshipName, this.innerModel(),
                Context.NONE)
            .getValue();
        return this;
    }

    public Relationship apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRelationships()
            .createOrUpdateWithResponse(resourceGroupName, healthModelName, relationshipName, this.innerModel(),
                context)
            .getValue();
        return this;
    }

    RelationshipImpl(RelationshipInner innerObject,
        com.azure.resourcemanager.cloudhealth.CloudHealthManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.healthModelName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "healthmodels");
        this.relationshipName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "relationships");
    }

    public Relationship refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getRelationships()
            .getWithResponse(resourceGroupName, healthModelName, relationshipName, Context.NONE)
            .getValue();
        return this;
    }

    public Relationship refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getRelationships()
            .getWithResponse(resourceGroupName, healthModelName, relationshipName, context)
            .getValue();
        return this;
    }

    public RelationshipImpl withProperties(RelationshipProperties properties) {
        this.innerModel().withProperties(properties);
        return this;
    }
}
