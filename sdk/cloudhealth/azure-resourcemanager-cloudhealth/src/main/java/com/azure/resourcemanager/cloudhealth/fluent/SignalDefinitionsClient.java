// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.cloudhealth.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.resourcemanager.cloudhealth.fluent.models.SignalDefinitionInner;
import java.time.OffsetDateTime;

/**
 * An instance of this class provides access to all the operations defined in SignalDefinitionsClient.
 */
public interface SignalDefinitionsClient {
    /**
     * Get a SignalDefinition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @param signalDefinitionName Name of the signal definition. Must be unique within a health model.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SignalDefinition along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SignalDefinitionInner> getWithResponse(String resourceGroupName, String healthModelName,
        String signalDefinitionName, Context context);

    /**
     * Get a SignalDefinition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @param signalDefinitionName Name of the signal definition. Must be unique within a health model.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SignalDefinition.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SignalDefinitionInner get(String resourceGroupName, String healthModelName, String signalDefinitionName);

    /**
     * Create a SignalDefinition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @param signalDefinitionName Name of the signal definition. Must be unique within a health model.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a signal definition in a health model along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SignalDefinitionInner> createOrUpdateWithResponse(String resourceGroupName, String healthModelName,
        String signalDefinitionName, SignalDefinitionInner resource, Context context);

    /**
     * Create a SignalDefinition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @param signalDefinitionName Name of the signal definition. Must be unique within a health model.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a signal definition in a health model.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SignalDefinitionInner createOrUpdate(String resourceGroupName, String healthModelName, String signalDefinitionName,
        SignalDefinitionInner resource);

    /**
     * Delete a SignalDefinition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @param signalDefinitionName Name of the signal definition. Must be unique within a health model.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String resourceGroupName, String healthModelName, String signalDefinitionName,
        Context context);

    /**
     * Delete a SignalDefinition.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @param signalDefinitionName Name of the signal definition. Must be unique within a health model.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String resourceGroupName, String healthModelName, String signalDefinitionName);

    /**
     * List SignalDefinition resources by HealthModel.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SignalDefinition list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SignalDefinitionInner> listByHealthModel(String resourceGroupName, String healthModelName);

    /**
     * List SignalDefinition resources by HealthModel.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param healthModelName Name of health model resource.
     * @param timestamp Timestamp to use for the operation. When specified, the version of the resource at this point in
     * time is retrieved. If not specified, the latest version is used.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response of a SignalDefinition list operation as paginated response with {@link PagedIterable}.
     */
    @ServiceMethod(returns = ReturnType.COLLECTION)
    PagedIterable<SignalDefinitionInner> listByHealthModel(String resourceGroupName, String healthModelName,
        OffsetDateTime timestamp, Context context);
}
