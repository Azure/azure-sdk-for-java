// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.cloudhealth.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cloudhealth.CloudHealthManager;
import com.azure.resourcemanager.cloudhealth.models.Relationship;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class RelationshipsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Succeeded\",\"displayName\":\"iqtqzfavyvnq\",\"parentEntityName\":\"ybar\",\"childEntityName\":\"euayjkqabqgzsles\",\"labels\":{\"bquwrbehw\":\"hernntiewdjc\",\"mvvhmxtdrjfuta\":\"gohbuffkmrq\",\"jvewzcjznmwcp\":\"oe\"},\"discoveredBy\":\"uaadraufactkahzo\",\"deletionDate\":\"2021-05-31T02:13:42Z\"},\"id\":\"ziuxxpshnee\",\"name\":\"ulfgslqu\",\"type\":\"kwdlenrdsutujba\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CloudHealthManager manager = CloudHealthManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Relationship response = manager.relationships()
            .getWithResponse("dyg", "ookk", "fqjbvleo", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("iqtqzfavyvnq", response.properties().displayName());
        Assertions.assertEquals("ybar", response.properties().parentEntityName());
        Assertions.assertEquals("euayjkqabqgzsles", response.properties().childEntityName());
        Assertions.assertEquals("hernntiewdjc", response.properties().labels().get("bquwrbehw"));
    }
}
