// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.cloudhealth.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cloudhealth.models.AlertConfiguration;
import com.azure.resourcemanager.cloudhealth.models.AlertSeverity;
import com.azure.resourcemanager.cloudhealth.models.EntityAlerts;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class EntityAlertsTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        EntityAlerts model = BinaryData.fromString(
            "{\"unhealthy\":{\"severity\":\"Sev4\",\"description\":\"itxmedjvcslynqww\",\"actionGroupIds\":[\"zzhxgktrm\"]},\"degraded\":{\"severity\":\"Sev0\",\"description\":\"apkteoellwptfdyg\",\"actionGroupIds\":[\"b\",\"ac\",\"op\"]}}")
            .toObject(EntityAlerts.class);
        Assertions.assertEquals(AlertSeverity.SEV4, model.unhealthy().severity());
        Assertions.assertEquals("itxmedjvcslynqww", model.unhealthy().description());
        Assertions.assertEquals("zzhxgktrm", model.unhealthy().actionGroupIds().get(0));
        Assertions.assertEquals(AlertSeverity.SEV0, model.degraded().severity());
        Assertions.assertEquals("apkteoellwptfdyg", model.degraded().description());
        Assertions.assertEquals("b", model.degraded().actionGroupIds().get(0));
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        EntityAlerts model = new EntityAlerts()
            .withUnhealthy(new AlertConfiguration().withSeverity(AlertSeverity.SEV4)
                .withDescription("itxmedjvcslynqww")
                .withActionGroupIds(Arrays.asList("zzhxgktrm")))
            .withDegraded(new AlertConfiguration().withSeverity(AlertSeverity.SEV0)
                .withDescription("apkteoellwptfdyg")
                .withActionGroupIds(Arrays.asList("b", "ac", "op")));
        model = BinaryData.fromObject(model).toObject(EntityAlerts.class);
        Assertions.assertEquals(AlertSeverity.SEV4, model.unhealthy().severity());
        Assertions.assertEquals("itxmedjvcslynqww", model.unhealthy().description());
        Assertions.assertEquals("zzhxgktrm", model.unhealthy().actionGroupIds().get(0));
        Assertions.assertEquals(AlertSeverity.SEV0, model.degraded().severity());
        Assertions.assertEquals("apkteoellwptfdyg", model.degraded().description());
        Assertions.assertEquals("b", model.degraded().actionGroupIds().get(0));
    }
}
