// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.cloudhealth.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.cloudhealth.models.DiscoveryRuleRecommendedSignalsBehavior;
import com.azure.resourcemanager.cloudhealth.models.HealthModelUpdate;
import com.azure.resourcemanager.cloudhealth.models.HealthModelUpdateProperties;
import com.azure.resourcemanager.cloudhealth.models.ManagedServiceIdentity;
import com.azure.resourcemanager.cloudhealth.models.ManagedServiceIdentityType;
import com.azure.resourcemanager.cloudhealth.models.ModelDiscoverySettings;
import com.azure.resourcemanager.cloudhealth.models.UserAssignedIdentity;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;

public final class HealthModelUpdateTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        HealthModelUpdate model = BinaryData.fromString(
            "{\"identity\":{\"principalId\":\"sainqpjwnzl\",\"tenantId\":\"fmppe\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"vndhkrwpdapp\":{\"principalId\":\"xsabkyqdu\",\"clientId\":\"itcjczdz\"},\"je\":{\"principalId\":\"bdkvwrwjf\",\"clientId\":\"snhu\"}}},\"tags\":{\"hugjzzdatqxhoc\":\"rl\",\"ozwyiftyhxhuro\":\"geablgphuticndvk\"},\"properties\":{\"discovery\":{\"scope\":\"yxolniwp\",\"addRecommendedSignals\":\"Enabled\",\"identity\":\"kjfkg\"}}}")
            .toObject(HealthModelUpdate.class);
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("rl", model.tags().get("hugjzzdatqxhoc"));
        Assertions.assertEquals("yxolniwp", model.properties().discovery().scope());
        Assertions.assertEquals(DiscoveryRuleRecommendedSignalsBehavior.ENABLED,
            model.properties().discovery().addRecommendedSignals());
        Assertions.assertEquals("kjfkg", model.properties().discovery().identity());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        HealthModelUpdate model = new HealthModelUpdate()
            .withIdentity(
                new ManagedServiceIdentity().withType(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED)
                    .withUserAssignedIdentities(
                        mapOf("vndhkrwpdapp", new UserAssignedIdentity(), "je", new UserAssignedIdentity())))
            .withTags(mapOf("hugjzzdatqxhoc", "rl", "ozwyiftyhxhuro", "geablgphuticndvk"))
            .withProperties(
                new HealthModelUpdateProperties().withDiscovery(new ModelDiscoverySettings().withScope("yxolniwp")
                    .withAddRecommendedSignals(DiscoveryRuleRecommendedSignalsBehavior.ENABLED)
                    .withIdentity("kjfkg")));
        model = BinaryData.fromObject(model).toObject(HealthModelUpdate.class);
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, model.identity().type());
        Assertions.assertEquals("rl", model.tags().get("hugjzzdatqxhoc"));
        Assertions.assertEquals("yxolniwp", model.properties().discovery().scope());
        Assertions.assertEquals(DiscoveryRuleRecommendedSignalsBehavior.ENABLED,
            model.properties().discovery().addRecommendedSignals());
        Assertions.assertEquals("kjfkg", model.properties().discovery().identity());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
