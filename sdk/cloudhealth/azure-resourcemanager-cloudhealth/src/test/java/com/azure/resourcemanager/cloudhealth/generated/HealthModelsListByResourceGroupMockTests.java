// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.cloudhealth.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.cloudhealth.CloudHealthManager;
import com.azure.resourcemanager.cloudhealth.models.DiscoveryRuleRecommendedSignalsBehavior;
import com.azure.resourcemanager.cloudhealth.models.HealthModel;
import com.azure.resourcemanager.cloudhealth.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class HealthModelsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"dataplaneEndpoint\":\"atpxl\",\"provisioningState\":\"Creating\",\"discovery\":{\"scope\":\"yjmoadsu\",\"addRecommendedSignals\":\"Enabled\",\"identity\":\"m\"}},\"identity\":{\"principalId\":\"mjsjqb\",\"tenantId\":\"hyxxrwlycoduhpk\",\"type\":\"SystemAssigned,UserAssigned\",\"userAssignedIdentities\":{\"dgssofwqmzqal\":{\"principalId\":\"areqna\",\"clientId\":\"qugjhkycube\"},\"imrzrtuzqog\":{\"principalId\":\"mnjijpxacqqudf\",\"clientId\":\"yxbaaabjyvayf\"},\"ud\":{\"principalId\":\"xnevfdnwn\",\"clientId\":\"ewzsyyceuzsoib\"},\"paxh\":{\"principalId\":\"rx\",\"clientId\":\"thzvaytdwkqbrqu\"}}},\"location\":\"iilivpdtiirqtd\",\"tags\":{\"l\":\"xoruzfgsquyfxrx\",\"zwl\":\"ptramxj\",\"tdooaoj\":\"nwxuqlcvydyp\"},\"id\":\"niodkooeb\",\"name\":\"nuj\",\"type\":\"emmsbvdkc\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        CloudHealthManager manager = CloudHealthManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<HealthModel> response
            = manager.healthModels().listByResourceGroup("bdunygaeqid", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("iilivpdtiirqtd", response.iterator().next().location());
        Assertions.assertEquals("xoruzfgsquyfxrx", response.iterator().next().tags().get("l"));
        Assertions.assertEquals("yjmoadsu", response.iterator().next().properties().discovery().scope());
        Assertions.assertEquals(DiscoveryRuleRecommendedSignalsBehavior.ENABLED,
            response.iterator().next().properties().discovery().addRecommendedSignals());
        Assertions.assertEquals("m", response.iterator().next().properties().discovery().identity());
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED,
            response.iterator().next().identity().type());
    }
}
