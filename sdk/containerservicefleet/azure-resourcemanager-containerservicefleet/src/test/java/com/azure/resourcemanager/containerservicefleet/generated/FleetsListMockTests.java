// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.Fleet;
import com.azure.resourcemanager.containerservicefleet.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Canceled\",\"hubProfile\":{\"dnsPrefix\":\"deslp\",\"apiServerAccessProfile\":{\"enablePrivateCluster\":false},\"agentProfile\":{\"subnetId\":\"yighxpk\",\"vmSize\":\"zb\"},\"fqdn\":\"uebbaumnyqup\",\"kubernetesVersion\":\"eojnabc\",\"portalFqdn\":\"smtxpsieb\"}},\"eTag\":\"hvpesapskrdqm\",\"identity\":{\"principalId\":\"fcb9f102-d63b-4334-944b-2b49d06c4213\",\"tenantId\":\"24c73ca8-d2c7-407e-b098-0842348e35ca\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"kyzxuutk\":{\"principalId\":\"2f915d5e-1302-44a2-86ba-9e889a74a052\",\"clientId\":\"cbfbeb4a-8dcb-4dca-9791-d014b447356c\"},\"scwsv\":{\"principalId\":\"56ad021a-5f2a-48c4-acf5-737079abd75d\",\"clientId\":\"68884655-2107-4ff4-a4d1-3fbc9b00bab7\"},\"togt\":{\"principalId\":\"80807ca9-083b-4c21-9b73-4d00ceb87167\",\"clientId\":\"9c1adc71-e491-47d3-87aa-b6da3df767d7\"}}},\"location\":\"upqsx\",\"tags\":{\"ykvceoveil\":\"i\",\"k\":\"vnotyfjfcnj\",\"kphywpnvjto\":\"nxdhbt\",\"plpho\":\"nermcl\"},\"id\":\"uscrpabgyepsb\",\"name\":\"tazqugxywpmueefj\",\"type\":\"wfqkquj\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Fleet> response = manager.fleets().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("upqsx", response.iterator().next().location());
        Assertions.assertEquals("i", response.iterator().next().tags().get("ykvceoveil"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("deslp", response.iterator().next().hubProfile().dnsPrefix());
        Assertions.assertEquals(false,
            response.iterator().next().hubProfile().apiServerAccessProfile().enablePrivateCluster());
        Assertions.assertEquals("yighxpk", response.iterator().next().hubProfile().agentProfile().subnetId());
        Assertions.assertEquals("zb", response.iterator().next().hubProfile().agentProfile().vmSize());
    }
}
