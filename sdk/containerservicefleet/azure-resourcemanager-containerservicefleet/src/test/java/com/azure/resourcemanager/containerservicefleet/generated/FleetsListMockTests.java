// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.Fleet;
import com.azure.resourcemanager.containerservicefleet.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Canceled\",\"hubProfile\":{\"dnsPrefix\":\"deslp\",\"apiServerAccessProfile\":{\"enablePrivateCluster\":false},\"agentProfile\":{\"subnetId\":\"yighxpk\",\"vmSize\":\"zb\"},\"fqdn\":\"uebbaumnyqup\",\"kubernetesVersion\":\"eojnabc\",\"portalFqdn\":\"smtxpsieb\"}},\"eTag\":\"hvpesapskrdqm\",\"identity\":{\"principalId\":\"ffec4bbc-54fd-42b0-af27-834fbcec5c22\",\"tenantId\":\"089d8889-e67c-4e2f-bfe1-19d5c8d65dbd\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"kyzxuutk\":{\"principalId\":\"24cec9aa-4977-4439-bcbd-468f73e9401f\",\"clientId\":\"09de2454-1c09-4708-9a86-b16d183bf159\"},\"scwsv\":{\"principalId\":\"cb14d312-820b-4a31-885f-52a9b8cb29cc\",\"clientId\":\"c0077657-7a32-4814-a31d-91f24ea9d076\"},\"togt\":{\"principalId\":\"aee032cc-8c18-4788-92a4-0762997f5507\",\"clientId\":\"3db36346-9653-42ef-b6a2-6d88e0b3d754\"}}},\"location\":\"upqsx\",\"tags\":{\"ykvceoveil\":\"i\",\"k\":\"vnotyfjfcnj\",\"kphywpnvjto\":\"nxdhbt\",\"plpho\":\"nermcl\"},\"id\":\"uscrpabgyepsb\",\"name\":\"tazqugxywpmueefj\",\"type\":\"wfqkquj\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Fleet> response = manager.fleets().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("upqsx", response.iterator().next().location());
        Assertions.assertEquals("i", response.iterator().next().tags().get("ykvceoveil"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("deslp", response.iterator().next().hubProfile().dnsPrefix());
        Assertions.assertEquals(false,
            response.iterator().next().hubProfile().apiServerAccessProfile().enablePrivateCluster());
        Assertions.assertEquals("yighxpk", response.iterator().next().hubProfile().agentProfile().subnetId());
        Assertions.assertEquals("zb", response.iterator().next().hubProfile().agentProfile().vmSize());
    }
}
