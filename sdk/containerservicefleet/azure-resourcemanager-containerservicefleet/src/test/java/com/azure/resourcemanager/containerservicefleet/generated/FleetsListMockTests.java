// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.Fleet;
import com.azure.resourcemanager.containerservicefleet.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetsListMockTests {
    @Test
    public void testList() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\",\"hubProfile\":{\"dnsPrefix\":\"xujznbmpowu\",\"apiServerAccessProfile\":{\"enablePrivateCluster\":true},\"agentProfile\":{\"subnetId\":\"veual\",\"vmSize\":\"j\"},\"fqdn\":\"hfxobbcswsrtj\",\"kubernetesVersion\":\"plrbpbewtghf\",\"portalFqdn\":\"lcgwxzvlvqh\"}},\"eTag\":\"begibtnmxiebwwa\",\"identity\":{\"principalId\":\"yqcgwrtzjuzgwy\",\"tenantId\":\"htxongmtsavjc\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"rwmdyvxqtay\":{\"clientId\":\"p\",\"principalId\":\"knftguvriuh\"},\"v\":{\"clientId\":\"ww\",\"principalId\":\"yqbexrmcqibycno\"},\"xdjzlmwlxk\":{\"clientId\":\"mefqsgzvahapjyzh\",\"principalId\":\"gqzcjr\"}}},\"location\":\"gfhzovawjvzunlut\",\"tags\":{\"jzuaejxdultskzbb\":\"prnxipeil\"},\"id\":\"dzumveekg\",\"name\":\"wozuhkf\",\"type\":\"bsjyofdx\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        PagedIterable<Fleet> response = manager.fleets().list(com.azure.core.util.Context.NONE);

        Assertions.assertEquals("gfhzovawjvzunlut", response.iterator().next().location());
        Assertions.assertEquals("prnxipeil", response.iterator().next().tags().get("jzuaejxdultskzbb"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("xujznbmpowu", response.iterator().next().hubProfile().dnsPrefix());
        Assertions.assertEquals(true,
            response.iterator().next().hubProfile().apiServerAccessProfile().enablePrivateCluster());
        Assertions.assertEquals("veual", response.iterator().next().hubProfile().agentProfile().subnetId());
        Assertions.assertEquals("j", response.iterator().next().hubProfile().agentProfile().vmSize());
    }
}
