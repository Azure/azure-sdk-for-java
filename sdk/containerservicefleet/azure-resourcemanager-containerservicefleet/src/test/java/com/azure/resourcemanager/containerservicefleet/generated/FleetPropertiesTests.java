// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.containerservicefleet.fluent.models.FleetProperties;
import com.azure.resourcemanager.containerservicefleet.models.AgentProfile;
import com.azure.resourcemanager.containerservicefleet.models.ApiServerAccessProfile;
import com.azure.resourcemanager.containerservicefleet.models.FleetHubProfile;
import org.junit.jupiter.api.Assertions;

public final class FleetPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FleetProperties model =
            BinaryData
                .fromString(
                    "{\"provisioningState\":\"Deleting\",\"hubProfile\":{\"dnsPrefix\":\"eotusivyevc\",\"apiServerAccessProfile\":{\"enablePrivateCluster\":false,\"enableVnetIntegration\":false,\"subnetId\":\"un\"},\"agentProfile\":{\"subnetId\":\"jzrnf\"},\"fqdn\":\"xgispemvtzfkufu\",\"kubernetesVersion\":\"jofxqe\"}}")
                .toObject(FleetProperties.class);
        Assertions.assertEquals("eotusivyevc", model.hubProfile().dnsPrefix());
        Assertions.assertEquals(false, model.hubProfile().apiServerAccessProfile().enablePrivateCluster());
        Assertions.assertEquals(false, model.hubProfile().apiServerAccessProfile().enableVnetIntegration());
        Assertions.assertEquals("un", model.hubProfile().apiServerAccessProfile().subnetId());
        Assertions.assertEquals("jzrnf", model.hubProfile().agentProfile().subnetId());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FleetProperties model =
            new FleetProperties()
                .withHubProfile(
                    new FleetHubProfile()
                        .withDnsPrefix("eotusivyevc")
                        .withApiServerAccessProfile(
                            new ApiServerAccessProfile()
                                .withEnablePrivateCluster(false)
                                .withEnableVnetIntegration(false)
                                .withSubnetId("un"))
                        .withAgentProfile(new AgentProfile().withSubnetId("jzrnf")));
        model = BinaryData.fromObject(model).toObject(FleetProperties.class);
        Assertions.assertEquals("eotusivyevc", model.hubProfile().dnsPrefix());
        Assertions.assertEquals(false, model.hubProfile().apiServerAccessProfile().enablePrivateCluster());
        Assertions.assertEquals(false, model.hubProfile().apiServerAccessProfile().enableVnetIntegration());
        Assertions.assertEquals("un", model.hubProfile().apiServerAccessProfile().subnetId());
        Assertions.assertEquals("jzrnf", model.hubProfile().agentProfile().subnetId());
    }
}
