// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.ManagedClusterUpgradeType;
import com.azure.resourcemanager.containerservicefleet.models.NodeImageSelectionType;
import com.azure.resourcemanager.containerservicefleet.models.UpdateRun;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class UpdateRunsListByFleetMockTests {
    @Test
    public void testListByFleet() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Canceled\",\"updateStrategyId\":\"dlkzgxhuri\",\"strategy\":{\"stages\":[{\"name\":\"podxunkb\",\"groups\":[{\"name\":\"mubyynt\"},{\"name\":\"lrb\"},{\"name\":\"tkoievseotgq\"},{\"name\":\"l\"}],\"afterStageWaitInSeconds\":1147743130},{\"name\":\"u\",\"groups\":[{\"name\":\"uwz\"},{\"name\":\"zxb\"},{\"name\":\"pgcjefuzmuvp\"}],\"afterStageWaitInSeconds\":887975126},{\"name\":\"d\",\"groups\":[{\"name\":\"rp\"},{\"name\":\"xe\"},{\"name\":\"mnzb\"},{\"name\":\"bhjpglkfgohdne\"}],\"afterStageWaitInSeconds\":1635108212},{\"name\":\"fphsdyhtozfikdow\",\"groups\":[{\"name\":\"uvxzxclvi\"},{\"name\":\"hhqzonosgg\"}],\"afterStageWaitInSeconds\":218924487}]},\"managedClusterUpdate\":{\"upgrade\":{\"type\":\"ControlPlaneOnly\",\"kubernetesVersion\":\"fwdsj\"},\"nodeImageSelection\":{\"type\":\"Consistent\"}},\"status\":{\"status\":{\"startTime\":\"2021-03-28T17:35:22Z\",\"completedTime\":\"2021-08-31T11:12:28Z\",\"state\":\"Failed\"},\"stages\":[{\"status\":{},\"name\":\"dkzzewkfvhqcrail\",\"groups\":[{}],\"afterStageWaitStatus\":{}},{\"status\":{},\"name\":\"uflrwd\",\"groups\":[{},{}],\"afterStageWaitStatus\":{}}],\"nodeImageSelection\":{\"selectedNodeImageVersions\":[{}]}}},\"eTag\":\"xsaga\",\"id\":\"nihgwqapnedg\",\"name\":\"bcvkcvqvpkeq\",\"type\":\"cvdrhvoodsot\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<UpdateRun> response
            = manager.updateRuns().listByFleet("gureodkwobdag", "tibqdxbxwakb", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("dlkzgxhuri", response.iterator().next().updateStrategyId());
        Assertions.assertEquals("podxunkb", response.iterator().next().strategy().stages().get(0).name());
        Assertions.assertEquals("mubyynt",
            response.iterator().next().strategy().stages().get(0).groups().get(0).name());
        Assertions.assertEquals(1147743130,
            response.iterator().next().strategy().stages().get(0).afterStageWaitInSeconds());
        Assertions.assertEquals(ManagedClusterUpgradeType.CONTROL_PLANE_ONLY,
            response.iterator().next().managedClusterUpdate().upgrade().type());
        Assertions.assertEquals("fwdsj",
            response.iterator().next().managedClusterUpdate().upgrade().kubernetesVersion());
        Assertions.assertEquals(NodeImageSelectionType.CONSISTENT,
            response.iterator().next().managedClusterUpdate().nodeImageSelection().type());
    }
}
