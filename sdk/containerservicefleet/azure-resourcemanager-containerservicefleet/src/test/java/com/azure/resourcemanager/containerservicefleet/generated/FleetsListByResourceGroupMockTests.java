// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.Fleet;
import com.azure.resourcemanager.containerservicefleet.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetsListByResourceGroupMockTests {
    @Test
    public void testListByResourceGroup() throws Exception {
        String responseStr
            = "{\"value\":[{\"properties\":{\"provisioningState\":\"Updating\",\"hubProfile\":{\"dnsPrefix\":\"cmgyud\",\"apiServerAccessProfile\":{\"enablePrivateCluster\":false},\"agentProfile\":{\"subnetId\":\"yrxvwfudwpznt\",\"vmSize\":\"dzhlrq\"},\"fqdn\":\"hckfrlhrx\",\"kubernetesVersion\":\"kyv\",\"portalFqdn\":\"ca\"}},\"eTag\":\"z\",\"identity\":{\"principalId\":\"4975cd31-fd6a-4407-af94-b6bb4dad01d0\",\"tenantId\":\"9db49ea6-944d-4980-bbcd-1ca95791151e\",\"type\":\"SystemAssigned\",\"userAssignedIdentities\":{\"b\":{\"principalId\":\"a32b39e8-af2a-4fcf-aea3-0fa42ec03fcd\",\"clientId\":\"933a1020-c8c7-4064-948f-16cba946c6bc\"},\"wbme\":{\"principalId\":\"1796fa7a-ba59-4e97-8913-91a80e97c5f6\",\"clientId\":\"b5b880e5-0104-4433-9d82-fabe0b1dd22d\"},\"eyvjusrtslhspkde\":{\"principalId\":\"b612176c-72bb-46f4-b4dc-7778dddbfc3e\",\"clientId\":\"0791bcc8-2233-4f27-8d37-97dfc8698310\"}}},\"location\":\"aofmxagkvtme\",\"tags\":{\"hvljuahaquh\":\"krh\",\"aex\":\"dhmdua\",\"vxpvgomz\":\"pvfadmwsrcr\"},\"id\":\"fmisg\",\"name\":\"bnbbeldawkz\",\"type\":\"ali\"}]}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        PagedIterable<Fleet> response
            = manager.fleets().listByResourceGroup("dsuyonobgla", com.azure.core.util.Context.NONE);

        Assertions.assertEquals("aofmxagkvtme", response.iterator().next().location());
        Assertions.assertEquals("krh", response.iterator().next().tags().get("hvljuahaquh"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED,
            response.iterator().next().identity().type());
        Assertions.assertEquals("cmgyud", response.iterator().next().hubProfile().dnsPrefix());
        Assertions.assertEquals(false,
            response.iterator().next().hubProfile().apiServerAccessProfile().enablePrivateCluster());
        Assertions.assertEquals("yrxvwfudwpznt", response.iterator().next().hubProfile().agentProfile().subnetId());
        Assertions.assertEquals("dzhlrq", response.iterator().next().hubProfile().agentProfile().vmSize());
    }
}
