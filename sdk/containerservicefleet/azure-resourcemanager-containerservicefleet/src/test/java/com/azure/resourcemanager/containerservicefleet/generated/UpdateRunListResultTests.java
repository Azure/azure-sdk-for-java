// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.containerservicefleet.implementation.models.UpdateRunListResult;
import com.azure.resourcemanager.containerservicefleet.models.ManagedClusterUpgradeType;
import com.azure.resourcemanager.containerservicefleet.models.NodeImageSelectionType;
import org.junit.jupiter.api.Assertions;

public final class UpdateRunListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        UpdateRunListResult model = BinaryData.fromString(
            "{\"value\":[{\"properties\":{\"provisioningState\":\"Failed\",\"updateStrategyId\":\"wdslfhotwmcy\",\"strategy\":{\"stages\":[{\"name\":\"lbjnpgacftadehx\"},{\"name\":\"ltyfsop\"},{\"name\":\"usue\"},{\"name\":\"nzwdejba\"}]},\"managedClusterUpdate\":{\"upgrade\":{\"type\":\"NodeImageOnly\",\"kubernetesVersion\":\"xzdmohctb\"},\"nodeImageSelection\":{\"type\":\"Consistent\",\"customNodeImageVersions\":[{},{},{},{}]}},\"status\":{\"status\":{\"startTime\":\"2021-03-23T22:55:01Z\",\"completedTime\":\"2021-02-14T16:40:57Z\",\"state\":\"Completed\",\"error\":{}},\"stages\":[{},{},{},{}],\"nodeImageSelection\":{\"selectedNodeImageVersions\":[{},{},{}]}},\"autoUpgradeProfileId\":\"dkcglhsl\"},\"eTag\":\"jdyggdtji\",\"id\":\"b\",\"name\":\"uofqwe\",\"type\":\"kh\"}],\"nextLink\":\"n\"}")
            .toObject(UpdateRunListResult.class);
        Assertions.assertEquals("wdslfhotwmcy", model.value().get(0).updateStrategyId());
        Assertions.assertEquals("lbjnpgacftadehx", model.value().get(0).strategy().stages().get(0).name());
        Assertions.assertEquals(ManagedClusterUpgradeType.NODE_IMAGE_ONLY,
            model.value().get(0).managedClusterUpdate().upgrade().type());
        Assertions.assertEquals("xzdmohctb", model.value().get(0).managedClusterUpdate().upgrade().kubernetesVersion());
        Assertions.assertEquals(NodeImageSelectionType.CONSISTENT,
            model.value().get(0).managedClusterUpdate().nodeImageSelection().type());
        Assertions.assertEquals("n", model.nextLink());
    }
}
