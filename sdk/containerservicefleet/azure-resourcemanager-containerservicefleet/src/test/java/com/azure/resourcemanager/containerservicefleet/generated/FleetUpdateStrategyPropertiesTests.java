// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.containerservicefleet.fluent.models.FleetUpdateStrategyProperties;
import com.azure.resourcemanager.containerservicefleet.models.UpdateGroup;
import com.azure.resourcemanager.containerservicefleet.models.UpdateRunStrategy;
import com.azure.resourcemanager.containerservicefleet.models.UpdateStage;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class FleetUpdateStrategyPropertiesTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        FleetUpdateStrategyProperties model = BinaryData.fromString(
            "{\"provisioningState\":\"Canceled\",\"strategy\":{\"stages\":[{\"name\":\"f\",\"groups\":[{\"name\":\"kpnpulexxbczwtr\"}],\"afterStageWaitInSeconds\":1083545989}]}}")
            .toObject(FleetUpdateStrategyProperties.class);
        Assertions.assertEquals("f", model.strategy().stages().get(0).name());
        Assertions.assertEquals("kpnpulexxbczwtr", model.strategy().stages().get(0).groups().get(0).name());
        Assertions.assertEquals(1083545989, model.strategy().stages().get(0).afterStageWaitInSeconds());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        FleetUpdateStrategyProperties model = new FleetUpdateStrategyProperties()
            .withStrategy(new UpdateRunStrategy().withStages(Arrays.asList(new UpdateStage().withName("f")
                .withGroups(Arrays.asList(new UpdateGroup().withName("kpnpulexxbczwtr")))
                .withAfterStageWaitInSeconds(1083545989))));
        model = BinaryData.fromObject(model).toObject(FleetUpdateStrategyProperties.class);
        Assertions.assertEquals("f", model.strategy().stages().get(0).name());
        Assertions.assertEquals("kpnpulexxbczwtr", model.strategy().stages().get(0).groups().get(0).name());
        Assertions.assertEquals(1083545989, model.strategy().stages().get(0).afterStageWaitInSeconds());
    }
}
