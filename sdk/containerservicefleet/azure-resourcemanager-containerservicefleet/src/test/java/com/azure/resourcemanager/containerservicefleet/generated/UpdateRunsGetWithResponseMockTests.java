// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.ManagedClusterUpgradeType;
import com.azure.resourcemanager.containerservicefleet.models.NodeImageSelectionType;
import com.azure.resourcemanager.containerservicefleet.models.UpdateRun;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class UpdateRunsGetWithResponseMockTests {
    @Test
    public void testGetWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Failed\",\"updateStrategyId\":\"jw\",\"strategy\":{\"stages\":[{\"name\":\"qsluicp\",\"groups\":[{\"name\":\"kzzlvmbmpaxmodf\"}],\"afterStageWaitInSeconds\":843823748},{\"name\":\"fy\",\"groups\":[{\"name\":\"pfvmwyhrfou\"},{\"name\":\"ft\"}],\"afterStageWaitInSeconds\":1378791233}]},\"managedClusterUpdate\":{\"upgrade\":{\"type\":\"NodeImageOnly\",\"kubernetesVersion\":\"wiyzvqtmnubexkp\"},\"nodeImageSelection\":{\"type\":\"Latest\"}},\"status\":{\"status\":{\"startTime\":\"2021-12-08T09:50:21Z\",\"completedTime\":\"2021-05-01T02:18:47Z\",\"state\":\"Running\"},\"stages\":[{\"status\":{},\"name\":\"mg\",\"groups\":[{},{},{}],\"afterStageWaitStatus\":{}},{\"status\":{},\"name\":\"ojvpa\",\"groups\":[{},{},{},{}],\"afterStageWaitStatus\":{}},{\"status\":{},\"name\":\"mocmbqfqvmk\",\"groups\":[{}],\"afterStageWaitStatus\":{}}],\"nodeImageSelection\":{\"selectedNodeImageVersions\":[{},{},{},{}]}}},\"eTag\":\"elxprglyatddck\",\"id\":\"cuejrjxgci\",\"name\":\"ibrhosxsdqr\",\"type\":\"zoymibmrqyibahw\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        UpdateRun response = manager.updateRuns()
            .getWithResponse("obzdopcjwvnhdl", "wmgxcxrsl", "mutwuoe", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("jw", response.updateStrategyId());
        Assertions.assertEquals("qsluicp", response.strategy().stages().get(0).name());
        Assertions.assertEquals("kzzlvmbmpaxmodf", response.strategy().stages().get(0).groups().get(0).name());
        Assertions.assertEquals(843823748, response.strategy().stages().get(0).afterStageWaitInSeconds());
        Assertions.assertEquals(ManagedClusterUpgradeType.NODE_IMAGE_ONLY,
            response.managedClusterUpdate().upgrade().type());
        Assertions.assertEquals("wiyzvqtmnubexkp", response.managedClusterUpdate().upgrade().kubernetesVersion());
        Assertions.assertEquals(NodeImageSelectionType.LATEST,
            response.managedClusterUpdate().nodeImageSelection().type());
    }
}
