// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.models.AzureCloud;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.Fleet;
import com.azure.resourcemanager.containerservicefleet.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Failed\",\"hubProfile\":{\"dnsPrefix\":\"qukkfp\",\"apiServerAccessProfile\":{\"enablePrivateCluster\":true},\"agentProfile\":{\"subnetId\":\"nkjzkdeslpvlop\",\"vmSize\":\"yighxpk\"},\"fqdn\":\"zb\",\"kubernetesVersion\":\"uebbaumnyqup\",\"portalFqdn\":\"eojnabc\"}},\"eTag\":\"smtxpsieb\",\"identity\":{\"principalId\":\"vpesapskrdqmhjjd\",\"tenantId\":\"ldwkyzxuutkn\",\"type\":\"None\",\"userAssignedIdentities\":{\"ilovnot\":{\"clientId\":\"svlxotogtwrup\",\"principalId\":\"xvnmicykvceov\"},\"nxdhbt\":{\"clientId\":\"jfcn\",\"principalId\":\"k\"},\"crpab\":{\"clientId\":\"phywpnvj\",\"principalId\":\"qnermclfplphoxu\"}}},\"location\":\"epsbjtazqu\",\"tags\":{\"wfqkquj\":\"wpmueefj\",\"cq\":\"dsuyonobgla\",\"g\":\"tcc\",\"wfudwpzntxhdzhl\":\"udxytlmoyrx\"},\"id\":\"qj\",\"name\":\"hckfrlhrx\",\"type\":\"bkyvp\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureCloud.AZURE_PUBLIC_CLOUD));

        Fleet response = manager.fleets()
            .getByResourceGroupWithResponse("bovpl", "zbhvgyuguosv", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("epsbjtazqu", response.location());
        Assertions.assertEquals("wpmueefj", response.tags().get("wfqkquj"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.identity().type());
        Assertions.assertEquals("qukkfp", response.hubProfile().dnsPrefix());
        Assertions.assertEquals(true, response.hubProfile().apiServerAccessProfile().enablePrivateCluster());
        Assertions.assertEquals("nkjzkdeslpvlop", response.hubProfile().agentProfile().subnetId());
        Assertions.assertEquals("yighxpk", response.hubProfile().agentProfile().vmSize());
    }
}
