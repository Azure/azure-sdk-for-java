// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.Fleet;
import com.azure.resourcemanager.containerservicefleet.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Updating\",\"hubProfile\":{\"dnsPrefix\":\"cjooxdjebwpucwwf\",\"apiServerAccessProfile\":{\"enablePrivateCluster\":true},\"agentProfile\":{\"subnetId\":\"euecivyhzceuoj\",\"vmSize\":\"rw\"},\"fqdn\":\"eiotwmcdytdx\",\"kubernetesVersion\":\"txnrjaw\",\"portalFqdn\":\"wgxhn\"}},\"eTag\":\"kxfbkpycgklwndn\",\"identity\":{\"principalId\":\"81468eb7-970d-4780-ad92-9dbeea4e3369\",\"tenantId\":\"3abeab78-1958-4013-a5c7-e14c6ace6519\",\"type\":\"SystemAssigned, UserAssigned\",\"userAssignedIdentities\":{\"l\":{\"principalId\":\"d934c2bc-06b2-426f-b17e-8cfdcfd0d4d6\",\"clientId\":\"75225c9f-1f12-4c14-9dbc-4ab5e1a51c4b\"},\"tdhxujznbmpowuwp\":{\"principalId\":\"965c66b9-48de-461d-a048-aaa673d8bba9\",\"clientId\":\"f86fe118-841b-496f-9c73-3f494a197340\"}}},\"location\":\"qlveualupjmkh\",\"tags\":{\"lrbpbewtghfgbl\":\"bbcswsrtjri\"},\"id\":\"gw\",\"name\":\"zvlvqhjkbegib\",\"type\":\"nmxiebwwaloayqc\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Fleet response = manager.fleets()
            .getByResourceGroupWithResponse("urqhaka", "hashsfwxosow", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("qlveualupjmkh", response.location());
        Assertions.assertEquals("bbcswsrtjri", response.tags().get("lrbpbewtghfgbl"));
        Assertions.assertEquals(ManagedServiceIdentityType.SYSTEM_ASSIGNED_USER_ASSIGNED, response.identity().type());
        Assertions.assertEquals("cjooxdjebwpucwwf", response.hubProfile().dnsPrefix());
        Assertions.assertEquals(true, response.hubProfile().apiServerAccessProfile().enablePrivateCluster());
        Assertions.assertEquals("euecivyhzceuoj", response.hubProfile().agentProfile().subnetId());
        Assertions.assertEquals("rw", response.hubProfile().agentProfile().vmSize());
    }
}
