// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.core.credential.AccessToken;
import com.azure.core.http.HttpClient;
import com.azure.core.management.AzureEnvironment;
import com.azure.core.management.profile.AzureProfile;
import com.azure.core.test.http.MockHttpResponse;
import com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager;
import com.azure.resourcemanager.containerservicefleet.models.Fleet;
import com.azure.resourcemanager.containerservicefleet.models.ManagedServiceIdentityType;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import reactor.core.publisher.Mono;

public final class FleetsGetByResourceGroupWithResponseMockTests {
    @Test
    public void testGetByResourceGroupWithResponse() throws Exception {
        String responseStr
            = "{\"properties\":{\"provisioningState\":\"Deleting\",\"hubProfile\":{\"dnsPrefix\":\"aiuebbaumnyqu\",\"apiServerAccessProfile\":{\"enablePrivateCluster\":false,\"enableVnetIntegration\":false,\"subnetId\":\"a\"},\"agentProfile\":{\"subnetId\":\"hsmtxpsiebtfhvp\",\"vmSize\":\"apskrdqm\"},\"fqdn\":\"jdhtldwkyzxu\",\"kubernetesVersion\":\"kn\",\"portalFqdn\":\"scwsv\"}},\"eTag\":\"otogtwrupqs\",\"identity\":{\"principalId\":\"08affe05-dd27-4db1-bb60-ae694628ca0e\",\"tenantId\":\"83bbd9d3-1540-4ca3-b56b-4fd17b33b26d\",\"type\":\"None\",\"userAssignedIdentities\":{\"ceoveilovno\":{\"principalId\":\"98a939e9-2d34-4670-885f-df64540f4386\",\"clientId\":\"65c2f880-a9c7-406b-a888-2efb356ea1ee\"},\"jfcn\":{\"principalId\":\"349ffd98-a59f-41a9-955a-00f6e95ae44b\",\"clientId\":\"85f9b098-1765-41be-bef5-85bfddd0efa1\"},\"cn\":{\"principalId\":\"fa923b07-a814-46fd-a300-d4b027190c10\",\"clientId\":\"67b31335-8c80-4ef9-a530-2c023842e03b\"}}},\"location\":\"hbttkphyw\",\"tags\":{\"mclfplphoxuscr\":\"jtoqne\",\"psbjta\":\"abgy\",\"kqujidsuyono\":\"qugxywpmueefjzwf\",\"tcc\":\"glaocq\"},\"id\":\"g\",\"name\":\"udxytlmoyrx\",\"type\":\"wfudwpzntxhdzhl\"}";

        HttpClient httpClient
            = response -> Mono.just(new MockHttpResponse(response, 200, responseStr.getBytes(StandardCharsets.UTF_8)));
        ContainerServiceFleetManager manager = ContainerServiceFleetManager.configure()
            .withHttpClient(httpClient)
            .authenticate(tokenRequestContext -> Mono.just(new AccessToken("this_is_a_token", OffsetDateTime.MAX)),
                new AzureProfile("", "", AzureEnvironment.AZURE));

        Fleet response = manager.fleets()
            .getByResourceGroupWithResponse("xnkjzkdesl", "vlopwiyighx", com.azure.core.util.Context.NONE)
            .getValue();

        Assertions.assertEquals("hbttkphyw", response.location());
        Assertions.assertEquals("jtoqne", response.tags().get("mclfplphoxuscr"));
        Assertions.assertEquals(ManagedServiceIdentityType.NONE, response.identity().type());
        Assertions.assertEquals("aiuebbaumnyqu", response.hubProfile().dnsPrefix());
        Assertions.assertEquals(false, response.hubProfile().apiServerAccessProfile().enablePrivateCluster());
        Assertions.assertEquals(false, response.hubProfile().apiServerAccessProfile().enableVnetIntegration());
        Assertions.assertEquals("a", response.hubProfile().apiServerAccessProfile().subnetId());
        Assertions.assertEquals("hsmtxpsiebtfhvp", response.hubProfile().agentProfile().subnetId());
        Assertions.assertEquals("apskrdqm", response.hubProfile().agentProfile().vmSize());
    }
}
