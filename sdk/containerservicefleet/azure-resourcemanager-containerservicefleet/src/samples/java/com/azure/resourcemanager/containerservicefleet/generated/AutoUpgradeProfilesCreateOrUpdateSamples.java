// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.resourcemanager.containerservicefleet.models.AutoUpgradeNodeImageSelection;
import com.azure.resourcemanager.containerservicefleet.models.AutoUpgradeNodeImageSelectionType;
import com.azure.resourcemanager.containerservicefleet.models.AutoUpgradeProfileStatus;
import com.azure.resourcemanager.containerservicefleet.models.UpgradeChannel;

/**
 * Samples for AutoUpgradeProfiles CreateOrUpdate.
 */
public final class AutoUpgradeProfilesCreateOrUpdateSamples {
    /*
     * x-ms-original-file: 2025-03-01/AutoUpgradeProfiles_CreateOrUpdate.json
     */
    /**
     * Sample code: Create an AutoUpgradeProfile.
     * 
     * @param manager Entry point to ContainerServiceFleetManager.
     */
    public static void createAnAutoUpgradeProfile(
        com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager manager) {
        manager.autoUpgradeProfiles()
            .define("autoupgradeprofile1")
            .withExistingFleet("rg1", "fleet1")
            .withChannel(UpgradeChannel.STABLE)
            .create();
    }

    /*
     * x-ms-original-file: 2025-03-01/AutoUpgradeProfiles_CreateOrUpdate_MaximumSet_Gen.json
     */
    /**
     * Sample code: Create an AutoUpgradeProfile. - generated by [MaximumSet] rule.
     * 
     * @param manager Entry point to ContainerServiceFleetManager.
     */
    public static void createAnAutoUpgradeProfileGeneratedByMaximumSetRule(
        com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager manager) {
        manager.autoUpgradeProfiles()
            .define("autoupgradeprofile1")
            .withExistingFleet("rgfleets", "fleet1")
            .withUpdateStrategyId(
                "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rgfleets/providers/Microsoft.ContainerService/fleets/fleet1/updateStrategies/strategy1")
            .withChannel(UpgradeChannel.STABLE)
            .withNodeImageSelection(
                new AutoUpgradeNodeImageSelection().withType(AutoUpgradeNodeImageSelectionType.LATEST))
            .withDisabled(true)
            .withAutoUpgradeProfileStatus(new AutoUpgradeProfileStatus())
            .withIfMatch("teikqmg")
            .withIfNoneMatch("ghfmmyrekxincsxklbldnvhqd")
            .create();
    }
}
