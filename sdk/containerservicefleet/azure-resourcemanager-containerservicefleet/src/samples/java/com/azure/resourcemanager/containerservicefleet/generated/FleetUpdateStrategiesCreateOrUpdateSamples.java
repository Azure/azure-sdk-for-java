// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.generated;

import com.azure.resourcemanager.containerservicefleet.models.UpdateGroup;
import com.azure.resourcemanager.containerservicefleet.models.UpdateRunStrategy;
import com.azure.resourcemanager.containerservicefleet.models.UpdateStage;
import java.util.Arrays;

/**
 * Samples for FleetUpdateStrategies CreateOrUpdate.
 */
public final class FleetUpdateStrategiesCreateOrUpdateSamples {
    /*
     * x-ms-original-file: 2025-03-01/FleetUpdateStrategies_CreateOrUpdate_MaximumSet_Gen.json
     */
    /**
     * Sample code: Create a FleetUpdateStrategy. - generated by [MaximumSet] rule.
     * 
     * @param manager Entry point to ContainerServiceFleetManager.
     */
    public static void createAFleetUpdateStrategyGeneratedByMaximumSetRule(
        com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager manager) {
        manager.fleetUpdateStrategies()
            .define("fleet1")
            .withExistingFleet("rgfleets", "fleet1")
            .withStrategy(new UpdateRunStrategy().withStages(Arrays.asList(new UpdateStage().withName("stage1")
                .withGroups(Arrays.asList(new UpdateGroup().withName("group-a")))
                .withAfterStageWaitInSeconds(3600))))
            .withIfMatch("bttptpmhheves")
            .withIfNoneMatch("tlx")
            .create();
    }

    /*
     * x-ms-original-file: 2025-03-01/UpdateStrategies_CreateOrUpdate.json
     */
    /**
     * Sample code: Create a FleetUpdateStrategy.
     * 
     * @param manager Entry point to ContainerServiceFleetManager.
     */
    public static void createAFleetUpdateStrategy(
        com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager manager) {
        manager.fleetUpdateStrategies()
            .define("strartegy1")
            .withExistingFleet("rg1", "fleet1")
            .withStrategy(new UpdateRunStrategy().withStages(Arrays.asList(new UpdateStage().withName("stage1")
                .withGroups(Arrays.asList(new UpdateGroup().withName("group-a")))
                .withAfterStageWaitInSeconds(3600))))
            .create();
    }
}
