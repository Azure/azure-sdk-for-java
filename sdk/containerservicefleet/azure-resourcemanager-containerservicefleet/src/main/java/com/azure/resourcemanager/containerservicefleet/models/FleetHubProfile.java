// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The FleetHubProfile configures the fleet hub.
 */
@Fluent
public final class FleetHubProfile implements JsonSerializable<FleetHubProfile> {
    /*
     * DNS prefix used to create the FQDN for the Fleet hub.
     */
    private String dnsPrefix;

    /*
     * The access profile for the Fleet hub API server.
     */
    private ApiServerAccessProfile apiServerAccessProfile;

    /*
     * The agent profile for the Fleet hub.
     */
    private AgentProfile agentProfile;

    /*
     * The FQDN of the Fleet hub.
     */
    private String fqdn;

    /*
     * The Kubernetes version of the Fleet hub.
     */
    private String kubernetesVersion;

    /*
     * The Azure Portal FQDN of the Fleet hub.
     */
    private String portalFqdn;

    /**
     * Creates an instance of FleetHubProfile class.
     */
    public FleetHubProfile() {
    }

    /**
     * Get the dnsPrefix property: DNS prefix used to create the FQDN for the Fleet hub.
     * 
     * @return the dnsPrefix value.
     */
    public String dnsPrefix() {
        return this.dnsPrefix;
    }

    /**
     * Set the dnsPrefix property: DNS prefix used to create the FQDN for the Fleet hub.
     * 
     * @param dnsPrefix the dnsPrefix value to set.
     * @return the FleetHubProfile object itself.
     */
    public FleetHubProfile withDnsPrefix(String dnsPrefix) {
        this.dnsPrefix = dnsPrefix;
        return this;
    }

    /**
     * Get the apiServerAccessProfile property: The access profile for the Fleet hub API server.
     * 
     * @return the apiServerAccessProfile value.
     */
    public ApiServerAccessProfile apiServerAccessProfile() {
        return this.apiServerAccessProfile;
    }

    /**
     * Set the apiServerAccessProfile property: The access profile for the Fleet hub API server.
     * 
     * @param apiServerAccessProfile the apiServerAccessProfile value to set.
     * @return the FleetHubProfile object itself.
     */
    public FleetHubProfile withApiServerAccessProfile(ApiServerAccessProfile apiServerAccessProfile) {
        this.apiServerAccessProfile = apiServerAccessProfile;
        return this;
    }

    /**
     * Get the agentProfile property: The agent profile for the Fleet hub.
     * 
     * @return the agentProfile value.
     */
    public AgentProfile agentProfile() {
        return this.agentProfile;
    }

    /**
     * Set the agentProfile property: The agent profile for the Fleet hub.
     * 
     * @param agentProfile the agentProfile value to set.
     * @return the FleetHubProfile object itself.
     */
    public FleetHubProfile withAgentProfile(AgentProfile agentProfile) {
        this.agentProfile = agentProfile;
        return this;
    }

    /**
     * Get the fqdn property: The FQDN of the Fleet hub.
     * 
     * @return the fqdn value.
     */
    public String fqdn() {
        return this.fqdn;
    }

    /**
     * Get the kubernetesVersion property: The Kubernetes version of the Fleet hub.
     * 
     * @return the kubernetesVersion value.
     */
    public String kubernetesVersion() {
        return this.kubernetesVersion;
    }

    /**
     * Get the portalFqdn property: The Azure Portal FQDN of the Fleet hub.
     * 
     * @return the portalFqdn value.
     */
    public String portalFqdn() {
        return this.portalFqdn;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (apiServerAccessProfile() != null) {
            apiServerAccessProfile().validate();
        }
        if (agentProfile() != null) {
            agentProfile().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("dnsPrefix", this.dnsPrefix);
        jsonWriter.writeJsonField("apiServerAccessProfile", this.apiServerAccessProfile);
        jsonWriter.writeJsonField("agentProfile", this.agentProfile);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FleetHubProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FleetHubProfile if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the FleetHubProfile.
     */
    public static FleetHubProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FleetHubProfile deserializedFleetHubProfile = new FleetHubProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("dnsPrefix".equals(fieldName)) {
                    deserializedFleetHubProfile.dnsPrefix = reader.getString();
                } else if ("apiServerAccessProfile".equals(fieldName)) {
                    deserializedFleetHubProfile.apiServerAccessProfile = ApiServerAccessProfile.fromJson(reader);
                } else if ("agentProfile".equals(fieldName)) {
                    deserializedFleetHubProfile.agentProfile = AgentProfile.fromJson(reader);
                } else if ("fqdn".equals(fieldName)) {
                    deserializedFleetHubProfile.fqdn = reader.getString();
                } else if ("kubernetesVersion".equals(fieldName)) {
                    deserializedFleetHubProfile.kubernetesVersion = reader.getString();
                } else if ("portalFqdn".equals(fieldName)) {
                    deserializedFleetHubProfile.portalFqdn = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFleetHubProfile;
        });
    }
}
