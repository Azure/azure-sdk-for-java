// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.models;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.containerservicefleet.fluent.models.AutoUpgradeProfileInner;

/**
 * An immutable client-side representation of AutoUpgradeProfile.
 */
public interface AutoUpgradeProfile {
    /**
     * Gets the id property: Fully qualified resource Id for the resource.
     * 
     * @return the id value.
     */
    String id();

    /**
     * Gets the name property: The name of the resource.
     * 
     * @return the name value.
     */
    String name();

    /**
     * Gets the type property: The type of the resource.
     * 
     * @return the type value.
     */
    String type();

    /**
     * Gets the etag property: If eTag is provided in the response body, it may also be provided as a header per the
     * normal etag convention. Entity tags are used for comparing two or more entities from the same requested resource.
     * HTTP/1.1 uses entity tags in the etag (section 14.19), If-Match (section 14.24), If-None-Match (section 14.26),
     * and If-Range (section 14.27) header fields.
     * 
     * @return the etag value.
     */
    String etag();

    /**
     * Gets the systemData property: Azure Resource Manager metadata containing createdBy and modifiedBy information.
     * 
     * @return the systemData value.
     */
    SystemData systemData();

    /**
     * Gets the provisioningState property: The provisioning state of the AutoUpgradeProfile resource.
     * 
     * @return the provisioningState value.
     */
    AutoUpgradeProfileProvisioningState provisioningState();

    /**
     * Gets the updateStrategyId property: The resource id of the UpdateStrategy resource to reference. If not
     * specified, the auto upgrade will run on all clusters which are members of the fleet.
     * 
     * @return the updateStrategyId value.
     */
    String updateStrategyId();

    /**
     * Gets the channel property: Configures how auto-upgrade will be run.
     * 
     * @return the channel value.
     */
    UpgradeChannel channel();

    /**
     * Gets the nodeImageSelection property: The node image upgrade to be applied to the target clusters in auto
     * upgrade.
     * 
     * @return the nodeImageSelection value.
     */
    AutoUpgradeNodeImageSelection nodeImageSelection();

    /**
     * Gets the disabled property: If set to False: the auto upgrade has effect - target managed clusters will be
     * upgraded on schedule.
     * If set to True: the auto upgrade has no effect - no upgrade will be run on the target managed clusters.
     * This is a boolean and not an enum because enabled/disabled are all available states of the auto upgrade profile.
     * By default, this is set to False.
     * 
     * @return the disabled value.
     */
    Boolean disabled();

    /**
     * Gets the name of the resource group.
     * 
     * @return the name of the resource group.
     */
    String resourceGroupName();

    /**
     * Gets the inner com.azure.resourcemanager.containerservicefleet.fluent.models.AutoUpgradeProfileInner object.
     * 
     * @return the inner object.
     */
    AutoUpgradeProfileInner innerModel();

    /**
     * The entirety of the AutoUpgradeProfile definition.
     */
    interface Definition
        extends DefinitionStages.Blank, DefinitionStages.WithParentResource, DefinitionStages.WithCreate {
    }

    /**
     * The AutoUpgradeProfile definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of the AutoUpgradeProfile definition.
         */
        interface Blank extends WithParentResource {
        }

        /**
         * The stage of the AutoUpgradeProfile definition allowing to specify parent resource.
         */
        interface WithParentResource {
            /**
             * Specifies resourceGroupName, fleetName.
             * 
             * @param resourceGroupName The name of the resource group. The name is case insensitive.
             * @param fleetName The name of the Fleet resource.
             * @return the next definition stage.
             */
            WithCreate withExistingFleet(String resourceGroupName, String fleetName);
        }

        /**
         * The stage of the AutoUpgradeProfile definition which contains all the minimum required properties for the
         * resource to be created, but also allows for any other optional properties to be specified.
         */
        interface WithCreate extends DefinitionStages.WithUpdateStrategyId, DefinitionStages.WithChannel,
            DefinitionStages.WithNodeImageSelection, DefinitionStages.WithDisabled, DefinitionStages.WithIfMatch,
            DefinitionStages.WithIfNoneMatch {
            /**
             * Executes the create request.
             * 
             * @return the created resource.
             */
            AutoUpgradeProfile create();

            /**
             * Executes the create request.
             * 
             * @param context The context to associate with this operation.
             * @return the created resource.
             */
            AutoUpgradeProfile create(Context context);
        }

        /**
         * The stage of the AutoUpgradeProfile definition allowing to specify updateStrategyId.
         */
        interface WithUpdateStrategyId {
            /**
             * Specifies the updateStrategyId property: The resource id of the UpdateStrategy resource to reference. If
             * not specified, the auto upgrade will run on all clusters which are members of the fleet..
             * 
             * @param updateStrategyId The resource id of the UpdateStrategy resource to reference. If not specified,
             * the auto upgrade will run on all clusters which are members of the fleet.
             * @return the next definition stage.
             */
            WithCreate withUpdateStrategyId(String updateStrategyId);
        }

        /**
         * The stage of the AutoUpgradeProfile definition allowing to specify channel.
         */
        interface WithChannel {
            /**
             * Specifies the channel property: Configures how auto-upgrade will be run..
             * 
             * @param channel Configures how auto-upgrade will be run.
             * @return the next definition stage.
             */
            WithCreate withChannel(UpgradeChannel channel);
        }

        /**
         * The stage of the AutoUpgradeProfile definition allowing to specify nodeImageSelection.
         */
        interface WithNodeImageSelection {
            /**
             * Specifies the nodeImageSelection property: The node image upgrade to be applied to the target clusters in
             * auto upgrade..
             * 
             * @param nodeImageSelection The node image upgrade to be applied to the target clusters in auto upgrade.
             * @return the next definition stage.
             */
            WithCreate withNodeImageSelection(AutoUpgradeNodeImageSelection nodeImageSelection);
        }

        /**
         * The stage of the AutoUpgradeProfile definition allowing to specify disabled.
         */
        interface WithDisabled {
            /**
             * Specifies the disabled property: If set to False: the auto upgrade has effect - target managed clusters
             * will be upgraded on schedule.
             * If set to True: the auto upgrade has no effect - no upgrade will be run on the target managed clusters.
             * This is a boolean and not an enum because enabled/disabled are all available states of the auto upgrade
             * profile.
             * By default, this is set to False..
             * 
             * @param disabled If set to False: the auto upgrade has effect - target managed clusters will be upgraded
             * on schedule.
             * If set to True: the auto upgrade has no effect - no upgrade will be run on the target managed clusters.
             * This is a boolean and not an enum because enabled/disabled are all available states of the auto upgrade
             * profile.
             * By default, this is set to False.
             * @return the next definition stage.
             */
            WithCreate withDisabled(Boolean disabled);
        }

        /**
         * The stage of the AutoUpgradeProfile definition allowing to specify ifMatch.
         */
        interface WithIfMatch {
            /**
             * Specifies the ifMatch property: The request should only proceed if an entity matches this string..
             * 
             * @param ifMatch The request should only proceed if an entity matches this string.
             * @return the next definition stage.
             */
            WithCreate withIfMatch(String ifMatch);
        }

        /**
         * The stage of the AutoUpgradeProfile definition allowing to specify ifNoneMatch.
         */
        interface WithIfNoneMatch {
            /**
             * Specifies the ifNoneMatch property: The request should only proceed if no entity matches this string..
             * 
             * @param ifNoneMatch The request should only proceed if no entity matches this string.
             * @return the next definition stage.
             */
            WithCreate withIfNoneMatch(String ifNoneMatch);
        }
    }

    /**
     * Begins update for the AutoUpgradeProfile resource.
     * 
     * @return the stage of resource update.
     */
    AutoUpgradeProfile.Update update();

    /**
     * The template for AutoUpgradeProfile update.
     */
    interface Update extends UpdateStages.WithChannel, UpdateStages.WithNodeImageSelection, UpdateStages.WithDisabled,
        UpdateStages.WithIfMatch, UpdateStages.WithIfNoneMatch {
        /**
         * Executes the update request.
         * 
         * @return the updated resource.
         */
        AutoUpgradeProfile apply();

        /**
         * Executes the update request.
         * 
         * @param context The context to associate with this operation.
         * @return the updated resource.
         */
        AutoUpgradeProfile apply(Context context);
    }

    /**
     * The AutoUpgradeProfile update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the AutoUpgradeProfile update allowing to specify channel.
         */
        interface WithChannel {
            /**
             * Specifies the channel property: Configures how auto-upgrade will be run..
             * 
             * @param channel Configures how auto-upgrade will be run.
             * @return the next definition stage.
             */
            Update withChannel(UpgradeChannel channel);
        }

        /**
         * The stage of the AutoUpgradeProfile update allowing to specify nodeImageSelection.
         */
        interface WithNodeImageSelection {
            /**
             * Specifies the nodeImageSelection property: The node image upgrade to be applied to the target clusters in
             * auto upgrade..
             * 
             * @param nodeImageSelection The node image upgrade to be applied to the target clusters in auto upgrade.
             * @return the next definition stage.
             */
            Update withNodeImageSelection(AutoUpgradeNodeImageSelection nodeImageSelection);
        }

        /**
         * The stage of the AutoUpgradeProfile update allowing to specify disabled.
         */
        interface WithDisabled {
            /**
             * Specifies the disabled property: If set to False: the auto upgrade has effect - target managed clusters
             * will be upgraded on schedule.
             * If set to True: the auto upgrade has no effect - no upgrade will be run on the target managed clusters.
             * This is a boolean and not an enum because enabled/disabled are all available states of the auto upgrade
             * profile.
             * By default, this is set to False..
             * 
             * @param disabled If set to False: the auto upgrade has effect - target managed clusters will be upgraded
             * on schedule.
             * If set to True: the auto upgrade has no effect - no upgrade will be run on the target managed clusters.
             * This is a boolean and not an enum because enabled/disabled are all available states of the auto upgrade
             * profile.
             * By default, this is set to False.
             * @return the next definition stage.
             */
            Update withDisabled(Boolean disabled);
        }

        /**
         * The stage of the AutoUpgradeProfile update allowing to specify ifMatch.
         */
        interface WithIfMatch {
            /**
             * Specifies the ifMatch property: The request should only proceed if an entity matches this string..
             * 
             * @param ifMatch The request should only proceed if an entity matches this string.
             * @return the next definition stage.
             */
            Update withIfMatch(String ifMatch);
        }

        /**
         * The stage of the AutoUpgradeProfile update allowing to specify ifNoneMatch.
         */
        interface WithIfNoneMatch {
            /**
             * Specifies the ifNoneMatch property: The request should only proceed if no entity matches this string..
             * 
             * @param ifNoneMatch The request should only proceed if no entity matches this string.
             * @return the next definition stage.
             */
            Update withIfNoneMatch(String ifNoneMatch);
        }
    }

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @return the refreshed resource.
     */
    AutoUpgradeProfile refresh();

    /**
     * Refreshes the resource to sync with Azure.
     * 
     * @param context The context to associate with this operation.
     * @return the refreshed resource.
     */
    AutoUpgradeProfile refresh(Context context);
}
