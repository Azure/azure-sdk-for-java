// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.implementation;

import com.azure.core.management.SystemData;
import com.azure.core.util.Context;
import com.azure.resourcemanager.containerservicefleet.fluent.models.AutoUpgradeProfileInner;
import com.azure.resourcemanager.containerservicefleet.models.AutoUpgradeNodeImageSelection;
import com.azure.resourcemanager.containerservicefleet.models.AutoUpgradeProfile;
import com.azure.resourcemanager.containerservicefleet.models.AutoUpgradeProfileProvisioningState;
import com.azure.resourcemanager.containerservicefleet.models.UpgradeChannel;

public final class AutoUpgradeProfileImpl
    implements AutoUpgradeProfile, AutoUpgradeProfile.Definition, AutoUpgradeProfile.Update {
    private AutoUpgradeProfileInner innerObject;

    private final com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager serviceManager;

    public String id() {
        return this.innerModel().id();
    }

    public String name() {
        return this.innerModel().name();
    }

    public String type() {
        return this.innerModel().type();
    }

    public String etag() {
        return this.innerModel().etag();
    }

    public SystemData systemData() {
        return this.innerModel().systemData();
    }

    public AutoUpgradeProfileProvisioningState provisioningState() {
        return this.innerModel().provisioningState();
    }

    public String updateStrategyId() {
        return this.innerModel().updateStrategyId();
    }

    public UpgradeChannel channel() {
        return this.innerModel().channel();
    }

    public AutoUpgradeNodeImageSelection nodeImageSelection() {
        return this.innerModel().nodeImageSelection();
    }

    public Boolean disabled() {
        return this.innerModel().disabled();
    }

    public String resourceGroupName() {
        return resourceGroupName;
    }

    public AutoUpgradeProfileInner innerModel() {
        return this.innerObject;
    }

    private com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager manager() {
        return this.serviceManager;
    }

    private String resourceGroupName;

    private String fleetName;

    private String autoUpgradeProfileName;

    private String createIfMatch;

    private String createIfNoneMatch;

    private String updateIfMatch;

    private String updateIfNoneMatch;

    public AutoUpgradeProfileImpl withExistingFleet(String resourceGroupName, String fleetName) {
        this.resourceGroupName = resourceGroupName;
        this.fleetName = fleetName;
        return this;
    }

    public AutoUpgradeProfile create() {
        this.innerObject = serviceManager.serviceClient()
            .getAutoUpgradeProfiles()
            .createOrUpdate(resourceGroupName, fleetName, autoUpgradeProfileName, this.innerModel(), createIfMatch,
                createIfNoneMatch, Context.NONE);
        return this;
    }

    public AutoUpgradeProfile create(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAutoUpgradeProfiles()
            .createOrUpdate(resourceGroupName, fleetName, autoUpgradeProfileName, this.innerModel(), createIfMatch,
                createIfNoneMatch, context);
        return this;
    }

    AutoUpgradeProfileImpl(String name,
        com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager serviceManager) {
        this.innerObject = new AutoUpgradeProfileInner();
        this.serviceManager = serviceManager;
        this.autoUpgradeProfileName = name;
        this.createIfMatch = null;
        this.createIfNoneMatch = null;
    }

    public AutoUpgradeProfileImpl update() {
        this.updateIfMatch = null;
        this.updateIfNoneMatch = null;
        return this;
    }

    public AutoUpgradeProfile apply() {
        this.innerObject = serviceManager.serviceClient()
            .getAutoUpgradeProfiles()
            .createOrUpdate(resourceGroupName, fleetName, autoUpgradeProfileName, this.innerModel(), updateIfMatch,
                updateIfNoneMatch, Context.NONE);
        return this;
    }

    public AutoUpgradeProfile apply(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAutoUpgradeProfiles()
            .createOrUpdate(resourceGroupName, fleetName, autoUpgradeProfileName, this.innerModel(), updateIfMatch,
                updateIfNoneMatch, context);
        return this;
    }

    AutoUpgradeProfileImpl(AutoUpgradeProfileInner innerObject,
        com.azure.resourcemanager.containerservicefleet.ContainerServiceFleetManager serviceManager) {
        this.innerObject = innerObject;
        this.serviceManager = serviceManager;
        this.resourceGroupName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "resourceGroups");
        this.fleetName = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "fleets");
        this.autoUpgradeProfileName
            = ResourceManagerUtils.getValueFromIdByName(innerObject.id(), "autoUpgradeProfiles");
    }

    public AutoUpgradeProfile refresh() {
        this.innerObject = serviceManager.serviceClient()
            .getAutoUpgradeProfiles()
            .getWithResponse(resourceGroupName, fleetName, autoUpgradeProfileName, Context.NONE)
            .getValue();
        return this;
    }

    public AutoUpgradeProfile refresh(Context context) {
        this.innerObject = serviceManager.serviceClient()
            .getAutoUpgradeProfiles()
            .getWithResponse(resourceGroupName, fleetName, autoUpgradeProfileName, context)
            .getValue();
        return this;
    }

    public AutoUpgradeProfileImpl withUpdateStrategyId(String updateStrategyId) {
        this.innerModel().withUpdateStrategyId(updateStrategyId);
        return this;
    }

    public AutoUpgradeProfileImpl withChannel(UpgradeChannel channel) {
        this.innerModel().withChannel(channel);
        return this;
    }

    public AutoUpgradeProfileImpl withNodeImageSelection(AutoUpgradeNodeImageSelection nodeImageSelection) {
        this.innerModel().withNodeImageSelection(nodeImageSelection);
        return this;
    }

    public AutoUpgradeProfileImpl withDisabled(Boolean disabled) {
        this.innerModel().withDisabled(disabled);
        return this;
    }

    public AutoUpgradeProfileImpl withIfMatch(String ifMatch) {
        if (isInCreateMode()) {
            this.createIfMatch = ifMatch;
            return this;
        } else {
            this.updateIfMatch = ifMatch;
            return this;
        }
    }

    public AutoUpgradeProfileImpl withIfNoneMatch(String ifNoneMatch) {
        if (isInCreateMode()) {
            this.createIfNoneMatch = ifNoneMatch;
            return this;
        } else {
            this.updateIfNoneMatch = ifNoneMatch;
            return this;
        }
    }

    private boolean isInCreateMode() {
        return this.innerModel().id() == null;
    }
}
