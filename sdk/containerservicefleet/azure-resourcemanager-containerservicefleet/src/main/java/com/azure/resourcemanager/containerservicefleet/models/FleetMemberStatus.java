// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.management.exception.ManagementError;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Status information for the fleet member.
 */
@Immutable
public final class FleetMemberStatus implements JsonSerializable<FleetMemberStatus> {
    /*
     * The last operation ID for the fleet member
     */
    private String lastOperationId;

    /*
     * The last operation error of the fleet member
     */
    private ManagementError lastOperationError;

    /**
     * Creates an instance of FleetMemberStatus class.
     */
    private FleetMemberStatus() {
    }

    /**
     * Get the lastOperationId property: The last operation ID for the fleet member.
     * 
     * @return the lastOperationId value.
     */
    public String lastOperationId() {
        return this.lastOperationId;
    }

    /**
     * Get the lastOperationError property: The last operation error of the fleet member.
     * 
     * @return the lastOperationError value.
     */
    public ManagementError lastOperationError() {
        return this.lastOperationError;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FleetMemberStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FleetMemberStatus if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the FleetMemberStatus.
     */
    public static FleetMemberStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FleetMemberStatus deserializedFleetMemberStatus = new FleetMemberStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("lastOperationId".equals(fieldName)) {
                    deserializedFleetMemberStatus.lastOperationId = reader.getString();
                } else if ("lastOperationError".equals(fieldName)) {
                    deserializedFleetMemberStatus.lastOperationError = ManagementError.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFleetMemberStatus;
        });
    }
}
