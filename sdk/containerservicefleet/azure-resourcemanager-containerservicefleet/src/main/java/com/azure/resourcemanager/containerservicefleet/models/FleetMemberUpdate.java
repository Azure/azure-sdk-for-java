// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.containerservicefleet.fluent.models.FleetMemberUpdateProperties;
import java.io.IOException;

/**
 * The type used for update operations of the FleetMember.
 */
@Fluent
public final class FleetMemberUpdate implements JsonSerializable<FleetMemberUpdate> {
    /*
     * The resource-specific properties for this resource.
     */
    private FleetMemberUpdateProperties innerProperties;

    /**
     * Creates an instance of FleetMemberUpdate class.
     */
    public FleetMemberUpdate() {
    }

    /**
     * Get the innerProperties property: The resource-specific properties for this resource.
     * 
     * @return the innerProperties value.
     */
    private FleetMemberUpdateProperties innerProperties() {
        return this.innerProperties;
    }

    /**
     * Get the group property: The group this member belongs to for multi-cluster update management.
     * 
     * @return the group value.
     */
    public String group() {
        return this.innerProperties() == null ? null : this.innerProperties().group();
    }

    /**
     * Set the group property: The group this member belongs to for multi-cluster update management.
     * 
     * @param group the group value to set.
     * @return the FleetMemberUpdate object itself.
     */
    public FleetMemberUpdate withGroup(String group) {
        if (this.innerProperties() == null) {
            this.innerProperties = new FleetMemberUpdateProperties();
        }
        this.innerProperties().withGroup(group);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (innerProperties() != null) {
            innerProperties().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("properties", this.innerProperties);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FleetMemberUpdate from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FleetMemberUpdate if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the FleetMemberUpdate.
     */
    public static FleetMemberUpdate fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FleetMemberUpdate deserializedFleetMemberUpdate = new FleetMemberUpdate();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("properties".equals(fieldName)) {
                    deserializedFleetMemberUpdate.innerProperties = FleetMemberUpdateProperties.fromJson(reader);
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFleetMemberUpdate;
        });
    }
}
