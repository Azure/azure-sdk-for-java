// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azure.resourcemanager.containerservicefleet.models;

import com.azure.core.annotation.Immutable;
import com.azure.core.management.exception.ManagementError;
import com.azure.core.util.CoreUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * AutoUpgradeProfileStatus is the status of an auto upgrade profile.
 */
@Immutable
public final class AutoUpgradeProfileStatus implements JsonSerializable<AutoUpgradeProfileStatus> {
    /*
     * The UTC time of the last attempt to automatically create and start an UpdateRun as triggered by the release of
     * new versions.
     */
    private OffsetDateTime lastTriggeredAt;

    /*
     * The status of the last AutoUpgrade trigger.
     */
    private AutoUpgradeLastTriggerStatus lastTriggerStatus;

    /*
     * The error details of the last trigger.
     */
    private ManagementError lastTriggerError;

    /*
     * The target Kubernetes version or node image versions of the last trigger.
     */
    private List<String> lastTriggerUpgradeVersions;

    /**
     * Creates an instance of AutoUpgradeProfileStatus class.
     */
    public AutoUpgradeProfileStatus() {
    }

    /**
     * Get the lastTriggeredAt property: The UTC time of the last attempt to automatically create and start an UpdateRun
     * as triggered by the release of new versions.
     * 
     * @return the lastTriggeredAt value.
     */
    public OffsetDateTime lastTriggeredAt() {
        return this.lastTriggeredAt;
    }

    /**
     * Get the lastTriggerStatus property: The status of the last AutoUpgrade trigger.
     * 
     * @return the lastTriggerStatus value.
     */
    public AutoUpgradeLastTriggerStatus lastTriggerStatus() {
        return this.lastTriggerStatus;
    }

    /**
     * Get the lastTriggerError property: The error details of the last trigger.
     * 
     * @return the lastTriggerError value.
     */
    public ManagementError lastTriggerError() {
        return this.lastTriggerError;
    }

    /**
     * Get the lastTriggerUpgradeVersions property: The target Kubernetes version or node image versions of the last
     * trigger.
     * 
     * @return the lastTriggerUpgradeVersions value.
     */
    public List<String> lastTriggerUpgradeVersions() {
        return this.lastTriggerUpgradeVersions;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of AutoUpgradeProfileStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of AutoUpgradeProfileStatus if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the AutoUpgradeProfileStatus.
     */
    public static AutoUpgradeProfileStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            AutoUpgradeProfileStatus deserializedAutoUpgradeProfileStatus = new AutoUpgradeProfileStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("lastTriggeredAt".equals(fieldName)) {
                    deserializedAutoUpgradeProfileStatus.lastTriggeredAt = reader
                        .getNullable(nonNullReader -> CoreUtils.parseBestOffsetDateTime(nonNullReader.getString()));
                } else if ("lastTriggerStatus".equals(fieldName)) {
                    deserializedAutoUpgradeProfileStatus.lastTriggerStatus
                        = AutoUpgradeLastTriggerStatus.fromString(reader.getString());
                } else if ("lastTriggerError".equals(fieldName)) {
                    deserializedAutoUpgradeProfileStatus.lastTriggerError = ManagementError.fromJson(reader);
                } else if ("lastTriggerUpgradeVersions".equals(fieldName)) {
                    List<String> lastTriggerUpgradeVersions = reader.readArray(reader1 -> reader1.getString());
                    deserializedAutoUpgradeProfileStatus.lastTriggerUpgradeVersions = lastTriggerUpgradeVersions;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedAutoUpgradeProfileStatus;
        });
    }
}
