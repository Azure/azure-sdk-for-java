// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import com.azure.resourcemanager.containerservicefleet.models.FleetCredentialResult;
import java.io.IOException;
import java.util.List;

/**
 * The Credential results response.
 */
@Immutable
public final class FleetCredentialResultsInner implements JsonSerializable<FleetCredentialResultsInner> {
    /*
     * Array of base64-encoded Kubernetes configuration files.
     */
    private List<FleetCredentialResult> kubeconfigs;

    /**
     * Creates an instance of FleetCredentialResultsInner class.
     */
    public FleetCredentialResultsInner() {
    }

    /**
     * Get the kubeconfigs property: Array of base64-encoded Kubernetes configuration files.
     * 
     * @return the kubeconfigs value.
     */
    public List<FleetCredentialResult> kubeconfigs() {
        return this.kubeconfigs;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (kubeconfigs() != null) {
            kubeconfigs().forEach(e -> e.validate());
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of FleetCredentialResultsInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of FleetCredentialResultsInner if the JsonReader was pointing to an instance of it, or null
     * if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the FleetCredentialResultsInner.
     */
    public static FleetCredentialResultsInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            FleetCredentialResultsInner deserializedFleetCredentialResultsInner = new FleetCredentialResultsInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("kubeconfigs".equals(fieldName)) {
                    List<FleetCredentialResult> kubeconfigs
                        = reader.readArray(reader1 -> FleetCredentialResult.fromJson(reader1));
                    deserializedFleetCredentialResultsInner.kubeconfigs = kubeconfigs;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedFleetCredentialResultsInner;
        });
    }
}
