// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Access profile for the Fleet hub API server.
 */
@Fluent
public final class ApiServerAccessProfile implements JsonSerializable<ApiServerAccessProfile> {
    /*
     * Whether to create the Fleet hub as a private cluster or not.
     */
    private Boolean enablePrivateCluster;

    /*
     * Whether to enable apiserver vnet integration for the Fleet hub or not.
     */
    private Boolean enableVnetIntegration;

    /*
     * The subnet to be used when apiserver vnet integration is enabled. It is required when creating a new Fleet with
     * BYO vnet.
     */
    private String subnetId;

    /**
     * Creates an instance of ApiServerAccessProfile class.
     */
    public ApiServerAccessProfile() {
    }

    /**
     * Get the enablePrivateCluster property: Whether to create the Fleet hub as a private cluster or not.
     * 
     * @return the enablePrivateCluster value.
     */
    public Boolean enablePrivateCluster() {
        return this.enablePrivateCluster;
    }

    /**
     * Set the enablePrivateCluster property: Whether to create the Fleet hub as a private cluster or not.
     * 
     * @param enablePrivateCluster the enablePrivateCluster value to set.
     * @return the ApiServerAccessProfile object itself.
     */
    public ApiServerAccessProfile withEnablePrivateCluster(Boolean enablePrivateCluster) {
        this.enablePrivateCluster = enablePrivateCluster;
        return this;
    }

    /**
     * Get the enableVnetIntegration property: Whether to enable apiserver vnet integration for the Fleet hub or not.
     * 
     * @return the enableVnetIntegration value.
     */
    public Boolean enableVnetIntegration() {
        return this.enableVnetIntegration;
    }

    /**
     * Set the enableVnetIntegration property: Whether to enable apiserver vnet integration for the Fleet hub or not.
     * 
     * @param enableVnetIntegration the enableVnetIntegration value to set.
     * @return the ApiServerAccessProfile object itself.
     */
    public ApiServerAccessProfile withEnableVnetIntegration(Boolean enableVnetIntegration) {
        this.enableVnetIntegration = enableVnetIntegration;
        return this;
    }

    /**
     * Get the subnetId property: The subnet to be used when apiserver vnet integration is enabled. It is required when
     * creating a new Fleet with BYO vnet.
     * 
     * @return the subnetId value.
     */
    public String subnetId() {
        return this.subnetId;
    }

    /**
     * Set the subnetId property: The subnet to be used when apiserver vnet integration is enabled. It is required when
     * creating a new Fleet with BYO vnet.
     * 
     * @param subnetId the subnetId value to set.
     * @return the ApiServerAccessProfile object itself.
     */
    public ApiServerAccessProfile withSubnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("enablePrivateCluster", this.enablePrivateCluster);
        jsonWriter.writeBooleanField("enableVnetIntegration", this.enableVnetIntegration);
        jsonWriter.writeStringField("subnetId", this.subnetId);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ApiServerAccessProfile from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ApiServerAccessProfile if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ApiServerAccessProfile.
     */
    public static ApiServerAccessProfile fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ApiServerAccessProfile deserializedApiServerAccessProfile = new ApiServerAccessProfile();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("enablePrivateCluster".equals(fieldName)) {
                    deserializedApiServerAccessProfile.enablePrivateCluster
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("enableVnetIntegration".equals(fieldName)) {
                    deserializedApiServerAccessProfile.enableVnetIntegration
                        = reader.getNullable(JsonReader::getBoolean);
                } else if ("subnetId".equals(fieldName)) {
                    deserializedApiServerAccessProfile.subnetId = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedApiServerAccessProfile;
        });
    }
}
