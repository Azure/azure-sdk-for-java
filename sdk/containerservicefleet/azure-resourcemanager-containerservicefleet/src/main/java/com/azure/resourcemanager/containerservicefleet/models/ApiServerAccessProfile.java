// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Access profile for the Fleet hub API server. */
@Fluent
public final class ApiServerAccessProfile {
    /*
     * Whether to create the Fleet hub as a private cluster or not.
     */
    @JsonProperty(value = "enablePrivateCluster")
    private Boolean enablePrivateCluster;

    /*
     * Whether to enable apiserver vnet integration for the Fleet hub or not.
     */
    @JsonProperty(value = "enableVnetIntegration")
    private Boolean enableVnetIntegration;

    /*
     * The subnet to be used when apiserver vnet integration is enabled. It is required when creating a new Fleet with
     * BYO vnet.
     */
    @JsonProperty(value = "subnetId")
    private String subnetId;

    /** Creates an instance of ApiServerAccessProfile class. */
    public ApiServerAccessProfile() {
    }

    /**
     * Get the enablePrivateCluster property: Whether to create the Fleet hub as a private cluster or not.
     *
     * @return the enablePrivateCluster value.
     */
    public Boolean enablePrivateCluster() {
        return this.enablePrivateCluster;
    }

    /**
     * Set the enablePrivateCluster property: Whether to create the Fleet hub as a private cluster or not.
     *
     * @param enablePrivateCluster the enablePrivateCluster value to set.
     * @return the ApiServerAccessProfile object itself.
     */
    public ApiServerAccessProfile withEnablePrivateCluster(Boolean enablePrivateCluster) {
        this.enablePrivateCluster = enablePrivateCluster;
        return this;
    }

    /**
     * Get the enableVnetIntegration property: Whether to enable apiserver vnet integration for the Fleet hub or not.
     *
     * @return the enableVnetIntegration value.
     */
    public Boolean enableVnetIntegration() {
        return this.enableVnetIntegration;
    }

    /**
     * Set the enableVnetIntegration property: Whether to enable apiserver vnet integration for the Fleet hub or not.
     *
     * @param enableVnetIntegration the enableVnetIntegration value to set.
     * @return the ApiServerAccessProfile object itself.
     */
    public ApiServerAccessProfile withEnableVnetIntegration(Boolean enableVnetIntegration) {
        this.enableVnetIntegration = enableVnetIntegration;
        return this;
    }

    /**
     * Get the subnetId property: The subnet to be used when apiserver vnet integration is enabled. It is required when
     * creating a new Fleet with BYO vnet.
     *
     * @return the subnetId value.
     */
    public String subnetId() {
        return this.subnetId;
    }

    /**
     * Set the subnetId property: The subnet to be used when apiserver vnet integration is enabled. It is required when
     * creating a new Fleet with BYO vnet.
     *
     * @param subnetId the subnetId value to set.
     * @return the ApiServerAccessProfile object itself.
     */
    public ApiServerAccessProfile withSubnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
