// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.containerservicefleet.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The status of a member update operation.
 */
@Immutable
public final class MemberUpdateStatus implements JsonSerializable<MemberUpdateStatus> {
    /*
     * The status of the MemberUpdate operation.
     */
    private UpdateStatus status;

    /*
     * The name of the FleetMember.
     */
    private String name;

    /*
     * The Azure resource id of the target Kubernetes cluster.
     */
    private String clusterResourceId;

    /*
     * The operation resource id of the latest attempt to perform the operation.
     */
    private String operationId;

    /*
     * The status message after processing the member update operation.
     */
    private String message;

    /**
     * Creates an instance of MemberUpdateStatus class.
     */
    public MemberUpdateStatus() {
    }

    /**
     * Get the status property: The status of the MemberUpdate operation.
     * 
     * @return the status value.
     */
    public UpdateStatus status() {
        return this.status;
    }

    /**
     * Get the name property: The name of the FleetMember.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the clusterResourceId property: The Azure resource id of the target Kubernetes cluster.
     * 
     * @return the clusterResourceId value.
     */
    public String clusterResourceId() {
        return this.clusterResourceId;
    }

    /**
     * Get the operationId property: The operation resource id of the latest attempt to perform the operation.
     * 
     * @return the operationId value.
     */
    public String operationId() {
        return this.operationId;
    }

    /**
     * Get the message property: The status message after processing the member update operation.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (status() != null) {
            status().validate();
        }
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of MemberUpdateStatus from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of MemberUpdateStatus if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the MemberUpdateStatus.
     */
    public static MemberUpdateStatus fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            MemberUpdateStatus deserializedMemberUpdateStatus = new MemberUpdateStatus();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("status".equals(fieldName)) {
                    deserializedMemberUpdateStatus.status = UpdateStatus.fromJson(reader);
                } else if ("name".equals(fieldName)) {
                    deserializedMemberUpdateStatus.name = reader.getString();
                } else if ("clusterResourceId".equals(fieldName)) {
                    deserializedMemberUpdateStatus.clusterResourceId = reader.getString();
                } else if ("operationId".equals(fieldName)) {
                    deserializedMemberUpdateStatus.operationId = reader.getString();
                } else if ("message".equals(fieldName)) {
                    deserializedMemberUpdateStatus.message = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedMemberUpdateStatus;
        });
    }
}
