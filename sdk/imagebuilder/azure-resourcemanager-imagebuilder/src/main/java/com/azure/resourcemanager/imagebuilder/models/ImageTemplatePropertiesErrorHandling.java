// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.imagebuilder.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Error handling options upon a build failure.
 */
@Fluent
public final class ImageTemplatePropertiesErrorHandling
    implements JsonSerializable<ImageTemplatePropertiesErrorHandling> {
    /*
     * If there is a customizer error and this field is set to 'cleanup', the build VM and associated network resources
     * will be cleaned up. This is the default behavior. If there is a customizer error and this field is set to
     * 'abort', the build VM will be preserved.
     */
    private OnBuildError onCustomizerError;

    /*
     * If there is a validation error and this field is set to 'cleanup', the build VM and associated network resources
     * will be cleaned up. This is the default behavior. If there is a validation error and this field is set to
     * 'abort', the build VM will be preserved.
     */
    private OnBuildError onValidationError;

    /**
     * Creates an instance of ImageTemplatePropertiesErrorHandling class.
     */
    public ImageTemplatePropertiesErrorHandling() {
    }

    /**
     * Get the onCustomizerError property: If there is a customizer error and this field is set to 'cleanup', the build
     * VM and associated network resources will be cleaned up. This is the default behavior. If there is a customizer
     * error and this field is set to 'abort', the build VM will be preserved.
     * 
     * @return the onCustomizerError value.
     */
    public OnBuildError onCustomizerError() {
        return this.onCustomizerError;
    }

    /**
     * Set the onCustomizerError property: If there is a customizer error and this field is set to 'cleanup', the build
     * VM and associated network resources will be cleaned up. This is the default behavior. If there is a customizer
     * error and this field is set to 'abort', the build VM will be preserved.
     * 
     * @param onCustomizerError the onCustomizerError value to set.
     * @return the ImageTemplatePropertiesErrorHandling object itself.
     */
    public ImageTemplatePropertiesErrorHandling withOnCustomizerError(OnBuildError onCustomizerError) {
        this.onCustomizerError = onCustomizerError;
        return this;
    }

    /**
     * Get the onValidationError property: If there is a validation error and this field is set to 'cleanup', the build
     * VM and associated network resources will be cleaned up. This is the default behavior. If there is a validation
     * error and this field is set to 'abort', the build VM will be preserved.
     * 
     * @return the onValidationError value.
     */
    public OnBuildError onValidationError() {
        return this.onValidationError;
    }

    /**
     * Set the onValidationError property: If there is a validation error and this field is set to 'cleanup', the build
     * VM and associated network resources will be cleaned up. This is the default behavior. If there is a validation
     * error and this field is set to 'abort', the build VM will be preserved.
     * 
     * @param onValidationError the onValidationError value to set.
     * @return the ImageTemplatePropertiesErrorHandling object itself.
     */
    public ImageTemplatePropertiesErrorHandling withOnValidationError(OnBuildError onValidationError) {
        this.onValidationError = onValidationError;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("onCustomizerError",
            this.onCustomizerError == null ? null : this.onCustomizerError.toString());
        jsonWriter.writeStringField("onValidationError",
            this.onValidationError == null ? null : this.onValidationError.toString());
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ImageTemplatePropertiesErrorHandling from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ImageTemplatePropertiesErrorHandling if the JsonReader was pointing to an instance of it,
     * or null if it was pointing to JSON null.
     * @throws IOException If an error occurs while reading the ImageTemplatePropertiesErrorHandling.
     */
    public static ImageTemplatePropertiesErrorHandling fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ImageTemplatePropertiesErrorHandling deserializedImageTemplatePropertiesErrorHandling
                = new ImageTemplatePropertiesErrorHandling();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("onCustomizerError".equals(fieldName)) {
                    deserializedImageTemplatePropertiesErrorHandling.onCustomizerError
                        = OnBuildError.fromString(reader.getString());
                } else if ("onValidationError".equals(fieldName)) {
                    deserializedImageTemplatePropertiesErrorHandling.onValidationError
                        = OnBuildError.fromString(reader.getString());
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedImageTemplatePropertiesErrorHandling;
        });
    }
}
