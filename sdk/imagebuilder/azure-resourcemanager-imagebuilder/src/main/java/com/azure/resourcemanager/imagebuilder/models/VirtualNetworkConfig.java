// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.imagebuilder.models;

import com.azure.core.annotation.Fluent;
import com.azure.core.util.logging.ClientLogger;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;

/** Virtual Network configuration. */
@Fluent
public final class VirtualNetworkConfig {
    @JsonIgnore private final ClientLogger logger = new ClientLogger(VirtualNetworkConfig.class);

    /*
     * Resource id of a pre-existing subnet.
     */
    @JsonProperty(value = "subnetId")
    private String subnetId;

    /*
     * Size of the virtual machine used to build, customize and capture images.
     * Omit or specify empty string to use the default (Standard_D1_v2 for Gen1
     * images and Standard_D2ds_v4 for Gen2 images).
     */
    @JsonProperty(value = "proxyVmSize")
    private String proxyVmSize;

    /**
     * Get the subnetId property: Resource id of a pre-existing subnet.
     *
     * @return the subnetId value.
     */
    public String subnetId() {
        return this.subnetId;
    }

    /**
     * Set the subnetId property: Resource id of a pre-existing subnet.
     *
     * @param subnetId the subnetId value to set.
     * @return the VirtualNetworkConfig object itself.
     */
    public VirtualNetworkConfig withSubnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }

    /**
     * Get the proxyVmSize property: Size of the virtual machine used to build, customize and capture images. Omit or
     * specify empty string to use the default (Standard_D1_v2 for Gen1 images and Standard_D2ds_v4 for Gen2 images).
     *
     * @return the proxyVmSize value.
     */
    public String proxyVmSize() {
        return this.proxyVmSize;
    }

    /**
     * Set the proxyVmSize property: Size of the virtual machine used to build, customize and capture images. Omit or
     * specify empty string to use the default (Standard_D1_v2 for Gen1 images and Standard_D2ds_v4 for Gen2 images).
     *
     * @param proxyVmSize the proxyVmSize value to set.
     * @return the VirtualNetworkConfig object itself.
     */
    public VirtualNetworkConfig withProxyVmSize(String proxyVmSize) {
        this.proxyVmSize = proxyVmSize;
        return this;
    }

    /**
     * Validates the instance.
     *
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
