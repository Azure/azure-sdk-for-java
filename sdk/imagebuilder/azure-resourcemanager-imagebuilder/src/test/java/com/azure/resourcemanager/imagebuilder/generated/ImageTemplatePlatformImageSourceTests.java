// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.imagebuilder.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.imagebuilder.models.ImageTemplatePlatformImageSource;
import com.azure.resourcemanager.imagebuilder.models.PlatformImagePurchasePlan;
import org.junit.jupiter.api.Assertions;

public final class ImageTemplatePlatformImageSourceTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ImageTemplatePlatformImageSource model = BinaryData.fromString(
            "{\"type\":\"PlatformImage\",\"publisher\":\"xdn\",\"offer\":\"vo\",\"sku\":\"ujjugwdkcglh\",\"version\":\"azjdyggd\",\"exactVersion\":\"ixhbkuofqweykhm\",\"planInfo\":{\"planName\":\"evfyexfwhybcib\",\"planProduct\":\"yvdcsitynnaa\",\"planPublisher\":\"dectehfiqsc\"}}")
            .toObject(ImageTemplatePlatformImageSource.class);
        Assertions.assertEquals("xdn", model.publisher());
        Assertions.assertEquals("vo", model.offer());
        Assertions.assertEquals("ujjugwdkcglh", model.sku());
        Assertions.assertEquals("azjdyggd", model.version());
        Assertions.assertEquals("evfyexfwhybcib", model.planInfo().planName());
        Assertions.assertEquals("yvdcsitynnaa", model.planInfo().planProduct());
        Assertions.assertEquals("dectehfiqsc", model.planInfo().planPublisher());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ImageTemplatePlatformImageSource model = new ImageTemplatePlatformImageSource().withPublisher("xdn")
            .withOffer("vo")
            .withSku("ujjugwdkcglh")
            .withVersion("azjdyggd")
            .withPlanInfo(new PlatformImagePurchasePlan().withPlanName("evfyexfwhybcib")
                .withPlanProduct("yvdcsitynnaa")
                .withPlanPublisher("dectehfiqsc"));
        model = BinaryData.fromObject(model).toObject(ImageTemplatePlatformImageSource.class);
        Assertions.assertEquals("xdn", model.publisher());
        Assertions.assertEquals("vo", model.offer());
        Assertions.assertEquals("ujjugwdkcglh", model.sku());
        Assertions.assertEquals("azjdyggd", model.version());
        Assertions.assertEquals("evfyexfwhybcib", model.planInfo().planName());
        Assertions.assertEquals("yvdcsitynnaa", model.planInfo().planProduct());
        Assertions.assertEquals("dectehfiqsc", model.planInfo().planPublisher());
    }
}
