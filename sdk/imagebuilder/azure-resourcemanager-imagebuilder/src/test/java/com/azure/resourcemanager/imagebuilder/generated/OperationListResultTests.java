// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.imagebuilder.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.imagebuilder.fluent.models.OperationInner;
import com.azure.resourcemanager.imagebuilder.models.OperationDisplay;
import com.azure.resourcemanager.imagebuilder.models.OperationListResult;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class OperationListResultTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationListResult model = BinaryData.fromString(
            "{\"value\":[{\"name\":\"mcoo\",\"display\":{\"provider\":\"lzevgbmqjqab\",\"operation\":\"pmivkwlzu\",\"resource\":\"c\",\"description\":\"nfnbacfionlebxe\"},\"origin\":\"gtzxdpn\",\"properties\":\"dataqqwx\",\"isDataAction\":true},{\"name\":\"al\",\"display\":{\"provider\":\"sub\",\"operation\":\"njampm\",\"resource\":\"nzscxa\",\"description\":\"ooch\"},\"origin\":\"onq\",\"properties\":\"datakvlrxnj\",\"isDataAction\":false}],\"nextLink\":\"ipheoflokeyyien\"}")
            .toObject(OperationListResult.class);
        Assertions.assertEquals("mcoo", model.value().get(0).name());
        Assertions.assertEquals("lzevgbmqjqab", model.value().get(0).display().provider());
        Assertions.assertEquals("pmivkwlzu", model.value().get(0).display().operation());
        Assertions.assertEquals("c", model.value().get(0).display().resource());
        Assertions.assertEquals("nfnbacfionlebxe", model.value().get(0).display().description());
        Assertions.assertEquals("gtzxdpn", model.value().get(0).origin());
        Assertions.assertEquals(true, model.value().get(0).isDataAction());
        Assertions.assertEquals("ipheoflokeyyien", model.nextLink());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationListResult model = new OperationListResult().withValue(Arrays.asList(
            new OperationInner().withName("mcoo")
                .withDisplay(new OperationDisplay().withProvider("lzevgbmqjqab")
                    .withOperation("pmivkwlzu")
                    .withResource("c")
                    .withDescription("nfnbacfionlebxe"))
                .withOrigin("gtzxdpn")
                .withProperties("dataqqwx")
                .withIsDataAction(true),
            new OperationInner().withName("al")
                .withDisplay(new OperationDisplay().withProvider("sub")
                    .withOperation("njampm")
                    .withResource("nzscxa")
                    .withDescription("ooch"))
                .withOrigin("onq")
                .withProperties("datakvlrxnj")
                .withIsDataAction(false)))
            .withNextLink("ipheoflokeyyien");
        model = BinaryData.fromObject(model).toObject(OperationListResult.class);
        Assertions.assertEquals("mcoo", model.value().get(0).name());
        Assertions.assertEquals("lzevgbmqjqab", model.value().get(0).display().provider());
        Assertions.assertEquals("pmivkwlzu", model.value().get(0).display().operation());
        Assertions.assertEquals("c", model.value().get(0).display().resource());
        Assertions.assertEquals("nfnbacfionlebxe", model.value().get(0).display().description());
        Assertions.assertEquals("gtzxdpn", model.value().get(0).origin());
        Assertions.assertEquals(true, model.value().get(0).isDataAction());
        Assertions.assertEquals("ipheoflokeyyien", model.nextLink());
    }
}
