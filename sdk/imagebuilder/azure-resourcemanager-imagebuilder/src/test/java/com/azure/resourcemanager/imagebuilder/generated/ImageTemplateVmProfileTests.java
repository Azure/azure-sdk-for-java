// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.imagebuilder.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.imagebuilder.models.ImageTemplateVmProfile;
import com.azure.resourcemanager.imagebuilder.models.VirtualNetworkConfig;
import java.util.Arrays;
import org.junit.jupiter.api.Assertions;

public final class ImageTemplateVmProfileTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        ImageTemplateVmProfile model = BinaryData.fromString(
            "{\"vmSize\":\"wclxxwrl\",\"osDiskSizeGB\":1070346714,\"userAssignedIdentities\":[\"kcqvkocrc\",\"dkwt\",\"hxbnjbiksqrg\"],\"vnetConfig\":{\"subnetId\":\"ainqpjwnzlljfm\",\"proxyVmSize\":\"eebvmgxsab\"}}")
            .toObject(ImageTemplateVmProfile.class);
        Assertions.assertEquals("wclxxwrl", model.vmSize());
        Assertions.assertEquals(1070346714, model.osDiskSizeGB());
        Assertions.assertEquals("kcqvkocrc", model.userAssignedIdentities().get(0));
        Assertions.assertEquals("ainqpjwnzlljfm", model.vnetConfig().subnetId());
        Assertions.assertEquals("eebvmgxsab", model.vnetConfig().proxyVmSize());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        ImageTemplateVmProfile model = new ImageTemplateVmProfile().withVmSize("wclxxwrl").withOsDiskSizeGB(1070346714)
            .withUserAssignedIdentities(Arrays.asList("kcqvkocrc", "dkwt", "hxbnjbiksqrg"))
            .withVnetConfig(new VirtualNetworkConfig().withSubnetId("ainqpjwnzlljfm").withProxyVmSize("eebvmgxsab"));
        model = BinaryData.fromObject(model).toObject(ImageTemplateVmProfile.class);
        Assertions.assertEquals("wclxxwrl", model.vmSize());
        Assertions.assertEquals(1070346714, model.osDiskSizeGB());
        Assertions.assertEquals("kcqvkocrc", model.userAssignedIdentities().get(0));
        Assertions.assertEquals("ainqpjwnzlljfm", model.vnetConfig().subnetId());
        Assertions.assertEquals("eebvmgxsab", model.vnetConfig().proxyVmSize());
    }
}
