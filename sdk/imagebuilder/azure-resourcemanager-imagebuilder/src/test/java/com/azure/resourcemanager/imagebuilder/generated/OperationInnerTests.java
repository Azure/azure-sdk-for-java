// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.imagebuilder.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.imagebuilder.fluent.models.OperationInner;
import com.azure.resourcemanager.imagebuilder.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationInner model = BinaryData.fromString(
            "{\"name\":\"qqwx\",\"display\":{\"provider\":\"eallnwsubisnj\",\"operation\":\"pmng\",\"resource\":\"scxaq\",\"description\":\"ochcbonqvpkvl\"},\"origin\":\"njeaseipheofloke\",\"properties\":\"dataienjbdlwtgr\",\"isDataAction\":true}")
            .toObject(OperationInner.class);
        Assertions.assertEquals("qqwx", model.name());
        Assertions.assertEquals("eallnwsubisnj", model.display().provider());
        Assertions.assertEquals("pmng", model.display().operation());
        Assertions.assertEquals("scxaq", model.display().resource());
        Assertions.assertEquals("ochcbonqvpkvl", model.display().description());
        Assertions.assertEquals("njeaseipheofloke", model.origin());
        Assertions.assertEquals(true, model.isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationInner model = new OperationInner().withName("qqwx")
            .withDisplay(new OperationDisplay().withProvider("eallnwsubisnj").withOperation("pmng")
                .withResource("scxaq").withDescription("ochcbonqvpkvl"))
            .withOrigin("njeaseipheofloke").withProperties("dataienjbdlwtgr").withIsDataAction(true);
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals("qqwx", model.name());
        Assertions.assertEquals("eallnwsubisnj", model.display().provider());
        Assertions.assertEquals("pmng", model.display().operation());
        Assertions.assertEquals("scxaq", model.display().resource());
        Assertions.assertEquals("ochcbonqvpkvl", model.display().description());
        Assertions.assertEquals("njeaseipheofloke", model.origin());
        Assertions.assertEquals(true, model.isDataAction());
    }
}
