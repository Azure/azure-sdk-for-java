// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.resourcemanager.imagebuilder.generated;

import com.azure.core.util.BinaryData;
import com.azure.resourcemanager.imagebuilder.fluent.models.OperationInner;
import com.azure.resourcemanager.imagebuilder.models.OperationDisplay;
import org.junit.jupiter.api.Assertions;

public final class OperationInnerTests {
    @org.junit.jupiter.api.Test
    public void testDeserialize() throws Exception {
        OperationInner model = BinaryData.fromString(
            "{\"name\":\"dlwtgrhpdj\",\"display\":{\"provider\":\"masxazjpqyegu\",\"operation\":\"hb\",\"resource\":\"hejjz\",\"description\":\"dudgwdslfhot\"},\"origin\":\"cynpwlbjnp\",\"properties\":\"datacftadeh\",\"isDataAction\":false}")
            .toObject(OperationInner.class);
        Assertions.assertEquals("dlwtgrhpdj", model.name());
        Assertions.assertEquals("masxazjpqyegu", model.display().provider());
        Assertions.assertEquals("hb", model.display().operation());
        Assertions.assertEquals("hejjz", model.display().resource());
        Assertions.assertEquals("dudgwdslfhot", model.display().description());
        Assertions.assertEquals("cynpwlbjnp", model.origin());
        Assertions.assertEquals(false, model.isDataAction());
    }

    @org.junit.jupiter.api.Test
    public void testSerialize() throws Exception {
        OperationInner model = new OperationInner().withName("dlwtgrhpdj")
            .withDisplay(new OperationDisplay().withProvider("masxazjpqyegu")
                .withOperation("hb")
                .withResource("hejjz")
                .withDescription("dudgwdslfhot"))
            .withOrigin("cynpwlbjnp")
            .withProperties("datacftadeh")
            .withIsDataAction(false);
        model = BinaryData.fromObject(model).toObject(OperationInner.class);
        Assertions.assertEquals("dlwtgrhpdj", model.name());
        Assertions.assertEquals("masxazjpqyegu", model.display().provider());
        Assertions.assertEquals("hb", model.display().operation());
        Assertions.assertEquals("hejjz", model.display().resource());
        Assertions.assertEquals("dudgwdslfhot", model.display().description());
        Assertions.assertEquals("cynpwlbjnp", model.origin());
        Assertions.assertEquals(false, model.isDataAction());
    }
}
