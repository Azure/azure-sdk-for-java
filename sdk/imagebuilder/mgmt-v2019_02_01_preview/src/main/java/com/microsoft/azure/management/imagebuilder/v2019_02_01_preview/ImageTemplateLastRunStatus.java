/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.imagebuilder.v2019_02_01_preview;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The ImageTemplateLastRunStatus model.
 */
public class ImageTemplateLastRunStatus {
    /**
     * Start time of the last run (UTC).
     */
    @JsonProperty(value = "startTime")
    private DateTime startTime;

    /**
     * End time of the last run (UTC).
     */
    @JsonProperty(value = "endTime")
    private DateTime endTime;

    /**
     * State of the last run. Possible values include: 'Running', 'Succeeded',
     * 'PartiallySucceeded', 'Failed'.
     */
    @JsonProperty(value = "runState")
    private String runState;

    /**
     * Sub-state of the last run. Possible values include: 'Queued',
     * 'Building', 'Customizing', 'Distributing'.
     */
    @JsonProperty(value = "runSubState")
    private String runSubState;

    /**
     * Verbose information about the last run state.
     */
    @JsonProperty(value = "message")
    private String message;

    /**
     * Get start time of the last run (UTC).
     *
     * @return the startTime value
     */
    public DateTime startTime() {
        return this.startTime;
    }

    /**
     * Set start time of the last run (UTC).
     *
     * @param startTime the startTime value to set
     * @return the ImageTemplateLastRunStatus object itself.
     */
    public ImageTemplateLastRunStatus withStartTime(DateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get end time of the last run (UTC).
     *
     * @return the endTime value
     */
    public DateTime endTime() {
        return this.endTime;
    }

    /**
     * Set end time of the last run (UTC).
     *
     * @param endTime the endTime value to set
     * @return the ImageTemplateLastRunStatus object itself.
     */
    public ImageTemplateLastRunStatus withEndTime(DateTime endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Get state of the last run. Possible values include: 'Running', 'Succeeded', 'PartiallySucceeded', 'Failed'.
     *
     * @return the runState value
     */
    public String runState() {
        return this.runState;
    }

    /**
     * Set state of the last run. Possible values include: 'Running', 'Succeeded', 'PartiallySucceeded', 'Failed'.
     *
     * @param runState the runState value to set
     * @return the ImageTemplateLastRunStatus object itself.
     */
    public ImageTemplateLastRunStatus withRunState(String runState) {
        this.runState = runState;
        return this;
    }

    /**
     * Get sub-state of the last run. Possible values include: 'Queued', 'Building', 'Customizing', 'Distributing'.
     *
     * @return the runSubState value
     */
    public String runSubState() {
        return this.runSubState;
    }

    /**
     * Set sub-state of the last run. Possible values include: 'Queued', 'Building', 'Customizing', 'Distributing'.
     *
     * @param runSubState the runSubState value to set
     * @return the ImageTemplateLastRunStatus object itself.
     */
    public ImageTemplateLastRunStatus withRunSubState(String runSubState) {
        this.runSubState = runSubState;
        return this;
    }

    /**
     * Get verbose information about the last run state.
     *
     * @return the message value
     */
    public String message() {
        return this.message;
    }

    /**
     * Set verbose information about the last run state.
     *
     * @param message the message value to set
     * @return the ImageTemplateLastRunStatus object itself.
     */
    public ImageTemplateLastRunStatus withMessage(String message) {
        this.message = message;
        return this;
    }

}
