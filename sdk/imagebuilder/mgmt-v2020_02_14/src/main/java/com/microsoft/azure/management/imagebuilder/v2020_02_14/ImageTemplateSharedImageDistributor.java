/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.imagebuilder.v2020_02_14;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Distribute via Shared Image Gallery.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type", defaultImpl = ImageTemplateSharedImageDistributor.class)
@JsonTypeName("SharedImage")
public class ImageTemplateSharedImageDistributor extends ImageTemplateDistributor {
    /**
     * Resource Id of the Shared Image Gallery image.
     */
    @JsonProperty(value = "galleryImageId", required = true)
    private String galleryImageId;

    /**
     * A list of regions that the image will be replicated to.
     */
    @JsonProperty(value = "replicationRegions", required = true)
    private List<String> replicationRegions;

    /**
     * Flag that indicates whether created image version should be excluded
     * from latest. Omit to use the default (false).
     */
    @JsonProperty(value = "excludeFromLatest")
    private Boolean excludeFromLatest;

    /**
     * Storage account type to be used to store the shared image. Omit to use
     * the default (Standard_LRS). Possible values include: 'Standard_LRS',
     * 'Standard_ZRS'.
     */
    @JsonProperty(value = "storageAccountType")
    private SharedImageStorageAccountType storageAccountType;

    /**
     * Get resource Id of the Shared Image Gallery image.
     *
     * @return the galleryImageId value
     */
    public String galleryImageId() {
        return this.galleryImageId;
    }

    /**
     * Set resource Id of the Shared Image Gallery image.
     *
     * @param galleryImageId the galleryImageId value to set
     * @return the ImageTemplateSharedImageDistributor object itself.
     */
    public ImageTemplateSharedImageDistributor withGalleryImageId(String galleryImageId) {
        this.galleryImageId = galleryImageId;
        return this;
    }

    /**
     * Get a list of regions that the image will be replicated to.
     *
     * @return the replicationRegions value
     */
    public List<String> replicationRegions() {
        return this.replicationRegions;
    }

    /**
     * Set a list of regions that the image will be replicated to.
     *
     * @param replicationRegions the replicationRegions value to set
     * @return the ImageTemplateSharedImageDistributor object itself.
     */
    public ImageTemplateSharedImageDistributor withReplicationRegions(List<String> replicationRegions) {
        this.replicationRegions = replicationRegions;
        return this;
    }

    /**
     * Get flag that indicates whether created image version should be excluded from latest. Omit to use the default (false).
     *
     * @return the excludeFromLatest value
     */
    public Boolean excludeFromLatest() {
        return this.excludeFromLatest;
    }

    /**
     * Set flag that indicates whether created image version should be excluded from latest. Omit to use the default (false).
     *
     * @param excludeFromLatest the excludeFromLatest value to set
     * @return the ImageTemplateSharedImageDistributor object itself.
     */
    public ImageTemplateSharedImageDistributor withExcludeFromLatest(Boolean excludeFromLatest) {
        this.excludeFromLatest = excludeFromLatest;
        return this;
    }

    /**
     * Get storage account type to be used to store the shared image. Omit to use the default (Standard_LRS). Possible values include: 'Standard_LRS', 'Standard_ZRS'.
     *
     * @return the storageAccountType value
     */
    public SharedImageStorageAccountType storageAccountType() {
        return this.storageAccountType;
    }

    /**
     * Set storage account type to be used to store the shared image. Omit to use the default (Standard_LRS). Possible values include: 'Standard_LRS', 'Standard_ZRS'.
     *
     * @param storageAccountType the storageAccountType value to set
     * @return the ImageTemplateSharedImageDistributor object itself.
     */
    public ImageTemplateSharedImageDistributor withStorageAccountType(SharedImageStorageAccountType storageAccountType) {
        this.storageAccountType = storageAccountType;
        return this;
    }

}
