/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.logic;

import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Defines values for SigningAlgorithm.
 */
public final class SigningAlgorithm {
    /** Static value NotSpecified for SigningAlgorithm. */
    public static final SigningAlgorithm NOT_SPECIFIED = new SigningAlgorithm("NotSpecified");

    /** Static value Default for SigningAlgorithm. */
    public static final SigningAlgorithm DEFAULT = new SigningAlgorithm("Default");

    /** Static value SHA1 for SigningAlgorithm. */
    public static final SigningAlgorithm SHA1 = new SigningAlgorithm("SHA1");

    /** Static value SHA2256 for SigningAlgorithm. */
    public static final SigningAlgorithm SHA2256 = new SigningAlgorithm("SHA2256");

    /** Static value SHA2384 for SigningAlgorithm. */
    public static final SigningAlgorithm SHA2384 = new SigningAlgorithm("SHA2384");

    /** Static value SHA2512 for SigningAlgorithm. */
    public static final SigningAlgorithm SHA2512 = new SigningAlgorithm("SHA2512");

    private String value;

    /**
     * Creates a custom value for SigningAlgorithm.
     * @param value the custom value
     */
    public SigningAlgorithm(String value) {
        this.value = value;
    }

    @JsonValue
    @Override
    public String toString() {
        return value;
    }

    @Override
    public int hashCode() {
        return value.hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (!(obj instanceof SigningAlgorithm)) {
            return false;
        }
        if (obj == this) {
            return true;
        }
        SigningAlgorithm rhs = (SigningAlgorithm) obj;
        if (value == null) {
            return rhs.value == null;
        } else {
            return value.equals(rhs.value);
        }
    }
}
