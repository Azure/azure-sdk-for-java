/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.appservice.v2018_02_01;

import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * MSDeploy ARM PUT information.
 */
@JsonFlatten
public class MSDeploy extends ProxyOnlyResource {
    /**
     * Package URI.
     */
    @JsonProperty(value = "properties.packageUri")
    private String packageUri;

    /**
     * SQL Connection String.
     */
    @JsonProperty(value = "properties.connectionString")
    private String connectionString;

    /**
     * Database Type.
     */
    @JsonProperty(value = "properties.dbType")
    private String dbType;

    /**
     * URI of MSDeploy Parameters file. Must not be set if SetParameters is
     * used.
     */
    @JsonProperty(value = "properties.setParametersXmlFileUri")
    private String setParametersXmlFileUri;

    /**
     * MSDeploy Parameters. Must not be set if SetParametersXmlFileUri is used.
     */
    @JsonProperty(value = "properties.setParameters")
    private Map<String, String> setParameters;

    /**
     * Controls whether the MSDeploy operation skips the App_Data directory.
     * If set to &lt;code&gt;true&lt;/code&gt;, the existing App_Data directory
     * on the destination
     * will not be deleted, and any App_Data directory in the source will be
     * ignored.
     * Setting is &lt;code&gt;false&lt;/code&gt; by default.
     */
    @JsonProperty(value = "properties.skipAppData")
    private Boolean skipAppData;

    /**
     * Sets the AppOffline rule while the MSDeploy operation executes.
     * Setting is &lt;code&gt;false&lt;/code&gt; by default.
     */
    @JsonProperty(value = "properties.appOffline")
    private Boolean appOffline;

    /**
     * Get the packageUri value.
     *
     * @return the packageUri value
     */
    public String packageUri() {
        return this.packageUri;
    }

    /**
     * Set the packageUri value.
     *
     * @param packageUri the packageUri value to set
     * @return the MSDeploy object itself.
     */
    public MSDeploy withPackageUri(String packageUri) {
        this.packageUri = packageUri;
        return this;
    }

    /**
     * Get the connectionString value.
     *
     * @return the connectionString value
     */
    public String connectionString() {
        return this.connectionString;
    }

    /**
     * Set the connectionString value.
     *
     * @param connectionString the connectionString value to set
     * @return the MSDeploy object itself.
     */
    public MSDeploy withConnectionString(String connectionString) {
        this.connectionString = connectionString;
        return this;
    }

    /**
     * Get the dbType value.
     *
     * @return the dbType value
     */
    public String dbType() {
        return this.dbType;
    }

    /**
     * Set the dbType value.
     *
     * @param dbType the dbType value to set
     * @return the MSDeploy object itself.
     */
    public MSDeploy withDbType(String dbType) {
        this.dbType = dbType;
        return this;
    }

    /**
     * Get the setParametersXmlFileUri value.
     *
     * @return the setParametersXmlFileUri value
     */
    public String setParametersXmlFileUri() {
        return this.setParametersXmlFileUri;
    }

    /**
     * Set the setParametersXmlFileUri value.
     *
     * @param setParametersXmlFileUri the setParametersXmlFileUri value to set
     * @return the MSDeploy object itself.
     */
    public MSDeploy withSetParametersXmlFileUri(String setParametersXmlFileUri) {
        this.setParametersXmlFileUri = setParametersXmlFileUri;
        return this;
    }

    /**
     * Get the setParameters value.
     *
     * @return the setParameters value
     */
    public Map<String, String> setParameters() {
        return this.setParameters;
    }

    /**
     * Set the setParameters value.
     *
     * @param setParameters the setParameters value to set
     * @return the MSDeploy object itself.
     */
    public MSDeploy withSetParameters(Map<String, String> setParameters) {
        this.setParameters = setParameters;
        return this;
    }

    /**
     * Get the skipAppData value.
     *
     * @return the skipAppData value
     */
    public Boolean skipAppData() {
        return this.skipAppData;
    }

    /**
     * Set the skipAppData value.
     *
     * @param skipAppData the skipAppData value to set
     * @return the MSDeploy object itself.
     */
    public MSDeploy withSkipAppData(Boolean skipAppData) {
        this.skipAppData = skipAppData;
        return this;
    }

    /**
     * Get the appOffline value.
     *
     * @return the appOffline value
     */
    public Boolean appOffline() {
        return this.appOffline;
    }

    /**
     * Set the appOffline value.
     *
     * @param appOffline the appOffline value to set
     * @return the MSDeploy object itself.
     */
    public MSDeploy withAppOffline(Boolean appOffline) {
        this.appOffline = appOffline;
        return this;
    }

}
