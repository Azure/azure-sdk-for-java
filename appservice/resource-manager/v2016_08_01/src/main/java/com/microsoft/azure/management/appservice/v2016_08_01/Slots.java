/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.appservice.v2016_08_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.appservice.v2016_08_01.implementation.SiteInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.appservice.v2016_08_01.implementation.AppServiceManager;
import java.util.List;
import org.joda.time.DateTime;
import java.util.Map;

/**
 * Type representing Slots.
 */
public interface Slots extends HasInner<SiteInner>, Indexable, Refreshable<Slots>, Updatable<Slots.Update>, HasManager<AppServiceManager> {
    /**
     * @return the availabilityState value.
     */
    SiteAvailabilityState availabilityState();

    /**
     * @return the clientAffinityEnabled value.
     */
    Boolean clientAffinityEnabled();

    /**
     * @return the clientCertEnabled value.
     */
    Boolean clientCertEnabled();

    /**
     * @return the cloningInfo value.
     */
    CloningInfo cloningInfo();

    /**
     * @return the containerSize value.
     */
    Integer containerSize();

    /**
     * @return the dailyMemoryTimeQuota value.
     */
    Integer dailyMemoryTimeQuota();

    /**
     * @return the defaultHostName value.
     */
    String defaultHostName();

    /**
     * @return the enabled value.
     */
    Boolean enabled();

    /**
     * @return the enabledHostNames value.
     */
    List<String> enabledHostNames();

    /**
     * @return the hostingEnvironmentProfile value.
     */
    HostingEnvironmentProfile hostingEnvironmentProfile();

    /**
     * @return the hostNames value.
     */
    List<String> hostNames();

    /**
     * @return the hostNamesDisabled value.
     */
    Boolean hostNamesDisabled();

    /**
     * @return the hostNameSslStates value.
     */
    List<HostNameSslState> hostNameSslStates();

    /**
     * @return the httpsOnly value.
     */
    Boolean httpsOnly();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the identity value.
     */
    ManagedServiceIdentity identity();

    /**
     * @return the isDefaultContainer value.
     */
    Boolean isDefaultContainer();

    /**
     * @return the kind value.
     */
    String kind();

    /**
     * @return the lastModifiedTimeUtc value.
     */
    DateTime lastModifiedTimeUtc();

    /**
     * @return the location value.
     */
    String location();

    /**
     * @return the maxNumberOfWorkers value.
     */
    Integer maxNumberOfWorkers();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the outboundIpAddresses value.
     */
    String outboundIpAddresses();

    /**
     * @return the possibleOutboundIpAddresses value.
     */
    String possibleOutboundIpAddresses();

    /**
     * @return the repositorySiteName value.
     */
    String repositorySiteName();

    /**
     * @return the reserved value.
     */
    Boolean reserved();

    /**
     * @return the resourceGroup value.
     */
    String resourceGroup();

    /**
     * @return the scmSiteAlsoStopped value.
     */
    Boolean scmSiteAlsoStopped();

    /**
     * @return the serverFarmId value.
     */
    String serverFarmId();

    /**
     * @return the siteConfig value.
     */
    SiteConfig siteConfig();

    /**
     * @return the slotSwapStatus value.
     */
    SlotSwapStatus slotSwapStatus();

    /**
     * @return the snapshotInfo value.
     */
    SnapshotRecoveryRequest snapshotInfo();

    /**
     * @return the state value.
     */
    String state();

    /**
     * @return the suspendedTill value.
     */
    DateTime suspendedTill();

    /**
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * @return the targetSwapSlot value.
     */
    String targetSwapSlot();

    /**
     * @return the trafficManagerHostNames value.
     */
    List<String> trafficManagerHostNames();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the usageState value.
     */
    UsageState usageState();

    /**
     * The entirety of the Slots definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithSite, DefinitionStages.WithLocation, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Slots definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Slots definition.
         */
        interface Blank extends WithSite {
        }

        /**
         * The stage of the slots definition allowing to specify Site.
         */
        interface WithSite {
           /**
            * Specifies resourceGroupName, name.
            */
            WithLocation withExistingSite(String resourceGroupName, String name);
        }

        /**
         * The stage of the slots definition allowing to specify Location.
         */
        interface WithLocation {
           /**
            * Specifies location.
            */
            WithCreate withLocation(String location);
        }

        /**
         * The stage of the slots definition allowing to specify ClientAffinityEnabled.
         */
        interface WithClientAffinityEnabled {
            /**
             * Specifies clientAffinityEnabled.
             */
            WithCreate withClientAffinityEnabled(Boolean clientAffinityEnabled);
        }

        /**
         * The stage of the slots definition allowing to specify ClientCertEnabled.
         */
        interface WithClientCertEnabled {
            /**
             * Specifies clientCertEnabled.
             */
            WithCreate withClientCertEnabled(Boolean clientCertEnabled);
        }

        /**
         * The stage of the slots definition allowing to specify CloningInfo.
         */
        interface WithCloningInfo {
            /**
             * Specifies cloningInfo.
             */
            WithCreate withCloningInfo(CloningInfo cloningInfo);
        }

        /**
         * The stage of the slots definition allowing to specify ContainerSize.
         */
        interface WithContainerSize {
            /**
             * Specifies containerSize.
             */
            WithCreate withContainerSize(Integer containerSize);
        }

        /**
         * The stage of the slots definition allowing to specify DailyMemoryTimeQuota.
         */
        interface WithDailyMemoryTimeQuota {
            /**
             * Specifies dailyMemoryTimeQuota.
             */
            WithCreate withDailyMemoryTimeQuota(Integer dailyMemoryTimeQuota);
        }

        /**
         * The stage of the slots definition allowing to specify Enabled.
         */
        interface WithEnabled {
            /**
             * Specifies enabled.
             */
            WithCreate withEnabled(Boolean enabled);
        }

        /**
         * The stage of the slots definition allowing to specify HostingEnvironmentProfile.
         */
        interface WithHostingEnvironmentProfile {
            /**
             * Specifies hostingEnvironmentProfile.
             */
            WithCreate withHostingEnvironmentProfile(HostingEnvironmentProfile hostingEnvironmentProfile);
        }

        /**
         * The stage of the slots definition allowing to specify HostNamesDisabled.
         */
        interface WithHostNamesDisabled {
            /**
             * Specifies hostNamesDisabled.
             */
            WithCreate withHostNamesDisabled(Boolean hostNamesDisabled);
        }

        /**
         * The stage of the slots definition allowing to specify HostNameSslStates.
         */
        interface WithHostNameSslStates {
            /**
             * Specifies hostNameSslStates.
             */
            WithCreate withHostNameSslStates(List<HostNameSslState> hostNameSslStates);
        }

        /**
         * The stage of the slots definition allowing to specify HttpsOnly.
         */
        interface WithHttpsOnly {
            /**
             * Specifies httpsOnly.
             */
            WithCreate withHttpsOnly(Boolean httpsOnly);
        }

        /**
         * The stage of the slots definition allowing to specify Identity.
         */
        interface WithIdentity {
            /**
             * Specifies identity.
             */
            WithCreate withIdentity(ManagedServiceIdentity identity);
        }

        /**
         * The stage of the slots definition allowing to specify Kind.
         */
        interface WithKind {
            /**
             * Specifies kind.
             */
            WithCreate withKind(String kind);
        }

        /**
         * The stage of the slots definition allowing to specify Reserved.
         */
        interface WithReserved {
            /**
             * Specifies reserved.
             */
            WithCreate withReserved(Boolean reserved);
        }

        /**
         * The stage of the slots definition allowing to specify ScmSiteAlsoStopped.
         */
        interface WithScmSiteAlsoStopped {
            /**
             * Specifies scmSiteAlsoStopped.
             */
            WithCreate withScmSiteAlsoStopped(Boolean scmSiteAlsoStopped);
        }

        /**
         * The stage of the slots definition allowing to specify ServerFarmId.
         */
        interface WithServerFarmId {
            /**
             * Specifies serverFarmId.
             */
            WithCreate withServerFarmId(String serverFarmId);
        }

        /**
         * The stage of the slots definition allowing to specify SiteConfig.
         */
        interface WithSiteConfig {
            /**
             * Specifies siteConfig.
             */
            WithCreate withSiteConfig(SiteConfig siteConfig);
        }

        /**
         * The stage of the slots definition allowing to specify SnapshotInfo.
         */
        interface WithSnapshotInfo {
            /**
             * Specifies snapshotInfo.
             */
            WithCreate withSnapshotInfo(SnapshotRecoveryRequest snapshotInfo);
        }

        /**
         * The stage of the slots definition allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Slots>, DefinitionStages.WithClientAffinityEnabled, DefinitionStages.WithClientCertEnabled, DefinitionStages.WithCloningInfo, DefinitionStages.WithContainerSize, DefinitionStages.WithDailyMemoryTimeQuota, DefinitionStages.WithEnabled, DefinitionStages.WithHostingEnvironmentProfile, DefinitionStages.WithHostNamesDisabled, DefinitionStages.WithHostNameSslStates, DefinitionStages.WithHttpsOnly, DefinitionStages.WithIdentity, DefinitionStages.WithKind, DefinitionStages.WithReserved, DefinitionStages.WithScmSiteAlsoStopped, DefinitionStages.WithServerFarmId, DefinitionStages.WithSiteConfig, DefinitionStages.WithSnapshotInfo, DefinitionStages.WithTags {
        }
    }
    /**
     * The template for a Slots update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Slots>, UpdateStages.WithClientAffinityEnabled, UpdateStages.WithClientCertEnabled, UpdateStages.WithCloningInfo, UpdateStages.WithContainerSize, UpdateStages.WithDailyMemoryTimeQuota, UpdateStages.WithEnabled, UpdateStages.WithHostingEnvironmentProfile, UpdateStages.WithHostNamesDisabled, UpdateStages.WithHostNameSslStates, UpdateStages.WithHttpsOnly, UpdateStages.WithKind, UpdateStages.WithReserved, UpdateStages.WithScmSiteAlsoStopped, UpdateStages.WithServerFarmId, UpdateStages.WithSiteConfig, UpdateStages.WithSnapshotInfo {
    }

    /**
     * Grouping of Slots update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the slots update allowing to specify ClientAffinityEnabled.
         */
        interface WithClientAffinityEnabled {
            /**
             * Specifies clientAffinityEnabled.
             */
            Update withClientAffinityEnabled(Boolean clientAffinityEnabled);
        }

        /**
         * The stage of the slots update allowing to specify ClientCertEnabled.
         */
        interface WithClientCertEnabled {
            /**
             * Specifies clientCertEnabled.
             */
            Update withClientCertEnabled(Boolean clientCertEnabled);
        }

        /**
         * The stage of the slots update allowing to specify CloningInfo.
         */
        interface WithCloningInfo {
            /**
             * Specifies cloningInfo.
             */
            Update withCloningInfo(CloningInfo cloningInfo);
        }

        /**
         * The stage of the slots update allowing to specify ContainerSize.
         */
        interface WithContainerSize {
            /**
             * Specifies containerSize.
             */
            Update withContainerSize(Integer containerSize);
        }

        /**
         * The stage of the slots update allowing to specify DailyMemoryTimeQuota.
         */
        interface WithDailyMemoryTimeQuota {
            /**
             * Specifies dailyMemoryTimeQuota.
             */
            Update withDailyMemoryTimeQuota(Integer dailyMemoryTimeQuota);
        }

        /**
         * The stage of the slots update allowing to specify Enabled.
         */
        interface WithEnabled {
            /**
             * Specifies enabled.
             */
            Update withEnabled(Boolean enabled);
        }

        /**
         * The stage of the slots update allowing to specify HostingEnvironmentProfile.
         */
        interface WithHostingEnvironmentProfile {
            /**
             * Specifies hostingEnvironmentProfile.
             */
            Update withHostingEnvironmentProfile(HostingEnvironmentProfile hostingEnvironmentProfile);
        }

        /**
         * The stage of the slots update allowing to specify HostNamesDisabled.
         */
        interface WithHostNamesDisabled {
            /**
             * Specifies hostNamesDisabled.
             */
            Update withHostNamesDisabled(Boolean hostNamesDisabled);
        }

        /**
         * The stage of the slots update allowing to specify HostNameSslStates.
         */
        interface WithHostNameSslStates {
            /**
             * Specifies hostNameSslStates.
             */
            Update withHostNameSslStates(List<HostNameSslState> hostNameSslStates);
        }

        /**
         * The stage of the slots update allowing to specify HttpsOnly.
         */
        interface WithHttpsOnly {
            /**
             * Specifies httpsOnly.
             */
            Update withHttpsOnly(Boolean httpsOnly);
        }

        /**
         * The stage of the slots update allowing to specify Kind.
         */
        interface WithKind {
            /**
             * Specifies kind.
             */
            Update withKind(String kind);
        }

        /**
         * The stage of the slots update allowing to specify Reserved.
         */
        interface WithReserved {
            /**
             * Specifies reserved.
             */
            Update withReserved(Boolean reserved);
        }

        /**
         * The stage of the slots update allowing to specify ScmSiteAlsoStopped.
         */
        interface WithScmSiteAlsoStopped {
            /**
             * Specifies scmSiteAlsoStopped.
             */
            Update withScmSiteAlsoStopped(Boolean scmSiteAlsoStopped);
        }

        /**
         * The stage of the slots update allowing to specify ServerFarmId.
         */
        interface WithServerFarmId {
            /**
             * Specifies serverFarmId.
             */
            Update withServerFarmId(String serverFarmId);
        }

        /**
         * The stage of the slots update allowing to specify SiteConfig.
         */
        interface WithSiteConfig {
            /**
             * Specifies siteConfig.
             */
            Update withSiteConfig(SiteConfig siteConfig);
        }

        /**
         * The stage of the slots update allowing to specify SnapshotInfo.
         */
        interface WithSnapshotInfo {
            /**
             * Specifies snapshotInfo.
             */
            Update withSnapshotInfo(SnapshotRecoveryRequest snapshotInfo);
        }

    }
}
