/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.hdinsight.v2018_06_01_preview.implementation;

import com.microsoft.azure.management.hdinsight.v2018_06_01_preview.RuntimeScriptActionDetail;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import rx.Observable;
import java.util.List;
import com.microsoft.azure.management.hdinsight.v2018_06_01_preview.ScriptActionExecutionSummary;

class RuntimeScriptActionDetailImpl extends WrapperImpl<RuntimeScriptActionDetailInner> implements RuntimeScriptActionDetail {
    private final HDInsightManager manager;

    RuntimeScriptActionDetailImpl(RuntimeScriptActionDetailInner inner,  HDInsightManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public HDInsightManager manager() {
        return this.manager;
    }



    @Override
    public String applicationName() {
        return this.inner().applicationName();
    }

    @Override
    public String debugInformation() {
        return this.inner().debugInformation();
    }

    @Override
    public String endTime() {
        return this.inner().endTime();
    }

    @Override
    public List<ScriptActionExecutionSummary> executionSummary() {
        return this.inner().executionSummary();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String operation() {
        return this.inner().operation();
    }

    @Override
    public String parameters() {
        return this.inner().parameters();
    }

    @Override
    public List<String> roles() {
        return this.inner().roles();
    }

    @Override
    public Long scriptExecutionId() {
        return this.inner().scriptExecutionId();
    }

    @Override
    public String startTime() {
        return this.inner().startTime();
    }

    @Override
    public String status() {
        return this.inner().status();
    }

    @Override
    public String uri() {
        return this.inner().uri();
    }

}
