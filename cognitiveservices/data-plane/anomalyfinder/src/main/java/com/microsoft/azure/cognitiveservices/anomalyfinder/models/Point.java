/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.cognitiveservices.anomalyfinder.models;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The Point model.
 */
public class Point {
    /**
     * Timestamp of a data point. Please make sure it aligns with the midnight,
     * and use a UTC date time string, e.g., 2017-08-01T00:00:00Z.
     */
    @JsonProperty(value = "Timestamp", required = true)
    private DateTime timestamp;

    /**
     * The measurement of that point, should be float.
     */
    @JsonProperty(value = "Value", required = true)
    private double value;

    /**
     * Get timestamp of a data point. Please make sure it aligns with the midnight, and use a UTC date time string, e.g., 2017-08-01T00:00:00Z.
     *
     * @return the timestamp value
     */
    public DateTime timestamp() {
        return this.timestamp;
    }

    /**
     * Set timestamp of a data point. Please make sure it aligns with the midnight, and use a UTC date time string, e.g., 2017-08-01T00:00:00Z.
     *
     * @param timestamp the timestamp value to set
     * @return the Point object itself.
     */
    public Point withTimestamp(DateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    /**
     * Get the measurement of that point, should be float.
     *
     * @return the value value
     */
    public double value() {
        return this.value;
    }

    /**
     * Set the measurement of that point, should be float.
     *
     * @param value the value value to set
     * @return the Point object itself.
     */
    public Point withValue(double value) {
        this.value = value;
        return this;
    }

}
