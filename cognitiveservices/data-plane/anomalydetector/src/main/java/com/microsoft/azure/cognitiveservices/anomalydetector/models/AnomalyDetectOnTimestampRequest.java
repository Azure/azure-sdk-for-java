/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.cognitiveservices.anomalydetector.models;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The AnomalyDetectOnTimestampRequest model.
 */
public class AnomalyDetectOnTimestampRequest {
    /**
     * Timestamp of a data point.
     */
    @JsonProperty(value = "timestamp", required = true)
    private DateTime timestamp;

    /**
     * Optional argument, periodic value of a time series. If the value is null
     * or does not present, the API will determine the period automatically.
     */
    @JsonProperty(value = "period")
    private Integer periodProperty;

    /**
     * Optional argument, advanced model parameter, max anomaly ratio in a time
     * series.
     */
    @JsonProperty(value = "maxAnomalyRatio")
    private Double maxAnomalyRatio;

    /**
     * Optional argument, advanced model parameter, between 0-99, the lower the
     * value is, the larger the margin value will be which means less anomalies
     * will be accepted.
     */
    @JsonProperty(value = "sensitivity")
    private Integer sensitivity;

    /**
     * Get timestamp of a data point.
     *
     * @return the timestamp value
     */
    public DateTime timestamp() {
        return this.timestamp;
    }

    /**
     * Set timestamp of a data point.
     *
     * @param timestamp the timestamp value to set
     * @return the AnomalyDetectOnTimestampRequest object itself.
     */
    public AnomalyDetectOnTimestampRequest withTimestamp(DateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    /**
     * Get optional argument, periodic value of a time series. If the value is null or does not present, the API will determine the period automatically.
     *
     * @return the periodProperty value
     */
    public Integer periodProperty() {
        return this.periodProperty;
    }

    /**
     * Set optional argument, periodic value of a time series. If the value is null or does not present, the API will determine the period automatically.
     *
     * @param periodProperty the periodProperty value to set
     * @return the AnomalyDetectOnTimestampRequest object itself.
     */
    public AnomalyDetectOnTimestampRequest withPeriodProperty(Integer periodProperty) {
        this.periodProperty = periodProperty;
        return this;
    }

    /**
     * Get optional argument, advanced model parameter, max anomaly ratio in a time series.
     *
     * @return the maxAnomalyRatio value
     */
    public Double maxAnomalyRatio() {
        return this.maxAnomalyRatio;
    }

    /**
     * Set optional argument, advanced model parameter, max anomaly ratio in a time series.
     *
     * @param maxAnomalyRatio the maxAnomalyRatio value to set
     * @return the AnomalyDetectOnTimestampRequest object itself.
     */
    public AnomalyDetectOnTimestampRequest withMaxAnomalyRatio(Double maxAnomalyRatio) {
        this.maxAnomalyRatio = maxAnomalyRatio;
        return this;
    }

    /**
     * Get optional argument, advanced model parameter, between 0-99, the lower the value is, the larger the margin value will be which means less anomalies will be accepted.
     *
     * @return the sensitivity value
     */
    public Integer sensitivity() {
        return this.sensitivity;
    }

    /**
     * Set optional argument, advanced model parameter, between 0-99, the lower the value is, the larger the margin value will be which means less anomalies will be accepted.
     *
     * @param sensitivity the sensitivity value to set
     * @return the AnomalyDetectOnTimestampRequest object itself.
     */
    public AnomalyDetectOnTimestampRequest withSensitivity(Integer sensitivity) {
        this.sensitivity = sensitivity;
        return this;
    }

}
