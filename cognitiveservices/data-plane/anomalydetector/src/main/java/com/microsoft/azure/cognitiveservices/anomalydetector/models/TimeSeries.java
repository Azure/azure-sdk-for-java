/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.cognitiveservices.anomalydetector.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The TimeSeries model.
 */
public class TimeSeries {
    /**
     * Unique id for time series.
     */
    @JsonProperty(value = "seriesId", required = true)
    private String seriesId;

    /**
     * Can only be one of yearly, monthly, weekly, daily, hourly or minutely.
     * Granularity is used for verify whether input series is valid. Possible
     * values include: 'yearly', 'monthly', 'weekly', 'daily', 'hourly',
     * 'minutely'.
     */
    @JsonProperty(value = "granularity", required = true)
    private Granularity granularity;

    /**
     * Custom Interval is used to set non-standard time interval, for example,
     * if the series is 5 minutes, request can be set as
     * {"granularity":"minutely", "customInterval":5}.
     */
    @JsonProperty(value = "customInterval")
    private Integer customInterval;

    /**
     * Hours that the data is kept.
     */
    @JsonProperty(value = "retentionDurationInHours")
    private Integer retentionDurationInHours;

    /**
     * Get unique id for time series.
     *
     * @return the seriesId value
     */
    public String seriesId() {
        return this.seriesId;
    }

    /**
     * Set unique id for time series.
     *
     * @param seriesId the seriesId value to set
     * @return the TimeSeries object itself.
     */
    public TimeSeries withSeriesId(String seriesId) {
        this.seriesId = seriesId;
        return this;
    }

    /**
     * Get can only be one of yearly, monthly, weekly, daily, hourly or minutely. Granularity is used for verify whether input series is valid. Possible values include: 'yearly', 'monthly', 'weekly', 'daily', 'hourly', 'minutely'.
     *
     * @return the granularity value
     */
    public Granularity granularity() {
        return this.granularity;
    }

    /**
     * Set can only be one of yearly, monthly, weekly, daily, hourly or minutely. Granularity is used for verify whether input series is valid. Possible values include: 'yearly', 'monthly', 'weekly', 'daily', 'hourly', 'minutely'.
     *
     * @param granularity the granularity value to set
     * @return the TimeSeries object itself.
     */
    public TimeSeries withGranularity(Granularity granularity) {
        this.granularity = granularity;
        return this;
    }

    /**
     * Get custom Interval is used to set non-standard time interval, for example, if the series is 5 minutes, request can be set as {"granularity":"minutely", "customInterval":5}.
     *
     * @return the customInterval value
     */
    public Integer customInterval() {
        return this.customInterval;
    }

    /**
     * Set custom Interval is used to set non-standard time interval, for example, if the series is 5 minutes, request can be set as {"granularity":"minutely", "customInterval":5}.
     *
     * @param customInterval the customInterval value to set
     * @return the TimeSeries object itself.
     */
    public TimeSeries withCustomInterval(Integer customInterval) {
        this.customInterval = customInterval;
        return this;
    }

    /**
     * Get hours that the data is kept.
     *
     * @return the retentionDurationInHours value
     */
    public Integer retentionDurationInHours() {
        return this.retentionDurationInHours;
    }

    /**
     * Set hours that the data is kept.
     *
     * @param retentionDurationInHours the retentionDurationInHours value to set
     * @return the TimeSeries object itself.
     */
    public TimeSeries withRetentionDurationInHours(Integer retentionDurationInHours) {
        this.retentionDurationInHours = retentionDurationInHours;
        return this;
    }

}
