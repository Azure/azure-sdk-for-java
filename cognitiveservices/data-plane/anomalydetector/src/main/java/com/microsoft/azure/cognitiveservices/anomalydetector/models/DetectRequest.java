/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.cognitiveservices.anomalydetector.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The DetectRequest model.
 */
public class DetectRequest {
    /**
     * Time series data points. Points should be sorted by timestamp in
     * ascending order to match the anomaly detection result. If the data is
     * not sorted correctly or there is duplicated timestamp, the API will not
     * work. In such case, an error message will be returned.
     */
    @JsonProperty(value = "series", required = true)
    private List<TimeSeriesPoint> series;

    /**
     * Possible values include: 'yearly', 'monthly', 'weekly', 'daily',
     * 'hourly', 'perMinute', 'perSecond'.
     */
    @JsonProperty(value = "granularity", required = true)
    private TimeGranularity granularity;

    /**
     * Custom Interval is used to set non-standard time interval, for example,
     * if the series is 5 minutes, request can be set as
     * {"granularity":"minutely", "customInterval":5}.
     */
    @JsonProperty(value = "customInterval")
    private Integer customInterval;

    /**
     * Optional argument, periodic value of a time series. If the value is null
     * or does not present, the API will determine the period automatically.
     */
    @JsonProperty(value = "period")
    private Integer periodProperty;

    /**
     * Optional argument, advanced model parameter, max anomaly ratio in a time
     * series.
     */
    @JsonProperty(value = "maxAnomalyRatio")
    private Double maxAnomalyRatio;

    /**
     * Optional argument, advanced model parameter, between 0-99, the lower the
     * value is, the larger the margin value will be which means less anomalies
     * will be accepted.
     */
    @JsonProperty(value = "sensitivity")
    private Integer sensitivity;

    /**
     * Get time series data points. Points should be sorted by timestamp in ascending order to match the anomaly detection result. If the data is not sorted correctly or there is duplicated timestamp, the API will not work. In such case, an error message will be returned.
     *
     * @return the series value
     */
    public List<TimeSeriesPoint> series() {
        return this.series;
    }

    /**
     * Set time series data points. Points should be sorted by timestamp in ascending order to match the anomaly detection result. If the data is not sorted correctly or there is duplicated timestamp, the API will not work. In such case, an error message will be returned.
     *
     * @param series the series value to set
     * @return the DetectRequest object itself.
     */
    public DetectRequest withSeries(List<TimeSeriesPoint> series) {
        this.series = series;
        return this;
    }

    /**
     * Get possible values include: 'yearly', 'monthly', 'weekly', 'daily', 'hourly', 'perMinute', 'perSecond'.
     *
     * @return the granularity value
     */
    public TimeGranularity granularity() {
        return this.granularity;
    }

    /**
     * Set possible values include: 'yearly', 'monthly', 'weekly', 'daily', 'hourly', 'perMinute', 'perSecond'.
     *
     * @param granularity the granularity value to set
     * @return the DetectRequest object itself.
     */
    public DetectRequest withGranularity(TimeGranularity granularity) {
        this.granularity = granularity;
        return this;
    }

    /**
     * Get custom Interval is used to set non-standard time interval, for example, if the series is 5 minutes, request can be set as {"granularity":"minutely", "customInterval":5}.
     *
     * @return the customInterval value
     */
    public Integer customInterval() {
        return this.customInterval;
    }

    /**
     * Set custom Interval is used to set non-standard time interval, for example, if the series is 5 minutes, request can be set as {"granularity":"minutely", "customInterval":5}.
     *
     * @param customInterval the customInterval value to set
     * @return the DetectRequest object itself.
     */
    public DetectRequest withCustomInterval(Integer customInterval) {
        this.customInterval = customInterval;
        return this;
    }

    /**
     * Get optional argument, periodic value of a time series. If the value is null or does not present, the API will determine the period automatically.
     *
     * @return the periodProperty value
     */
    public Integer periodProperty() {
        return this.periodProperty;
    }

    /**
     * Set optional argument, periodic value of a time series. If the value is null or does not present, the API will determine the period automatically.
     *
     * @param periodProperty the periodProperty value to set
     * @return the DetectRequest object itself.
     */
    public DetectRequest withPeriodProperty(Integer periodProperty) {
        this.periodProperty = periodProperty;
        return this;
    }

    /**
     * Get optional argument, advanced model parameter, max anomaly ratio in a time series.
     *
     * @return the maxAnomalyRatio value
     */
    public Double maxAnomalyRatio() {
        return this.maxAnomalyRatio;
    }

    /**
     * Set optional argument, advanced model parameter, max anomaly ratio in a time series.
     *
     * @param maxAnomalyRatio the maxAnomalyRatio value to set
     * @return the DetectRequest object itself.
     */
    public DetectRequest withMaxAnomalyRatio(Double maxAnomalyRatio) {
        this.maxAnomalyRatio = maxAnomalyRatio;
        return this;
    }

    /**
     * Get optional argument, advanced model parameter, between 0-99, the lower the value is, the larger the margin value will be which means less anomalies will be accepted.
     *
     * @return the sensitivity value
     */
    public Integer sensitivity() {
        return this.sensitivity;
    }

    /**
     * Set optional argument, advanced model parameter, between 0-99, the lower the value is, the larger the margin value will be which means less anomalies will be accepted.
     *
     * @param sensitivity the sensitivity value to set
     * @return the DetectRequest object itself.
     */
    public DetectRequest withSensitivity(Integer sensitivity) {
        this.sensitivity = sensitivity;
        return this;
    }

}
