/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.cognitiveservices.knowledge.qnamaker.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Context associated with Qna.
 */
public class ContextDTO {
    /**
     * To mark if a prompt is relevant only with a previous question or not.
     * true - Do not include this QnA as search result for queries without
     * context
     * false - ignores context and includes this QnA in search result.
     */
    @JsonProperty(value = "isContextOnly")
    private Boolean isContextOnly;

    /**
     * List of prompts associated with the answer.
     */
    @JsonProperty(value = "prompts")
    private List<PromptDTO> prompts;

    /**
     * Get to mark if a prompt is relevant only with a previous question or not.
     true - Do not include this QnA as search result for queries without context
     false - ignores context and includes this QnA in search result.
     *
     * @return the isContextOnly value
     */
    public Boolean isContextOnly() {
        return this.isContextOnly;
    }

    /**
     * Set to mark if a prompt is relevant only with a previous question or not.
     true - Do not include this QnA as search result for queries without context
     false - ignores context and includes this QnA in search result.
     *
     * @param isContextOnly the isContextOnly value to set
     * @return the ContextDTO object itself.
     */
    public ContextDTO withIsContextOnly(Boolean isContextOnly) {
        this.isContextOnly = isContextOnly;
        return this;
    }

    /**
     * Get list of prompts associated with the answer.
     *
     * @return the prompts value
     */
    public List<PromptDTO> prompts() {
        return this.prompts;
    }

    /**
     * Set list of prompts associated with the answer.
     *
     * @param prompts the prompts value to set
     * @return the ContextDTO object itself.
     */
    public ContextDTO withPrompts(List<PromptDTO> prompts) {
        this.prompts = prompts;
        return this;
    }

}
