/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.cognitiveservices.translatortext;

import com.microsoft.azure.cognitiveservices.translatortext.models.BreakSentenceSuccessItem;
import com.microsoft.azure.cognitiveservices.translatortext.models.BreakSentenceTextInput;
import com.microsoft.azure.cognitiveservices.translatortext.models.ErrorMessageException;
import com.microsoft.rest.ServiceCallback;
import com.microsoft.rest.ServiceFuture;
import com.microsoft.rest.ServiceResponse;
import java.io.IOException;
import java.util.List;
import rx.Observable;

/**
 * An instance of this class provides access to all the operations defined
 * in BreakSentences.
 */
public interface BreakSentences {
    /**
     * Identifies the position of sentence boundaries in a piece of text.
     *
     * @param apiVersion Version of the API requested by the client. Value must be **3.0**.
     * @param text # Request Body
     The body of the request is a JSON array. Each array element is a JSON object with a string property named Text. Sentence boundaries are computed for the value of the Text property.
     The following limitations apply:
     * The array can have at most 100 elements.
     * The text value of an array element cannot exceed 10,000 characters including spaces.
     * The entire text included in the request cannot exceed 50,000 characters including spaces.
     * If the `language` query parameter is specified, then all array elements must be in the same language. Otherwise, language auto-detection is applied to each array element independently.
     # Response Body
     A successful response is a JSON array with one result for each string in the input array. A result object includes the following properties:
     * `sentLen`- An array of integers representing the lengths of the sentences in the text element. The length of the array is the number of sentences, and the values are the length of each sentence.
     * `detectedLanguage`- An object describing the detected language through the following properties
       * `language`- Code of the detected language.
       * `score`- A float value indicating the confidence in the result. The score is between zero and one and a low score indicates a low confidence.
     * Note that the `detectedLanguage` property is only present in the result object when language auto-detection is requested.
     # Response Header
     X-RequestId - Value generated by the service to identify the request. It is used for troubleshooting purposes.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ErrorMessageException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the List&lt;BreakSentenceSuccessItem&gt; object if successful.
     */
    List<BreakSentenceSuccessItem> breakSentencePost(String apiVersion, List<BreakSentenceTextInput> text);

    /**
     * Identifies the position of sentence boundaries in a piece of text.
     *
     * @param apiVersion Version of the API requested by the client. Value must be **3.0**.
     * @param text # Request Body
     The body of the request is a JSON array. Each array element is a JSON object with a string property named Text. Sentence boundaries are computed for the value of the Text property.
     The following limitations apply:
     * The array can have at most 100 elements.
     * The text value of an array element cannot exceed 10,000 characters including spaces.
     * The entire text included in the request cannot exceed 50,000 characters including spaces.
     * If the `language` query parameter is specified, then all array elements must be in the same language. Otherwise, language auto-detection is applied to each array element independently.
     # Response Body
     A successful response is a JSON array with one result for each string in the input array. A result object includes the following properties:
     * `sentLen`- An array of integers representing the lengths of the sentences in the text element. The length of the array is the number of sentences, and the values are the length of each sentence.
     * `detectedLanguage`- An object describing the detected language through the following properties
       * `language`- Code of the detected language.
       * `score`- A float value indicating the confidence in the result. The score is between zero and one and a low score indicates a low confidence.
     * Note that the `detectedLanguage` property is only present in the result object when language auto-detection is requested.
     # Response Header
     X-RequestId - Value generated by the service to identify the request. It is used for troubleshooting purposes.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<List<BreakSentenceSuccessItem>> breakSentencePostAsync(String apiVersion, List<BreakSentenceTextInput> text, final ServiceCallback<List<BreakSentenceSuccessItem>> serviceCallback);

    /**
     * Identifies the position of sentence boundaries in a piece of text.
     *
     * @param apiVersion Version of the API requested by the client. Value must be **3.0**.
     * @param text # Request Body
     The body of the request is a JSON array. Each array element is a JSON object with a string property named Text. Sentence boundaries are computed for the value of the Text property.
     The following limitations apply:
     * The array can have at most 100 elements.
     * The text value of an array element cannot exceed 10,000 characters including spaces.
     * The entire text included in the request cannot exceed 50,000 characters including spaces.
     * If the `language` query parameter is specified, then all array elements must be in the same language. Otherwise, language auto-detection is applied to each array element independently.
     # Response Body
     A successful response is a JSON array with one result for each string in the input array. A result object includes the following properties:
     * `sentLen`- An array of integers representing the lengths of the sentences in the text element. The length of the array is the number of sentences, and the values are the length of each sentence.
     * `detectedLanguage`- An object describing the detected language through the following properties
       * `language`- Code of the detected language.
       * `score`- A float value indicating the confidence in the result. The score is between zero and one and a low score indicates a low confidence.
     * Note that the `detectedLanguage` property is only present in the result object when language auto-detection is requested.
     # Response Header
     X-RequestId - Value generated by the service to identify the request. It is used for troubleshooting purposes.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the List&lt;BreakSentenceSuccessItem&gt; object
     */
    Observable<List<BreakSentenceSuccessItem>> breakSentencePostAsync(String apiVersion, List<BreakSentenceTextInput> text);

    /**
     * Identifies the position of sentence boundaries in a piece of text.
     *
     * @param apiVersion Version of the API requested by the client. Value must be **3.0**.
     * @param text # Request Body
     The body of the request is a JSON array. Each array element is a JSON object with a string property named Text. Sentence boundaries are computed for the value of the Text property.
     The following limitations apply:
     * The array can have at most 100 elements.
     * The text value of an array element cannot exceed 10,000 characters including spaces.
     * The entire text included in the request cannot exceed 50,000 characters including spaces.
     * If the `language` query parameter is specified, then all array elements must be in the same language. Otherwise, language auto-detection is applied to each array element independently.
     # Response Body
     A successful response is a JSON array with one result for each string in the input array. A result object includes the following properties:
     * `sentLen`- An array of integers representing the lengths of the sentences in the text element. The length of the array is the number of sentences, and the values are the length of each sentence.
     * `detectedLanguage`- An object describing the detected language through the following properties
       * `language`- Code of the detected language.
       * `score`- A float value indicating the confidence in the result. The score is between zero and one and a low score indicates a low confidence.
     * Note that the `detectedLanguage` property is only present in the result object when language auto-detection is requested.
     # Response Header
     X-RequestId - Value generated by the service to identify the request. It is used for troubleshooting purposes.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the List&lt;BreakSentenceSuccessItem&gt; object
     */
    Observable<ServiceResponse<List<BreakSentenceSuccessItem>>> breakSentencePostWithServiceResponseAsync(String apiVersion, List<BreakSentenceTextInput> text);
    /**
     * Identifies the position of sentence boundaries in a piece of text.
     *
     * @param apiVersion Version of the API requested by the client. Value must be **3.0**.
     * @param text # Request Body
     The body of the request is a JSON array. Each array element is a JSON object with a string property named Text. Sentence boundaries are computed for the value of the Text property.
     The following limitations apply:
     * The array can have at most 100 elements.
     * The text value of an array element cannot exceed 10,000 characters including spaces.
     * The entire text included in the request cannot exceed 50,000 characters including spaces.
     * If the `language` query parameter is specified, then all array elements must be in the same language. Otherwise, language auto-detection is applied to each array element independently.
     # Response Body
     A successful response is a JSON array with one result for each string in the input array. A result object includes the following properties:
     * `sentLen`- An array of integers representing the lengths of the sentences in the text element. The length of the array is the number of sentences, and the values are the length of each sentence.
     * `detectedLanguage`- An object describing the detected language through the following properties
       * `language`- Code of the detected language.
       * `score`- A float value indicating the confidence in the result. The score is between zero and one and a low score indicates a low confidence.
     * Note that the `detectedLanguage` property is only present in the result object when language auto-detection is requested.
     # Response Header
     X-RequestId - Value generated by the service to identify the request. It is used for troubleshooting purposes.
     * @param language Language tag of the language of the input text. If not specified, Translator will apply automatic language detection.
     * @param script Script identifier of the script used by the input text. If a script is not specified, the default script of the language will be assumed.
     * @param ocpApimSubscriptionKey This is used to pass a key for authentication. If you are passing a token for authentication then use the previous "Authorization" header option. **ONE OF THESE METHODS MUST BE USED.**
     * @param clientTraceId A client-generated GUID to uniquely identify the request. You can omit this header if you include the trace ID in the query string using a query parameter named ClientTraceId.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ErrorMessageException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the List&lt;BreakSentenceSuccessItem&gt; object if successful.
     */
    List<BreakSentenceSuccessItem> breakSentencePost(String apiVersion, List<BreakSentenceTextInput> text, String language, String script, String ocpApimSubscriptionKey, String clientTraceId);

    /**
     * Identifies the position of sentence boundaries in a piece of text.
     *
     * @param apiVersion Version of the API requested by the client. Value must be **3.0**.
     * @param text # Request Body
     The body of the request is a JSON array. Each array element is a JSON object with a string property named Text. Sentence boundaries are computed for the value of the Text property.
     The following limitations apply:
     * The array can have at most 100 elements.
     * The text value of an array element cannot exceed 10,000 characters including spaces.
     * The entire text included in the request cannot exceed 50,000 characters including spaces.
     * If the `language` query parameter is specified, then all array elements must be in the same language. Otherwise, language auto-detection is applied to each array element independently.
     # Response Body
     A successful response is a JSON array with one result for each string in the input array. A result object includes the following properties:
     * `sentLen`- An array of integers representing the lengths of the sentences in the text element. The length of the array is the number of sentences, and the values are the length of each sentence.
     * `detectedLanguage`- An object describing the detected language through the following properties
       * `language`- Code of the detected language.
       * `score`- A float value indicating the confidence in the result. The score is between zero and one and a low score indicates a low confidence.
     * Note that the `detectedLanguage` property is only present in the result object when language auto-detection is requested.
     # Response Header
     X-RequestId - Value generated by the service to identify the request. It is used for troubleshooting purposes.
     * @param language Language tag of the language of the input text. If not specified, Translator will apply automatic language detection.
     * @param script Script identifier of the script used by the input text. If a script is not specified, the default script of the language will be assumed.
     * @param ocpApimSubscriptionKey This is used to pass a key for authentication. If you are passing a token for authentication then use the previous "Authorization" header option. **ONE OF THESE METHODS MUST BE USED.**
     * @param clientTraceId A client-generated GUID to uniquely identify the request. You can omit this header if you include the trace ID in the query string using a query parameter named ClientTraceId.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<List<BreakSentenceSuccessItem>> breakSentencePostAsync(String apiVersion, List<BreakSentenceTextInput> text, String language, String script, String ocpApimSubscriptionKey, String clientTraceId, final ServiceCallback<List<BreakSentenceSuccessItem>> serviceCallback);

    /**
     * Identifies the position of sentence boundaries in a piece of text.
     *
     * @param apiVersion Version of the API requested by the client. Value must be **3.0**.
     * @param text # Request Body
     The body of the request is a JSON array. Each array element is a JSON object with a string property named Text. Sentence boundaries are computed for the value of the Text property.
     The following limitations apply:
     * The array can have at most 100 elements.
     * The text value of an array element cannot exceed 10,000 characters including spaces.
     * The entire text included in the request cannot exceed 50,000 characters including spaces.
     * If the `language` query parameter is specified, then all array elements must be in the same language. Otherwise, language auto-detection is applied to each array element independently.
     # Response Body
     A successful response is a JSON array with one result for each string in the input array. A result object includes the following properties:
     * `sentLen`- An array of integers representing the lengths of the sentences in the text element. The length of the array is the number of sentences, and the values are the length of each sentence.
     * `detectedLanguage`- An object describing the detected language through the following properties
       * `language`- Code of the detected language.
       * `score`- A float value indicating the confidence in the result. The score is between zero and one and a low score indicates a low confidence.
     * Note that the `detectedLanguage` property is only present in the result object when language auto-detection is requested.
     # Response Header
     X-RequestId - Value generated by the service to identify the request. It is used for troubleshooting purposes.
     * @param language Language tag of the language of the input text. If not specified, Translator will apply automatic language detection.
     * @param script Script identifier of the script used by the input text. If a script is not specified, the default script of the language will be assumed.
     * @param ocpApimSubscriptionKey This is used to pass a key for authentication. If you are passing a token for authentication then use the previous "Authorization" header option. **ONE OF THESE METHODS MUST BE USED.**
     * @param clientTraceId A client-generated GUID to uniquely identify the request. You can omit this header if you include the trace ID in the query string using a query parameter named ClientTraceId.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the List&lt;BreakSentenceSuccessItem&gt; object
     */
    Observable<List<BreakSentenceSuccessItem>> breakSentencePostAsync(String apiVersion, List<BreakSentenceTextInput> text, String language, String script, String ocpApimSubscriptionKey, String clientTraceId);

    /**
     * Identifies the position of sentence boundaries in a piece of text.
     *
     * @param apiVersion Version of the API requested by the client. Value must be **3.0**.
     * @param text # Request Body
     The body of the request is a JSON array. Each array element is a JSON object with a string property named Text. Sentence boundaries are computed for the value of the Text property.
     The following limitations apply:
     * The array can have at most 100 elements.
     * The text value of an array element cannot exceed 10,000 characters including spaces.
     * The entire text included in the request cannot exceed 50,000 characters including spaces.
     * If the `language` query parameter is specified, then all array elements must be in the same language. Otherwise, language auto-detection is applied to each array element independently.
     # Response Body
     A successful response is a JSON array with one result for each string in the input array. A result object includes the following properties:
     * `sentLen`- An array of integers representing the lengths of the sentences in the text element. The length of the array is the number of sentences, and the values are the length of each sentence.
     * `detectedLanguage`- An object describing the detected language through the following properties
       * `language`- Code of the detected language.
       * `score`- A float value indicating the confidence in the result. The score is between zero and one and a low score indicates a low confidence.
     * Note that the `detectedLanguage` property is only present in the result object when language auto-detection is requested.
     # Response Header
     X-RequestId - Value generated by the service to identify the request. It is used for troubleshooting purposes.
     * @param language Language tag of the language of the input text. If not specified, Translator will apply automatic language detection.
     * @param script Script identifier of the script used by the input text. If a script is not specified, the default script of the language will be assumed.
     * @param ocpApimSubscriptionKey This is used to pass a key for authentication. If you are passing a token for authentication then use the previous "Authorization" header option. **ONE OF THESE METHODS MUST BE USED.**
     * @param clientTraceId A client-generated GUID to uniquely identify the request. You can omit this header if you include the trace ID in the query string using a query parameter named ClientTraceId.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the List&lt;BreakSentenceSuccessItem&gt; object
     */
    Observable<ServiceResponse<List<BreakSentenceSuccessItem>>> breakSentencePostWithServiceResponseAsync(String apiVersion, List<BreakSentenceTextInput> text, String language, String script, String ocpApimSubscriptionKey, String clientTraceId);

}
