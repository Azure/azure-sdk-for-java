/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.cognitiveservices.speechservices.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WebHookUpdate.
 */
public class WebHookUpdate {
    /**
     * The configuration of the web hook registration.
     *
     * If the property secret is omitted or contains an empty string in a POST
     * or PATCH request,
     * no signature hash will be calculated.
     *
     * When retrieving web hook registration information from the service, the
     * secret is always omitted.
     */
    @JsonProperty(value = "configuration", required = true)
    private WebHookConfigurationSecret configuration;

    /**
     * A value indicating whether callbacks to the registered URL are made or
     * not.
     */
    @JsonProperty(value = "active", required = true)
    private boolean active;

    /**
     * The name of the object.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * The description of the object.
     */
    @JsonProperty(value = "description")
    private String description;

    /**
     * Get the configuration of the web hook registration.
     If the property secret is omitted or contains an empty string in a POST or PATCH request,
     no signature hash will be calculated.
     When retrieving web hook registration information from the service, the secret is always omitted.
     *
     * @return the configuration value
     */
    public WebHookConfigurationSecret configuration() {
        return this.configuration;
    }

    /**
     * Set the configuration of the web hook registration.
     If the property secret is omitted or contains an empty string in a POST or PATCH request,
     no signature hash will be calculated.
     When retrieving web hook registration information from the service, the secret is always omitted.
     *
     * @param configuration the configuration value to set
     * @return the WebHookUpdate object itself.
     */
    public WebHookUpdate withConfiguration(WebHookConfigurationSecret configuration) {
        this.configuration = configuration;
        return this;
    }

    /**
     * Get a value indicating whether callbacks to the registered URL are made or not.
     *
     * @return the active value
     */
    public boolean active() {
        return this.active;
    }

    /**
     * Set a value indicating whether callbacks to the registered URL are made or not.
     *
     * @param active the active value to set
     * @return the WebHookUpdate object itself.
     */
    public WebHookUpdate withActive(boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Get the name of the object.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name of the object.
     *
     * @param name the name value to set
     * @return the WebHookUpdate object itself.
     */
    public WebHookUpdate withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the description of the object.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description of the object.
     *
     * @param description the description value to set
     * @return the WebHookUpdate object itself.
     */
    public WebHookUpdate withDescription(String description) {
        this.description = description;
        return this;
    }

}
