/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.cognitiveservices.speechservices.models;

import java.util.UUID;
import java.util.Map;
import org.joda.time.DateTime;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Endpoint.
 */
public class Endpoint {
    /**
     * The number of concurrent recognitions the endpoint supports.
     */
    @JsonProperty(value = "concurrentRecognitions")
    private Integer concurrentRecognitions;

    /**
     * The identifier of this entity.
     */
    @JsonProperty(value = "id", required = true)
    private UUID id;

    /**
     * The kind of this endpoint (e.g. custom speech, custom voice ...).
     * Possible values include: 'None', 'SpeechRecognition', 'CustomVoice',
     * 'LanguageGeneration', 'LanguageIdentification'.
     */
    @JsonProperty(value = "endpointKind", required = true)
    private String endpointKind;

    /**
     * The list of endpoint urls.
     */
    @JsonProperty(value = "endpointUrls", required = true)
    private Map<String, String> endpointUrls;

    /**
     * The time-stamp when the object was created.
     */
    @JsonProperty(value = "createdDateTime", required = true)
    private DateTime createdDateTime;

    /**
     * The time-stamp when the current status was entered.
     */
    @JsonProperty(value = "lastActionDateTime", required = true)
    private DateTime lastActionDateTime;

    /**
     * The status of the object. Possible values include: 'NotStarted',
     * 'Running', 'Succeeded', 'Failed'.
     */
    @JsonProperty(value = "status", required = true)
    private String status;

    /**
     * Information about the deployed models.
     */
    @JsonProperty(value = "models", required = true)
    private List<Model> modelsProperty;

    /**
     * A value indicating whether content logging (audio &amp;amp;
     * transcriptions) is being used for a deployment.
     * Suppressing content logging will result in a higher cost for the
     * deployment.
     * Free subscriptions can only deploy true.
     */
    @JsonProperty(value = "contentLoggingEnabled")
    private Boolean contentLoggingEnabled;

    /**
     * The name of the object.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * The description of the object.
     */
    @JsonProperty(value = "description")
    private String description;

    /**
     * The custom properties of this entity.
     */
    @JsonProperty(value = "properties")
    private Map<String, String> properties;

    /**
     * The locale of the contained data.
     */
    @JsonProperty(value = "locale")
    private String locale;

    /**
     * Get the number of concurrent recognitions the endpoint supports.
     *
     * @return the concurrentRecognitions value
     */
    public Integer concurrentRecognitions() {
        return this.concurrentRecognitions;
    }

    /**
     * Set the number of concurrent recognitions the endpoint supports.
     *
     * @param concurrentRecognitions the concurrentRecognitions value to set
     * @return the Endpoint object itself.
     */
    public Endpoint withConcurrentRecognitions(Integer concurrentRecognitions) {
        this.concurrentRecognitions = concurrentRecognitions;
        return this;
    }

    /**
     * Get the identifier of this entity.
     *
     * @return the id value
     */
    public UUID id() {
        return this.id;
    }

    /**
     * Set the identifier of this entity.
     *
     * @param id the id value to set
     * @return the Endpoint object itself.
     */
    public Endpoint withId(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Get the kind of this endpoint (e.g. custom speech, custom voice ...). Possible values include: 'None', 'SpeechRecognition', 'CustomVoice', 'LanguageGeneration', 'LanguageIdentification'.
     *
     * @return the endpointKind value
     */
    public String endpointKind() {
        return this.endpointKind;
    }

    /**
     * Set the kind of this endpoint (e.g. custom speech, custom voice ...). Possible values include: 'None', 'SpeechRecognition', 'CustomVoice', 'LanguageGeneration', 'LanguageIdentification'.
     *
     * @param endpointKind the endpointKind value to set
     * @return the Endpoint object itself.
     */
    public Endpoint withEndpointKind(String endpointKind) {
        this.endpointKind = endpointKind;
        return this;
    }

    /**
     * Get the list of endpoint urls.
     *
     * @return the endpointUrls value
     */
    public Map<String, String> endpointUrls() {
        return this.endpointUrls;
    }

    /**
     * Set the list of endpoint urls.
     *
     * @param endpointUrls the endpointUrls value to set
     * @return the Endpoint object itself.
     */
    public Endpoint withEndpointUrls(Map<String, String> endpointUrls) {
        this.endpointUrls = endpointUrls;
        return this;
    }

    /**
     * Get the time-stamp when the object was created.
     *
     * @return the createdDateTime value
     */
    public DateTime createdDateTime() {
        return this.createdDateTime;
    }

    /**
     * Set the time-stamp when the object was created.
     *
     * @param createdDateTime the createdDateTime value to set
     * @return the Endpoint object itself.
     */
    public Endpoint withCreatedDateTime(DateTime createdDateTime) {
        this.createdDateTime = createdDateTime;
        return this;
    }

    /**
     * Get the time-stamp when the current status was entered.
     *
     * @return the lastActionDateTime value
     */
    public DateTime lastActionDateTime() {
        return this.lastActionDateTime;
    }

    /**
     * Set the time-stamp when the current status was entered.
     *
     * @param lastActionDateTime the lastActionDateTime value to set
     * @return the Endpoint object itself.
     */
    public Endpoint withLastActionDateTime(DateTime lastActionDateTime) {
        this.lastActionDateTime = lastActionDateTime;
        return this;
    }

    /**
     * Get the status of the object. Possible values include: 'NotStarted', 'Running', 'Succeeded', 'Failed'.
     *
     * @return the status value
     */
    public String status() {
        return this.status;
    }

    /**
     * Set the status of the object. Possible values include: 'NotStarted', 'Running', 'Succeeded', 'Failed'.
     *
     * @param status the status value to set
     * @return the Endpoint object itself.
     */
    public Endpoint withStatus(String status) {
        this.status = status;
        return this;
    }

    /**
     * Get information about the deployed models.
     *
     * @return the modelsProperty value
     */
    public List<Model> modelsProperty() {
        return this.modelsProperty;
    }

    /**
     * Set information about the deployed models.
     *
     * @param modelsProperty the modelsProperty value to set
     * @return the Endpoint object itself.
     */
    public Endpoint withModelsProperty(List<Model> modelsProperty) {
        this.modelsProperty = modelsProperty;
        return this;
    }

    /**
     * Get a value indicating whether content logging (audio &amp;amp; transcriptions) is being used for a deployment.
     Suppressing content logging will result in a higher cost for the deployment.
     Free subscriptions can only deploy true.
     *
     * @return the contentLoggingEnabled value
     */
    public Boolean contentLoggingEnabled() {
        return this.contentLoggingEnabled;
    }

    /**
     * Set a value indicating whether content logging (audio &amp;amp; transcriptions) is being used for a deployment.
     Suppressing content logging will result in a higher cost for the deployment.
     Free subscriptions can only deploy true.
     *
     * @param contentLoggingEnabled the contentLoggingEnabled value to set
     * @return the Endpoint object itself.
     */
    public Endpoint withContentLoggingEnabled(Boolean contentLoggingEnabled) {
        this.contentLoggingEnabled = contentLoggingEnabled;
        return this;
    }

    /**
     * Get the name of the object.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name of the object.
     *
     * @param name the name value to set
     * @return the Endpoint object itself.
     */
    public Endpoint withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the description of the object.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description of the object.
     *
     * @param description the description value to set
     * @return the Endpoint object itself.
     */
    public Endpoint withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the custom properties of this entity.
     *
     * @return the properties value
     */
    public Map<String, String> properties() {
        return this.properties;
    }

    /**
     * Set the custom properties of this entity.
     *
     * @param properties the properties value to set
     * @return the Endpoint object itself.
     */
    public Endpoint withProperties(Map<String, String> properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the locale of the contained data.
     *
     * @return the locale value
     */
    public String locale() {
        return this.locale;
    }

    /**
     * Set the locale of the contained data.
     *
     * @param locale the locale value to set
     * @return the Endpoint object itself.
     */
    public Endpoint withLocale(String locale) {
        this.locale = locale;
        return this;
    }

}
