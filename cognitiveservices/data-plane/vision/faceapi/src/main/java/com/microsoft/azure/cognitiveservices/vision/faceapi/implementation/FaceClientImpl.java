/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.cognitiveservices.vision.faceapi.implementation;

import com.azure.common.ServiceClient;
import com.azure.common.http.HttpPipeline;
import com.azure.common.implementation.RestProxy;
import com.microsoft.azure.cognitiveservices.vision.faceapi.FaceClient;
import com.microsoft.azure.cognitiveservices.vision.faceapi.FaceLists;
import com.microsoft.azure.cognitiveservices.vision.faceapi.Faces;
import com.microsoft.azure.cognitiveservices.vision.faceapi.LargeFaceLists;
import com.microsoft.azure.cognitiveservices.vision.faceapi.LargePersonGroupPersons;
import com.microsoft.azure.cognitiveservices.vision.faceapi.LargePersonGroups;
import com.microsoft.azure.cognitiveservices.vision.faceapi.PersonGroupPersons;
import com.microsoft.azure.cognitiveservices.vision.faceapi.PersonGroups;
import com.microsoft.azure.cognitiveservices.vision.faceapi.Snapshots;
import reactor.util.annotation.NonNull;

/**
 * Initializes a new instance of the FaceClient type.
 */
public final class FaceClientImpl extends ServiceClient implements FaceClient {
    /**
     * Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).
     */
    private String endpoint;

    /**
     * Gets Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).
     *
     * @return the endpoint value.
     */
    public String endpoint() {
        return this.endpoint;
    }

    /**
     * Sets Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).
     *
     * @param endpoint the endpoint value.
     * @return the service client itself.
     */
    public FaceClientImpl withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /**
     * The Faces object to access its operations.
     */
    private Faces faces;

    /**
     * Gets the Faces object to access its operations.
     *
     * @return the Faces object.
     */
    public Faces faces() {
        return this.faces;
    }

    /**
     * The PersonGroupPersons object to access its operations.
     */
    private PersonGroupPersons personGroupPersons;

    /**
     * Gets the PersonGroupPersons object to access its operations.
     *
     * @return the PersonGroupPersons object.
     */
    public PersonGroupPersons personGroupPersons() {
        return this.personGroupPersons;
    }

    /**
     * The PersonGroups object to access its operations.
     */
    private PersonGroups personGroups;

    /**
     * Gets the PersonGroups object to access its operations.
     *
     * @return the PersonGroups object.
     */
    public PersonGroups personGroups() {
        return this.personGroups;
    }

    /**
     * The FaceLists object to access its operations.
     */
    private FaceLists faceLists;

    /**
     * Gets the FaceLists object to access its operations.
     *
     * @return the FaceLists object.
     */
    public FaceLists faceLists() {
        return this.faceLists;
    }

    /**
     * The LargePersonGroupPersons object to access its operations.
     */
    private LargePersonGroupPersons largePersonGroupPersons;

    /**
     * Gets the LargePersonGroupPersons object to access its operations.
     *
     * @return the LargePersonGroupPersons object.
     */
    public LargePersonGroupPersons largePersonGroupPersons() {
        return this.largePersonGroupPersons;
    }

    /**
     * The LargePersonGroups object to access its operations.
     */
    private LargePersonGroups largePersonGroups;

    /**
     * Gets the LargePersonGroups object to access its operations.
     *
     * @return the LargePersonGroups object.
     */
    public LargePersonGroups largePersonGroups() {
        return this.largePersonGroups;
    }

    /**
     * The LargeFaceLists object to access its operations.
     */
    private LargeFaceLists largeFaceLists;

    /**
     * Gets the LargeFaceLists object to access its operations.
     *
     * @return the LargeFaceLists object.
     */
    public LargeFaceLists largeFaceLists() {
        return this.largeFaceLists;
    }

    /**
     * The Snapshots object to access its operations.
     */
    private Snapshots snapshots;

    /**
     * Gets the Snapshots object to access its operations.
     *
     * @return the Snapshots object.
     */
    public Snapshots snapshots() {
        return this.snapshots;
    }

    /**
     * Initializes an instance of FaceClient client.
     */
    public FaceClientImpl() {
        this(RestProxy.createDefaultPipeline());
    }

    /**
     * Initializes an instance of FaceClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     */
    public FaceClientImpl(@NonNull HttpPipeline httpPipeline) {
        super(httpPipeline);
        this.faces = new FacesImpl(this);
        this.personGroupPersons = new PersonGroupPersonsImpl(this);
        this.personGroups = new PersonGroupsImpl(this);
        this.faceLists = new FaceListsImpl(this);
        this.largePersonGroupPersons = new LargePersonGroupPersonsImpl(this);
        this.largePersonGroups = new LargePersonGroupsImpl(this);
        this.largeFaceLists = new LargeFaceListsImpl(this);
        this.snapshots = new SnapshotsImpl(this);
    }
}
