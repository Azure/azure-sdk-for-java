/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.cognitiveservices.vision.contentmoderator.implementation;

import com.azure.common.ServiceClient;
import com.azure.common.http.HttpPipeline;
import com.azure.common.implementation.RestProxy;
import com.microsoft.azure.cognitiveservices.vision.contentmoderator.ContentModeratorClient;
import com.microsoft.azure.cognitiveservices.vision.contentmoderator.ImageModerations;
import com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImageLists;
import com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementImages;
import com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTermLists;
import com.microsoft.azure.cognitiveservices.vision.contentmoderator.ListManagementTerms;
import com.microsoft.azure.cognitiveservices.vision.contentmoderator.Reviews;
import com.microsoft.azure.cognitiveservices.vision.contentmoderator.TextModerations;
import reactor.util.annotation.NonNull;

/**
 * Initializes a new instance of the ContentModeratorClient type.
 */
public final class ContentModeratorClientImpl extends ServiceClient implements ContentModeratorClient {
    /**
     * Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).
     */
    private String endpoint;

    /**
     * Gets Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).
     *
     * @return the endpoint value.
     */
    public String endpoint() {
        return this.endpoint;
    }

    /**
     * Sets Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).
     *
     * @param endpoint the endpoint value.
     * @return the service client itself.
     */
    public ContentModeratorClientImpl withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /**
     * The ImageModerations object to access its operations.
     */
    private ImageModerations imageModerations;

    /**
     * Gets the ImageModerations object to access its operations.
     *
     * @return the ImageModerations object.
     */
    public ImageModerations imageModerations() {
        return this.imageModerations;
    }

    /**
     * The TextModerations object to access its operations.
     */
    private TextModerations textModerations;

    /**
     * Gets the TextModerations object to access its operations.
     *
     * @return the TextModerations object.
     */
    public TextModerations textModerations() {
        return this.textModerations;
    }

    /**
     * The ListManagementImageLists object to access its operations.
     */
    private ListManagementImageLists listManagementImageLists;

    /**
     * Gets the ListManagementImageLists object to access its operations.
     *
     * @return the ListManagementImageLists object.
     */
    public ListManagementImageLists listManagementImageLists() {
        return this.listManagementImageLists;
    }

    /**
     * The ListManagementTermLists object to access its operations.
     */
    private ListManagementTermLists listManagementTermLists;

    /**
     * Gets the ListManagementTermLists object to access its operations.
     *
     * @return the ListManagementTermLists object.
     */
    public ListManagementTermLists listManagementTermLists() {
        return this.listManagementTermLists;
    }

    /**
     * The ListManagementImages object to access its operations.
     */
    private ListManagementImages listManagementImages;

    /**
     * Gets the ListManagementImages object to access its operations.
     *
     * @return the ListManagementImages object.
     */
    public ListManagementImages listManagementImages() {
        return this.listManagementImages;
    }

    /**
     * The ListManagementTerms object to access its operations.
     */
    private ListManagementTerms listManagementTerms;

    /**
     * Gets the ListManagementTerms object to access its operations.
     *
     * @return the ListManagementTerms object.
     */
    public ListManagementTerms listManagementTerms() {
        return this.listManagementTerms;
    }

    /**
     * The Reviews object to access its operations.
     */
    private Reviews reviews;

    /**
     * Gets the Reviews object to access its operations.
     *
     * @return the Reviews object.
     */
    public Reviews reviews() {
        return this.reviews;
    }

    /**
     * Initializes an instance of ContentModeratorClient client.
     */
    public ContentModeratorClientImpl() {
        this(RestProxy.createDefaultPipeline());
    }

    /**
     * Initializes an instance of ContentModeratorClient client.
     *
     * @param httpPipeline The HTTP pipeline to send requests through.
     */
    public ContentModeratorClientImpl(@NonNull HttpPipeline httpPipeline) {
        super(httpPipeline);
        this.imageModerations = new ImageModerationsImpl(this);
        this.textModerations = new TextModerationsImpl(this);
        this.listManagementImageLists = new ListManagementImageListsImpl(this);
        this.listManagementTermLists = new ListManagementTermListsImpl(this);
        this.listManagementImages = new ListManagementImagesImpl(this);
        this.listManagementTerms = new ListManagementTermsImpl(this);
        this.reviews = new ReviewsImpl(this);
    }
}
