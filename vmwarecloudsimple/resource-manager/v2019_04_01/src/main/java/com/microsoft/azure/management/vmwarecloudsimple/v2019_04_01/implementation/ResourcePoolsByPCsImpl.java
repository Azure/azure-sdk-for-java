/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.ResourcePoolsByPCs;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.PrivateCloudLocationResourcePool;

class ResourcePoolsByPCsImpl extends WrapperImpl<ResourcePoolsByPCsInner> implements ResourcePoolsByPCs {
    private final VMwareCloudSimpleManager manager;

    ResourcePoolsByPCsImpl(VMwareCloudSimpleManager manager) {
        super(manager.inner().resourcePoolsByPCs());
        this.manager = manager;
    }

    public VMwareCloudSimpleManager manager() {
        return this.manager;
    }

    private PrivateCloudLocationResourcePoolImpl wrapModel(ResourcePoolInner inner) {
        return  new PrivateCloudLocationResourcePoolImpl(inner, manager());
    }

    @Override
    public Observable<PrivateCloudLocationResourcePool> listAsync(final String pcName) {
        ResourcePoolsByPCsInner client = this.inner();
        return client.listAsync(pcName)
        .flatMapIterable(new Func1<Page<ResourcePoolInner>, Iterable<ResourcePoolInner>>() {
            @Override
            public Iterable<ResourcePoolInner> call(Page<ResourcePoolInner> page) {
                return page.items();
            }
        })
        .map(new Func1<ResourcePoolInner, PrivateCloudLocationResourcePool>() {
            @Override
            public PrivateCloudLocationResourcePool call(ResourcePoolInner inner) {
                return wrapModel(inner);
            }
        });
    }

}
