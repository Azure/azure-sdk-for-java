/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.implementation;

import com.microsoft.azure.AzureEnvironment;
import com.microsoft.azure.AzureResponseBuilder;
import com.microsoft.azure.credentials.AzureTokenCredentials;
import com.microsoft.azure.management.apigeneration.Beta;
import com.microsoft.azure.management.apigeneration.Beta.SinceVersion;
import com.microsoft.azure.arm.resources.AzureConfigurable;
import com.microsoft.azure.serializer.AzureJacksonAdapter;
import com.microsoft.rest.RestClient;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.AvailableOperations;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.DedicatedCloudNodes;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.DedicatedCloudServices;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.SkusAvailabilityWithinRegions;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.PrivateCloudByRegions;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.ResourcePoolsByPCs;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.ResourcePoolByPCs;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.VirtualMachineTemplatesByPCs;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.VirtualMachineTemplateByPCs;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.VirtualNetworksByPCs;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.VirtualNetworkByPCs;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.UsagesWithinRegions;
import com.microsoft.azure.management.vmwarecloudsimple.v2019_04_01.VirtualMachines;
import com.microsoft.azure.arm.resources.implementation.AzureConfigurableCoreImpl;
import com.microsoft.azure.arm.resources.implementation.ManagerCore;

/**
 * Entry point to Azure VMwareCloudSimple resource management.
 */
public final class VMwareCloudSimpleManager extends ManagerCore<VMwareCloudSimpleManager, VMwareCloudSimpleClientImpl> {
    private AvailableOperations availableOperations;
    private DedicatedCloudNodes dedicatedCloudNodes;
    private DedicatedCloudServices dedicatedCloudServices;
    private SkusAvailabilityWithinRegions skusAvailabilityWithinRegions;
    private PrivateCloudByRegions privateCloudByRegions;
    private ResourcePoolsByPCs resourcePoolsByPCs;
    private ResourcePoolByPCs resourcePoolByPCs;
    private VirtualMachineTemplatesByPCs virtualMachineTemplatesByPCs;
    private VirtualMachineTemplateByPCs virtualMachineTemplateByPCs;
    private VirtualNetworksByPCs virtualNetworksByPCs;
    private VirtualNetworkByPCs virtualNetworkByPCs;
    private UsagesWithinRegions usagesWithinRegions;
    private VirtualMachines virtualMachines;
    /**
    * Get a Configurable instance that can be used to create VMwareCloudSimpleManager with optional configuration.
    *
    * @return the instance allowing configurations
    */
    public static Configurable configure() {
        return new VMwareCloudSimpleManager.ConfigurableImpl();
    }
    /**
    * Creates an instance of VMwareCloudSimpleManager that exposes VMwareCloudSimple resource management API entry points.
    *
    * @param credentials the credentials to use
    * @param subscriptionId the subscription UUID
    * @return the VMwareCloudSimpleManager
    */
    public static VMwareCloudSimpleManager authenticate(AzureTokenCredentials credentials, String subscriptionId) {
        return new VMwareCloudSimpleManager(new RestClient.Builder()
            .withBaseUrl(credentials.environment(), AzureEnvironment.Endpoint.RESOURCE_MANAGER)
            .withCredentials(credentials)
            .withSerializerAdapter(new AzureJacksonAdapter())
            .withResponseBuilderFactory(new AzureResponseBuilder.Factory())
            .build(), subscriptionId);
    }
    /**
    * Creates an instance of VMwareCloudSimpleManager that exposes VMwareCloudSimple resource management API entry points.
    *
    * @param restClient the RestClient to be used for API calls.
    * @param subscriptionId the subscription UUID
    * @return the VMwareCloudSimpleManager
    */
    public static VMwareCloudSimpleManager authenticate(RestClient restClient, String subscriptionId) {
        return new VMwareCloudSimpleManager(restClient, subscriptionId);
    }
    /**
    * The interface allowing configurations to be set.
    */
    public interface Configurable extends AzureConfigurable<Configurable> {
        /**
        * Creates an instance of VMwareCloudSimpleManager that exposes VMwareCloudSimple management API entry points.
        *
        * @param credentials the credentials to use
        * @param subscriptionId the subscription UUID
        * @return the interface exposing VMwareCloudSimple management API entry points that work across subscriptions
        */
        VMwareCloudSimpleManager authenticate(AzureTokenCredentials credentials, String subscriptionId);
    }

    /**
     * @return Entry point to manage AvailableOperations.
     */
    public AvailableOperations availableOperations() {
        if (this.availableOperations == null) {
            this.availableOperations = new AvailableOperationsImpl(this);
        }
        return this.availableOperations;
    }

    /**
     * @return Entry point to manage DedicatedCloudNodes.
     */
    public DedicatedCloudNodes dedicatedCloudNodes() {
        if (this.dedicatedCloudNodes == null) {
            this.dedicatedCloudNodes = new DedicatedCloudNodesImpl(this);
        }
        return this.dedicatedCloudNodes;
    }

    /**
     * @return Entry point to manage DedicatedCloudServices.
     */
    public DedicatedCloudServices dedicatedCloudServices() {
        if (this.dedicatedCloudServices == null) {
            this.dedicatedCloudServices = new DedicatedCloudServicesImpl(this);
        }
        return this.dedicatedCloudServices;
    }

    /**
     * @return Entry point to manage SkusAvailabilityWithinRegions.
     */
    public SkusAvailabilityWithinRegions skusAvailabilityWithinRegions() {
        if (this.skusAvailabilityWithinRegions == null) {
            this.skusAvailabilityWithinRegions = new SkusAvailabilityWithinRegionsImpl(this);
        }
        return this.skusAvailabilityWithinRegions;
    }

    /**
     * @return Entry point to manage PrivateCloudByRegions.
     */
    public PrivateCloudByRegions privateCloudByRegions() {
        if (this.privateCloudByRegions == null) {
            this.privateCloudByRegions = new PrivateCloudByRegionsImpl(this);
        }
        return this.privateCloudByRegions;
    }

    /**
     * @return Entry point to manage ResourcePoolsByPCs.
     */
    public ResourcePoolsByPCs resourcePoolsByPCs() {
        if (this.resourcePoolsByPCs == null) {
            this.resourcePoolsByPCs = new ResourcePoolsByPCsImpl(this);
        }
        return this.resourcePoolsByPCs;
    }

    /**
     * @return Entry point to manage ResourcePoolByPCs.
     */
    public ResourcePoolByPCs resourcePoolByPCs() {
        if (this.resourcePoolByPCs == null) {
            this.resourcePoolByPCs = new ResourcePoolByPCsImpl(this);
        }
        return this.resourcePoolByPCs;
    }

    /**
     * @return Entry point to manage VirtualMachineTemplatesByPCs.
     */
    public VirtualMachineTemplatesByPCs virtualMachineTemplatesByPCs() {
        if (this.virtualMachineTemplatesByPCs == null) {
            this.virtualMachineTemplatesByPCs = new VirtualMachineTemplatesByPCsImpl(this);
        }
        return this.virtualMachineTemplatesByPCs;
    }

    /**
     * @return Entry point to manage VirtualMachineTemplateByPCs.
     */
    public VirtualMachineTemplateByPCs virtualMachineTemplateByPCs() {
        if (this.virtualMachineTemplateByPCs == null) {
            this.virtualMachineTemplateByPCs = new VirtualMachineTemplateByPCsImpl(this);
        }
        return this.virtualMachineTemplateByPCs;
    }

    /**
     * @return Entry point to manage VirtualNetworksByPCs.
     */
    public VirtualNetworksByPCs virtualNetworksByPCs() {
        if (this.virtualNetworksByPCs == null) {
            this.virtualNetworksByPCs = new VirtualNetworksByPCsImpl(this);
        }
        return this.virtualNetworksByPCs;
    }

    /**
     * @return Entry point to manage VirtualNetworkByPCs.
     */
    public VirtualNetworkByPCs virtualNetworkByPCs() {
        if (this.virtualNetworkByPCs == null) {
            this.virtualNetworkByPCs = new VirtualNetworkByPCsImpl(this);
        }
        return this.virtualNetworkByPCs;
    }

    /**
     * @return Entry point to manage UsagesWithinRegions.
     */
    public UsagesWithinRegions usagesWithinRegions() {
        if (this.usagesWithinRegions == null) {
            this.usagesWithinRegions = new UsagesWithinRegionsImpl(this);
        }
        return this.usagesWithinRegions;
    }

    /**
     * @return Entry point to manage VirtualMachines.
     */
    public VirtualMachines virtualMachines() {
        if (this.virtualMachines == null) {
            this.virtualMachines = new VirtualMachinesImpl(this);
        }
        return this.virtualMachines;
    }

    /**
    * The implementation for Configurable interface.
    */
    private static final class ConfigurableImpl extends AzureConfigurableCoreImpl<Configurable> implements Configurable {
        public VMwareCloudSimpleManager authenticate(AzureTokenCredentials credentials, String subscriptionId) {
           return VMwareCloudSimpleManager.authenticate(buildRestClient(credentials), subscriptionId);
        }
     }
    private VMwareCloudSimpleManager(RestClient restClient, String subscriptionId) {
        super(
            restClient,
            subscriptionId,
            new VMwareCloudSimpleClientImpl(restClient).withSubscriptionId(subscriptionId));
    }
}
