trigger:
  - master

variables:
  DefaultOptions: '--batch-mode -Dmaven.wagon.http.pool=false'
  LoggingOptions: '-Dorg.slf4j.simpleLogger.defaultLogLevel=error -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn'

jobs:
  - job: 'Generate_Track_2'
    variables:
      skipComponentGovernanceDetection: true
    timeoutInMinutes: 120
    pool:
      vmImage: 'vs2017-win2016'

    steps:
      - powershell: |
          copy eng/repo-docs/index.html $(Build.ArtifactStagingDirectory)
        displayName: 'Copy index to artifact staging'

      - task: PublishPipelineArtifact@0
        condition: succeededOrFailed()
        displayName: 'Publish index artifact'
        inputs:
          artifactName: index
          targetPath: $(Build.ArtifactStagingDirectory)

      # We `install` separately from running `site:site site:stage` so that the `install` brings in the non-shipping-modules,
      # but we don't include them in the Maven site commands (so that we don't generate reports for the non-shipping modules).
      - task: Maven@3
        displayName: 'Install reporting tools'
        inputs:
          mavenPomFile: pom.client.xml
          options: '$(DefaultOptions) -Djava-lts -Dinclude-non-shipping-modules -DskipTests -Dgpg.skip'
          mavenOptions: '$(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          goals: 'install'

      - task: Maven@3
        displayName: 'Generate Doc Site'
        inputs:
          mavenPomFile: pom.client.xml
          options: '$(DefaultOptions) -Djava-lts -DskipTests -Dgpg.skip'
          mavenOptions: '$(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          goals: 'site:site site:stage'

      - task: Maven@3
        displayName: 'Install azure-sdk-parent'
        inputs:
          mavenPomFile: parent/pom.xml
          options: '$(DefaultOptions) -DskipTests -Dgpg.skip'
          mavenOptions: '$(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          goals: 'install'

      - powershell: |
          copy -r target/staging/apidocs $(Build.ArtifactStagingDirectory)/client
        displayName: 'Copy reports to artifact staging'

      - task: PublishPipelineArtifact@0
        condition: succeededOrFailed()
        displayName: 'Publish reports artifact'
        inputs:
          artifactName: track2reports
          targetPath: $(Build.ArtifactStagingDirectory)/client

  - job: 'Generate_Track_1'
    variables:
      skipComponentGovernanceDetection: true
    timeoutInMinutes: 120
    pool:
      vmImage: 'vs2017-win2016'

    steps:
      # We `install` separately from running `site:site site:stage` so that the `install` brings in the non-shipping-modules,
      # but we don't include them in the Maven site commands (so that we don't generate reports for the non-shipping modules).
      - task: Maven@3
        displayName: 'Install client.xml to get spotbugs reporting'
        inputs:
          mavenPomFile: pom.client.xml
          options: '$(DefaultOptions) -Dinclude-non-shipping-modules -Dmaven.javadoc.skip=true -DskipTests -Dgpg.skip'
          mavenOptions: '$(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          goals: 'install'

      - task: Maven@3
        displayName: 'Install Data Packages'
        inputs:
          mavenPomFile: pom.data.xml
          options: '$(DefaultOptions) -Dinclude-non-shipping-modules -Dmaven.javadoc.skip=true -DskipTests -Dgpg.skip'
          mavenOptions: '$(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          goals: 'install'

      - task: Maven@3
        displayName: 'Generate Doc Site'
        inputs:
          mavenPomFile: pom.data.xml
          options: '$(DefaultOptions) -DskipTests -Dgpg.skip'
          mavenOptions: '$(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          goals: 'site:site'

      - powershell: |
          copy -r target/site/apidocs $(Build.ArtifactStagingDirectory)/data
        displayName: 'Copy reports to artifact staging'

      - task: PublishPipelineArtifact@0
        condition: succeededOrFailed()
        displayName: 'Publish reports artifact'
        inputs:
          artifactName: track1reports
          targetPath: $(Build.ArtifactStagingDirectory)/data

