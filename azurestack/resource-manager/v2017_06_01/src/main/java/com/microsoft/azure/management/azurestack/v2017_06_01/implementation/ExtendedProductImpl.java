/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.azurestack.v2017_06_01.implementation;

import com.microsoft.azure.management.azurestack.v2017_06_01.ExtendedProduct;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.azurestack.v2017_06_01.ComputeRole;
import java.util.List;
import com.microsoft.azure.management.azurestack.v2017_06_01.DataDiskImage;
import com.microsoft.azure.management.azurestack.v2017_06_01.OsDiskImage;
import com.microsoft.azure.management.azurestack.v2017_06_01.OperatingSystem;

class ExtendedProductImpl extends WrapperImpl<ExtendedProductInner> implements ExtendedProduct {
    private final AzureStackManager manager;
    ExtendedProductImpl(ExtendedProductInner inner, AzureStackManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public AzureStackManager manager() {
        return this.manager;
    }

    @Override
    public ComputeRole computeRole() {
        return this.inner().computeRole();
    }

    @Override
    public List<DataDiskImage> dataDiskImages() {
        return this.inner().dataDiskImages();
    }

    @Override
    public String galleryPackageBlobSasUri() {
        return this.inner().galleryPackageBlobSasUri();
    }

    @Override
    public Boolean isSystemExtension() {
        return this.inner().isSystemExtension();
    }

    @Override
    public OsDiskImage osDiskImage() {
        return this.inner().osDiskImage();
    }

    @Override
    public String productKind() {
        return this.inner().productKind();
    }

    @Override
    public Boolean supportMultipleExtensions() {
        return this.inner().supportMultipleExtensions();
    }

    @Override
    public String uri() {
        return this.inner().uri();
    }

    @Override
    public String version() {
        return this.inner().version();
    }

    @Override
    public OperatingSystem vmOsType() {
        return this.inner().vmOsType();
    }

    @Override
    public Boolean vmScaleSetEnabled() {
        return this.inner().vmScaleSetEnabled();
    }

}
