/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.labservices.v2018_10_15.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.labservices.v2018_10_15.EnvironmentSettings;
import rx.Completable;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.labservices.v2018_10_15.EnvironmentSetting;

class EnvironmentSettingsImpl extends WrapperImpl<EnvironmentSettingsInner> implements EnvironmentSettings {
    private final LabServicesManager manager;

    EnvironmentSettingsImpl(LabServicesManager manager) {
        super(manager.inner().environmentSettings());
        this.manager = manager;
    }

    public LabServicesManager manager() {
        return this.manager;
    }

    @Override
    public EnvironmentSettingImpl define(String name) {
        return wrapModel(name);
    }

    private EnvironmentSettingImpl wrapModel(EnvironmentSettingInner inner) {
        return  new EnvironmentSettingImpl(inner, manager());
    }

    private EnvironmentSettingImpl wrapModel(String name) {
        return new EnvironmentSettingImpl(name, this.manager());
    }

    @Override
    public Completable claimAnyAsync(String resourceGroupName, String labAccountName, String labName, String environmentSettingName) {
        EnvironmentSettingsInner client = this.inner();
        return client.claimAnyAsync(resourceGroupName, labAccountName, labName, environmentSettingName).toCompletable();
    }

    @Override
    public Completable publishAsync(String resourceGroupName, String labAccountName, String labName, String environmentSettingName) {
        EnvironmentSettingsInner client = this.inner();
        return client.publishAsync(resourceGroupName, labAccountName, labName, environmentSettingName).toCompletable();
    }

    @Override
    public Completable startAsync(String resourceGroupName, String labAccountName, String labName, String environmentSettingName) {
        EnvironmentSettingsInner client = this.inner();
        return client.startAsync(resourceGroupName, labAccountName, labName, environmentSettingName).toCompletable();
    }

    @Override
    public Completable stopAsync(String resourceGroupName, String labAccountName, String labName, String environmentSettingName) {
        EnvironmentSettingsInner client = this.inner();
        return client.stopAsync(resourceGroupName, labAccountName, labName, environmentSettingName).toCompletable();
    }

    @Override
    public Observable<EnvironmentSetting> listAsync(final String resourceGroupName, final String labAccountName, final String labName) {
        EnvironmentSettingsInner client = this.inner();
        return client.listAsync(resourceGroupName, labAccountName, labName)
        .flatMapIterable(new Func1<Page<EnvironmentSettingInner>, Iterable<EnvironmentSettingInner>>() {
            @Override
            public Iterable<EnvironmentSettingInner> call(Page<EnvironmentSettingInner> page) {
                return page.items();
            }
        })
        .map(new Func1<EnvironmentSettingInner, EnvironmentSetting>() {
            @Override
            public EnvironmentSetting call(EnvironmentSettingInner inner) {
                return wrapModel(inner);
            }
        });
    }

    @Override
    public Observable<EnvironmentSetting> getAsync(String resourceGroupName, String labAccountName, String labName, String environmentSettingName) {
        EnvironmentSettingsInner client = this.inner();
        return client.getAsync(resourceGroupName, labAccountName, labName, environmentSettingName)
        .map(new Func1<EnvironmentSettingInner, EnvironmentSetting>() {
            @Override
            public EnvironmentSetting call(EnvironmentSettingInner inner) {
                return wrapModel(inner);
            }
       });
    }

    @Override
    public Completable deleteAsync(String resourceGroupName, String labAccountName, String labName, String environmentSettingName) {
        EnvironmentSettingsInner client = this.inner();
        return client.deleteAsync(resourceGroupName, labAccountName, labName, environmentSettingName).toCompletable();
    }

}
