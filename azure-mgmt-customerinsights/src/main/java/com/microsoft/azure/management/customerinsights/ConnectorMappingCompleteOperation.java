/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.customerinsights;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The complete operation.
 */
public class ConnectorMappingCompleteOperation {
    /**
     * The type of completion operation. Possible values include: 'DoNothing',
     * 'DeleteFile', 'MoveFile'.
     */
    @JsonProperty(value = "completionOperationType")
    private CompletionOperationTypes completionOperationType;

    /**
     * The destination folder where files will be moved to once the import is
     * done.
     */
    @JsonProperty(value = "destinationFolder")
    private String destinationFolder;

    /**
     * Get the completionOperationType value.
     *
     * @return the completionOperationType value
     */
    public CompletionOperationTypes completionOperationType() {
        return this.completionOperationType;
    }

    /**
     * Set the completionOperationType value.
     *
     * @param completionOperationType the completionOperationType value to set
     * @return the ConnectorMappingCompleteOperation object itself.
     */
    public ConnectorMappingCompleteOperation withCompletionOperationType(CompletionOperationTypes completionOperationType) {
        this.completionOperationType = completionOperationType;
        return this;
    }

    /**
     * Get the destinationFolder value.
     *
     * @return the destinationFolder value
     */
    public String destinationFolder() {
        return this.destinationFolder;
    }

    /**
     * Set the destinationFolder value.
     *
     * @param destinationFolder the destinationFolder value to set
     * @return the ConnectorMappingCompleteOperation object itself.
     */
    public ConnectorMappingCompleteOperation withDestinationFolder(String destinationFolder) {
        this.destinationFolder = destinationFolder;
        return this;
    }

}
