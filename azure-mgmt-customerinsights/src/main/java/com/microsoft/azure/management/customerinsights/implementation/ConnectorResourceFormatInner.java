/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.customerinsights.implementation;

import com.microsoft.azure.management.customerinsights.ConnectorTypes;
import java.util.Map;
import org.joda.time.DateTime;
import com.microsoft.azure.management.customerinsights.ConnectorStates;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.management.customerinsights.ProxyResource;

/**
 * The connector resource format.
 */
@JsonFlatten
public class ConnectorResourceFormatInner extends ProxyResource {
    /**
     * ID of the connector.
     */
    @JsonProperty(value = "properties.connectorId", access = JsonProperty.Access.WRITE_ONLY)
    private Integer connectorId;

    /**
     * Name of the connector.
     */
    @JsonProperty(value = "properties.connectorName")
    private String connectorName;

    /**
     * Type of connector. Possible values include: 'None', 'CRM', 'AzureBlob',
     * 'Salesforce', 'ExchangeOnline', 'Outbound'.
     */
    @JsonProperty(value = "properties.connectorType", required = true)
    private ConnectorTypes connectorType;

    /**
     * Display name of the connector.
     */
    @JsonProperty(value = "properties.displayName")
    private String displayName;

    /**
     * Description of the connector.
     */
    @JsonProperty(value = "properties.description")
    private String description;

    /**
     * The connector properties.
     */
    @JsonProperty(value = "properties.connectorProperties", required = true)
    private Map<String, Object> connectorProperties;

    /**
     * The created time.
     */
    @JsonProperty(value = "properties.created", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime created;

    /**
     * The last monified time.
     */
    @JsonProperty(value = "properties.lastModified", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime lastModified;

    /**
     * State of connector. Possible values include: 'Creating', 'Created',
     * 'Ready', 'Expiring', 'Deleting', 'Failed'.
     */
    @JsonProperty(value = "properties.state", access = JsonProperty.Access.WRITE_ONLY)
    private ConnectorStates state;

    /**
     * The hub name.
     */
    @JsonProperty(value = "properties.tenantId", access = JsonProperty.Access.WRITE_ONLY)
    private String tenantId;

    /**
     * If this is an internal connector.
     */
    @JsonProperty(value = "properties.isInternal")
    private Boolean isInternal;

    /**
     * Get the connectorId value.
     *
     * @return the connectorId value
     */
    public Integer connectorId() {
        return this.connectorId;
    }

    /**
     * Get the connectorName value.
     *
     * @return the connectorName value
     */
    public String connectorName() {
        return this.connectorName;
    }

    /**
     * Set the connectorName value.
     *
     * @param connectorName the connectorName value to set
     * @return the ConnectorResourceFormatInner object itself.
     */
    public ConnectorResourceFormatInner withConnectorName(String connectorName) {
        this.connectorName = connectorName;
        return this;
    }

    /**
     * Get the connectorType value.
     *
     * @return the connectorType value
     */
    public ConnectorTypes connectorType() {
        return this.connectorType;
    }

    /**
     * Set the connectorType value.
     *
     * @param connectorType the connectorType value to set
     * @return the ConnectorResourceFormatInner object itself.
     */
    public ConnectorResourceFormatInner withConnectorType(ConnectorTypes connectorType) {
        this.connectorType = connectorType;
        return this;
    }

    /**
     * Get the displayName value.
     *
     * @return the displayName value
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName value.
     *
     * @param displayName the displayName value to set
     * @return the ConnectorResourceFormatInner object itself.
     */
    public ConnectorResourceFormatInner withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the description value.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description value.
     *
     * @param description the description value to set
     * @return the ConnectorResourceFormatInner object itself.
     */
    public ConnectorResourceFormatInner withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the connectorProperties value.
     *
     * @return the connectorProperties value
     */
    public Map<String, Object> connectorProperties() {
        return this.connectorProperties;
    }

    /**
     * Set the connectorProperties value.
     *
     * @param connectorProperties the connectorProperties value to set
     * @return the ConnectorResourceFormatInner object itself.
     */
    public ConnectorResourceFormatInner withConnectorProperties(Map<String, Object> connectorProperties) {
        this.connectorProperties = connectorProperties;
        return this;
    }

    /**
     * Get the created value.
     *
     * @return the created value
     */
    public DateTime created() {
        return this.created;
    }

    /**
     * Get the lastModified value.
     *
     * @return the lastModified value
     */
    public DateTime lastModified() {
        return this.lastModified;
    }

    /**
     * Get the state value.
     *
     * @return the state value
     */
    public ConnectorStates state() {
        return this.state;
    }

    /**
     * Get the tenantId value.
     *
     * @return the tenantId value
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Get the isInternal value.
     *
     * @return the isInternal value
     */
    public Boolean isInternal() {
        return this.isInternal;
    }

    /**
     * Set the isInternal value.
     *
     * @param isInternal the isInternal value to set
     * @return the ConnectorResourceFormatInner object itself.
     */
    public ConnectorResourceFormatInner withIsInternal(Boolean isInternal) {
        this.isInternal = isInternal;
        return this;
    }

}
