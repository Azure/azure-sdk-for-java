/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.datalakeanalytics.v2016_11_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.datalakeanalytics.v2016_11_01.DataLakeStoreAccounts;
import rx.Completable;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.datalakeanalytics.v2016_11_01.DataLakeStoreAccountInformation;

class DataLakeStoreAccountsImpl extends WrapperImpl<DataLakeStoreAccountsInner> implements DataLakeStoreAccounts {
    private final DataLakeAnalyticsManager manager;

    DataLakeStoreAccountsImpl(DataLakeAnalyticsManager manager) {
        super(manager.inner().dataLakeStoreAccounts());
        this.manager = manager;
    }

    public DataLakeAnalyticsManager manager() {
        return this.manager;
    }

    private DataLakeStoreAccountInformationImpl wrapModel(DataLakeStoreAccountInformationInner inner) {
        return  new DataLakeStoreAccountInformationImpl(inner, manager());
    }

    @Override
    public Observable<DataLakeStoreAccountInformation> listByAccountAsync(final String resourceGroupName, final String accountName) {
        DataLakeStoreAccountsInner client = this.inner();
        return client.listByAccountAsync(resourceGroupName, accountName)
        .flatMapIterable(new Func1<Page<DataLakeStoreAccountInformationInner>, Iterable<DataLakeStoreAccountInformationInner>>() {
            @Override
            public Iterable<DataLakeStoreAccountInformationInner> call(Page<DataLakeStoreAccountInformationInner> page) {
                return page.items();
            }
        })
        .map(new Func1<DataLakeStoreAccountInformationInner, DataLakeStoreAccountInformation>() {
            @Override
            public DataLakeStoreAccountInformation call(DataLakeStoreAccountInformationInner inner) {
                return wrapModel(inner);
            }
        });
    }

    @Override
    public Observable<DataLakeStoreAccountInformation> getAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName) {
        DataLakeStoreAccountsInner client = this.inner();
        return client.getAsync(resourceGroupName, accountName, dataLakeStoreAccountName)
        .map(new Func1<DataLakeStoreAccountInformationInner, DataLakeStoreAccountInformation>() {
            @Override
            public DataLakeStoreAccountInformation call(DataLakeStoreAccountInformationInner inner) {
                return wrapModel(inner);
            }
       });
    }

    @Override
    public Completable deleteAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName) {
        DataLakeStoreAccountsInner client = this.inner();
        return client.deleteAsync(resourceGroupName, accountName, dataLakeStoreAccountName).toCompletable();
    }

    @Override
    public Completable addAsync(String resourceGroupName, String accountName, String dataLakeStoreAccountName) {
        DataLakeStoreAccountsInner client = this.inner();
        return client.addAsync(resourceGroupName, accountName, dataLakeStoreAccountName).toCompletable();
    }

}
