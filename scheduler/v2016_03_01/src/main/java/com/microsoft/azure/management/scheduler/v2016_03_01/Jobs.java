/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.scheduler.v2016_03_01;

import com.microsoft.azure.arm.collection.SupportsCreating;
import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.scheduler.v2016_03_01.implementation.JobsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing Jobs.
 */
public interface Jobs extends SupportsCreating<JobDefinition.DefinitionStages.Blank>, HasInner<JobsInner> {

    /**
     * Lists all jobs under the specified job collection.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<JobDefinition> listByJobCollectionAsync(final String resourceGroupName, final String jobCollectionName);

    /**
     * Gets a job.
    *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<JobDefinition> getByJobCollectionAsync(String resourceGroupName, String jobCollectionName, String jobName);

    /**
     * Deletes a job.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteByJobCollectionAsync(String resourceGroupName, String jobCollectionName, String jobName);
    /**
     * Runs a job.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable runAsync(String resourceGroupName, String jobCollectionName, String jobName);

    /**
     * Lists job history.
     *
     * @param resourceGroupName The resource group name.
     * @param jobCollectionName The job collection name.
     * @param jobName The job name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<JobHistoryDefinition> listJobHistoryAsync(final String resourceGroupName, final String jobCollectionName, final String jobName);

}
