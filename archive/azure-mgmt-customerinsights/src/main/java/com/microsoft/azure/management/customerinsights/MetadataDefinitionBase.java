/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.customerinsights;

import java.util.Map;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The Metadata definition base.
 */
public class MetadataDefinitionBase {
    /**
     * The attributes for the Type.
     */
    @JsonProperty(value = "attributes")
    private Map<String, List<String>> attributes;

    /**
     * Localized descriptions for the property.
     */
    @JsonProperty(value = "description")
    private Map<String, String> description;

    /**
     * Localized display names for the property.
     */
    @JsonProperty(value = "displayName")
    private Map<String, String> displayName;

    /**
     * Any custom localized attributes for the Type.
     */
    @JsonProperty(value = "localizedAttributes")
    private Map<String, Map<String, String>> localizedAttributes;

    /**
     * Small Image associated with the Property or EntityType.
     */
    @JsonProperty(value = "smallImage")
    private String smallImage;

    /**
     * Medium Image associated with the Property or EntityType.
     */
    @JsonProperty(value = "mediumImage")
    private String mediumImage;

    /**
     * Large Image associated with the Property or EntityType.
     */
    @JsonProperty(value = "largeImage")
    private String largeImage;

    /**
     * Get the attributes value.
     *
     * @return the attributes value
     */
    public Map<String, List<String>> attributes() {
        return this.attributes;
    }

    /**
     * Set the attributes value.
     *
     * @param attributes the attributes value to set
     * @return the MetadataDefinitionBase object itself.
     */
    public MetadataDefinitionBase withAttributes(Map<String, List<String>> attributes) {
        this.attributes = attributes;
        return this;
    }

    /**
     * Get the description value.
     *
     * @return the description value
     */
    public Map<String, String> description() {
        return this.description;
    }

    /**
     * Set the description value.
     *
     * @param description the description value to set
     * @return the MetadataDefinitionBase object itself.
     */
    public MetadataDefinitionBase withDescription(Map<String, String> description) {
        this.description = description;
        return this;
    }

    /**
     * Get the displayName value.
     *
     * @return the displayName value
     */
    public Map<String, String> displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName value.
     *
     * @param displayName the displayName value to set
     * @return the MetadataDefinitionBase object itself.
     */
    public MetadataDefinitionBase withDisplayName(Map<String, String> displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the localizedAttributes value.
     *
     * @return the localizedAttributes value
     */
    public Map<String, Map<String, String>> localizedAttributes() {
        return this.localizedAttributes;
    }

    /**
     * Set the localizedAttributes value.
     *
     * @param localizedAttributes the localizedAttributes value to set
     * @return the MetadataDefinitionBase object itself.
     */
    public MetadataDefinitionBase withLocalizedAttributes(Map<String, Map<String, String>> localizedAttributes) {
        this.localizedAttributes = localizedAttributes;
        return this;
    }

    /**
     * Get the smallImage value.
     *
     * @return the smallImage value
     */
    public String smallImage() {
        return this.smallImage;
    }

    /**
     * Set the smallImage value.
     *
     * @param smallImage the smallImage value to set
     * @return the MetadataDefinitionBase object itself.
     */
    public MetadataDefinitionBase withSmallImage(String smallImage) {
        this.smallImage = smallImage;
        return this;
    }

    /**
     * Get the mediumImage value.
     *
     * @return the mediumImage value
     */
    public String mediumImage() {
        return this.mediumImage;
    }

    /**
     * Set the mediumImage value.
     *
     * @param mediumImage the mediumImage value to set
     * @return the MetadataDefinitionBase object itself.
     */
    public MetadataDefinitionBase withMediumImage(String mediumImage) {
        this.mediumImage = mediumImage;
        return this;
    }

    /**
     * Get the largeImage value.
     *
     * @return the largeImage value
     */
    public String largeImage() {
        return this.largeImage;
    }

    /**
     * Set the largeImage value.
     *
     * @param largeImage the largeImage value to set
     * @return the MetadataDefinitionBase object itself.
     */
    public MetadataDefinitionBase withLargeImage(String largeImage) {
        this.largeImage = largeImage;
        return this;
    }

}
