/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.customerinsights;

import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Defines values for ProvisioningStates.
 */
public final class ProvisioningStates {
    /** Static value Provisioning for ProvisioningStates. */
    public static final ProvisioningStates PROVISIONING = new ProvisioningStates("Provisioning");

    /** Static value Succeeded for ProvisioningStates. */
    public static final ProvisioningStates SUCCEEDED = new ProvisioningStates("Succeeded");

    /** Static value Expiring for ProvisioningStates. */
    public static final ProvisioningStates EXPIRING = new ProvisioningStates("Expiring");

    /** Static value Deleting for ProvisioningStates. */
    public static final ProvisioningStates DELETING = new ProvisioningStates("Deleting");

    /** Static value HumanIntervention for ProvisioningStates. */
    public static final ProvisioningStates HUMAN_INTERVENTION = new ProvisioningStates("HumanIntervention");

    /** Static value Failed for ProvisioningStates. */
    public static final ProvisioningStates FAILED = new ProvisioningStates("Failed");

    private String value;

    /**
     * Creates a custom value for ProvisioningStates.
     * @param value the custom value
     */
    public ProvisioningStates(String value) {
        this.value = value;
    }

    @JsonValue
    @Override
    public String toString() {
        return value;
    }

    @Override
    public int hashCode() {
        return value.hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (!(obj instanceof ProvisioningStates)) {
            return false;
        }
        if (obj == this) {
            return true;
        }
        ProvisioningStates rhs = (ProvisioningStates) obj;
        if (value == null) {
            return rhs.value == null;
        } else {
            return value.equals(rhs.value);
        }
    }
}
