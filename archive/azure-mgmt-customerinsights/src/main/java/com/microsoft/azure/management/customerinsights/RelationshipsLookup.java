/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.customerinsights;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The definition of suggested relationship for the type.
 */
public class RelationshipsLookup {
    /**
     * The relationship profile.
     */
    @JsonProperty(value = "profileName", access = JsonProperty.Access.WRITE_ONLY)
    private String profileName;

    /**
     * The property references for the profile type.
     */
    @JsonProperty(value = "profilePropertyReferences", access = JsonProperty.Access.WRITE_ONLY)
    private List<ParticipantProfilePropertyReference> profilePropertyReferences;

    /**
     * The related profile.
     */
    @JsonProperty(value = "relatedProfileName", access = JsonProperty.Access.WRITE_ONLY)
    private String relatedProfileName;

    /**
     * The property references for the related profile type.
     */
    @JsonProperty(value = "relatedProfilePropertyReferences", access = JsonProperty.Access.WRITE_ONLY)
    private List<ParticipantProfilePropertyReference> relatedProfilePropertyReferences;

    /**
     * The name of existing Relationship.
     */
    @JsonProperty(value = "existingRelationshipName", access = JsonProperty.Access.WRITE_ONLY)
    private String existingRelationshipName;

    /**
     * Get the profileName value.
     *
     * @return the profileName value
     */
    public String profileName() {
        return this.profileName;
    }

    /**
     * Get the profilePropertyReferences value.
     *
     * @return the profilePropertyReferences value
     */
    public List<ParticipantProfilePropertyReference> profilePropertyReferences() {
        return this.profilePropertyReferences;
    }

    /**
     * Get the relatedProfileName value.
     *
     * @return the relatedProfileName value
     */
    public String relatedProfileName() {
        return this.relatedProfileName;
    }

    /**
     * Get the relatedProfilePropertyReferences value.
     *
     * @return the relatedProfilePropertyReferences value
     */
    public List<ParticipantProfilePropertyReference> relatedProfilePropertyReferences() {
        return this.relatedProfilePropertyReferences;
    }

    /**
     * Get the existingRelationshipName value.
     *
     * @return the existingRelationshipName value
     */
    public String existingRelationshipName() {
        return this.existingRelationshipName;
    }

}
