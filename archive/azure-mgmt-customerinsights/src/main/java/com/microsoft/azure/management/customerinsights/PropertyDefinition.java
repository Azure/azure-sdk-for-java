/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.customerinsights;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Property definition.
 */
public class PropertyDefinition {
    /**
     * Array value separator for properties with isArray set.
     */
    @JsonProperty(value = "arrayValueSeparator")
    private String arrayValueSeparator;

    /**
     * Describes valid values for an enum property.
     */
    @JsonProperty(value = "enumValidValues")
    private List<ProfileEnumValidValuesFormat> enumValidValues;

    /**
     * Name of the property.
     */
    @JsonProperty(value = "fieldName", required = true)
    private String fieldName;

    /**
     * Type of the property.
     */
    @JsonProperty(value = "fieldType", required = true)
    private String fieldType;

    /**
     * Indicates if the property is actually an array of the fieldType above on
     * the data api.
     */
    @JsonProperty(value = "isArray")
    private Boolean isArray;

    /**
     * Indicates if the property is an enum.
     */
    @JsonProperty(value = "isEnum")
    private Boolean isEnum;

    /**
     * Indicates if the property is an flag enum.
     */
    @JsonProperty(value = "isFlagEnum")
    private Boolean isFlagEnum;

    /**
     * Whether the property is an Image.
     */
    @JsonProperty(value = "isImage")
    private Boolean isImage;

    /**
     * Whether the property is a localized string.
     */
    @JsonProperty(value = "isLocalizedString")
    private Boolean isLocalizedString;

    /**
     * Whether the property is a name or a part of name.
     */
    @JsonProperty(value = "isName")
    private Boolean isName;

    /**
     * Whether property value is required on instances, IsRequired field only
     * for Intercation. Profile Instance will not check for required field.
     */
    @JsonProperty(value = "isRequired")
    private Boolean isRequired;

    /**
     * The ID associated with the property.
     */
    @JsonProperty(value = "propertyId")
    private String propertyId;

    /**
     * URL encoded schema.org item prop link for the property.
     */
    @JsonProperty(value = "schemaItemPropLink")
    private String schemaItemPropLink;

    /**
     * Max length of string. Used only if type is string.
     */
    @JsonProperty(value = "maxLength")
    private Integer maxLength;

    /**
     * Whether property is available in graph or not.
     */
    @JsonProperty(value = "isAvailableInGraph")
    private Boolean isAvailableInGraph;

    /**
     * This is specific to interactions modeled as activities. Data sources are
     * used to determine where data is stored and also in precedence rules.
     */
    @JsonProperty(value = "dataSourcePrecedenceRules", access = JsonProperty.Access.WRITE_ONLY)
    private List<DataSourcePrecedence> dataSourcePrecedenceRules;

    /**
     * Get the arrayValueSeparator value.
     *
     * @return the arrayValueSeparator value
     */
    public String arrayValueSeparator() {
        return this.arrayValueSeparator;
    }

    /**
     * Set the arrayValueSeparator value.
     *
     * @param arrayValueSeparator the arrayValueSeparator value to set
     * @return the PropertyDefinition object itself.
     */
    public PropertyDefinition withArrayValueSeparator(String arrayValueSeparator) {
        this.arrayValueSeparator = arrayValueSeparator;
        return this;
    }

    /**
     * Get the enumValidValues value.
     *
     * @return the enumValidValues value
     */
    public List<ProfileEnumValidValuesFormat> enumValidValues() {
        return this.enumValidValues;
    }

    /**
     * Set the enumValidValues value.
     *
     * @param enumValidValues the enumValidValues value to set
     * @return the PropertyDefinition object itself.
     */
    public PropertyDefinition withEnumValidValues(List<ProfileEnumValidValuesFormat> enumValidValues) {
        this.enumValidValues = enumValidValues;
        return this;
    }

    /**
     * Get the fieldName value.
     *
     * @return the fieldName value
     */
    public String fieldName() {
        return this.fieldName;
    }

    /**
     * Set the fieldName value.
     *
     * @param fieldName the fieldName value to set
     * @return the PropertyDefinition object itself.
     */
    public PropertyDefinition withFieldName(String fieldName) {
        this.fieldName = fieldName;
        return this;
    }

    /**
     * Get the fieldType value.
     *
     * @return the fieldType value
     */
    public String fieldType() {
        return this.fieldType;
    }

    /**
     * Set the fieldType value.
     *
     * @param fieldType the fieldType value to set
     * @return the PropertyDefinition object itself.
     */
    public PropertyDefinition withFieldType(String fieldType) {
        this.fieldType = fieldType;
        return this;
    }

    /**
     * Get the isArray value.
     *
     * @return the isArray value
     */
    public Boolean isArray() {
        return this.isArray;
    }

    /**
     * Set the isArray value.
     *
     * @param isArray the isArray value to set
     * @return the PropertyDefinition object itself.
     */
    public PropertyDefinition withIsArray(Boolean isArray) {
        this.isArray = isArray;
        return this;
    }

    /**
     * Get the isEnum value.
     *
     * @return the isEnum value
     */
    public Boolean isEnum() {
        return this.isEnum;
    }

    /**
     * Set the isEnum value.
     *
     * @param isEnum the isEnum value to set
     * @return the PropertyDefinition object itself.
     */
    public PropertyDefinition withIsEnum(Boolean isEnum) {
        this.isEnum = isEnum;
        return this;
    }

    /**
     * Get the isFlagEnum value.
     *
     * @return the isFlagEnum value
     */
    public Boolean isFlagEnum() {
        return this.isFlagEnum;
    }

    /**
     * Set the isFlagEnum value.
     *
     * @param isFlagEnum the isFlagEnum value to set
     * @return the PropertyDefinition object itself.
     */
    public PropertyDefinition withIsFlagEnum(Boolean isFlagEnum) {
        this.isFlagEnum = isFlagEnum;
        return this;
    }

    /**
     * Get the isImage value.
     *
     * @return the isImage value
     */
    public Boolean isImage() {
        return this.isImage;
    }

    /**
     * Set the isImage value.
     *
     * @param isImage the isImage value to set
     * @return the PropertyDefinition object itself.
     */
    public PropertyDefinition withIsImage(Boolean isImage) {
        this.isImage = isImage;
        return this;
    }

    /**
     * Get the isLocalizedString value.
     *
     * @return the isLocalizedString value
     */
    public Boolean isLocalizedString() {
        return this.isLocalizedString;
    }

    /**
     * Set the isLocalizedString value.
     *
     * @param isLocalizedString the isLocalizedString value to set
     * @return the PropertyDefinition object itself.
     */
    public PropertyDefinition withIsLocalizedString(Boolean isLocalizedString) {
        this.isLocalizedString = isLocalizedString;
        return this;
    }

    /**
     * Get the isName value.
     *
     * @return the isName value
     */
    public Boolean isName() {
        return this.isName;
    }

    /**
     * Set the isName value.
     *
     * @param isName the isName value to set
     * @return the PropertyDefinition object itself.
     */
    public PropertyDefinition withIsName(Boolean isName) {
        this.isName = isName;
        return this;
    }

    /**
     * Get the isRequired value.
     *
     * @return the isRequired value
     */
    public Boolean isRequired() {
        return this.isRequired;
    }

    /**
     * Set the isRequired value.
     *
     * @param isRequired the isRequired value to set
     * @return the PropertyDefinition object itself.
     */
    public PropertyDefinition withIsRequired(Boolean isRequired) {
        this.isRequired = isRequired;
        return this;
    }

    /**
     * Get the propertyId value.
     *
     * @return the propertyId value
     */
    public String propertyId() {
        return this.propertyId;
    }

    /**
     * Set the propertyId value.
     *
     * @param propertyId the propertyId value to set
     * @return the PropertyDefinition object itself.
     */
    public PropertyDefinition withPropertyId(String propertyId) {
        this.propertyId = propertyId;
        return this;
    }

    /**
     * Get the schemaItemPropLink value.
     *
     * @return the schemaItemPropLink value
     */
    public String schemaItemPropLink() {
        return this.schemaItemPropLink;
    }

    /**
     * Set the schemaItemPropLink value.
     *
     * @param schemaItemPropLink the schemaItemPropLink value to set
     * @return the PropertyDefinition object itself.
     */
    public PropertyDefinition withSchemaItemPropLink(String schemaItemPropLink) {
        this.schemaItemPropLink = schemaItemPropLink;
        return this;
    }

    /**
     * Get the maxLength value.
     *
     * @return the maxLength value
     */
    public Integer maxLength() {
        return this.maxLength;
    }

    /**
     * Set the maxLength value.
     *
     * @param maxLength the maxLength value to set
     * @return the PropertyDefinition object itself.
     */
    public PropertyDefinition withMaxLength(Integer maxLength) {
        this.maxLength = maxLength;
        return this;
    }

    /**
     * Get the isAvailableInGraph value.
     *
     * @return the isAvailableInGraph value
     */
    public Boolean isAvailableInGraph() {
        return this.isAvailableInGraph;
    }

    /**
     * Set the isAvailableInGraph value.
     *
     * @param isAvailableInGraph the isAvailableInGraph value to set
     * @return the PropertyDefinition object itself.
     */
    public PropertyDefinition withIsAvailableInGraph(Boolean isAvailableInGraph) {
        this.isAvailableInGraph = isAvailableInGraph;
        return this;
    }

    /**
     * Get the dataSourcePrecedenceRules value.
     *
     * @return the dataSourcePrecedenceRules value
     */
    public List<DataSourcePrecedence> dataSourcePrecedenceRules() {
        return this.dataSourcePrecedenceRules;
    }

}
