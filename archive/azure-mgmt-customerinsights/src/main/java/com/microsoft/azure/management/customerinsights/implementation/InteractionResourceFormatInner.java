/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.customerinsights.implementation;

import java.util.Map;
import java.util.List;
import com.microsoft.azure.management.customerinsights.EntityTypes;
import com.microsoft.azure.management.customerinsights.PropertyDefinition;
import org.joda.time.DateTime;
import com.microsoft.azure.management.customerinsights.ProvisioningStates;
import com.microsoft.azure.management.customerinsights.Participant;
import com.microsoft.azure.management.customerinsights.DataSourcePrecedence;
import com.microsoft.azure.management.customerinsights.DataSourceType;
import com.microsoft.azure.management.customerinsights.Status;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.management.customerinsights.ProxyResource;

/**
 * The interaction resource format.
 */
@JsonFlatten
public class InteractionResourceFormatInner extends ProxyResource {
    /**
     * The attributes for the Type.
     */
    @JsonProperty(value = "properties.attributes")
    private Map<String, List<String>> attributes;

    /**
     * Localized descriptions for the property.
     */
    @JsonProperty(value = "properties.description")
    private Map<String, String> description;

    /**
     * Localized display names for the property.
     */
    @JsonProperty(value = "properties.displayName")
    private Map<String, String> displayName;

    /**
     * Any custom localized attributes for the Type.
     */
    @JsonProperty(value = "properties.localizedAttributes")
    private Map<String, Map<String, String>> localizedAttributes;

    /**
     * Small Image associated with the Property or EntityType.
     */
    @JsonProperty(value = "properties.smallImage")
    private String smallImage;

    /**
     * Medium Image associated with the Property or EntityType.
     */
    @JsonProperty(value = "properties.mediumImage")
    private String mediumImage;

    /**
     * Large Image associated with the Property or EntityType.
     */
    @JsonProperty(value = "properties.largeImage")
    private String largeImage;

    /**
     * The api entity set name. This becomes the odata entity set name for the
     * entity Type being refered in this object.
     */
    @JsonProperty(value = "properties.apiEntitySetName")
    private String apiEntitySetName;

    /**
     * Type of entity. Possible values include: 'None', 'Profile',
     * 'Interaction', 'Relationship'.
     */
    @JsonProperty(value = "properties.entityType")
    private EntityTypes entityType;

    /**
     * The properties of the Profile.
     */
    @JsonProperty(value = "properties.fields")
    private List<PropertyDefinition> fields;

    /**
     * The instance count.
     */
    @JsonProperty(value = "properties.instancesCount")
    private Integer instancesCount;

    /**
     * The last changed time for the type definition.
     */
    @JsonProperty(value = "properties.lastChangedUtc", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime lastChangedUtc;

    /**
     * Provisioning state. Possible values include: 'Provisioning',
     * 'Succeeded', 'Expiring', 'Deleting', 'HumanIntervention', 'Failed'.
     */
    @JsonProperty(value = "properties.provisioningState", access = JsonProperty.Access.WRITE_ONLY)
    private ProvisioningStates provisioningState;

    /**
     * The schema org link. This helps ACI identify and suggest semantic
     * models.
     */
    @JsonProperty(value = "properties.schemaItemTypeLink")
    private String schemaItemTypeLink;

    /**
     * The hub name.
     */
    @JsonProperty(value = "properties.tenantId", access = JsonProperty.Access.WRITE_ONLY)
    private String tenantId;

    /**
     * The timestamp property name. Represents the time when the interaction or
     * profile update happened.
     */
    @JsonProperty(value = "properties.timestampFieldName")
    private String timestampFieldName;

    /**
     * The name of the entity.
     */
    @JsonProperty(value = "properties.typeName")
    private String typeName;

    /**
     * The id property names. Properties which uniquely identify an interaction
     * instance.
     */
    @JsonProperty(value = "properties.idPropertyNames")
    private List<String> idPropertyNames;

    /**
     * Profiles that participated in the interaction.
     */
    @JsonProperty(value = "properties.participantProfiles")
    private List<Participant> participantProfiles;

    /**
     * The primary participant property name for an interaction ,This is used
     * to logically represent the agent of the interaction, Specify the
     * participant name here from ParticipantName.
     */
    @JsonProperty(value = "properties.primaryParticipantProfilePropertyName")
    private String primaryParticipantProfilePropertyName;

    /**
     * This is specific to interactions modeled as activities. Data sources are
     * used to determine where data is stored and also in precedence rules.
     */
    @JsonProperty(value = "properties.dataSourcePrecedenceRules", access = JsonProperty.Access.WRITE_ONLY)
    private List<DataSourcePrecedence> dataSourcePrecedenceRules;

    /**
     * The data source name.
     */
    @JsonProperty(value = "properties.defaultDataSource.name", access = JsonProperty.Access.WRITE_ONLY)
    private String interactionResourceFormatName;

    /**
     * The data source type. Possible values include: 'Connector',
     * 'LinkInteraction', 'SystemDefault'.
     */
    @JsonProperty(value = "properties.defaultDataSource.dataSourceType", access = JsonProperty.Access.WRITE_ONLY)
    private DataSourceType dataSourceType;

    /**
     * The data source status. Possible values include: 'None', 'Active',
     * 'Deleted'.
     */
    @JsonProperty(value = "properties.defaultDataSource.status", access = JsonProperty.Access.WRITE_ONLY)
    private Status status;

    /**
     * The data source ID.
     */
    @JsonProperty(value = "properties.defaultDataSource.id", access = JsonProperty.Access.WRITE_ONLY)
    private Integer interactionResourceFormatId;

    /**
     * The data source reference id.
     */
    @JsonProperty(value = "properties.defaultDataSource.dataSourceReferenceId", access = JsonProperty.Access.WRITE_ONLY)
    private String dataSourceReferenceId;

    /**
     * An interaction can be tagged as an activity only during create. This
     * enables the interaction to be editable and can enable merging of
     * properties from multiple data sources based on precedence, which is
     * defined at a link level.
     */
    @JsonProperty(value = "properties.isActivity")
    private Boolean isActivity;

    /**
     * Get the attributes value.
     *
     * @return the attributes value
     */
    public Map<String, List<String>> attributes() {
        return this.attributes;
    }

    /**
     * Set the attributes value.
     *
     * @param attributes the attributes value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withAttributes(Map<String, List<String>> attributes) {
        this.attributes = attributes;
        return this;
    }

    /**
     * Get the description value.
     *
     * @return the description value
     */
    public Map<String, String> description() {
        return this.description;
    }

    /**
     * Set the description value.
     *
     * @param description the description value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withDescription(Map<String, String> description) {
        this.description = description;
        return this;
    }

    /**
     * Get the displayName value.
     *
     * @return the displayName value
     */
    public Map<String, String> displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName value.
     *
     * @param displayName the displayName value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withDisplayName(Map<String, String> displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the localizedAttributes value.
     *
     * @return the localizedAttributes value
     */
    public Map<String, Map<String, String>> localizedAttributes() {
        return this.localizedAttributes;
    }

    /**
     * Set the localizedAttributes value.
     *
     * @param localizedAttributes the localizedAttributes value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withLocalizedAttributes(Map<String, Map<String, String>> localizedAttributes) {
        this.localizedAttributes = localizedAttributes;
        return this;
    }

    /**
     * Get the smallImage value.
     *
     * @return the smallImage value
     */
    public String smallImage() {
        return this.smallImage;
    }

    /**
     * Set the smallImage value.
     *
     * @param smallImage the smallImage value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withSmallImage(String smallImage) {
        this.smallImage = smallImage;
        return this;
    }

    /**
     * Get the mediumImage value.
     *
     * @return the mediumImage value
     */
    public String mediumImage() {
        return this.mediumImage;
    }

    /**
     * Set the mediumImage value.
     *
     * @param mediumImage the mediumImage value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withMediumImage(String mediumImage) {
        this.mediumImage = mediumImage;
        return this;
    }

    /**
     * Get the largeImage value.
     *
     * @return the largeImage value
     */
    public String largeImage() {
        return this.largeImage;
    }

    /**
     * Set the largeImage value.
     *
     * @param largeImage the largeImage value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withLargeImage(String largeImage) {
        this.largeImage = largeImage;
        return this;
    }

    /**
     * Get the apiEntitySetName value.
     *
     * @return the apiEntitySetName value
     */
    public String apiEntitySetName() {
        return this.apiEntitySetName;
    }

    /**
     * Set the apiEntitySetName value.
     *
     * @param apiEntitySetName the apiEntitySetName value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withApiEntitySetName(String apiEntitySetName) {
        this.apiEntitySetName = apiEntitySetName;
        return this;
    }

    /**
     * Get the entityType value.
     *
     * @return the entityType value
     */
    public EntityTypes entityType() {
        return this.entityType;
    }

    /**
     * Set the entityType value.
     *
     * @param entityType the entityType value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withEntityType(EntityTypes entityType) {
        this.entityType = entityType;
        return this;
    }

    /**
     * Get the fields value.
     *
     * @return the fields value
     */
    public List<PropertyDefinition> fields() {
        return this.fields;
    }

    /**
     * Set the fields value.
     *
     * @param fields the fields value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withFields(List<PropertyDefinition> fields) {
        this.fields = fields;
        return this;
    }

    /**
     * Get the instancesCount value.
     *
     * @return the instancesCount value
     */
    public Integer instancesCount() {
        return this.instancesCount;
    }

    /**
     * Set the instancesCount value.
     *
     * @param instancesCount the instancesCount value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withInstancesCount(Integer instancesCount) {
        this.instancesCount = instancesCount;
        return this;
    }

    /**
     * Get the lastChangedUtc value.
     *
     * @return the lastChangedUtc value
     */
    public DateTime lastChangedUtc() {
        return this.lastChangedUtc;
    }

    /**
     * Get the provisioningState value.
     *
     * @return the provisioningState value
     */
    public ProvisioningStates provisioningState() {
        return this.provisioningState;
    }

    /**
     * Get the schemaItemTypeLink value.
     *
     * @return the schemaItemTypeLink value
     */
    public String schemaItemTypeLink() {
        return this.schemaItemTypeLink;
    }

    /**
     * Set the schemaItemTypeLink value.
     *
     * @param schemaItemTypeLink the schemaItemTypeLink value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withSchemaItemTypeLink(String schemaItemTypeLink) {
        this.schemaItemTypeLink = schemaItemTypeLink;
        return this;
    }

    /**
     * Get the tenantId value.
     *
     * @return the tenantId value
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Get the timestampFieldName value.
     *
     * @return the timestampFieldName value
     */
    public String timestampFieldName() {
        return this.timestampFieldName;
    }

    /**
     * Set the timestampFieldName value.
     *
     * @param timestampFieldName the timestampFieldName value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withTimestampFieldName(String timestampFieldName) {
        this.timestampFieldName = timestampFieldName;
        return this;
    }

    /**
     * Get the typeName value.
     *
     * @return the typeName value
     */
    public String typeName() {
        return this.typeName;
    }

    /**
     * Set the typeName value.
     *
     * @param typeName the typeName value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withTypeName(String typeName) {
        this.typeName = typeName;
        return this;
    }

    /**
     * Get the idPropertyNames value.
     *
     * @return the idPropertyNames value
     */
    public List<String> idPropertyNames() {
        return this.idPropertyNames;
    }

    /**
     * Set the idPropertyNames value.
     *
     * @param idPropertyNames the idPropertyNames value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withIdPropertyNames(List<String> idPropertyNames) {
        this.idPropertyNames = idPropertyNames;
        return this;
    }

    /**
     * Get the participantProfiles value.
     *
     * @return the participantProfiles value
     */
    public List<Participant> participantProfiles() {
        return this.participantProfiles;
    }

    /**
     * Set the participantProfiles value.
     *
     * @param participantProfiles the participantProfiles value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withParticipantProfiles(List<Participant> participantProfiles) {
        this.participantProfiles = participantProfiles;
        return this;
    }

    /**
     * Get the primaryParticipantProfilePropertyName value.
     *
     * @return the primaryParticipantProfilePropertyName value
     */
    public String primaryParticipantProfilePropertyName() {
        return this.primaryParticipantProfilePropertyName;
    }

    /**
     * Set the primaryParticipantProfilePropertyName value.
     *
     * @param primaryParticipantProfilePropertyName the primaryParticipantProfilePropertyName value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withPrimaryParticipantProfilePropertyName(String primaryParticipantProfilePropertyName) {
        this.primaryParticipantProfilePropertyName = primaryParticipantProfilePropertyName;
        return this;
    }

    /**
     * Get the dataSourcePrecedenceRules value.
     *
     * @return the dataSourcePrecedenceRules value
     */
    public List<DataSourcePrecedence> dataSourcePrecedenceRules() {
        return this.dataSourcePrecedenceRules;
    }

    /**
     * Get the interactionResourceFormatName value.
     *
     * @return the interactionResourceFormatName value
     */
    public String interactionResourceFormatName() {
        return this.interactionResourceFormatName;
    }

    /**
     * Get the dataSourceType value.
     *
     * @return the dataSourceType value
     */
    public DataSourceType dataSourceType() {
        return this.dataSourceType;
    }

    /**
     * Get the status value.
     *
     * @return the status value
     */
    public Status status() {
        return this.status;
    }

    /**
     * Get the interactionResourceFormatId value.
     *
     * @return the interactionResourceFormatId value
     */
    public Integer interactionResourceFormatId() {
        return this.interactionResourceFormatId;
    }

    /**
     * Get the dataSourceReferenceId value.
     *
     * @return the dataSourceReferenceId value
     */
    public String dataSourceReferenceId() {
        return this.dataSourceReferenceId;
    }

    /**
     * Get the isActivity value.
     *
     * @return the isActivity value
     */
    public Boolean isActivity() {
        return this.isActivity;
    }

    /**
     * Set the isActivity value.
     *
     * @param isActivity the isActivity value to set
     * @return the InteractionResourceFormatInner object itself.
     */
    public InteractionResourceFormatInner withIsActivity(Boolean isActivity) {
        this.isActivity = isActivity;
        return this;
    }

}
