/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.devtestlab.implementation;

import com.microsoft.azure.management.devtestlab.StorageType;
import com.microsoft.azure.management.devtestlab.PremiumDataDisk;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.Resource;

/**
 * A lab.
 */
@JsonFlatten
public class LabFragmentInner extends Resource {
    /**
     * Type of storage used by the lab. It can be either Premium or Standard.
     * Default is Premium. Possible values include: 'Standard', 'Premium'.
     */
    @JsonProperty(value = "properties.labStorageType")
    private StorageType labStorageType;

    /**
     * The setting to enable usage of premium data disks.
     * When its value is 'Enabled', creation of standard or premium data disks
     * is allowed.
     * When its value is 'Disabled', only creation of standard data disks is
     * allowed. Possible values include: 'Disabled', 'Enabled'.
     */
    @JsonProperty(value = "properties.premiumDataDisks")
    private PremiumDataDisk premiumDataDisks;

    /**
     * The provisioning status of the resource.
     */
    @JsonProperty(value = "properties.provisioningState")
    private String provisioningState;

    /**
     * The unique immutable identifier of a resource (Guid).
     */
    @JsonProperty(value = "properties.uniqueIdentifier")
    private String uniqueIdentifier;

    /**
     * Get the labStorageType value.
     *
     * @return the labStorageType value
     */
    public StorageType labStorageType() {
        return this.labStorageType;
    }

    /**
     * Set the labStorageType value.
     *
     * @param labStorageType the labStorageType value to set
     * @return the LabFragmentInner object itself.
     */
    public LabFragmentInner withLabStorageType(StorageType labStorageType) {
        this.labStorageType = labStorageType;
        return this;
    }

    /**
     * Get the premiumDataDisks value.
     *
     * @return the premiumDataDisks value
     */
    public PremiumDataDisk premiumDataDisks() {
        return this.premiumDataDisks;
    }

    /**
     * Set the premiumDataDisks value.
     *
     * @param premiumDataDisks the premiumDataDisks value to set
     * @return the LabFragmentInner object itself.
     */
    public LabFragmentInner withPremiumDataDisks(PremiumDataDisk premiumDataDisks) {
        this.premiumDataDisks = premiumDataDisks;
        return this;
    }

    /**
     * Get the provisioningState value.
     *
     * @return the provisioningState value
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState value.
     *
     * @param provisioningState the provisioningState value to set
     * @return the LabFragmentInner object itself.
     */
    public LabFragmentInner withProvisioningState(String provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the uniqueIdentifier value.
     *
     * @return the uniqueIdentifier value
     */
    public String uniqueIdentifier() {
        return this.uniqueIdentifier;
    }

    /**
     * Set the uniqueIdentifier value.
     *
     * @param uniqueIdentifier the uniqueIdentifier value to set
     * @return the LabFragmentInner object itself.
     */
    public LabFragmentInner withUniqueIdentifier(String uniqueIdentifier) {
        this.uniqueIdentifier = uniqueIdentifier;
        return this;
    }

}
