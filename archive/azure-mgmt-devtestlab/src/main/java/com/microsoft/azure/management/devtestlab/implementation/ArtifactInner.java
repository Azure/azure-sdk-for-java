/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.devtestlab.implementation;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.Resource;

/**
 * An artifact.
 */
@JsonFlatten
public class ArtifactInner extends Resource {
    /**
     * The artifact's title.
     */
    @JsonProperty(value = "properties.title", access = JsonProperty.Access.WRITE_ONLY)
    private String title;

    /**
     * The artifact's description.
     */
    @JsonProperty(value = "properties.description", access = JsonProperty.Access.WRITE_ONLY)
    private String description;

    /**
     * The artifact's publisher.
     */
    @JsonProperty(value = "properties.publisher", access = JsonProperty.Access.WRITE_ONLY)
    private String publisher;

    /**
     * The file path to the artifact.
     */
    @JsonProperty(value = "properties.filePath", access = JsonProperty.Access.WRITE_ONLY)
    private String filePath;

    /**
     * The URI to the artifact icon.
     */
    @JsonProperty(value = "properties.icon", access = JsonProperty.Access.WRITE_ONLY)
    private String icon;

    /**
     * The artifact's target OS.
     */
    @JsonProperty(value = "properties.targetOsType", access = JsonProperty.Access.WRITE_ONLY)
    private String targetOsType;

    /**
     * The artifact's parameters.
     */
    @JsonProperty(value = "properties.parameters", access = JsonProperty.Access.WRITE_ONLY)
    private Object parameters;

    /**
     * The artifact's creation date.
     */
    @JsonProperty(value = "properties.createdDate", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime createdDate;

    /**
     * Get the title value.
     *
     * @return the title value
     */
    public String title() {
        return this.title;
    }

    /**
     * Get the description value.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Get the publisher value.
     *
     * @return the publisher value
     */
    public String publisher() {
        return this.publisher;
    }

    /**
     * Get the filePath value.
     *
     * @return the filePath value
     */
    public String filePath() {
        return this.filePath;
    }

    /**
     * Get the icon value.
     *
     * @return the icon value
     */
    public String icon() {
        return this.icon;
    }

    /**
     * Get the targetOsType value.
     *
     * @return the targetOsType value
     */
    public String targetOsType() {
        return this.targetOsType;
    }

    /**
     * Get the parameters value.
     *
     * @return the parameters value
     */
    public Object parameters() {
        return this.parameters;
    }

    /**
     * Get the createdDate value.
     *
     * @return the createdDate value
     */
    public DateTime createdDate() {
        return this.createdDate;
    }

}
