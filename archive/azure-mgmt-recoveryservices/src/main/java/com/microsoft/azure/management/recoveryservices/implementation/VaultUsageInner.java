/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.recoveryservices.implementation;

import com.microsoft.azure.management.recoveryservices.UsagesUnit;
import org.joda.time.DateTime;
import com.microsoft.azure.management.recoveryservices.NameInfo;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Usages of a vault.
 */
public class VaultUsageInner {
    /**
     * Unit of the usage. Possible values include: 'Count', 'Bytes', 'Seconds',
     * 'Percent', 'CountPerSecond', 'BytesPerSecond'.
     */
    @JsonProperty(value = "unit")
    private UsagesUnit unit;

    /**
     * Quota period of usage.
     */
    @JsonProperty(value = "quotaPeriod")
    private String quotaPeriod;

    /**
     * Next reset time of usage.
     */
    @JsonProperty(value = "nextResetTime")
    private DateTime nextResetTime;

    /**
     * Current value of usage.
     */
    @JsonProperty(value = "currentValue")
    private Long currentValue;

    /**
     * Limit of usage.
     */
    @JsonProperty(value = "limit")
    private Long limit;

    /**
     * Name of usage.
     */
    @JsonProperty(value = "name")
    private NameInfo name;

    /**
     * Get the unit value.
     *
     * @return the unit value
     */
    public UsagesUnit unit() {
        return this.unit;
    }

    /**
     * Set the unit value.
     *
     * @param unit the unit value to set
     * @return the VaultUsageInner object itself.
     */
    public VaultUsageInner withUnit(UsagesUnit unit) {
        this.unit = unit;
        return this;
    }

    /**
     * Get the quotaPeriod value.
     *
     * @return the quotaPeriod value
     */
    public String quotaPeriod() {
        return this.quotaPeriod;
    }

    /**
     * Set the quotaPeriod value.
     *
     * @param quotaPeriod the quotaPeriod value to set
     * @return the VaultUsageInner object itself.
     */
    public VaultUsageInner withQuotaPeriod(String quotaPeriod) {
        this.quotaPeriod = quotaPeriod;
        return this;
    }

    /**
     * Get the nextResetTime value.
     *
     * @return the nextResetTime value
     */
    public DateTime nextResetTime() {
        return this.nextResetTime;
    }

    /**
     * Set the nextResetTime value.
     *
     * @param nextResetTime the nextResetTime value to set
     * @return the VaultUsageInner object itself.
     */
    public VaultUsageInner withNextResetTime(DateTime nextResetTime) {
        this.nextResetTime = nextResetTime;
        return this;
    }

    /**
     * Get the currentValue value.
     *
     * @return the currentValue value
     */
    public Long currentValue() {
        return this.currentValue;
    }

    /**
     * Set the currentValue value.
     *
     * @param currentValue the currentValue value to set
     * @return the VaultUsageInner object itself.
     */
    public VaultUsageInner withCurrentValue(Long currentValue) {
        this.currentValue = currentValue;
        return this;
    }

    /**
     * Get the limit value.
     *
     * @return the limit value
     */
    public Long limit() {
        return this.limit;
    }

    /**
     * Set the limit value.
     *
     * @param limit the limit value to set
     * @return the VaultUsageInner object itself.
     */
    public VaultUsageInner withLimit(Long limit) {
        this.limit = limit;
        return this;
    }

    /**
     * Get the name value.
     *
     * @return the name value
     */
    public NameInfo name() {
        return this.name;
    }

    /**
     * Set the name value.
     *
     * @param name the name value to set
     * @return the VaultUsageInner object itself.
     */
    public VaultUsageInner withName(NameInfo name) {
        this.name = name;
        return this;
    }

}
