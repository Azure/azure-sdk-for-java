/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.logic;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The AS2 agreement validation settings.
 */
public class AS2ValidationSettings {
    /**
     * The value indicating whether to override incoming message properties
     * with those in agreement.
     */
    @JsonProperty(value = "overrideMessageProperties", required = true)
    private boolean overrideMessageProperties;

    /**
     * The value indicating whether the message has to be encrypted.
     */
    @JsonProperty(value = "encryptMessage", required = true)
    private boolean encryptMessage;

    /**
     * The value indicating whether the message has to be signed.
     */
    @JsonProperty(value = "signMessage", required = true)
    private boolean signMessage;

    /**
     * The value indicating whether the message has to be compressed.
     */
    @JsonProperty(value = "compressMessage", required = true)
    private boolean compressMessage;

    /**
     * The value indicating whether to check for duplicate message.
     */
    @JsonProperty(value = "checkDuplicateMessage", required = true)
    private boolean checkDuplicateMessage;

    /**
     * The number of days to look back for duplicate interchange.
     */
    @JsonProperty(value = "interchangeDuplicatesValidityDays", required = true)
    private int interchangeDuplicatesValidityDays;

    /**
     * The value indicating whether to check for certificate revocation list on
     * send.
     */
    @JsonProperty(value = "checkCertificateRevocationListOnSend", required = true)
    private boolean checkCertificateRevocationListOnSend;

    /**
     * The value indicating whether to check for certificate revocation list on
     * receive.
     */
    @JsonProperty(value = "checkCertificateRevocationListOnReceive", required = true)
    private boolean checkCertificateRevocationListOnReceive;

    /**
     * The encryption algorithm. Possible values include: 'NotSpecified',
     * 'None', 'DES3', 'RC2', 'AES128', 'AES192', 'AES256'.
     */
    @JsonProperty(value = "encryptionAlgorithm", required = true)
    private EncryptionAlgorithm encryptionAlgorithm;

    /**
     * The signing algorithm. Possible values include: 'NotSpecified',
     * 'Default', 'SHA1', 'SHA2256', 'SHA2384', 'SHA2512'.
     */
    @JsonProperty(value = "signingAlgorithm")
    private SigningAlgorithm signingAlgorithm;

    /**
     * Get the overrideMessageProperties value.
     *
     * @return the overrideMessageProperties value
     */
    public boolean overrideMessageProperties() {
        return this.overrideMessageProperties;
    }

    /**
     * Set the overrideMessageProperties value.
     *
     * @param overrideMessageProperties the overrideMessageProperties value to set
     * @return the AS2ValidationSettings object itself.
     */
    public AS2ValidationSettings withOverrideMessageProperties(boolean overrideMessageProperties) {
        this.overrideMessageProperties = overrideMessageProperties;
        return this;
    }

    /**
     * Get the encryptMessage value.
     *
     * @return the encryptMessage value
     */
    public boolean encryptMessage() {
        return this.encryptMessage;
    }

    /**
     * Set the encryptMessage value.
     *
     * @param encryptMessage the encryptMessage value to set
     * @return the AS2ValidationSettings object itself.
     */
    public AS2ValidationSettings withEncryptMessage(boolean encryptMessage) {
        this.encryptMessage = encryptMessage;
        return this;
    }

    /**
     * Get the signMessage value.
     *
     * @return the signMessage value
     */
    public boolean signMessage() {
        return this.signMessage;
    }

    /**
     * Set the signMessage value.
     *
     * @param signMessage the signMessage value to set
     * @return the AS2ValidationSettings object itself.
     */
    public AS2ValidationSettings withSignMessage(boolean signMessage) {
        this.signMessage = signMessage;
        return this;
    }

    /**
     * Get the compressMessage value.
     *
     * @return the compressMessage value
     */
    public boolean compressMessage() {
        return this.compressMessage;
    }

    /**
     * Set the compressMessage value.
     *
     * @param compressMessage the compressMessage value to set
     * @return the AS2ValidationSettings object itself.
     */
    public AS2ValidationSettings withCompressMessage(boolean compressMessage) {
        this.compressMessage = compressMessage;
        return this;
    }

    /**
     * Get the checkDuplicateMessage value.
     *
     * @return the checkDuplicateMessage value
     */
    public boolean checkDuplicateMessage() {
        return this.checkDuplicateMessage;
    }

    /**
     * Set the checkDuplicateMessage value.
     *
     * @param checkDuplicateMessage the checkDuplicateMessage value to set
     * @return the AS2ValidationSettings object itself.
     */
    public AS2ValidationSettings withCheckDuplicateMessage(boolean checkDuplicateMessage) {
        this.checkDuplicateMessage = checkDuplicateMessage;
        return this;
    }

    /**
     * Get the interchangeDuplicatesValidityDays value.
     *
     * @return the interchangeDuplicatesValidityDays value
     */
    public int interchangeDuplicatesValidityDays() {
        return this.interchangeDuplicatesValidityDays;
    }

    /**
     * Set the interchangeDuplicatesValidityDays value.
     *
     * @param interchangeDuplicatesValidityDays the interchangeDuplicatesValidityDays value to set
     * @return the AS2ValidationSettings object itself.
     */
    public AS2ValidationSettings withInterchangeDuplicatesValidityDays(int interchangeDuplicatesValidityDays) {
        this.interchangeDuplicatesValidityDays = interchangeDuplicatesValidityDays;
        return this;
    }

    /**
     * Get the checkCertificateRevocationListOnSend value.
     *
     * @return the checkCertificateRevocationListOnSend value
     */
    public boolean checkCertificateRevocationListOnSend() {
        return this.checkCertificateRevocationListOnSend;
    }

    /**
     * Set the checkCertificateRevocationListOnSend value.
     *
     * @param checkCertificateRevocationListOnSend the checkCertificateRevocationListOnSend value to set
     * @return the AS2ValidationSettings object itself.
     */
    public AS2ValidationSettings withCheckCertificateRevocationListOnSend(boolean checkCertificateRevocationListOnSend) {
        this.checkCertificateRevocationListOnSend = checkCertificateRevocationListOnSend;
        return this;
    }

    /**
     * Get the checkCertificateRevocationListOnReceive value.
     *
     * @return the checkCertificateRevocationListOnReceive value
     */
    public boolean checkCertificateRevocationListOnReceive() {
        return this.checkCertificateRevocationListOnReceive;
    }

    /**
     * Set the checkCertificateRevocationListOnReceive value.
     *
     * @param checkCertificateRevocationListOnReceive the checkCertificateRevocationListOnReceive value to set
     * @return the AS2ValidationSettings object itself.
     */
    public AS2ValidationSettings withCheckCertificateRevocationListOnReceive(boolean checkCertificateRevocationListOnReceive) {
        this.checkCertificateRevocationListOnReceive = checkCertificateRevocationListOnReceive;
        return this;
    }

    /**
     * Get the encryptionAlgorithm value.
     *
     * @return the encryptionAlgorithm value
     */
    public EncryptionAlgorithm encryptionAlgorithm() {
        return this.encryptionAlgorithm;
    }

    /**
     * Set the encryptionAlgorithm value.
     *
     * @param encryptionAlgorithm the encryptionAlgorithm value to set
     * @return the AS2ValidationSettings object itself.
     */
    public AS2ValidationSettings withEncryptionAlgorithm(EncryptionAlgorithm encryptionAlgorithm) {
        this.encryptionAlgorithm = encryptionAlgorithm;
        return this;
    }

    /**
     * Get the signingAlgorithm value.
     *
     * @return the signingAlgorithm value
     */
    public SigningAlgorithm signingAlgorithm() {
        return this.signingAlgorithm;
    }

    /**
     * Set the signingAlgorithm value.
     *
     * @param signingAlgorithm the signingAlgorithm value to set
     * @return the AS2ValidationSettings object itself.
     */
    public AS2ValidationSettings withSigningAlgorithm(SigningAlgorithm signingAlgorithm) {
        this.signingAlgorithm = signingAlgorithm;
        return this;
    }

}
