/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.servicefabric.implementation;

import com.microsoft.azure.management.servicefabric.CertificateDescription;
import java.util.List;
import com.microsoft.azure.management.servicefabric.ClientCertificateThumbprint;
import com.microsoft.azure.management.servicefabric.ClientCertificateCommonName;
import com.microsoft.azure.management.servicefabric.SettingsSectionDescription;
import com.microsoft.azure.management.servicefabric.NodeTypeDescription;
import com.microsoft.azure.management.servicefabric.ClusterUpgradePolicy;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * Cluster update request.
 */
@JsonFlatten
public class ClusterUpdateParametersInner {
    /**
     * This level is used to set the number of replicas of the system services.
     * Possible values include: 'Bronze', 'Silver', 'Gold'.
     */
    @JsonProperty(value = "properties.reliabilityLevel")
    private String reliabilityLevel;

    /**
     * Cluster upgrade mode indicates if fabric upgrade is initiated
     * automatically by the system or not. Possible values include:
     * 'Automatic', 'Manual'.
     */
    @JsonProperty(value = "properties.upgradeMode")
    private String upgradeMode;

    /**
     * The ServiceFabric code version, if set it, please make sure you have set
     * upgradeMode to Manual, otherwise ,it will fail, if you are using PUT new
     * cluster, you can get the version by using ClusterVersions_List, if you
     * are updating existing cluster, you can get the availableClusterVersions
     * from Clusters_Get.
     */
    @JsonProperty(value = "properties.clusterCodeVersion")
    private String clusterCodeVersion;

    /**
     * This primay certificate will be used as cluster node to node security,
     * SSL certificate for cluster management endpoint and default admin
     * client, the certificate should exist in the virtual machine scale sets
     * or Azure key vault, before you add it. It will override original value.
     */
    @JsonProperty(value = "properties.certificate")
    private CertificateDescription certificate;

    /**
     * The client thumbprint details, it is used for client access for cluster
     * operation, it will override existing collection.
     */
    @JsonProperty(value = "properties.clientCertificateThumbprints")
    private List<ClientCertificateThumbprint> clientCertificateThumbprints;

    /**
     * List of client certificates to whitelist based on common names.
     */
    @JsonProperty(value = "properties.clientCertificateCommonNames")
    private List<ClientCertificateCommonName> clientCertificateCommonNames;

    /**
     * List of custom fabric settings to configure the cluster, Note, it will
     * overwrite existing collection.
     */
    @JsonProperty(value = "properties.fabricSettings")
    private List<SettingsSectionDescription> fabricSettings;

    /**
     * Certificate for the reverse proxy.
     */
    @JsonProperty(value = "properties.reverseProxyCertificate")
    private CertificateDescription reverseProxyCertificate;

    /**
     * The list of nodetypes that make up the cluster, it will override.
     */
    @JsonProperty(value = "properties.nodeTypes")
    private List<NodeTypeDescription> nodeTypes;

    /**
     * The policy to use when upgrading the cluster.
     */
    @JsonProperty(value = "properties.upgradeDescription")
    private ClusterUpgradePolicy upgradeDescription;

    /**
     * Cluster update parameters.
     */
    @JsonProperty(value = "tags")
    private Map<String, String> tags;

    /**
     * Get the reliabilityLevel value.
     *
     * @return the reliabilityLevel value
     */
    public String reliabilityLevel() {
        return this.reliabilityLevel;
    }

    /**
     * Set the reliabilityLevel value.
     *
     * @param reliabilityLevel the reliabilityLevel value to set
     * @return the ClusterUpdateParametersInner object itself.
     */
    public ClusterUpdateParametersInner withReliabilityLevel(String reliabilityLevel) {
        this.reliabilityLevel = reliabilityLevel;
        return this;
    }

    /**
     * Get the upgradeMode value.
     *
     * @return the upgradeMode value
     */
    public String upgradeMode() {
        return this.upgradeMode;
    }

    /**
     * Set the upgradeMode value.
     *
     * @param upgradeMode the upgradeMode value to set
     * @return the ClusterUpdateParametersInner object itself.
     */
    public ClusterUpdateParametersInner withUpgradeMode(String upgradeMode) {
        this.upgradeMode = upgradeMode;
        return this;
    }

    /**
     * Get the clusterCodeVersion value.
     *
     * @return the clusterCodeVersion value
     */
    public String clusterCodeVersion() {
        return this.clusterCodeVersion;
    }

    /**
     * Set the clusterCodeVersion value.
     *
     * @param clusterCodeVersion the clusterCodeVersion value to set
     * @return the ClusterUpdateParametersInner object itself.
     */
    public ClusterUpdateParametersInner withClusterCodeVersion(String clusterCodeVersion) {
        this.clusterCodeVersion = clusterCodeVersion;
        return this;
    }

    /**
     * Get the certificate value.
     *
     * @return the certificate value
     */
    public CertificateDescription certificate() {
        return this.certificate;
    }

    /**
     * Set the certificate value.
     *
     * @param certificate the certificate value to set
     * @return the ClusterUpdateParametersInner object itself.
     */
    public ClusterUpdateParametersInner withCertificate(CertificateDescription certificate) {
        this.certificate = certificate;
        return this;
    }

    /**
     * Get the clientCertificateThumbprints value.
     *
     * @return the clientCertificateThumbprints value
     */
    public List<ClientCertificateThumbprint> clientCertificateThumbprints() {
        return this.clientCertificateThumbprints;
    }

    /**
     * Set the clientCertificateThumbprints value.
     *
     * @param clientCertificateThumbprints the clientCertificateThumbprints value to set
     * @return the ClusterUpdateParametersInner object itself.
     */
    public ClusterUpdateParametersInner withClientCertificateThumbprints(List<ClientCertificateThumbprint> clientCertificateThumbprints) {
        this.clientCertificateThumbprints = clientCertificateThumbprints;
        return this;
    }

    /**
     * Get the clientCertificateCommonNames value.
     *
     * @return the clientCertificateCommonNames value
     */
    public List<ClientCertificateCommonName> clientCertificateCommonNames() {
        return this.clientCertificateCommonNames;
    }

    /**
     * Set the clientCertificateCommonNames value.
     *
     * @param clientCertificateCommonNames the clientCertificateCommonNames value to set
     * @return the ClusterUpdateParametersInner object itself.
     */
    public ClusterUpdateParametersInner withClientCertificateCommonNames(List<ClientCertificateCommonName> clientCertificateCommonNames) {
        this.clientCertificateCommonNames = clientCertificateCommonNames;
        return this;
    }

    /**
     * Get the fabricSettings value.
     *
     * @return the fabricSettings value
     */
    public List<SettingsSectionDescription> fabricSettings() {
        return this.fabricSettings;
    }

    /**
     * Set the fabricSettings value.
     *
     * @param fabricSettings the fabricSettings value to set
     * @return the ClusterUpdateParametersInner object itself.
     */
    public ClusterUpdateParametersInner withFabricSettings(List<SettingsSectionDescription> fabricSettings) {
        this.fabricSettings = fabricSettings;
        return this;
    }

    /**
     * Get the reverseProxyCertificate value.
     *
     * @return the reverseProxyCertificate value
     */
    public CertificateDescription reverseProxyCertificate() {
        return this.reverseProxyCertificate;
    }

    /**
     * Set the reverseProxyCertificate value.
     *
     * @param reverseProxyCertificate the reverseProxyCertificate value to set
     * @return the ClusterUpdateParametersInner object itself.
     */
    public ClusterUpdateParametersInner withReverseProxyCertificate(CertificateDescription reverseProxyCertificate) {
        this.reverseProxyCertificate = reverseProxyCertificate;
        return this;
    }

    /**
     * Get the nodeTypes value.
     *
     * @return the nodeTypes value
     */
    public List<NodeTypeDescription> nodeTypes() {
        return this.nodeTypes;
    }

    /**
     * Set the nodeTypes value.
     *
     * @param nodeTypes the nodeTypes value to set
     * @return the ClusterUpdateParametersInner object itself.
     */
    public ClusterUpdateParametersInner withNodeTypes(List<NodeTypeDescription> nodeTypes) {
        this.nodeTypes = nodeTypes;
        return this;
    }

    /**
     * Get the upgradeDescription value.
     *
     * @return the upgradeDescription value
     */
    public ClusterUpgradePolicy upgradeDescription() {
        return this.upgradeDescription;
    }

    /**
     * Set the upgradeDescription value.
     *
     * @param upgradeDescription the upgradeDescription value to set
     * @return the ClusterUpdateParametersInner object itself.
     */
    public ClusterUpdateParametersInner withUpgradeDescription(ClusterUpgradePolicy upgradeDescription) {
        this.upgradeDescription = upgradeDescription;
        return this;
    }

    /**
     * Get the tags value.
     *
     * @return the tags value
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set the tags value.
     *
     * @param tags the tags value to set
     * @return the ClusterUpdateParametersInner object itself.
     */
    public ClusterUpdateParametersInner withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

}
