/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.machinelearning;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Swagger 2.0 schema for a column within the data table representing a web
 * service input or output. See Swagger specification:
 * http://swagger.io/specification/.
 */
public class ColumnSpecification {
    /**
     * Data type of the column. Possible values include: 'Boolean', 'Integer',
     * 'Number', 'String'.
     */
    @JsonProperty(value = "type", required = true)
    private ColumnType type;

    /**
     * Additional format information for the data type. Possible values
     * include: 'Byte', 'Char', 'Complex64', 'Complex128', 'Date-time',
     * 'Date-timeOffset', 'Double', 'Duration', 'Float', 'Int8', 'Int16',
     * 'Int32', 'Int64', 'Uint8', 'Uint16', 'Uint32', 'Uint64'.
     */
    @JsonProperty(value = "format")
    private ColumnFormat format;

    /**
     * If the data type is categorical, this provides the list of accepted
     * categories.
     */
    @JsonProperty(value = "enum")
    private List<Object> enumProperty;

    /**
     * Flag indicating if the type supports null values or not.
     */
    @JsonProperty(value = "x-ms-isnullable")
    private Boolean xMsIsnullable;

    /**
     * Flag indicating whether the categories are treated as an ordered set or
     * not, if this is a categorical column.
     */
    @JsonProperty(value = "x-ms-isordered")
    private Boolean xMsIsordered;

    /**
     * Get the type value.
     *
     * @return the type value
     */
    public ColumnType type() {
        return this.type;
    }

    /**
     * Set the type value.
     *
     * @param type the type value to set
     * @return the ColumnSpecification object itself.
     */
    public ColumnSpecification withType(ColumnType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the format value.
     *
     * @return the format value
     */
    public ColumnFormat format() {
        return this.format;
    }

    /**
     * Set the format value.
     *
     * @param format the format value to set
     * @return the ColumnSpecification object itself.
     */
    public ColumnSpecification withFormat(ColumnFormat format) {
        this.format = format;
        return this;
    }

    /**
     * Get the enumProperty value.
     *
     * @return the enumProperty value
     */
    public List<Object> enumProperty() {
        return this.enumProperty;
    }

    /**
     * Set the enumProperty value.
     *
     * @param enumProperty the enumProperty value to set
     * @return the ColumnSpecification object itself.
     */
    public ColumnSpecification withEnumProperty(List<Object> enumProperty) {
        this.enumProperty = enumProperty;
        return this;
    }

    /**
     * Get the xMsIsnullable value.
     *
     * @return the xMsIsnullable value
     */
    public Boolean xMsIsnullable() {
        return this.xMsIsnullable;
    }

    /**
     * Set the xMsIsnullable value.
     *
     * @param xMsIsnullable the xMsIsnullable value to set
     * @return the ColumnSpecification object itself.
     */
    public ColumnSpecification withXMsIsnullable(Boolean xMsIsnullable) {
        this.xMsIsnullable = xMsIsnullable;
        return this;
    }

    /**
     * Get the xMsIsordered value.
     *
     * @return the xMsIsordered value
     */
    public Boolean xMsIsordered() {
        return this.xMsIsordered;
    }

    /**
     * Set the xMsIsordered value.
     *
     * @param xMsIsordered the xMsIsordered value to set
     * @return the ColumnSpecification object itself.
     */
    public ColumnSpecification withXMsIsordered(Boolean xMsIsordered) {
        this.xMsIsordered = xMsIsordered;
        return this;
    }

}
