/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package consumption;

import .models.ErrorResponseException;
import .models.UsageDetail;
import com.microsoft.azure.ListOperationCallback;
import com.microsoft.azure.Page;
import com.microsoft.azure.PagedList;
import com.microsoft.rest.ServiceFuture;
import com.microsoft.rest.ServiceResponse;
import java.io.IOException;
import java.util.List;
import rx.Observable;

/**
 * An instance of this class provides access to all the operations defined
 * in UsageDetails.
 */
public interface UsageDetails {
    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ErrorResponseException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the PagedList&lt;UsageDetail&gt; object if successful.
     */
    PagedList<UsageDetail> list();

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<List<UsageDetail>> listAsync(final ListOperationCallback<UsageDetail> serviceCallback);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;UsageDetail&gt; object
     */
    Observable<Page<UsageDetail>> listAsync();

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;UsageDetail&gt; object
     */
    Observable<ServiceResponse<Page<UsageDetail>>> listWithServiceResponseAsync();
    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.
     * @param filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param top May be used to limit the number of results to the most recent N usageDetails.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ErrorResponseException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the PagedList&lt;UsageDetail&gt; object if successful.
     */
    PagedList<UsageDetail> list(final String expand, final String filter, final String skiptoken, final Integer top);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.
     * @param filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param top May be used to limit the number of results to the most recent N usageDetails.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<List<UsageDetail>> listAsync(final String expand, final String filter, final String skiptoken, final Integer top, final ListOperationCallback<UsageDetail> serviceCallback);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.
     * @param filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param top May be used to limit the number of results to the most recent N usageDetails.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;UsageDetail&gt; object
     */
    Observable<Page<UsageDetail>> listAsync(final String expand, final String filter, final String skiptoken, final Integer top);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.
     * @param filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param top May be used to limit the number of results to the most recent N usageDetails.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;UsageDetail&gt; object
     */
    Observable<ServiceResponse<Page<UsageDetail>>> listWithServiceResponseAsync(final String expand, final String filter, final String skiptoken, final Integer top);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param billingPeriodName Billing Period Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ErrorResponseException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the PagedList&lt;UsageDetail&gt; object if successful.
     */
    PagedList<UsageDetail> listByBillingPeriod(final String billingPeriodName);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param billingPeriodName Billing Period Name.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<List<UsageDetail>> listByBillingPeriodAsync(final String billingPeriodName, final ListOperationCallback<UsageDetail> serviceCallback);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param billingPeriodName Billing Period Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;UsageDetail&gt; object
     */
    Observable<Page<UsageDetail>> listByBillingPeriodAsync(final String billingPeriodName);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param billingPeriodName Billing Period Name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;UsageDetail&gt; object
     */
    Observable<ServiceResponse<Page<UsageDetail>>> listByBillingPeriodWithServiceResponseAsync(final String billingPeriodName);
    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param billingPeriodName Billing Period Name.
     * @param expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.
     * @param filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param top May be used to limit the number of results to the most recent N usageDetails.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ErrorResponseException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the PagedList&lt;UsageDetail&gt; object if successful.
     */
    PagedList<UsageDetail> listByBillingPeriod(final String billingPeriodName, final String expand, final String filter, final String skiptoken, final Integer top);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param billingPeriodName Billing Period Name.
     * @param expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.
     * @param filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param top May be used to limit the number of results to the most recent N usageDetails.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<List<UsageDetail>> listByBillingPeriodAsync(final String billingPeriodName, final String expand, final String filter, final String skiptoken, final Integer top, final ListOperationCallback<UsageDetail> serviceCallback);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param billingPeriodName Billing Period Name.
     * @param expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.
     * @param filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param top May be used to limit the number of results to the most recent N usageDetails.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;UsageDetail&gt; object
     */
    Observable<Page<UsageDetail>> listByBillingPeriodAsync(final String billingPeriodName, final String expand, final String filter, final String skiptoken, final Integer top);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param billingPeriodName Billing Period Name.
     * @param expand May be used to expand the properties/additionalProperties or properties/meterDetails within a list of usage details. By default, these fields are not included when listing usage details.
     * @param filter May be used to filter usageDetails by properties/usageEnd (Utc time), properties/usageStart (Utc time), properties/resourceGroup, properties/instanceName or properties/instanceId. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'.
     * @param skiptoken Skiptoken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a skiptoken parameter that specifies a starting point to use for subsequent calls.
     * @param top May be used to limit the number of results to the most recent N usageDetails.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;UsageDetail&gt; object
     */
    Observable<ServiceResponse<Page<UsageDetail>>> listByBillingPeriodWithServiceResponseAsync(final String billingPeriodName, final String expand, final String filter, final String skiptoken, final Integer top);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ErrorResponseException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the PagedList&lt;UsageDetail&gt; object if successful.
     */
    PagedList<UsageDetail> listNext(final String nextPageLink);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param serviceFuture the ServiceFuture object tracking the Retrofit calls
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<List<UsageDetail>> listNextAsync(final String nextPageLink, final ServiceFuture<List<UsageDetail>> serviceFuture, final ListOperationCallback<UsageDetail> serviceCallback);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;UsageDetail&gt; object
     */
    Observable<Page<UsageDetail>> listNextAsync(final String nextPageLink);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;UsageDetail&gt; object
     */
    Observable<ServiceResponse<Page<UsageDetail>>> listNextWithServiceResponseAsync(final String nextPageLink);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ErrorResponseException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the PagedList&lt;UsageDetail&gt; object if successful.
     */
    PagedList<UsageDetail> listByBillingPeriodNext(final String nextPageLink);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param serviceFuture the ServiceFuture object tracking the Retrofit calls
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<List<UsageDetail>> listByBillingPeriodNextAsync(final String nextPageLink, final ServiceFuture<List<UsageDetail>> serviceFuture, final ListOperationCallback<UsageDetail> serviceCallback);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;UsageDetail&gt; object
     */
    Observable<Page<UsageDetail>> listByBillingPeriodNextAsync(final String nextPageLink);

    /**
     * Lists the usage details for a scope by billing period. Usage details are available via this API only for May 1, 2014 or later.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;UsageDetail&gt; object
     */
    Observable<ServiceResponse<Page<UsageDetail>>> listByBillingPeriodNextWithServiceResponseAsync(final String nextPageLink);

}
