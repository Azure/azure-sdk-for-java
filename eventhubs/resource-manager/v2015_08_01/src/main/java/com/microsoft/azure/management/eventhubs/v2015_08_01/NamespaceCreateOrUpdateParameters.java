/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.eventhubs.v2015_08_01;

import java.util.Map;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * Parameters supplied to the Create Or Update Namespace operation.
 */
@JsonFlatten
public class NamespaceCreateOrUpdateParameters {
    /**
     * Namespace location.
     */
    @JsonProperty(value = "location", required = true)
    private String location;

    /**
     * The sku property.
     */
    @JsonProperty(value = "sku")
    private Sku sku;

    /**
     * Namespace tags.
     */
    @JsonProperty(value = "tags")
    private Map<String, String> tags;

    /**
     * State of the Namespace. Possible values include: 'Unknown', 'Creating',
     * 'Created', 'Activating', 'Enabling', 'Active', 'Disabling', 'Disabled',
     * 'SoftDeleting', 'SoftDeleted', 'Removing', 'Removed', 'Failed'.
     */
    @JsonProperty(value = "properties.status")
    private NamespaceState status;

    /**
     * Provisioning state of the Namespace.
     */
    @JsonProperty(value = "properties.provisioningState")
    private String provisioningState;

    /**
     * The time the Namespace was created.
     */
    @JsonProperty(value = "properties.createdAt")
    private DateTime createdAt;

    /**
     * The time the Namespace was updated.
     */
    @JsonProperty(value = "properties.updatedAt")
    private DateTime updatedAt;

    /**
     * Endpoint you can use to perform Service Bus operations.
     */
    @JsonProperty(value = "properties.serviceBusEndpoint")
    private String serviceBusEndpoint;

    /**
     * Identifier for Azure Insights metrics.
     */
    @JsonProperty(value = "properties.metricId", access = JsonProperty.Access.WRITE_ONLY)
    private String metricId;

    /**
     * Specifies whether this instance is enabled.
     */
    @JsonProperty(value = "properties.enabled")
    private Boolean enabled;

    /**
     * Get namespace location.
     *
     * @return the location value
     */
    public String location() {
        return this.location;
    }

    /**
     * Set namespace location.
     *
     * @param location the location value to set
     * @return the NamespaceCreateOrUpdateParameters object itself.
     */
    public NamespaceCreateOrUpdateParameters withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the sku value.
     *
     * @return the sku value
     */
    public Sku sku() {
        return this.sku;
    }

    /**
     * Set the sku value.
     *
     * @param sku the sku value to set
     * @return the NamespaceCreateOrUpdateParameters object itself.
     */
    public NamespaceCreateOrUpdateParameters withSku(Sku sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Get namespace tags.
     *
     * @return the tags value
     */
    public Map<String, String> tags() {
        return this.tags;
    }

    /**
     * Set namespace tags.
     *
     * @param tags the tags value to set
     * @return the NamespaceCreateOrUpdateParameters object itself.
     */
    public NamespaceCreateOrUpdateParameters withTags(Map<String, String> tags) {
        this.tags = tags;
        return this;
    }

    /**
     * Get state of the Namespace. Possible values include: 'Unknown', 'Creating', 'Created', 'Activating', 'Enabling', 'Active', 'Disabling', 'Disabled', 'SoftDeleting', 'SoftDeleted', 'Removing', 'Removed', 'Failed'.
     *
     * @return the status value
     */
    public NamespaceState status() {
        return this.status;
    }

    /**
     * Set state of the Namespace. Possible values include: 'Unknown', 'Creating', 'Created', 'Activating', 'Enabling', 'Active', 'Disabling', 'Disabled', 'SoftDeleting', 'SoftDeleted', 'Removing', 'Removed', 'Failed'.
     *
     * @param status the status value to set
     * @return the NamespaceCreateOrUpdateParameters object itself.
     */
    public NamespaceCreateOrUpdateParameters withStatus(NamespaceState status) {
        this.status = status;
        return this;
    }

    /**
     * Get provisioning state of the Namespace.
     *
     * @return the provisioningState value
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set provisioning state of the Namespace.
     *
     * @param provisioningState the provisioningState value to set
     * @return the NamespaceCreateOrUpdateParameters object itself.
     */
    public NamespaceCreateOrUpdateParameters withProvisioningState(String provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the time the Namespace was created.
     *
     * @return the createdAt value
     */
    public DateTime createdAt() {
        return this.createdAt;
    }

    /**
     * Set the time the Namespace was created.
     *
     * @param createdAt the createdAt value to set
     * @return the NamespaceCreateOrUpdateParameters object itself.
     */
    public NamespaceCreateOrUpdateParameters withCreatedAt(DateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Get the time the Namespace was updated.
     *
     * @return the updatedAt value
     */
    public DateTime updatedAt() {
        return this.updatedAt;
    }

    /**
     * Set the time the Namespace was updated.
     *
     * @param updatedAt the updatedAt value to set
     * @return the NamespaceCreateOrUpdateParameters object itself.
     */
    public NamespaceCreateOrUpdateParameters withUpdatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Get endpoint you can use to perform Service Bus operations.
     *
     * @return the serviceBusEndpoint value
     */
    public String serviceBusEndpoint() {
        return this.serviceBusEndpoint;
    }

    /**
     * Set endpoint you can use to perform Service Bus operations.
     *
     * @param serviceBusEndpoint the serviceBusEndpoint value to set
     * @return the NamespaceCreateOrUpdateParameters object itself.
     */
    public NamespaceCreateOrUpdateParameters withServiceBusEndpoint(String serviceBusEndpoint) {
        this.serviceBusEndpoint = serviceBusEndpoint;
        return this;
    }

    /**
     * Get identifier for Azure Insights metrics.
     *
     * @return the metricId value
     */
    public String metricId() {
        return this.metricId;
    }

    /**
     * Get specifies whether this instance is enabled.
     *
     * @return the enabled value
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * Set specifies whether this instance is enabled.
     *
     * @param enabled the enabled value to set
     * @return the NamespaceCreateOrUpdateParameters object itself.
     */
    public NamespaceCreateOrUpdateParameters withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

}
