/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.eventhubs.v2015_08_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.eventhubs.v2015_08_01.implementation.EventHubResourceInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.eventhubs.v2015_08_01.implementation.EventHubsManager;
import org.joda.time.DateTime;
import java.util.List;

/**
 * Type representing EventHubResource.
 */
public interface EventHubResource extends HasInner<EventHubResourceInner>, Indexable, Refreshable<EventHubResource>, Updatable<EventHubResource.Update>, HasManager<EventHubsManager> {
    /**
     * @return the createdAt value.
     */
    DateTime createdAt();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the location value.
     */
    String location();

    /**
     * @return the messageRetentionInDays value.
     */
    Long messageRetentionInDays();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the partitionCount value.
     */
    Long partitionCount();

    /**
     * @return the partitionIds value.
     */
    List<String> partitionIds();

    /**
     * @return the status value.
     */
    EntityStatus status();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the updatedAt value.
     */
    DateTime updatedAt();

    /**
     * The entirety of the EventHubResource definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithNamespace, DefinitionStages.WithLocation, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of EventHubResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a EventHubResource definition.
         */
        interface Blank extends WithNamespace {
        }

        /**
         * The stage of the eventhubresource definition allowing to specify Namespace.
         */
        interface WithNamespace {
           /**
            * Specifies resourceGroupName, namespaceName.
            * @param resourceGroupName Name of the resource group within the azure subscription
            * @param namespaceName The Namespace name
            * @return the next definition stage
            */
            WithLocation withExistingNamespace(String resourceGroupName, String namespaceName);
        }

        /**
         * The stage of the eventhubresource definition allowing to specify Location.
         */
        interface WithLocation {
           /**
            * Specifies location.
            * @param location Location of the resource
            * @return the next definition stage
            */
            WithCreate withLocation(String location);
        }

        /**
         * The stage of the eventhubresource definition allowing to specify MessageRetentionInDays.
         */
        interface WithMessageRetentionInDays {
            /**
             * Specifies messageRetentionInDays.
             * @param messageRetentionInDays Number of days to retain the events for this Event Hub
             * @return the next definition stage
             */
            WithCreate withMessageRetentionInDays(Long messageRetentionInDays);
        }

        /**
         * The stage of the eventhubresource definition allowing to specify Name.
         */
        interface WithName {
            /**
             * Specifies name.
             * @param name Name of the Event Hub
             * @return the next definition stage
             */
            WithCreate withName(String name);
        }

        /**
         * The stage of the eventhubresource definition allowing to specify PartitionCount.
         */
        interface WithPartitionCount {
            /**
             * Specifies partitionCount.
             * @param partitionCount Number of partitions created for the Event Hub
             * @return the next definition stage
             */
            WithCreate withPartitionCount(Long partitionCount);
        }

        /**
         * The stage of the eventhubresource definition allowing to specify Status.
         */
        interface WithStatus {
            /**
             * Specifies status.
             * @param status Enumerates the possible values for the status of the Event Hub. Possible values include: 'Active', 'Disabled', 'Restoring', 'SendDisabled', 'ReceiveDisabled', 'Creating', 'Deleting', 'Renaming', 'Unknown'
             * @return the next definition stage
             */
            WithCreate withStatus(EntityStatus status);
        }

        /**
         * The stage of the eventhubresource definition allowing to specify Type.
         */
        interface WithType {
            /**
             * Specifies type.
             * @param type ARM type of the Namespace
             * @return the next definition stage
             */
            WithCreate withType(String type);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<EventHubResource>, DefinitionStages.WithMessageRetentionInDays, DefinitionStages.WithName, DefinitionStages.WithPartitionCount, DefinitionStages.WithStatus, DefinitionStages.WithType {
        }
    }
    /**
     * The template for a EventHubResource update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<EventHubResource>, UpdateStages.WithMessageRetentionInDays, UpdateStages.WithName, UpdateStages.WithPartitionCount, UpdateStages.WithStatus, UpdateStages.WithType {
    }

    /**
     * Grouping of EventHubResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the eventhubresource update allowing to specify MessageRetentionInDays.
         */
        interface WithMessageRetentionInDays {
            /**
             * Specifies messageRetentionInDays.
             * @param messageRetentionInDays Number of days to retain the events for this Event Hub
             * @return the next update stage
             */
            Update withMessageRetentionInDays(Long messageRetentionInDays);
        }

        /**
         * The stage of the eventhubresource update allowing to specify Name.
         */
        interface WithName {
            /**
             * Specifies name.
             * @param name Name of the Event Hub
             * @return the next update stage
             */
            Update withName(String name);
        }

        /**
         * The stage of the eventhubresource update allowing to specify PartitionCount.
         */
        interface WithPartitionCount {
            /**
             * Specifies partitionCount.
             * @param partitionCount Number of partitions created for the Event Hub
             * @return the next update stage
             */
            Update withPartitionCount(Long partitionCount);
        }

        /**
         * The stage of the eventhubresource update allowing to specify Status.
         */
        interface WithStatus {
            /**
             * Specifies status.
             * @param status Enumerates the possible values for the status of the Event Hub. Possible values include: 'Active', 'Disabled', 'Restoring', 'SendDisabled', 'ReceiveDisabled', 'Creating', 'Deleting', 'Renaming', 'Unknown'
             * @return the next update stage
             */
            Update withStatus(EntityStatus status);
        }

        /**
         * The stage of the eventhubresource update allowing to specify Type.
         */
        interface WithType {
            /**
             * Specifies type.
             * @param type ARM type of the Namespace
             * @return the next update stage
             */
            Update withType(String type);
        }

    }
}
