/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.privatedns.v2018_09_01;

import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.privatedns.v2018_09_01.implementation.RecordSetInner;
import com.microsoft.azure.management.privatedns.v2018_09_01.implementation.RecordSetsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing RecordSets.
 */
public interface RecordSets extends HasInner<RecordSetsInner> {
    /**
     * Creates or updates a record set within a Private DNS zone.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param recordType The type of DNS record in this record set. Record sets of type SOA can be updated but not created (they are created when the Private DNS zone is created). Possible values include: 'A', 'AAAA', 'CNAME', 'MX', 'PTR', 'SOA', 'SRV', 'TXT'
     * @param relativeRecordSetName The name of the record set, relative to the name of the zone.
     * @param parameters Parameters supplied to the CreateOrUpdate operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<RecordSet> createOrUpdateAsync(String resourceGroupName, String privateZoneName, RecordType recordType, String relativeRecordSetName, RecordSetInner parameters);

    /**
     * Updates a record set within a Private DNS zone.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param recordType The type of DNS record in this record set. Possible values include: 'A', 'AAAA', 'CNAME', 'MX', 'PTR', 'SOA', 'SRV', 'TXT'
     * @param relativeRecordSetName The name of the record set, relative to the name of the zone.
     * @param parameters Parameters supplied to the Update operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<RecordSet> updateAsync(String resourceGroupName, String privateZoneName, RecordType recordType, String relativeRecordSetName, RecordSetInner parameters);

    /**
     * Deletes a record set from a Private DNS zone. This operation cannot be undone.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param recordType The type of DNS record in this record set. Record sets of type SOA cannot be deleted (they are deleted when the Private DNS zone is deleted). Possible values include: 'A', 'AAAA', 'CNAME', 'MX', 'PTR', 'SOA', 'SRV', 'TXT'
     * @param relativeRecordSetName The name of the record set, relative to the name of the zone.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String privateZoneName, RecordType recordType, String relativeRecordSetName);

    /**
     * Gets a record set.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param recordType The type of DNS record in this record set. Possible values include: 'A', 'AAAA', 'CNAME', 'MX', 'PTR', 'SOA', 'SRV', 'TXT'
     * @param relativeRecordSetName The name of the record set, relative to the name of the zone.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<RecordSet> getAsync(String resourceGroupName, String privateZoneName, RecordType recordType, String relativeRecordSetName);

    /**
     * Lists the record sets of a specified type in a Private DNS zone.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @param recordType The type of record sets to enumerate. Possible values include: 'A', 'AAAA', 'CNAME', 'MX', 'PTR', 'SOA', 'SRV', 'TXT'
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<RecordSet> listByTypeAsync(final String resourceGroupName, final String privateZoneName, final RecordType recordType);

    /**
     * Lists all record sets in a Private DNS zone.
     *
     * @param resourceGroupName The name of the resource group.
     * @param privateZoneName The name of the Private DNS zone (without a terminating dot).
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<RecordSet> listAsync(final String resourceGroupName, final String privateZoneName);

}
