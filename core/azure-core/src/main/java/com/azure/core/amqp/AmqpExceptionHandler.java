// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

package com.azure.core.amqp;

import com.azure.core.amqp.exception.ErrorContext;
import com.azure.core.implementation.logging.ServiceLogger;

import java.util.Objects;

/**
 * Handles exceptions generated by AMQP connections, sessions, and/or links.
 */
public abstract class AmqpExceptionHandler {
    private final ServiceLogger logger;

    /**
     * Creates a new instance of an exception handler.
     */
    protected AmqpExceptionHandler() {
        this(new ServiceLogger(AmqpExceptionHandler.class));
    }

    /**
     * Creates the exception handler with the provided logger.
     *
     * @param logger Logger to use when issuing logs.
     */
    protected AmqpExceptionHandler(ServiceLogger logger) {
        Objects.requireNonNull(logger);
        this.logger = logger;
    }

    /**
     * Notifies the exception handler of an endpoint error.
     *
     * @param context The error context that caused the error.
     */
    public void onConnectionError(ErrorContext context) {
        logger.asWarning().log("Connection error:" + context.toString(), context);
    }

    /**
     * Notifies the exception handler of an exception.
     *
     * @param exception The exception that caused the connection error.
     */
    public void onConnectionError(Throwable exception) {
        logger.asWarning().log("Connection exception encountered: " + exception.toString(), exception);
    }

    /**
     * Notifies the exception handler that a shutdown signal occurred.
     *
     * @param shutdownSignal The shutdown signal that was received.
     */
    public void onConnectionShutdown(AmqpShutdownSignal shutdownSignal) {
        logger.asInfo().log("Shutdown received: {}", shutdownSignal);
    }
}
