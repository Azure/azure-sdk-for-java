/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v3_2017_03;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.sql.v3_2017_03.implementation.ManagedDatabaseInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.sql.v3_2017_03.implementation.SqlManager;
import org.joda.time.DateTime;
import java.util.Map;

/**
 * Type representing ManagedDatabase.
 */
public interface ManagedDatabase extends HasInner<ManagedDatabaseInner>, Indexable, Refreshable<ManagedDatabase>, Updatable<ManagedDatabase.Update>, HasManager<SqlManager> {
    /**
     * @return the catalogCollation value.
     */
    CatalogCollationType catalogCollation();

    /**
     * @return the collation value.
     */
    String collation();

    /**
     * @return the createMode value.
     */
    ManagedDatabaseCreateMode createMode();

    /**
     * @return the creationDate value.
     */
    DateTime creationDate();

    /**
     * @return the defaultSecondaryLocation value.
     */
    String defaultSecondaryLocation();

    /**
     * @return the earliestRestorePoint value.
     */
    DateTime earliestRestorePoint();

    /**
     * @return the failoverGroupId value.
     */
    String failoverGroupId();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the location value.
     */
    String location();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the restorePointInTime value.
     */
    DateTime restorePointInTime();

    /**
     * @return the sourceDatabaseId value.
     */
    String sourceDatabaseId();

    /**
     * @return the status value.
     */
    ManagedDatabaseStatus status();

    /**
     * @return the storageContainerSasToken value.
     */
    String storageContainerSasToken();

    /**
     * @return the storageContainerUri value.
     */
    String storageContainerUri();

    /**
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the ManagedDatabase definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithManagedInstance, DefinitionStages.WithLocation, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of ManagedDatabase definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a ManagedDatabase definition.
         */
        interface Blank extends WithManagedInstance {
        }

        /**
         * The stage of the manageddatabase definition allowing to specify ManagedInstance.
         */
        interface WithManagedInstance {
           /**
            * Specifies resourceGroupName, managedInstanceName.
            */
            WithLocation withExistingManagedInstance(String resourceGroupName, String managedInstanceName);
        }

        /**
         * The stage of the manageddatabase definition allowing to specify Location.
         */
        interface WithLocation {
           /**
            * Specifies location.
            */
            WithCreate withLocation(String location);
        }

        /**
         * The stage of the manageddatabase definition allowing to specify CatalogCollation.
         */
        interface WithCatalogCollation {
            /**
             * Specifies catalogCollation.
             */
            WithCreate withCatalogCollation(CatalogCollationType catalogCollation);
        }

        /**
         * The stage of the manageddatabase definition allowing to specify Collation.
         */
        interface WithCollation {
            /**
             * Specifies collation.
             */
            WithCreate withCollation(String collation);
        }

        /**
         * The stage of the manageddatabase definition allowing to specify CreateMode.
         */
        interface WithCreateMode {
            /**
             * Specifies createMode.
             */
            WithCreate withCreateMode(ManagedDatabaseCreateMode createMode);
        }

        /**
         * The stage of the manageddatabase definition allowing to specify RestorePointInTime.
         */
        interface WithRestorePointInTime {
            /**
             * Specifies restorePointInTime.
             */
            WithCreate withRestorePointInTime(DateTime restorePointInTime);
        }

        /**
         * The stage of the manageddatabase definition allowing to specify SourceDatabaseId.
         */
        interface WithSourceDatabaseId {
            /**
             * Specifies sourceDatabaseId.
             */
            WithCreate withSourceDatabaseId(String sourceDatabaseId);
        }

        /**
         * The stage of the manageddatabase definition allowing to specify StorageContainerSasToken.
         */
        interface WithStorageContainerSasToken {
            /**
             * Specifies storageContainerSasToken.
             */
            WithCreate withStorageContainerSasToken(String storageContainerSasToken);
        }

        /**
         * The stage of the manageddatabase definition allowing to specify StorageContainerUri.
         */
        interface WithStorageContainerUri {
            /**
             * Specifies storageContainerUri.
             */
            WithCreate withStorageContainerUri(String storageContainerUri);
        }

        /**
         * The stage of the manageddatabase definition allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<ManagedDatabase>, DefinitionStages.WithCatalogCollation, DefinitionStages.WithCollation, DefinitionStages.WithCreateMode, DefinitionStages.WithRestorePointInTime, DefinitionStages.WithSourceDatabaseId, DefinitionStages.WithStorageContainerSasToken, DefinitionStages.WithStorageContainerUri, DefinitionStages.WithTags {
        }
    }
    /**
     * The template for a ManagedDatabase update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<ManagedDatabase>, UpdateStages.WithCatalogCollation, UpdateStages.WithCollation, UpdateStages.WithCreateMode, UpdateStages.WithRestorePointInTime, UpdateStages.WithSourceDatabaseId, UpdateStages.WithStorageContainerSasToken, UpdateStages.WithStorageContainerUri, UpdateStages.WithTags {
    }

    /**
     * Grouping of ManagedDatabase update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the manageddatabase update allowing to specify CatalogCollation.
         */
        interface WithCatalogCollation {
            /**
             * Specifies catalogCollation.
             */
            Update withCatalogCollation(CatalogCollationType catalogCollation);
        }

        /**
         * The stage of the manageddatabase update allowing to specify Collation.
         */
        interface WithCollation {
            /**
             * Specifies collation.
             */
            Update withCollation(String collation);
        }

        /**
         * The stage of the manageddatabase update allowing to specify CreateMode.
         */
        interface WithCreateMode {
            /**
             * Specifies createMode.
             */
            Update withCreateMode(ManagedDatabaseCreateMode createMode);
        }

        /**
         * The stage of the manageddatabase update allowing to specify RestorePointInTime.
         */
        interface WithRestorePointInTime {
            /**
             * Specifies restorePointInTime.
             */
            Update withRestorePointInTime(DateTime restorePointInTime);
        }

        /**
         * The stage of the manageddatabase update allowing to specify SourceDatabaseId.
         */
        interface WithSourceDatabaseId {
            /**
             * Specifies sourceDatabaseId.
             */
            Update withSourceDatabaseId(String sourceDatabaseId);
        }

        /**
         * The stage of the manageddatabase update allowing to specify StorageContainerSasToken.
         */
        interface WithStorageContainerSasToken {
            /**
             * Specifies storageContainerSasToken.
             */
            Update withStorageContainerSasToken(String storageContainerSasToken);
        }

        /**
         * The stage of the manageddatabase update allowing to specify StorageContainerUri.
         */
        interface WithStorageContainerUri {
            /**
             * Specifies storageContainerUri.
             */
            Update withStorageContainerUri(String storageContainerUri);
        }

        /**
         * The stage of the manageddatabase update allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             */
            Update withTags(Map<String, String> tags);
        }

    }
}
