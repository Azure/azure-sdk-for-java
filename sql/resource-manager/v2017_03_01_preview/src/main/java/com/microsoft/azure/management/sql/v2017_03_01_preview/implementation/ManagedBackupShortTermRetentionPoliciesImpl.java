/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.sql.v2017_03_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.sql.v2017_03_01_preview.ManagedBackupShortTermRetentionPolicies;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.sql.v2017_03_01_preview.ManagedBackupShortTermRetentionPolicy;

class ManagedBackupShortTermRetentionPoliciesImpl extends WrapperImpl<ManagedBackupShortTermRetentionPoliciesInner> implements ManagedBackupShortTermRetentionPolicies {
    private final SqlManager manager;

    ManagedBackupShortTermRetentionPoliciesImpl(SqlManager manager) {
        super(manager.inner().managedBackupShortTermRetentionPolicies());
        this.manager = manager;
    }

    public SqlManager manager() {
        return this.manager;
    }

    @Override
    public ManagedBackupShortTermRetentionPolicyImpl define(String name) {
        return wrapModel(name);
    }

    private ManagedBackupShortTermRetentionPolicyImpl wrapModel(ManagedBackupShortTermRetentionPolicyInner inner) {
        return  new ManagedBackupShortTermRetentionPolicyImpl(inner, manager());
    }

    private ManagedBackupShortTermRetentionPolicyImpl wrapModel(String name) {
        return new ManagedBackupShortTermRetentionPolicyImpl(name, this.manager());
    }

    @Override
    public Observable<ManagedBackupShortTermRetentionPolicy> listByDatabaseAsync(final String resourceGroupName, final String managedInstanceName, final String databaseName) {
        ManagedBackupShortTermRetentionPoliciesInner client = this.inner();
        return client.listByDatabaseAsync(resourceGroupName, managedInstanceName, databaseName)
        .flatMapIterable(new Func1<Page<ManagedBackupShortTermRetentionPolicyInner>, Iterable<ManagedBackupShortTermRetentionPolicyInner>>() {
            @Override
            public Iterable<ManagedBackupShortTermRetentionPolicyInner> call(Page<ManagedBackupShortTermRetentionPolicyInner> page) {
                return page.items();
            }
        })
        .map(new Func1<ManagedBackupShortTermRetentionPolicyInner, ManagedBackupShortTermRetentionPolicy>() {
            @Override
            public ManagedBackupShortTermRetentionPolicy call(ManagedBackupShortTermRetentionPolicyInner inner) {
                return wrapModel(inner);
            }
        });
    }

    @Override
    public Observable<ManagedBackupShortTermRetentionPolicy> getAsync(String resourceGroupName, String managedInstanceName, String databaseName) {
        ManagedBackupShortTermRetentionPoliciesInner client = this.inner();
        return client.getAsync(resourceGroupName, managedInstanceName, databaseName)
        .map(new Func1<ManagedBackupShortTermRetentionPolicyInner, ManagedBackupShortTermRetentionPolicy>() {
            @Override
            public ManagedBackupShortTermRetentionPolicy call(ManagedBackupShortTermRetentionPolicyInner inner) {
                return wrapModel(inner);
            }
       });
    }

}
