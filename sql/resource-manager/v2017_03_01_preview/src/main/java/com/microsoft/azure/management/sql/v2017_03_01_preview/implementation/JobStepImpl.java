/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v2017_03_01_preview.implementation;

import com.microsoft.azure.management.sql.v2017_03_01_preview.JobStep;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.sql.v2017_03_01_preview.JobStepAction;
import com.microsoft.azure.management.sql.v2017_03_01_preview.JobStepOutput;
import com.microsoft.azure.management.sql.v2017_03_01_preview.JobStepExecutionOptions;

class JobStepImpl extends CreatableUpdatableImpl<JobStep, JobStepInner, JobStepImpl> implements JobStep, JobStep.Definition, JobStep.Update {
    private final SqlManager manager;
    private String resourceGroupName;
    private String serverName;
    private String jobAgentName;
    private String jobName;
    private String stepName;

    JobStepImpl(String name, SqlManager manager) {
        super(name, new JobStepInner());
        this.manager = manager;
        // Set resource name
        this.stepName = name;
        //
    }

    JobStepImpl(JobStepInner inner, SqlManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.stepName = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.serverName = IdParsingUtils.getValueFromIdByName(inner.id(), "servers");
        this.jobAgentName = IdParsingUtils.getValueFromIdByName(inner.id(), "jobAgents");
        this.jobName = IdParsingUtils.getValueFromIdByName(inner.id(), "jobs");
        this.stepName = IdParsingUtils.getValueFromIdByName(inner.id(), "steps");
        //
    }

    @Override
    public SqlManager manager() {
        return this.manager;
    }

    @Override
    public Observable<JobStep> createResourceAsync() {
        JobStepsInner client = this.manager().inner().jobSteps();
        return client.createOrUpdateAsync(this.resourceGroupName, this.serverName, this.jobAgentName, this.jobName, this.stepName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<JobStep> updateResourceAsync() {
        JobStepsInner client = this.manager().inner().jobSteps();
        return client.createOrUpdateAsync(this.resourceGroupName, this.serverName, this.jobAgentName, this.jobName, this.stepName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<JobStepInner> getInnerAsync() {
        JobStepsInner client = this.manager().inner().jobSteps();
        return client.getByVersionAsync(this.resourceGroupName, this.serverName, this.jobAgentName, this.jobName, this.stepName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public JobStepAction action() {
        return this.inner().action();
    }

    @Override
    public String credential() {
        return this.inner().credential();
    }

    @Override
    public JobStepExecutionOptions executionOptions() {
        return this.inner().executionOptions();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public JobStepOutput output() {
        return this.inner().output();
    }

    @Override
    public Integer stepId() {
        return this.inner().stepId();
    }

    @Override
    public String targetGroup() {
        return this.inner().targetGroup();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public JobStepImpl withExistingVersion(String resourceGroupName, String serverName, String jobAgentName, String jobName) {
        this.resourceGroupName = resourceGroupName;
        this.serverName = serverName;
        this.jobAgentName = jobAgentName;
        this.jobName = jobName;
        return this;
    }

    @Override
    public JobStepImpl withAction(JobStepAction action) {
        this.inner().withAction(action);
        return this;
    }

    @Override
    public JobStepImpl withCredential(String credential) {
        this.inner().withCredential(credential);
        return this;
    }

    @Override
    public JobStepImpl withTargetGroup(String targetGroup) {
        this.inner().withTargetGroup(targetGroup);
        return this;
    }

    @Override
    public JobStepImpl withExecutionOptions(JobStepExecutionOptions executionOptions) {
        this.inner().withExecutionOptions(executionOptions);
        return this;
    }

    @Override
    public JobStepImpl withOutput(JobStepOutput output) {
        this.inner().withOutput(output);
        return this;
    }

    @Override
    public JobStepImpl withStepId(Integer stepId) {
        this.inner().withStepId(stepId);
        return this;
    }

}
