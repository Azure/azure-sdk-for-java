/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v2018_06_01_preview.implementation;

import com.microsoft.azure.management.sql.v2018_06_01_preview.MetricName;
import com.microsoft.azure.management.sql.v2018_06_01_preview.UnitType;
import com.microsoft.azure.management.sql.v2018_06_01_preview.TimeGrainType;
import java.util.List;
import com.microsoft.azure.management.sql.v2018_06_01_preview.MetricTimeseries;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * A metric resource.
 */
public class MetricInner {
    /**
     * The name information for the metric.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private MetricName name;

    /**
     * The unit of the metric. Possible values include: 'Count', 'Bytes',
     * 'Seconds', 'Percent', 'CountPerSecond', 'BytesPerSecond'.
     */
    @JsonProperty(value = "unit", access = JsonProperty.Access.WRITE_ONLY)
    private UnitType unit;

    /**
     * The time step to be used to summarize the metric values. Possible values
     * include: 'PT5M', 'PT1H', 'P1D'.
     */
    @JsonProperty(value = "timeGrain", access = JsonProperty.Access.WRITE_ONLY)
    private TimeGrainType timeGrain;

    /**
     * The start time for the metric (ISO-8601 format).
     */
    @JsonProperty(value = "startTime", access = JsonProperty.Access.WRITE_ONLY)
    private String startTime;

    /**
     * The end time for the metric (ISO-8601 format).
     */
    @JsonProperty(value = "endTime", access = JsonProperty.Access.WRITE_ONLY)
    private String endTime;

    /**
     * The metric timeseries for the specified time window and timestep.
     */
    @JsonProperty(value = "timeseries", access = JsonProperty.Access.WRITE_ONLY)
    private List<MetricTimeseries> timeseries;

    /**
     * Get the name information for the metric.
     *
     * @return the name value
     */
    public MetricName name() {
        return this.name;
    }

    /**
     * Get the unit of the metric. Possible values include: 'Count', 'Bytes', 'Seconds', 'Percent', 'CountPerSecond', 'BytesPerSecond'.
     *
     * @return the unit value
     */
    public UnitType unit() {
        return this.unit;
    }

    /**
     * Get the time step to be used to summarize the metric values. Possible values include: 'PT5M', 'PT1H', 'P1D'.
     *
     * @return the timeGrain value
     */
    public TimeGrainType timeGrain() {
        return this.timeGrain;
    }

    /**
     * Get the start time for the metric (ISO-8601 format).
     *
     * @return the startTime value
     */
    public String startTime() {
        return this.startTime;
    }

    /**
     * Get the end time for the metric (ISO-8601 format).
     *
     * @return the endTime value
     */
    public String endTime() {
        return this.endTime;
    }

    /**
     * Get the metric timeseries for the specified time window and timestep.
     *
     * @return the timeseries value
     */
    public List<MetricTimeseries> timeseries() {
        return this.timeseries;
    }

}
