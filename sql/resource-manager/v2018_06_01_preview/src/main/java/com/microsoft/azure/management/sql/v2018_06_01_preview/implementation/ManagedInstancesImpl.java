/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.sql.v2018_06_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.sql.v2018_06_01_preview.ManagedInstances;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.sql.v2018_06_01_preview.ManagedInstance;

class ManagedInstancesImpl extends WrapperImpl<ManagedInstancesInner> implements ManagedInstances {
    private final SqlManager manager;

    ManagedInstancesImpl(SqlManager manager) {
        super(manager.inner().managedInstances());
        this.manager = manager;
    }

    public SqlManager manager() {
        return this.manager;
    }

    private ManagedInstanceImpl wrapModel(ManagedInstanceInner inner) {
        return  new ManagedInstanceImpl(inner, manager());
    }

    @Override
    public Observable<ManagedInstance> listByInstancePoolAsync(final String resourceGroupName, final String instancePoolName) {
        ManagedInstancesInner client = this.inner();
        return client.listByInstancePoolAsync(resourceGroupName, instancePoolName)
        .flatMapIterable(new Func1<Page<ManagedInstanceInner>, Iterable<ManagedInstanceInner>>() {
            @Override
            public Iterable<ManagedInstanceInner> call(Page<ManagedInstanceInner> page) {
                return page.items();
            }
        })
        .map(new Func1<ManagedInstanceInner, ManagedInstance>() {
            @Override
            public ManagedInstance call(ManagedInstanceInner inner) {
                return wrapModel(inner);
            }
        });
    }

}
