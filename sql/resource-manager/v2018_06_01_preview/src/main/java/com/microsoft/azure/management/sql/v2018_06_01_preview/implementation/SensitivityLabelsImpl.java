/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v2018_06_01_preview.implementation;

import com.microsoft.azure.management.sql.v2018_06_01_preview.SensitivityLabels;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;

class SensitivityLabelsImpl extends CreatableUpdatableImpl<SensitivityLabels, SensitivityLabelInner, SensitivityLabelsImpl> implements SensitivityLabels, SensitivityLabels.Definition, SensitivityLabels.Update {
    private final SqlManager manager;
    private String resourceGroupName;
    private String managedInstanceName;
    private String databaseName;
    private String schemaName;
    private String tableName;
    private String columnName;

    SensitivityLabelsImpl(String name, SqlManager manager) {
        super(name, new SensitivityLabelInner());
        this.manager = manager;
        // Set resource name
        this.columnName = name;
        //
    }

    SensitivityLabelsImpl(SensitivityLabelInner inner, SqlManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.columnName = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.managedInstanceName = IdParsingUtils.getValueFromIdByName(inner.id(), "managedInstances");
        this.databaseName = IdParsingUtils.getValueFromIdByName(inner.id(), "databases");
        this.schemaName = IdParsingUtils.getValueFromIdByName(inner.id(), "schemas");
        this.tableName = IdParsingUtils.getValueFromIdByName(inner.id(), "tables");
        this.columnName = IdParsingUtils.getValueFromIdByName(inner.id(), "columns");
        //
    }

    @Override
    public SqlManager manager() {
        return this.manager;
    }

    @Override
    public Observable<SensitivityLabels> createResourceAsync() {
        ManagedDatabaseSensitivityLabelsInner client = this.manager().inner().managedDatabaseSensitivityLabels();
        return client.createOrUpdateAsync(this.resourceGroupName, this.managedInstanceName, this.databaseName, this.schemaName, this.tableName, this.columnName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<SensitivityLabels> updateResourceAsync() {
        ManagedDatabaseSensitivityLabelsInner client = this.manager().inner().managedDatabaseSensitivityLabels();
        return client.createOrUpdateAsync(this.resourceGroupName, this.managedInstanceName, this.databaseName, this.schemaName, this.tableName, this.columnName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<SensitivityLabelInner> getInnerAsync() {
        ManagedDatabaseSensitivityLabelsInner client = this.manager().inner().managedDatabaseSensitivityLabels();
        return client.getAsync(this.resourceGroupName, this.managedInstanceName, this.databaseName, this.schemaName, this.tableName, this.columnName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String informationType() {
        return this.inner().informationType();
    }

    @Override
    public String informationTypeId() {
        return this.inner().informationTypeId();
    }

    @Override
    public Boolean isDisabled() {
        return this.inner().isDisabled();
    }

    @Override
    public String labelId() {
        return this.inner().labelId();
    }

    @Override
    public String labelName() {
        return this.inner().labelName();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public SensitivityLabelsImpl withExistingColumn(String resourceGroupName, String managedInstanceName, String databaseName, String schemaName, String tableName, String columnName) {
        this.resourceGroupName = resourceGroupName;
        this.managedInstanceName = managedInstanceName;
        this.databaseName = databaseName;
        this.schemaName = schemaName;
        this.tableName = tableName;
        this.columnName = columnName;
        return this;
    }

    @Override
    public SensitivityLabelsImpl withInformationType(String informationType) {
        this.inner().withInformationType(informationType);
        return this;
    }

    @Override
    public SensitivityLabelsImpl withInformationTypeId(String informationTypeId) {
        this.inner().withInformationTypeId(informationTypeId);
        return this;
    }

    @Override
    public SensitivityLabelsImpl withLabelId(String labelId) {
        this.inner().withLabelId(labelId);
        return this;
    }

    @Override
    public SensitivityLabelsImpl withLabelName(String labelName) {
        this.inner().withLabelName(labelName);
        return this;
    }

}
