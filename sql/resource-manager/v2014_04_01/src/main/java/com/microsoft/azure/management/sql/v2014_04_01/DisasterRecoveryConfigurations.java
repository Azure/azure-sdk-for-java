/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v2014_04_01;

import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.sql.v2014_04_01.implementation.DisasterRecoveryConfigurationsInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing DisasterRecoveryConfigurations.
 */
public interface DisasterRecoveryConfigurations extends HasInner<DisasterRecoveryConfigurationsInner> {
    /**
     * Lists a server's disaster recovery configuration.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DisasterRecoveryConfiguration> listAsync(String resourceGroupName, String serverName);

    /**
     * Deletes a disaster recovery configuration.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param disasterRecoveryConfigurationName The name of the disaster recovery configuration to be deleted.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String serverName, String disasterRecoveryConfigurationName);

    /**
     * Creates or updates a disaster recovery configuration.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param disasterRecoveryConfigurationName The name of the disaster recovery configuration to be created/updated.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DisasterRecoveryConfiguration> createOrUpdateAsync(String resourceGroupName, String serverName, String disasterRecoveryConfigurationName);

    /**
     * Gets a disaster recovery configuration.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param disasterRecoveryConfigurationName The name of the disaster recovery configuration.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DisasterRecoveryConfiguration> getAsync(String resourceGroupName, String serverName, String disasterRecoveryConfigurationName);

    /**
     * Fails over from the current primary server to this server.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param disasterRecoveryConfigurationName The name of the disaster recovery configuration to failover.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable failoverAsync(String resourceGroupName, String serverName, String disasterRecoveryConfigurationName);

    /**
     * Fails over from the current primary server to this server. This operation might result in data loss.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param disasterRecoveryConfigurationName The name of the disaster recovery configuration to failover forcefully.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable failoverAllowDataLossAsync(String resourceGroupName, String serverName, String disasterRecoveryConfigurationName);

}
