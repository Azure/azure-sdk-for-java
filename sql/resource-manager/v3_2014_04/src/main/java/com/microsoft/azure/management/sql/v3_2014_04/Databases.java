/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v3_2014_04;

import rx.Observable;
import com.microsoft.azure.management.sql.v3_2014_04.DatabasisServerMetric;
import com.microsoft.azure.management.sql.v3_2014_04.DatabasisServerMetricDefinition;

/**
 * Type representing Databases.
 */
public interface Databases {
    /**
     * Begins definition for a new Extension resource.
     * @param name resource name.
     * @return the first stage of the new Extension definition.
     */
    ImportExportResponse.DefinitionStages.Blank defineExtension(String name);

    /**
     * Exports a database to a bacpac.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database to be exported.
     * @param parameters The required parameters for exporting a database.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ImportExportResponse> exportAsync(String resourceGroupName, String serverName, String databaseName, ExportRequest parameters);

    /**
     * Imports a bacpac into a new database.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param parameters The required parameters for importing a Bacpac into a database.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<ImportExportResponse> importMethodAsync(String resourceGroupName, String serverName, ImportRequest parameters);

    /**
     * Returns database metrics.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database.
     * @param filter An OData filter expression that describes a subset of metrics to return.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DatabasisServerMetric> listMetricsAsync(String resourceGroupName, String serverName, String databaseName, String filter);

    /**
     * Returns database metric definitions.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<DatabasisServerMetricDefinition> listMetricDefinitionsAsync(String resourceGroupName, String serverName, String databaseName);

}
