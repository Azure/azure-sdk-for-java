/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.sql.v3_2014_04.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.sql.v3_2014_04.ElasticPools;
import rx.Observable;
import rx.functions.Func1;
import java.util.List;
import com.microsoft.azure.management.sql.v3_2014_04.ElasticPoolServerMetric;
import com.microsoft.azure.management.sql.v3_2014_04.ElasticPoolServerMetricDefinition;

class ElasticPoolsImpl extends WrapperImpl<ElasticPoolsInner> implements ElasticPools {
    private final SqlManager manager;

    ElasticPoolsImpl(SqlManager manager) {
        super(manager.inner().elasticPools());
        this.manager = manager;
    }

    public SqlManager manager() {
        return this.manager;
    }

    private ElasticPoolServerMetricImpl wrapElasticPoolServerMetricModel(MetricInner inner) {
        return  new ElasticPoolServerMetricImpl(inner, manager());
    }

    private ElasticPoolServerMetricDefinitionImpl wrapElasticPoolServerMetricDefinitionModel(MetricDefinitionInner inner) {
        return  new ElasticPoolServerMetricDefinitionImpl(inner, manager());
    }

    @Override
    public Observable<ElasticPoolServerMetric> listMetricsAsync(String resourceGroupName, String serverName, String elasticPoolName, String filter) {
        ElasticPoolsInner client = this.inner();
        return client.listMetricsAsync(resourceGroupName, serverName, elasticPoolName, filter)
        .flatMap(new Func1<List<MetricInner>, Observable<MetricInner>>() {
            @Override
            public Observable<MetricInner> call(List<MetricInner> innerList) {
                return Observable.from(innerList);
            }
        })
        .map(new Func1<MetricInner, ElasticPoolServerMetric>() {
            @Override
            public ElasticPoolServerMetric call(MetricInner inner) {
                return wrapElasticPoolServerMetricModel(inner);
            }
        });
    }

    @Override
    public Observable<ElasticPoolServerMetricDefinition> listMetricDefinitionsAsync(String resourceGroupName, String serverName, String elasticPoolName) {
        ElasticPoolsInner client = this.inner();
        return client.listMetricDefinitionsAsync(resourceGroupName, serverName, elasticPoolName)
        .flatMap(new Func1<List<MetricDefinitionInner>, Observable<MetricDefinitionInner>>() {
            @Override
            public Observable<MetricDefinitionInner> call(List<MetricDefinitionInner> innerList) {
                return Observable.from(innerList);
            }
        })
        .map(new Func1<MetricDefinitionInner, ElasticPoolServerMetricDefinition>() {
            @Override
            public ElasticPoolServerMetricDefinition call(MetricDefinitionInner inner) {
                return wrapElasticPoolServerMetricDefinitionModel(inner);
            }
        });
    }

}
