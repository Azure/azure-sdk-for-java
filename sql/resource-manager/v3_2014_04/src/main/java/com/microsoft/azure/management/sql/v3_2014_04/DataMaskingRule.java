/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v3_2014_04;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.sql.v3_2014_04.implementation.DataMaskingRuleInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.sql.v3_2014_04.implementation.SqlManager;

/**
 * Type representing DataMaskingRule.
 */
public interface DataMaskingRule extends HasInner<DataMaskingRuleInner>, Indexable, Updatable<DataMaskingRule.Update>, HasManager<SqlManager> {
    /**
     * @return the aliasName value.
     */
    String aliasName();

    /**
     * @return the columnName value.
     */
    String columnName();

    /**
     * @return the dataMaskingRuleId value.
     */
    String dataMaskingRuleId();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the kind value.
     */
    String kind();

    /**
     * @return the location value.
     */
    String location();

    /**
     * @return the maskingFunction value.
     */
    DataMaskingFunction maskingFunction();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the numberFrom value.
     */
    String numberFrom();

    /**
     * @return the numberTo value.
     */
    String numberTo();

    /**
     * @return the prefixSize value.
     */
    String prefixSize();

    /**
     * @return the replacementString value.
     */
    String replacementString();

    /**
     * @return the ruleState value.
     */
    DataMaskingRuleState ruleState();

    /**
     * @return the schemaName value.
     */
    String schemaName();

    /**
     * @return the suffixSize value.
     */
    String suffixSize();

    /**
     * @return the tableName value.
     */
    String tableName();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the DataMaskingRule definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithDataMaskingPolicy, DefinitionStages.WithColumnName, DefinitionStages.WithMaskingFunction, DefinitionStages.WithSchemaName, DefinitionStages.WithTableName, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of DataMaskingRule definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a DataMaskingRule definition.
         */
        interface Blank extends WithDataMaskingPolicy {
        }

        /**
         * The stage of the datamaskingrule definition allowing to specify DataMaskingPolicy.
         */
        interface WithDataMaskingPolicy {
           /**
            * Specifies resourceGroupName, serverName, databaseName.
            */
            WithColumnName withExistingDataMaskingPolicy(String resourceGroupName, String serverName, String databaseName);
        }

        /**
         * The stage of the datamaskingrule definition allowing to specify ColumnName.
         */
        interface WithColumnName {
           /**
            * Specifies columnName.
            */
            WithMaskingFunction withColumnName(String columnName);
        }

        /**
         * The stage of the datamaskingrule definition allowing to specify MaskingFunction.
         */
        interface WithMaskingFunction {
           /**
            * Specifies maskingFunction.
            */
            WithSchemaName withMaskingFunction(DataMaskingFunction maskingFunction);
        }

        /**
         * The stage of the datamaskingrule definition allowing to specify SchemaName.
         */
        interface WithSchemaName {
           /**
            * Specifies schemaName.
            */
            WithTableName withSchemaName(String schemaName);
        }

        /**
         * The stage of the datamaskingrule definition allowing to specify TableName.
         */
        interface WithTableName {
           /**
            * Specifies tableName.
            */
            WithCreate withTableName(String tableName);
        }

        /**
         * The stage of the datamaskingrule definition allowing to specify AliasName.
         */
        interface WithAliasName {
            /**
             * Specifies aliasName.
             */
            WithCreate withAliasName(String aliasName);
        }

        /**
         * The stage of the datamaskingrule definition allowing to specify NumberFrom.
         */
        interface WithNumberFrom {
            /**
             * Specifies numberFrom.
             */
            WithCreate withNumberFrom(String numberFrom);
        }

        /**
         * The stage of the datamaskingrule definition allowing to specify NumberTo.
         */
        interface WithNumberTo {
            /**
             * Specifies numberTo.
             */
            WithCreate withNumberTo(String numberTo);
        }

        /**
         * The stage of the datamaskingrule definition allowing to specify PrefixSize.
         */
        interface WithPrefixSize {
            /**
             * Specifies prefixSize.
             */
            WithCreate withPrefixSize(String prefixSize);
        }

        /**
         * The stage of the datamaskingrule definition allowing to specify ReplacementString.
         */
        interface WithReplacementString {
            /**
             * Specifies replacementString.
             */
            WithCreate withReplacementString(String replacementString);
        }

        /**
         * The stage of the datamaskingrule definition allowing to specify RuleState.
         */
        interface WithRuleState {
            /**
             * Specifies ruleState.
             */
            WithCreate withRuleState(DataMaskingRuleState ruleState);
        }

        /**
         * The stage of the datamaskingrule definition allowing to specify SuffixSize.
         */
        interface WithSuffixSize {
            /**
             * Specifies suffixSize.
             */
            WithCreate withSuffixSize(String suffixSize);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<DataMaskingRule>, DefinitionStages.WithAliasName, DefinitionStages.WithNumberFrom, DefinitionStages.WithNumberTo, DefinitionStages.WithPrefixSize, DefinitionStages.WithReplacementString, DefinitionStages.WithRuleState, DefinitionStages.WithSuffixSize {
        }
    }
    /**
     * The template for a DataMaskingRule update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<DataMaskingRule>, UpdateStages.WithAliasName, UpdateStages.WithNumberFrom, UpdateStages.WithNumberTo, UpdateStages.WithPrefixSize, UpdateStages.WithReplacementString, UpdateStages.WithRuleState, UpdateStages.WithSuffixSize {
    }

    /**
     * Grouping of DataMaskingRule update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the datamaskingrule update allowing to specify AliasName.
         */
        interface WithAliasName {
            /**
             * Specifies aliasName.
             */
            Update withAliasName(String aliasName);
        }

        /**
         * The stage of the datamaskingrule update allowing to specify NumberFrom.
         */
        interface WithNumberFrom {
            /**
             * Specifies numberFrom.
             */
            Update withNumberFrom(String numberFrom);
        }

        /**
         * The stage of the datamaskingrule update allowing to specify NumberTo.
         */
        interface WithNumberTo {
            /**
             * Specifies numberTo.
             */
            Update withNumberTo(String numberTo);
        }

        /**
         * The stage of the datamaskingrule update allowing to specify PrefixSize.
         */
        interface WithPrefixSize {
            /**
             * Specifies prefixSize.
             */
            Update withPrefixSize(String prefixSize);
        }

        /**
         * The stage of the datamaskingrule update allowing to specify ReplacementString.
         */
        interface WithReplacementString {
            /**
             * Specifies replacementString.
             */
            Update withReplacementString(String replacementString);
        }

        /**
         * The stage of the datamaskingrule update allowing to specify RuleState.
         */
        interface WithRuleState {
            /**
             * Specifies ruleState.
             */
            Update withRuleState(DataMaskingRuleState ruleState);
        }

        /**
         * The stage of the datamaskingrule update allowing to specify SuffixSize.
         */
        interface WithSuffixSize {
            /**
             * Specifies suffixSize.
             */
            Update withSuffixSize(String suffixSize);
        }

    }
}
