/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.v2017_10_01_preview.implementation;

import com.microsoft.azure.management.sql.v2017_10_01_preview.InterfaceEndpointProfileStateType;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * A interface endpoint profile resource.
 */
@JsonFlatten
public class InterfaceEndpointProfileInner extends ProxyResource {
    /**
     * The ARM resource id of the virtual network subnet.
     */
    @JsonProperty(value = "properties.virtualNetworkSubnetId", required = true)
    private String virtualNetworkSubnetId;

    /**
     * The Private ip associated with the interface endpoint profile.
     */
    @JsonProperty(value = "properties.privateIp", access = JsonProperty.Access.WRITE_ONLY)
    private String privateIp;

    /**
     * State of the interface endpoint profile. Possible values include:
     * 'Initializing', 'InProgress', 'Ready', 'Failed', 'Deleting', 'Unknown'.
     */
    @JsonProperty(value = "properties.state", access = JsonProperty.Access.WRITE_ONLY)
    private InterfaceEndpointProfileStateType state;

    /**
     * Get the ARM resource id of the virtual network subnet.
     *
     * @return the virtualNetworkSubnetId value
     */
    public String virtualNetworkSubnetId() {
        return this.virtualNetworkSubnetId;
    }

    /**
     * Set the ARM resource id of the virtual network subnet.
     *
     * @param virtualNetworkSubnetId the virtualNetworkSubnetId value to set
     * @return the InterfaceEndpointProfileInner object itself.
     */
    public InterfaceEndpointProfileInner withVirtualNetworkSubnetId(String virtualNetworkSubnetId) {
        this.virtualNetworkSubnetId = virtualNetworkSubnetId;
        return this;
    }

    /**
     * Get the Private ip associated with the interface endpoint profile.
     *
     * @return the privateIp value
     */
    public String privateIp() {
        return this.privateIp;
    }

    /**
     * Get state of the interface endpoint profile. Possible values include: 'Initializing', 'InProgress', 'Ready', 'Failed', 'Deleting', 'Unknown'.
     *
     * @return the state value
     */
    public InterfaceEndpointProfileStateType state() {
        return this.state;
    }

}
