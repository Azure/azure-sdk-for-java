/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.devtestlab.implementation;

import java.util.List;
import com.microsoft.azure.management.devtestlab.Subnet;
import com.microsoft.azure.management.devtestlab.ExternalSubnet;
import com.microsoft.azure.management.devtestlab.SubnetOverride;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.Resource;

/**
 * A virtual network.
 */
@JsonFlatten
public class VirtualNetworkInner extends Resource {
    /**
     * The allowed subnets of the virtual network.
     */
    @JsonProperty(value = "properties.allowedSubnets")
    private List<Subnet> allowedSubnets;

    /**
     * The description of the virtual network.
     */
    @JsonProperty(value = "properties.description")
    private String description;

    /**
     * The Microsoft.Network resource identifier of the virtual network.
     */
    @JsonProperty(value = "properties.externalProviderResourceId")
    private String externalProviderResourceId;

    /**
     * The external subnet properties.
     */
    @JsonProperty(value = "properties.externalSubnets")
    private List<ExternalSubnet> externalSubnets;

    /**
     * The subnet overrides of the virtual network.
     */
    @JsonProperty(value = "properties.subnetOverrides")
    private List<SubnetOverride> subnetOverrides;

    /**
     * The creation date of the virtual network.
     */
    @JsonProperty(value = "properties.createdDate", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime createdDate;

    /**
     * The provisioning status of the resource.
     */
    @JsonProperty(value = "properties.provisioningState")
    private String provisioningState;

    /**
     * The unique immutable identifier of a resource (Guid).
     */
    @JsonProperty(value = "properties.uniqueIdentifier")
    private String uniqueIdentifier;

    /**
     * Get the allowedSubnets value.
     *
     * @return the allowedSubnets value
     */
    public List<Subnet> allowedSubnets() {
        return this.allowedSubnets;
    }

    /**
     * Set the allowedSubnets value.
     *
     * @param allowedSubnets the allowedSubnets value to set
     * @return the VirtualNetworkInner object itself.
     */
    public VirtualNetworkInner withAllowedSubnets(List<Subnet> allowedSubnets) {
        this.allowedSubnets = allowedSubnets;
        return this;
    }

    /**
     * Get the description value.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description value.
     *
     * @param description the description value to set
     * @return the VirtualNetworkInner object itself.
     */
    public VirtualNetworkInner withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the externalProviderResourceId value.
     *
     * @return the externalProviderResourceId value
     */
    public String externalProviderResourceId() {
        return this.externalProviderResourceId;
    }

    /**
     * Set the externalProviderResourceId value.
     *
     * @param externalProviderResourceId the externalProviderResourceId value to set
     * @return the VirtualNetworkInner object itself.
     */
    public VirtualNetworkInner withExternalProviderResourceId(String externalProviderResourceId) {
        this.externalProviderResourceId = externalProviderResourceId;
        return this;
    }

    /**
     * Get the externalSubnets value.
     *
     * @return the externalSubnets value
     */
    public List<ExternalSubnet> externalSubnets() {
        return this.externalSubnets;
    }

    /**
     * Set the externalSubnets value.
     *
     * @param externalSubnets the externalSubnets value to set
     * @return the VirtualNetworkInner object itself.
     */
    public VirtualNetworkInner withExternalSubnets(List<ExternalSubnet> externalSubnets) {
        this.externalSubnets = externalSubnets;
        return this;
    }

    /**
     * Get the subnetOverrides value.
     *
     * @return the subnetOverrides value
     */
    public List<SubnetOverride> subnetOverrides() {
        return this.subnetOverrides;
    }

    /**
     * Set the subnetOverrides value.
     *
     * @param subnetOverrides the subnetOverrides value to set
     * @return the VirtualNetworkInner object itself.
     */
    public VirtualNetworkInner withSubnetOverrides(List<SubnetOverride> subnetOverrides) {
        this.subnetOverrides = subnetOverrides;
        return this;
    }

    /**
     * Get the createdDate value.
     *
     * @return the createdDate value
     */
    public DateTime createdDate() {
        return this.createdDate;
    }

    /**
     * Get the provisioningState value.
     *
     * @return the provisioningState value
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set the provisioningState value.
     *
     * @param provisioningState the provisioningState value to set
     * @return the VirtualNetworkInner object itself.
     */
    public VirtualNetworkInner withProvisioningState(String provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get the uniqueIdentifier value.
     *
     * @return the uniqueIdentifier value
     */
    public String uniqueIdentifier() {
        return this.uniqueIdentifier;
    }

    /**
     * Set the uniqueIdentifier value.
     *
     * @param uniqueIdentifier the uniqueIdentifier value to set
     * @return the VirtualNetworkInner object itself.
     */
    public VirtualNetworkInner withUniqueIdentifier(String uniqueIdentifier) {
        this.uniqueIdentifier = uniqueIdentifier;
        return this;
    }

}
