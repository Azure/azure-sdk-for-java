/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.adhybridhealthservice.implementation;

import com.microsoft.azure.AzureClient;
import com.microsoft.azure.AzureServiceClient;
import com.microsoft.rest.credentials.ServiceClientCredentials;
import com.microsoft.rest.RestClient;

/**
 * Initializes a new instance of the ADHybridHealthServiceImpl class.
 */
public class ADHybridHealthServiceImpl extends AzureServiceClient {
    /** the {@link AzureClient} used for long running operations. */
    private AzureClient azureClient;

    /**
     * Gets the {@link AzureClient} used for long running operations.
     * @return the azure client;
     */
    public AzureClient getAzureClient() {
        return this.azureClient;
    }

    /** The version of the API to be used with the client request. */
    private String apiVersion;

    /**
     * Gets The version of the API to be used with the client request.
     *
     * @return the apiVersion value.
     */
    public String apiVersion() {
        return this.apiVersion;
    }

    /** The preferred language for the response. */
    private String acceptLanguage;

    /**
     * Gets The preferred language for the response.
     *
     * @return the acceptLanguage value.
     */
    public String acceptLanguage() {
        return this.acceptLanguage;
    }

    /**
     * Sets The preferred language for the response.
     *
     * @param acceptLanguage the acceptLanguage value.
     * @return the service client itself
     */
    public ADHybridHealthServiceImpl withAcceptLanguage(String acceptLanguage) {
        this.acceptLanguage = acceptLanguage;
        return this;
    }

    /** The retry timeout in seconds for Long Running Operations. Default value is 30. */
    private int longRunningOperationRetryTimeout;

    /**
     * Gets The retry timeout in seconds for Long Running Operations. Default value is 30.
     *
     * @return the longRunningOperationRetryTimeout value.
     */
    public int longRunningOperationRetryTimeout() {
        return this.longRunningOperationRetryTimeout;
    }

    /**
     * Sets The retry timeout in seconds for Long Running Operations. Default value is 30.
     *
     * @param longRunningOperationRetryTimeout the longRunningOperationRetryTimeout value.
     * @return the service client itself
     */
    public ADHybridHealthServiceImpl withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout) {
        this.longRunningOperationRetryTimeout = longRunningOperationRetryTimeout;
        return this;
    }

    /** Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true. */
    private boolean generateClientRequestId;

    /**
     * Gets Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.
     *
     * @return the generateClientRequestId value.
     */
    public boolean generateClientRequestId() {
        return this.generateClientRequestId;
    }

    /**
     * Sets Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.
     *
     * @param generateClientRequestId the generateClientRequestId value.
     * @return the service client itself
     */
    public ADHybridHealthServiceImpl withGenerateClientRequestId(boolean generateClientRequestId) {
        this.generateClientRequestId = generateClientRequestId;
        return this;
    }

    /**
     * The AddsServicesInner object to access its operations.
     */
    private AddsServicesInner addsServices;

    /**
     * Gets the AddsServicesInner object to access its operations.
     * @return the AddsServicesInner object.
     */
    public AddsServicesInner addsServices() {
        return this.addsServices;
    }

    /**
     * The AlertsInner object to access its operations.
     */
    private AlertsInner alerts;

    /**
     * Gets the AlertsInner object to access its operations.
     * @return the AlertsInner object.
     */
    public AlertsInner alerts() {
        return this.alerts;
    }

    /**
     * The ConfigurationsInner object to access its operations.
     */
    private ConfigurationsInner configurations;

    /**
     * Gets the ConfigurationsInner object to access its operations.
     * @return the ConfigurationsInner object.
     */
    public ConfigurationsInner configurations() {
        return this.configurations;
    }

    /**
     * The DimensionsInner object to access its operations.
     */
    private DimensionsInner dimensions;

    /**
     * Gets the DimensionsInner object to access its operations.
     * @return the DimensionsInner object.
     */
    public DimensionsInner dimensions() {
        return this.dimensions;
    }

    /**
     * The AddsServiceMembersInner object to access its operations.
     */
    private AddsServiceMembersInner addsServiceMembers;

    /**
     * Gets the AddsServiceMembersInner object to access its operations.
     * @return the AddsServiceMembersInner object.
     */
    public AddsServiceMembersInner addsServiceMembers() {
        return this.addsServiceMembers;
    }

    /**
     * The AdDomainServiceMembersInner object to access its operations.
     */
    private AdDomainServiceMembersInner adDomainServiceMembers;

    /**
     * Gets the AdDomainServiceMembersInner object to access its operations.
     * @return the AdDomainServiceMembersInner object.
     */
    public AdDomainServiceMembersInner adDomainServiceMembers() {
        return this.adDomainServiceMembers;
    }

    /**
     * The AddsServicesUserPreferencesInner object to access its operations.
     */
    private AddsServicesUserPreferencesInner addsServicesUserPreferences;

    /**
     * Gets the AddsServicesUserPreferencesInner object to access its operations.
     * @return the AddsServicesUserPreferencesInner object.
     */
    public AddsServicesUserPreferencesInner addsServicesUserPreferences() {
        return this.addsServicesUserPreferences;
    }

    /**
     * The AddsServicesReplicationStatusInner object to access its operations.
     */
    private AddsServicesReplicationStatusInner addsServicesReplicationStatus;

    /**
     * Gets the AddsServicesReplicationStatusInner object to access its operations.
     * @return the AddsServicesReplicationStatusInner object.
     */
    public AddsServicesReplicationStatusInner addsServicesReplicationStatus() {
        return this.addsServicesReplicationStatus;
    }

    /**
     * The AddsServicesServiceMembersInner object to access its operations.
     */
    private AddsServicesServiceMembersInner addsServicesServiceMembers;

    /**
     * Gets the AddsServicesServiceMembersInner object to access its operations.
     * @return the AddsServicesServiceMembersInner object.
     */
    public AddsServicesServiceMembersInner addsServicesServiceMembers() {
        return this.addsServicesServiceMembers;
    }

    /**
     * The OperationsInner object to access its operations.
     */
    private OperationsInner operations;

    /**
     * Gets the OperationsInner object to access its operations.
     * @return the OperationsInner object.
     */
    public OperationsInner operations() {
        return this.operations;
    }

    /**
     * The ReportsInner object to access its operations.
     */
    private ReportsInner reports;

    /**
     * Gets the ReportsInner object to access its operations.
     * @return the ReportsInner object.
     */
    public ReportsInner reports() {
        return this.reports;
    }

    /**
     * The ServicesInner object to access its operations.
     */
    private ServicesInner services;

    /**
     * Gets the ServicesInner object to access its operations.
     * @return the ServicesInner object.
     */
    public ServicesInner services() {
        return this.services;
    }

    /**
     * The ServiceMembersInner object to access its operations.
     */
    private ServiceMembersInner serviceMembers;

    /**
     * Gets the ServiceMembersInner object to access its operations.
     * @return the ServiceMembersInner object.
     */
    public ServiceMembersInner serviceMembers() {
        return this.serviceMembers;
    }

    /**
     * Initializes an instance of ADHybridHealthService client.
     *
     * @param credentials the management credentials for Azure
     */
    public ADHybridHealthServiceImpl(ServiceClientCredentials credentials) {
        this("https://management.azure.com", credentials);
    }

    /**
     * Initializes an instance of ADHybridHealthService client.
     *
     * @param baseUrl the base URL of the host
     * @param credentials the management credentials for Azure
     */
    public ADHybridHealthServiceImpl(String baseUrl, ServiceClientCredentials credentials) {
        super(baseUrl, credentials);
        initialize();
    }

    /**
     * Initializes an instance of ADHybridHealthService client.
     *
     * @param restClient the REST client to connect to Azure.
     */
    public ADHybridHealthServiceImpl(RestClient restClient) {
        super(restClient);
        initialize();
    }

    protected void initialize() {
        this.apiVersion = "2014-01-01";
        this.acceptLanguage = "en-US";
        this.longRunningOperationRetryTimeout = 30;
        this.generateClientRequestId = true;
        this.addsServices = new AddsServicesInner(restClient().retrofit(), this);
        this.alerts = new AlertsInner(restClient().retrofit(), this);
        this.configurations = new ConfigurationsInner(restClient().retrofit(), this);
        this.dimensions = new DimensionsInner(restClient().retrofit(), this);
        this.addsServiceMembers = new AddsServiceMembersInner(restClient().retrofit(), this);
        this.adDomainServiceMembers = new AdDomainServiceMembersInner(restClient().retrofit(), this);
        this.addsServicesUserPreferences = new AddsServicesUserPreferencesInner(restClient().retrofit(), this);
        this.addsServicesReplicationStatus = new AddsServicesReplicationStatusInner(restClient().retrofit(), this);
        this.addsServicesServiceMembers = new AddsServicesServiceMembersInner(restClient().retrofit(), this);
        this.operations = new OperationsInner(restClient().retrofit(), this);
        this.reports = new ReportsInner(restClient().retrofit(), this);
        this.services = new ServicesInner(restClient().retrofit(), this);
        this.serviceMembers = new ServiceMembersInner(restClient().retrofit(), this);
        this.azureClient = new AzureClient(this);
    }

    /**
     * Gets the User-Agent header for the client.
     *
     * @return the user agent string.
     */
    @Override
    public String userAgent() {
        return String.format("%s (%s, %s, auto-generated)", super.userAgent(), "ADHybridHealthService", "2014-01-01");
    }
}
