/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.adhybridhealthservice.implementation;

import com.microsoft.azure.management.adhybridhealthservice.HealthStatus;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The connector object error.
 */
public class DimensionInner {
    /**
     * The health status for the domain controller. Possible values include:
     * 'Healthy', 'Warning', 'Error', 'NotMonitored', 'Missing'.
     */
    @JsonProperty(value = "health")
    private HealthStatus health;

    /**
     * List of service specific configuration properties.
     */
    @JsonProperty(value = "simpleProperties")
    private Object simpleProperties;

    /**
     * The count of alerts that are currently active for the service.
     */
    @JsonProperty(value = "activeAlerts")
    private Integer activeAlerts;

    /**
     * The additional information related to the service.
     */
    @JsonProperty(value = "additionalInformation")
    private String additionalInformation;

    /**
     * The date or time , in UTC, when the service properties were last
     * updated.
     */
    @JsonProperty(value = "lastUpdated")
    private DateTime lastUpdated;

    /**
     * The display name of the service.
     */
    @JsonProperty(value = "displayName")
    private String displayName;

    /**
     * The total count of alerts that has been resolved for the service.
     */
    @JsonProperty(value = "resolvedAlerts")
    private Integer resolvedAlerts;

    /**
     * The signature of the service.
     */
    @JsonProperty(value = "signature")
    private String signature;

    /**
     * The service type for the services onboarded to Azure Active Directory
     * Connect Health. Depending on whether the service is monitoring, ADFS,
     * Sync or ADDS roles, the service type can either be AdFederationService
     * or AadSyncService or AdDomainService.
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the health status for the domain controller. Possible values include: 'Healthy', 'Warning', 'Error', 'NotMonitored', 'Missing'.
     *
     * @return the health value
     */
    public HealthStatus health() {
        return this.health;
    }

    /**
     * Set the health status for the domain controller. Possible values include: 'Healthy', 'Warning', 'Error', 'NotMonitored', 'Missing'.
     *
     * @param health the health value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withHealth(HealthStatus health) {
        this.health = health;
        return this;
    }

    /**
     * Get list of service specific configuration properties.
     *
     * @return the simpleProperties value
     */
    public Object simpleProperties() {
        return this.simpleProperties;
    }

    /**
     * Set list of service specific configuration properties.
     *
     * @param simpleProperties the simpleProperties value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withSimpleProperties(Object simpleProperties) {
        this.simpleProperties = simpleProperties;
        return this;
    }

    /**
     * Get the count of alerts that are currently active for the service.
     *
     * @return the activeAlerts value
     */
    public Integer activeAlerts() {
        return this.activeAlerts;
    }

    /**
     * Set the count of alerts that are currently active for the service.
     *
     * @param activeAlerts the activeAlerts value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withActiveAlerts(Integer activeAlerts) {
        this.activeAlerts = activeAlerts;
        return this;
    }

    /**
     * Get the additional information related to the service.
     *
     * @return the additionalInformation value
     */
    public String additionalInformation() {
        return this.additionalInformation;
    }

    /**
     * Set the additional information related to the service.
     *
     * @param additionalInformation the additionalInformation value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withAdditionalInformation(String additionalInformation) {
        this.additionalInformation = additionalInformation;
        return this;
    }

    /**
     * Get the date or time , in UTC, when the service properties were last updated.
     *
     * @return the lastUpdated value
     */
    public DateTime lastUpdated() {
        return this.lastUpdated;
    }

    /**
     * Set the date or time , in UTC, when the service properties were last updated.
     *
     * @param lastUpdated the lastUpdated value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withLastUpdated(DateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }

    /**
     * Get the display name of the service.
     *
     * @return the displayName value
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the display name of the service.
     *
     * @param displayName the displayName value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the total count of alerts that has been resolved for the service.
     *
     * @return the resolvedAlerts value
     */
    public Integer resolvedAlerts() {
        return this.resolvedAlerts;
    }

    /**
     * Set the total count of alerts that has been resolved for the service.
     *
     * @param resolvedAlerts the resolvedAlerts value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withResolvedAlerts(Integer resolvedAlerts) {
        this.resolvedAlerts = resolvedAlerts;
        return this;
    }

    /**
     * Get the signature of the service.
     *
     * @return the signature value
     */
    public String signature() {
        return this.signature;
    }

    /**
     * Set the signature of the service.
     *
     * @param signature the signature value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withSignature(String signature) {
        this.signature = signature;
        return this;
    }

    /**
     * Get the service type for the services onboarded to Azure Active Directory Connect Health. Depending on whether the service is monitoring, ADFS, Sync or ADDS roles, the service type can either be AdFederationService or AadSyncService or AdDomainService.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the service type for the services onboarded to Azure Active Directory Connect Health. Depending on whether the service is monitoring, ADFS, Sync or ADDS roles, the service type can either be AdFederationService or AadSyncService or AdDomainService.
     *
     * @param type the type value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withType(String type) {
        this.type = type;
        return this;
    }

}
