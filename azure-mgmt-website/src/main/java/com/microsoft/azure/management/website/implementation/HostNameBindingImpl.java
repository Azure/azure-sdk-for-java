/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.website.implementation;

import com.microsoft.azure.management.resources.fluentcore.arm.models.implementation.ResourceChildResourceImpl;
import com.microsoft.azure.management.resources.fluentcore.model.Creatable;
import com.microsoft.azure.management.resources.fluentcore.utils.Utils;
import com.microsoft.azure.management.website.AzureResourceType;
import com.microsoft.azure.management.website.CustomHostNameDnsRecordType;
import com.microsoft.azure.management.website.HostNameBinding;
import com.microsoft.azure.management.website.HostNameType;
import com.microsoft.azure.management.website.WebApp;
import com.microsoft.rest.ServiceCall;
import com.microsoft.rest.ServiceCallback;

/**
 * A host name binding object.
 */
class HostNameBindingImpl
        extends ResourceChildResourceImpl<HostNameBinding, HostNameBindingInner, HostNameBindingImpl, WebAppImpl>
        implements
        Creatable<HostNameBinding>,
        HostNameBinding,
        HostNameBinding.Definition<WebApp.Update> {
    private SitesInner client;
    HostNameBindingImpl(String name, HostNameBindingInner innerObject, WebAppImpl parent, SitesInner client) {
        super(name, innerObject, parent);
        this.client = client;
    }

    @Override
    public String name() {
        if (this.inner().name() == null) {
            return this.key(); // Not yet created, so use the key
        } else {
            return this.inner().name();
        }
    }

    @Override
    public String hostNameBindingName() {
        return inner().hostNameBindingName();
    }

    @Override
    public String siteName() {
        return inner().siteName();
    }

    @Override
    public String domainId() {
        return inner().domainId();
    }

    @Override
    public String azureResourceName() {
        return inner().azureResourceName();
    }

    @Override
    public AzureResourceType azureResourceType() {
        return inner().azureResourceType();
    }

    @Override
    public CustomHostNameDnsRecordType customHostNameDnsRecordType() {
        return inner().customHostNameDnsRecordType();
    }

    @Override
    public HostNameType hostNameType() {
        return inner().hostNameType();
    }

    @Override
    public WebAppImpl attach() {
        parent().withHostNameBinding(this);
        return parent();
    }

    @Override
    public HostNameBindingImpl withHostNameType(HostNameType hostNameType) {
        inner().withHostNameType(hostNameType);
        return this;
    }

    @Override
    public HostNameBindingImpl withHostNameDnsRecordType(CustomHostNameDnsRecordType hostNameDnsRecordType) {
        inner().withCustomHostNameDnsRecordType(hostNameDnsRecordType);
        return this;
    }

    @Override
    protected void createResource() throws Exception {
        client.createOrUpdateSiteHostNameBinding(parent().resourceGroupName(), parent().name(), name(), inner());
    }

    @Override
    protected ServiceCall createResourceAsync(ServiceCallback<Void> callback) {
        return client.createOrUpdateSiteHostNameBindingAsync(parent().resourceGroupName(), parent().name(), name(), inner(),
                Utils.fromVoidCallback(this, callback));
    }

    @Override
    public HostNameBindingImpl refresh() throws Exception {
        this.setInner(client.getSiteHostNameBinding(parent().resourceGroupName(), parent().name(), name()).getBody());
        return this;
    }
}
