/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.apimanagement.v2018_06_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.apimanagement.v2018_06_01_preview.TagDescriptions;
import rx.Completable;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.apimanagement.v2018_06_01_preview.TagDescriptionContract;

class TagDescriptionsImpl extends WrapperImpl<TagDescriptionsInner> implements TagDescriptions {
    private final ApiManagementManager manager;

    TagDescriptionsImpl(ApiManagementManager manager) {
        super(manager.inner().tagDescriptions());
        this.manager = manager;
    }

    public ApiManagementManager manager() {
        return this.manager;
    }

    @Override
    public TagDescriptionContractImpl define(String name) {
        return wrapModel(name);
    }

    private TagDescriptionContractImpl wrapModel(TagDescriptionContractInner inner) {
        return  new TagDescriptionContractImpl(inner, manager());
    }

    private TagDescriptionContractImpl wrapModel(String name) {
        return new TagDescriptionContractImpl(name, this.manager());
    }

    @Override
    public Completable getEntityStateAsync(String resourceGroupName, String serviceName, String apiId, String tagId) {
        TagDescriptionsInner client = this.inner();
        return client.getEntityStateAsync(resourceGroupName, serviceName, apiId, tagId).toCompletable();
    }

    @Override
    public Observable<TagDescriptionContract> listByApiAsync(final String resourceGroupName, final String serviceName, final String apiId) {
        TagDescriptionsInner client = this.inner();
        return client.listByApiAsync(resourceGroupName, serviceName, apiId)
        .flatMapIterable(new Func1<Page<TagDescriptionContractInner>, Iterable<TagDescriptionContractInner>>() {
            @Override
            public Iterable<TagDescriptionContractInner> call(Page<TagDescriptionContractInner> page) {
                return page.items();
            }
        })
        .map(new Func1<TagDescriptionContractInner, TagDescriptionContract>() {
            @Override
            public TagDescriptionContract call(TagDescriptionContractInner inner) {
                return wrapModel(inner);
            }
        });
    }

    @Override
    public Observable<TagDescriptionContract> getAsync(String resourceGroupName, String serviceName, String apiId, String tagId) {
        TagDescriptionsInner client = this.inner();
        return client.getAsync(resourceGroupName, serviceName, apiId, tagId)
        .map(new Func1<TagDescriptionContractInner, TagDescriptionContract>() {
            @Override
            public TagDescriptionContract call(TagDescriptionContractInner inner) {
                return wrapModel(inner);
            }
       });
    }

    @Override
    public Completable deleteAsync(String resourceGroupName, String serviceName, String apiId, String tagId, String ifMatch) {
        TagDescriptionsInner client = this.inner();
        return client.deleteAsync(resourceGroupName, serviceName, apiId, tagId, ifMatch).toCompletable();
    }

}
