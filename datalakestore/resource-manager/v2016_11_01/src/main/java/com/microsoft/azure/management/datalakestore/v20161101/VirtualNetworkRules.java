/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datalakestore.v2016_11_01;

import com.microsoft.azure.CloudException;
import com.microsoft.azure.ListOperationCallback;
import com.microsoft.azure.management.datalakestore.v20161101.models.CreateOrUpdateVirtualNetworkRuleParameters;
import com.microsoft.azure.management.datalakestore.v20161101.models.UpdateVirtualNetworkRuleParameters;
import com.microsoft.azure.management.datalakestore.v20161101.models.VirtualNetworkRule;
import com.microsoft.azure.Page;
import com.microsoft.azure.PagedList;
import com.microsoft.rest.ServiceCallback;
import com.microsoft.rest.ServiceFuture;
import com.microsoft.rest.ServiceResponse;
import java.io.IOException;
import java.util.List;
import rx.Observable;

/**
 * An instance of this class provides access to all the operations defined
 * in VirtualNetworkRules.
 */
public interface VirtualNetworkRules {
    /**
     * Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the PagedList&lt;VirtualNetworkRule&gt; object if successful.
     */
    PagedList<VirtualNetworkRule> listByAccount(final String resourceGroupName, final String accountName);

    /**
     * Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<List<VirtualNetworkRule>> listByAccountAsync(final String resourceGroupName, final String accountName, final ListOperationCallback<VirtualNetworkRule> serviceCallback);

    /**
     * Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;VirtualNetworkRule&gt; object
     */
    Observable<Page<VirtualNetworkRule>> listByAccountAsync(final String resourceGroupName, final String accountName);

    /**
     * Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;VirtualNetworkRule&gt; object
     */
    Observable<ServiceResponse<Page<VirtualNetworkRule>>> listByAccountWithServiceResponseAsync(final String resourceGroupName, final String accountName);

    /**
     * Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to create or update.
     * @param parameters Parameters supplied to create or update the virtual network rule.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the VirtualNetworkRule object if successful.
     */
    VirtualNetworkRule createOrUpdate(String resourceGroupName, String accountName, String virtualNetworkRuleName, CreateOrUpdateVirtualNetworkRuleParameters parameters);

    /**
     * Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to create or update.
     * @param parameters Parameters supplied to create or update the virtual network rule.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<VirtualNetworkRule> createOrUpdateAsync(String resourceGroupName, String accountName, String virtualNetworkRuleName, CreateOrUpdateVirtualNetworkRuleParameters parameters, final ServiceCallback<VirtualNetworkRule> serviceCallback);

    /**
     * Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to create or update.
     * @param parameters Parameters supplied to create or update the virtual network rule.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the VirtualNetworkRule object
     */
    Observable<VirtualNetworkRule> createOrUpdateAsync(String resourceGroupName, String accountName, String virtualNetworkRuleName, CreateOrUpdateVirtualNetworkRuleParameters parameters);

    /**
     * Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to create or update.
     * @param parameters Parameters supplied to create or update the virtual network rule.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the VirtualNetworkRule object
     */
    Observable<ServiceResponse<VirtualNetworkRule>> createOrUpdateWithServiceResponseAsync(String resourceGroupName, String accountName, String virtualNetworkRuleName, CreateOrUpdateVirtualNetworkRuleParameters parameters);

    /**
     * Gets the specified Data Lake Store virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to retrieve.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the VirtualNetworkRule object if successful.
     */
    VirtualNetworkRule get(String resourceGroupName, String accountName, String virtualNetworkRuleName);

    /**
     * Gets the specified Data Lake Store virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to retrieve.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<VirtualNetworkRule> getAsync(String resourceGroupName, String accountName, String virtualNetworkRuleName, final ServiceCallback<VirtualNetworkRule> serviceCallback);

    /**
     * Gets the specified Data Lake Store virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to retrieve.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the VirtualNetworkRule object
     */
    Observable<VirtualNetworkRule> getAsync(String resourceGroupName, String accountName, String virtualNetworkRuleName);

    /**
     * Gets the specified Data Lake Store virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to retrieve.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the VirtualNetworkRule object
     */
    Observable<ServiceResponse<VirtualNetworkRule>> getWithServiceResponseAsync(String resourceGroupName, String accountName, String virtualNetworkRuleName);

    /**
     * Updates the specified virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the VirtualNetworkRule object if successful.
     */
    VirtualNetworkRule update(String resourceGroupName, String accountName, String virtualNetworkRuleName);

    /**
     * Updates the specified virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to update.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<VirtualNetworkRule> updateAsync(String resourceGroupName, String accountName, String virtualNetworkRuleName, final ServiceCallback<VirtualNetworkRule> serviceCallback);

    /**
     * Updates the specified virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the VirtualNetworkRule object
     */
    Observable<VirtualNetworkRule> updateAsync(String resourceGroupName, String accountName, String virtualNetworkRuleName);

    /**
     * Updates the specified virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to update.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the VirtualNetworkRule object
     */
    Observable<ServiceResponse<VirtualNetworkRule>> updateWithServiceResponseAsync(String resourceGroupName, String accountName, String virtualNetworkRuleName);
    /**
     * Updates the specified virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to update.
     * @param parameters Parameters supplied to update the virtual network rule.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the VirtualNetworkRule object if successful.
     */
    VirtualNetworkRule update(String resourceGroupName, String accountName, String virtualNetworkRuleName, UpdateVirtualNetworkRuleParameters parameters);

    /**
     * Updates the specified virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to update.
     * @param parameters Parameters supplied to update the virtual network rule.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<VirtualNetworkRule> updateAsync(String resourceGroupName, String accountName, String virtualNetworkRuleName, UpdateVirtualNetworkRuleParameters parameters, final ServiceCallback<VirtualNetworkRule> serviceCallback);

    /**
     * Updates the specified virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to update.
     * @param parameters Parameters supplied to update the virtual network rule.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the VirtualNetworkRule object
     */
    Observable<VirtualNetworkRule> updateAsync(String resourceGroupName, String accountName, String virtualNetworkRuleName, UpdateVirtualNetworkRuleParameters parameters);

    /**
     * Updates the specified virtual network rule.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to update.
     * @param parameters Parameters supplied to update the virtual network rule.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the VirtualNetworkRule object
     */
    Observable<ServiceResponse<VirtualNetworkRule>> updateWithServiceResponseAsync(String resourceGroupName, String accountName, String virtualNetworkRuleName, UpdateVirtualNetworkRuleParameters parameters);

    /**
     * Deletes the specified virtual network rule from the specified Data Lake Store account.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to delete.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     */
    void delete(String resourceGroupName, String accountName, String virtualNetworkRuleName);

    /**
     * Deletes the specified virtual network rule from the specified Data Lake Store account.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to delete.
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<Void> deleteAsync(String resourceGroupName, String accountName, String virtualNetworkRuleName, final ServiceCallback<Void> serviceCallback);

    /**
     * Deletes the specified virtual network rule from the specified Data Lake Store account.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to delete.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceResponse} object if successful.
     */
    Observable<Void> deleteAsync(String resourceGroupName, String accountName, String virtualNetworkRuleName);

    /**
     * Deletes the specified virtual network rule from the specified Data Lake Store account.
     *
     * @param resourceGroupName The name of the Azure resource group.
     * @param accountName The name of the Data Lake Store account.
     * @param virtualNetworkRuleName The name of the virtual network rule to delete.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceResponse} object if successful.
     */
    Observable<ServiceResponse<Void>> deleteWithServiceResponseAsync(String resourceGroupName, String accountName, String virtualNetworkRuleName);

    /**
     * Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws CloudException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the PagedList&lt;VirtualNetworkRule&gt; object if successful.
     */
    PagedList<VirtualNetworkRule> listByAccountNext(final String nextPageLink);

    /**
     * Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param serviceFuture the ServiceFuture object tracking the Retrofit calls
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    ServiceFuture<List<VirtualNetworkRule>> listByAccountNextAsync(final String nextPageLink, final ServiceFuture<List<VirtualNetworkRule>> serviceFuture, final ListOperationCallback<VirtualNetworkRule> serviceCallback);

    /**
     * Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;VirtualNetworkRule&gt; object
     */
    Observable<Page<VirtualNetworkRule>> listByAccountNextAsync(final String nextPageLink);

    /**
     * Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.
     *
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the PagedList&lt;VirtualNetworkRule&gt; object
     */
    Observable<ServiceResponse<Page<VirtualNetworkRule>>> listByAccountNextWithServiceResponseAsync(final String nextPageLink);

}
