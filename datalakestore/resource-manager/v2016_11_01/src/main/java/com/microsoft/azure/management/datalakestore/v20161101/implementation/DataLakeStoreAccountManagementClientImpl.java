/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datalakestore.v2016_11_01.implementation;

import com.microsoft.azure.AzureClient;
import com.microsoft.azure.AzureServiceClient;
import com.microsoft.azure.management.datalakestore.v20161101.Accounts;
import com.microsoft.azure.management.datalakestore.v20161101.DataLakeStoreAccountManagementClient;
import com.microsoft.azure.management.datalakestore.v20161101.FirewallRules;
import com.microsoft.azure.management.datalakestore.v20161101.Locations;
import com.microsoft.azure.management.datalakestore.v20161101.Operations;
import com.microsoft.azure.management.datalakestore.v20161101.TrustedIdProviders;
import com.microsoft.azure.management.datalakestore.v20161101.VirtualNetworkRules;
import com.microsoft.rest.credentials.ServiceClientCredentials;
import com.microsoft.rest.RestClient;

/**
 * Initializes a new instance of the DataLakeStoreAccountManagementClientImpl class.
 */
public class DataLakeStoreAccountManagementClientImpl extends AzureServiceClient implements DataLakeStoreAccountManagementClient {
    /** the {@link AzureClient} used for long running operations. */
    private AzureClient azureClient;

    /**
     * Gets the {@link AzureClient} used for long running operations.
     * @return the azure client;
     */
    public AzureClient getAzureClient() {
        return this.azureClient;
    }

    /** Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. */
    private String subscriptionId;

    /**
     * Gets Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     *
     * @return the subscriptionId value.
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Sets Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
     *
     * @param subscriptionId the subscriptionId value.
     * @return the service client itself
     */
    public DataLakeStoreAccountManagementClientImpl withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }

    /** Client Api Version. */
    private String apiVersion;

    /**
     * Gets Client Api Version.
     *
     * @return the apiVersion value.
     */
    public String apiVersion() {
        return this.apiVersion;
    }

    /** The preferred language for the response. */
    private String acceptLanguage;

    /**
     * Gets The preferred language for the response.
     *
     * @return the acceptLanguage value.
     */
    public String acceptLanguage() {
        return this.acceptLanguage;
    }

    /**
     * Sets The preferred language for the response.
     *
     * @param acceptLanguage the acceptLanguage value.
     * @return the service client itself
     */
    public DataLakeStoreAccountManagementClientImpl withAcceptLanguage(String acceptLanguage) {
        this.acceptLanguage = acceptLanguage;
        return this;
    }

    /** The retry timeout in seconds for Long Running Operations. Default value is 30. */
    private int longRunningOperationRetryTimeout;

    /**
     * Gets The retry timeout in seconds for Long Running Operations. Default value is 30.
     *
     * @return the longRunningOperationRetryTimeout value.
     */
    public int longRunningOperationRetryTimeout() {
        return this.longRunningOperationRetryTimeout;
    }

    /**
     * Sets The retry timeout in seconds for Long Running Operations. Default value is 30.
     *
     * @param longRunningOperationRetryTimeout the longRunningOperationRetryTimeout value.
     * @return the service client itself
     */
    public DataLakeStoreAccountManagementClientImpl withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout) {
        this.longRunningOperationRetryTimeout = longRunningOperationRetryTimeout;
        return this;
    }

    /** Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true. */
    private boolean generateClientRequestId;

    /**
     * Gets Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.
     *
     * @return the generateClientRequestId value.
     */
    public boolean generateClientRequestId() {
        return this.generateClientRequestId;
    }

    /**
     * Sets Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.
     *
     * @param generateClientRequestId the generateClientRequestId value.
     * @return the service client itself
     */
    public DataLakeStoreAccountManagementClientImpl withGenerateClientRequestId(boolean generateClientRequestId) {
        this.generateClientRequestId = generateClientRequestId;
        return this;
    }

    /**
     * The Accounts object to access its operations.
     */
    private Accounts accounts;

    /**
     * Gets the Accounts object to access its operations.
     * @return the Accounts object.
     */
    public Accounts accounts() {
        return this.accounts;
    }

    /**
     * The FirewallRules object to access its operations.
     */
    private FirewallRules firewallRules;

    /**
     * Gets the FirewallRules object to access its operations.
     * @return the FirewallRules object.
     */
    public FirewallRules firewallRules() {
        return this.firewallRules;
    }

    /**
     * The VirtualNetworkRules object to access its operations.
     */
    private VirtualNetworkRules virtualNetworkRules;

    /**
     * Gets the VirtualNetworkRules object to access its operations.
     * @return the VirtualNetworkRules object.
     */
    public VirtualNetworkRules virtualNetworkRules() {
        return this.virtualNetworkRules;
    }

    /**
     * The TrustedIdProviders object to access its operations.
     */
    private TrustedIdProviders trustedIdProviders;

    /**
     * Gets the TrustedIdProviders object to access its operations.
     * @return the TrustedIdProviders object.
     */
    public TrustedIdProviders trustedIdProviders() {
        return this.trustedIdProviders;
    }

    /**
     * The Operations object to access its operations.
     */
    private Operations operations;

    /**
     * Gets the Operations object to access its operations.
     * @return the Operations object.
     */
    public Operations operations() {
        return this.operations;
    }

    /**
     * The Locations object to access its operations.
     */
    private Locations locations;

    /**
     * Gets the Locations object to access its operations.
     * @return the Locations object.
     */
    public Locations locations() {
        return this.locations;
    }

    /**
     * Initializes an instance of DataLakeStoreAccountManagementClient client.
     *
     * @param credentials the management credentials for Azure
     */
    public DataLakeStoreAccountManagementClientImpl(ServiceClientCredentials credentials) {
        this("https://management.azure.com", credentials);
    }

    /**
     * Initializes an instance of DataLakeStoreAccountManagementClient client.
     *
     * @param baseUrl the base URL of the host
     * @param credentials the management credentials for Azure
     */
    public DataLakeStoreAccountManagementClientImpl(String baseUrl, ServiceClientCredentials credentials) {
        super(baseUrl, credentials);
        initialize();
    }

    /**
     * Initializes an instance of DataLakeStoreAccountManagementClient client.
     *
     * @param restClient the REST client to connect to Azure.
     */
    public DataLakeStoreAccountManagementClientImpl(RestClient restClient) {
        super(restClient);
        initialize();
    }

    protected void initialize() {
        this.apiVersion = "2016-11-01";
        this.acceptLanguage = "en-US";
        this.longRunningOperationRetryTimeout = 30;
        this.generateClientRequestId = true;
        this.accounts = new AccountsImpl(restClient().retrofit(), this);
        this.firewallRules = new FirewallRulesImpl(restClient().retrofit(), this);
        this.virtualNetworkRules = new VirtualNetworkRulesImpl(restClient().retrofit(), this);
        this.trustedIdProviders = new TrustedIdProvidersImpl(restClient().retrofit(), this);
        this.operations = new OperationsImpl(restClient().retrofit(), this);
        this.locations = new LocationsImpl(restClient().retrofit(), this);
        this.azureClient = new AzureClient(this);
    }

    /**
     * Gets the User-Agent header for the client.
     *
     * @return the user agent string.
     */
    @Override
    public String userAgent() {
        return String.format("%s (%s, %s)", super.userAgent(), "DataLakeStoreAccountManagementClient", "2016-11-01");
    }
}
