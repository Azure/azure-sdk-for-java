/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.servicebus.v2017_04_01;

import com.microsoft.azure.arm.collection.SupportsCreating;
import rx.Completable;
import rx.Observable;
import com.microsoft.azure.management.servicebus.v2017_04_01.implementation.RulesInner;
import com.microsoft.azure.arm.model.HasInner;

/**
 * Type representing Rules.
 */
public interface Rules extends SupportsCreating<Rule.DefinitionStages.Blank>, HasInner<RulesInner> {
    /**
     * Retrieves the description for the specified rule.
     *
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param topicName The topic name.
     * @param subscriptionName The subscription name.
     * @param ruleName The rule name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<Rule> getAsync(String resourceGroupName, String namespaceName, String topicName, String subscriptionName, String ruleName);

    /**
     * List all the rules within given topic-subscription.
     *
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param topicName The topic name.
     * @param subscriptionName The subscription name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<Rule> listBySubscriptionsAsync(final String resourceGroupName, final String namespaceName, final String topicName, final String subscriptionName);

    /**
     * Deletes an existing rule.
     *
     * @param resourceGroupName Name of the Resource group within the Azure subscription.
     * @param namespaceName The namespace name
     * @param topicName The topic name.
     * @param subscriptionName The subscription name.
     * @param ruleName The rule name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String namespaceName, String topicName, String subscriptionName, String ruleName);

}
