/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.servicebus.v2017_04_01.implementation;

import com.microsoft.azure.management.servicebus.v2017_04_01.Rule;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.servicebus.v2017_04_01.Action;
import com.microsoft.azure.management.servicebus.v2017_04_01.FilterType;
import com.microsoft.azure.management.servicebus.v2017_04_01.SqlFilter;
import com.microsoft.azure.management.servicebus.v2017_04_01.CorrelationFilter;

class RuleImpl extends CreatableUpdatableImpl<Rule, RuleInner, RuleImpl> implements Rule, Rule.Definition, Rule.Update {
    private final ServiceBusManager manager;
    private String resourceGroupName;
    private String namespaceName;
    private String topicName;
    private String subscriptionName;
    private String ruleName;

    RuleImpl(String name, ServiceBusManager manager) {
        super(name, new RuleInner());
        this.manager = manager;
        // Set resource name
        this.ruleName = name;
        //
    }

    RuleImpl(RuleInner inner, ServiceBusManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.ruleName = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.namespaceName = IdParsingUtils.getValueFromIdByName(inner.id(), "namespaces");
        this.topicName = IdParsingUtils.getValueFromIdByName(inner.id(), "topics");
        this.subscriptionName = IdParsingUtils.getValueFromIdByName(inner.id(), "subscriptions");
        this.ruleName = IdParsingUtils.getValueFromIdByName(inner.id(), "rules");
        //
    }

    @Override
    public ServiceBusManager manager() {
        return this.manager;
    }

    @Override
    public Observable<Rule> createResourceAsync() {
        RulesInner client = this.manager().inner().rules();
        return client.createOrUpdateAsync(this.resourceGroupName, this.namespaceName, this.topicName, this.subscriptionName, this.ruleName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<Rule> updateResourceAsync() {
        RulesInner client = this.manager().inner().rules();
        return client.createOrUpdateAsync(this.resourceGroupName, this.namespaceName, this.topicName, this.subscriptionName, this.ruleName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<RuleInner> getInnerAsync() {
        RulesInner client = this.manager().inner().rules();
        return client.getAsync(this.resourceGroupName, this.namespaceName, this.topicName, this.subscriptionName, this.ruleName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public Action action() {
        return this.inner().action();
    }

    @Override
    public CorrelationFilter correlationFilter() {
        return this.inner().correlationFilter();
    }

    @Override
    public FilterType filterType() {
        return this.inner().filterType();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public SqlFilter sqlFilter() {
        return this.inner().sqlFilter();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public RuleImpl withExistingSubscription(String resourceGroupName, String namespaceName, String topicName, String subscriptionName) {
        this.resourceGroupName = resourceGroupName;
        this.namespaceName = namespaceName;
        this.topicName = topicName;
        this.subscriptionName = subscriptionName;
        return this;
    }

    @Override
    public RuleImpl withAction(Action action) {
        this.inner().withAction(action);
        return this;
    }

    @Override
    public RuleImpl withCorrelationFilter(CorrelationFilter correlationFilter) {
        this.inner().withCorrelationFilter(correlationFilter);
        return this;
    }

    @Override
    public RuleImpl withFilterType(FilterType filterType) {
        this.inner().withFilterType(filterType);
        return this;
    }

    @Override
    public RuleImpl withSqlFilter(SqlFilter sqlFilter) {
        this.inner().withSqlFilter(sqlFilter);
        return this;
    }

}
