/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.deploymentmanager.v2018-09-01-preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.deploymentmanager.v2018-09-01-preview.implementation.ServiceUnitResourceInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.deploymentmanager.v2018-09-01-preview.implementation.DeploymentManagerManager;
import java.util.Map;

/**
 * Type representing ServiceUnitResource.
 */
public interface ServiceUnitResource extends HasInner<ServiceUnitResourceInner>, Indexable, Refreshable<ServiceUnitResource>, Updatable<ServiceUnitResource.Update>, HasManager<DeploymentManagerManager> {
    /**
     * @return the artifacts value.
     */
    ServiceUnitArtifacts artifacts();

    /**
     * @return the deploymentMode value.
     */
    DeploymentMode deploymentMode();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the location value.
     */
    String location();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * @return the targetResourceGroup value.
     */
    String targetResourceGroup();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the ServiceUnitResource definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithService, DefinitionStages.WithDeploymentMode, DefinitionStages.WithLocation, DefinitionStages.WithTargetResourceGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of ServiceUnitResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a ServiceUnitResource definition.
         */
        interface Blank extends WithService {
        }

        /**
         * The stage of the serviceunitresource definition allowing to specify Service.
         */
        interface WithService {
           /**
            * Specifies resourceGroupName, serviceTopologyName, serviceName.
            * @param resourceGroupName The name of the resource group. The name is case insensitive
            * @param serviceTopologyName The name of the service topology
            * @param serviceName The name of the service resource
            * @return the next definition stage
            */
            WithDeploymentMode withExistingService(String resourceGroupName, String serviceTopologyName, String serviceName);
        }

        /**
         * The stage of the serviceunitresource definition allowing to specify DeploymentMode.
         */
        interface WithDeploymentMode {
           /**
            * Specifies deploymentMode.
            * @param deploymentMode Describes the type of ARM deployment to be performed on the resource. Possible values include: 'Incremental', 'Complete'
            * @return the next definition stage
            */
            WithLocation withDeploymentMode(DeploymentMode deploymentMode);
        }

        /**
         * The stage of the serviceunitresource definition allowing to specify Location.
         */
        interface WithLocation {
           /**
            * Specifies location.
            * @param location The geo-location where the resource lives
            * @return the next definition stage
            */
            WithTargetResourceGroup withLocation(String location);
        }

        /**
         * The stage of the serviceunitresource definition allowing to specify TargetResourceGroup.
         */
        interface WithTargetResourceGroup {
           /**
            * Specifies targetResourceGroup.
            * @param targetResourceGroup The Azure Resource Group to which the resources in the service unit belong to or should be deployed to
            * @return the next definition stage
            */
            WithCreate withTargetResourceGroup(String targetResourceGroup);
        }

        /**
         * The stage of the serviceunitresource definition allowing to specify Artifacts.
         */
        interface WithArtifacts {
            /**
             * Specifies artifacts.
             * @param artifacts The artifacts for the service unit
             * @return the next definition stage
             */
            WithCreate withArtifacts(ServiceUnitArtifacts artifacts);
        }

        /**
         * The stage of the serviceunitresource definition allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags Resource tags
             * @return the next definition stage
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<ServiceUnitResource>, DefinitionStages.WithArtifacts, DefinitionStages.WithTags {
        }
    }
    /**
     * The template for a ServiceUnitResource update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<ServiceUnitResource>, UpdateStages.WithArtifacts, UpdateStages.WithTags {
    }

    /**
     * Grouping of ServiceUnitResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the serviceunitresource update allowing to specify Artifacts.
         */
        interface WithArtifacts {
            /**
             * Specifies artifacts.
             * @param artifacts The artifacts for the service unit
             * @return the next update stage
             */
            Update withArtifacts(ServiceUnitArtifacts artifacts);
        }

        /**
         * The stage of the serviceunitresource update allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags Resource tags
             * @return the next update stage
             */
            Update withTags(Map<String, String> tags);
        }

    }
}
