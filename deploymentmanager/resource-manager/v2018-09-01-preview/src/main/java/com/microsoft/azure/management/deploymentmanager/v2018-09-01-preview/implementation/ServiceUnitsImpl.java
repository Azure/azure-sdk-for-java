/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.deploymentmanager.v2018-09-01-preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.deploymentmanager.v2018-09-01-preview.ServiceUnits;
import rx.Completable;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.management.deploymentmanager.v2018-09-01-preview.ServiceUnitResource;

class ServiceUnitsImpl extends WrapperImpl<ServiceUnitsInner> implements ServiceUnits {
    private final DeploymentManagerManager manager;

    ServiceUnitsImpl(DeploymentManagerManager manager) {
        super(manager.inner().serviceUnits());
        this.manager = manager;
    }

    public DeploymentManagerManager manager() {
        return this.manager;
    }

    @Override
    public ServiceUnitResourceImpl define(String name) {
        return wrapModel(name);
    }

    private ServiceUnitResourceImpl wrapModel(ServiceUnitResourceInner inner) {
        return  new ServiceUnitResourceImpl(inner, manager());
    }

    private ServiceUnitResourceImpl wrapModel(String name) {
        return new ServiceUnitResourceImpl(name, this.manager());
    }

    @Override
    public Observable<ServiceUnitResource> getAsync(String resourceGroupName, String serviceTopologyName, String serviceName, String serviceUnitName) {
        ServiceUnitsInner client = this.inner();
        return client.getAsync(resourceGroupName, serviceTopologyName, serviceName, serviceUnitName)
        .map(new Func1<ServiceUnitResourceInner, ServiceUnitResource>() {
            @Override
            public ServiceUnitResource call(ServiceUnitResourceInner inner) {
                return wrapModel(inner);
            }
       });
    }

    @Override
    public Completable deleteAsync(String resourceGroupName, String serviceTopologyName, String serviceName, String serviceUnitName) {
        ServiceUnitsInner client = this.inner();
        return client.deleteAsync(resourceGroupName, serviceTopologyName, serviceName, serviceUnitName).toCompletable();
    }

}
