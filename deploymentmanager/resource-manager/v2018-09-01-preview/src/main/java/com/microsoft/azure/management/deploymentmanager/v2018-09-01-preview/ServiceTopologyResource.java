/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.deploymentmanager.v2018-09-01-preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.deploymentmanager.v2018-09-01-preview.implementation.DeploymentManagerManager;
import com.microsoft.azure.management.deploymentmanager.v2018-09-01-preview.implementation.ServiceTopologyResourceInner;

/**
 * Type representing ServiceTopologyResource.
 */
public interface ServiceTopologyResource extends HasInner<ServiceTopologyResourceInner>, Resource, GroupableResourceCore<DeploymentManagerManager, ServiceTopologyResourceInner>, HasResourceGroup, Refreshable<ServiceTopologyResource>, Updatable<ServiceTopologyResource.Update>, HasManager<DeploymentManagerManager> {
    /**
     * @return the artifactSourceId value.
     */
    String artifactSourceId();

    /**
     * The entirety of the ServiceTopologyResource definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of ServiceTopologyResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a ServiceTopologyResource definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the ServiceTopologyResource definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreate> {
        }

        /**
         * The stage of the servicetopologyresource definition allowing to specify ArtifactSourceId.
         */
        interface WithArtifactSourceId {
            /**
             * Specifies artifactSourceId.
             * @param artifactSourceId The resource Id of the artifact source that contains the artifacts that can be referenced in the service units
             * @return the next definition stage
             */
            WithCreate withArtifactSourceId(String artifactSourceId);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<ServiceTopologyResource>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithArtifactSourceId {
        }
    }
    /**
     * The template for a ServiceTopologyResource update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<ServiceTopologyResource>, Resource.UpdateWithTags<Update>, UpdateStages.WithArtifactSourceId {
    }

    /**
     * Grouping of ServiceTopologyResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the servicetopologyresource update allowing to specify ArtifactSourceId.
         */
        interface WithArtifactSourceId {
            /**
             * Specifies artifactSourceId.
             * @param artifactSourceId The resource Id of the artifact source that contains the artifacts that can be referenced in the service units
             * @return the next update stage
             */
            Update withArtifactSourceId(String artifactSourceId);
        }

    }
}
