/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.deploymentmanager.v2018-09-01-preview.implementation;

import com.microsoft.azure.management.deploymentmanager.v2018-09-01-preview.Authentication;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.Resource;

/**
 * The resource that define the source location where the artifacts are
 * located.
 */
@JsonFlatten
public class ArtifactSourceInner extends Resource {
    /**
     * The type of artifact source used.
     */
    @JsonProperty(value = "properties.sourceType", required = true)
    private String sourceType;

    /**
     * The root folder under which all artifacts for all environments are
     * expected to be organized.
     */
    @JsonProperty(value = "properties.artifactRoot")
    private String artifactRoot;

    /**
     * The authentication method to use to access the artifact source.
     */
    @JsonProperty(value = "properties.authentication", required = true)
    private Authentication authentication;

    /**
     * Get the type of artifact source used.
     *
     * @return the sourceType value
     */
    public String sourceType() {
        return this.sourceType;
    }

    /**
     * Set the type of artifact source used.
     *
     * @param sourceType the sourceType value to set
     * @return the ArtifactSourceInner object itself.
     */
    public ArtifactSourceInner withSourceType(String sourceType) {
        this.sourceType = sourceType;
        return this;
    }

    /**
     * Get the root folder under which all artifacts for all environments are expected to be organized.
     *
     * @return the artifactRoot value
     */
    public String artifactRoot() {
        return this.artifactRoot;
    }

    /**
     * Set the root folder under which all artifacts for all environments are expected to be organized.
     *
     * @param artifactRoot the artifactRoot value to set
     * @return the ArtifactSourceInner object itself.
     */
    public ArtifactSourceInner withArtifactRoot(String artifactRoot) {
        this.artifactRoot = artifactRoot;
        return this;
    }

    /**
     * Get the authentication method to use to access the artifact source.
     *
     * @return the authentication value
     */
    public Authentication authentication() {
        return this.authentication;
    }

    /**
     * Set the authentication method to use to access the artifact source.
     *
     * @param authentication the authentication value to set
     * @return the ArtifactSourceInner object itself.
     */
    public ArtifactSourceInner withAuthentication(Authentication authentication) {
        this.authentication = authentication;
        return this;
    }

}
