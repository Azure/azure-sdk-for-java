/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.azuredatabasemigrationservice.v2018_07_15_preview;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Information about an Oracle OCI driver.
 */
public class OracleOCIDriverInfo {
    /**
     * The name of the driver package.
     */
    @JsonProperty(value = "driverName")
    private String driverName;

    /**
     * The size in bytes of the driver package.
     */
    @JsonProperty(value = "driverSize")
    private String driverSize;

    /**
     * The MD5 Base64 encoded checksum for the driver package.
     */
    @JsonProperty(value = "archiveChecksum")
    private String archiveChecksum;

    /**
     * The checksum for the driver package provided by Oracle.
     */
    @JsonProperty(value = "oracleChecksum")
    private String oracleChecksum;

    /**
     * Version listed in the OCI assembly 'oci.dll'.
     */
    @JsonProperty(value = "assemblyVersion")
    private String assemblyVersion;

    /**
     * List of Oracle database versions supported by this driver. Only major
     * minor of the version is listed.
     */
    @JsonProperty(value = "supportedOracleVersions")
    private List<String> supportedOracleVersions;

    /**
     * Get the name of the driver package.
     *
     * @return the driverName value
     */
    public String driverName() {
        return this.driverName;
    }

    /**
     * Set the name of the driver package.
     *
     * @param driverName the driverName value to set
     * @return the OracleOCIDriverInfo object itself.
     */
    public OracleOCIDriverInfo withDriverName(String driverName) {
        this.driverName = driverName;
        return this;
    }

    /**
     * Get the size in bytes of the driver package.
     *
     * @return the driverSize value
     */
    public String driverSize() {
        return this.driverSize;
    }

    /**
     * Set the size in bytes of the driver package.
     *
     * @param driverSize the driverSize value to set
     * @return the OracleOCIDriverInfo object itself.
     */
    public OracleOCIDriverInfo withDriverSize(String driverSize) {
        this.driverSize = driverSize;
        return this;
    }

    /**
     * Get the MD5 Base64 encoded checksum for the driver package.
     *
     * @return the archiveChecksum value
     */
    public String archiveChecksum() {
        return this.archiveChecksum;
    }

    /**
     * Set the MD5 Base64 encoded checksum for the driver package.
     *
     * @param archiveChecksum the archiveChecksum value to set
     * @return the OracleOCIDriverInfo object itself.
     */
    public OracleOCIDriverInfo withArchiveChecksum(String archiveChecksum) {
        this.archiveChecksum = archiveChecksum;
        return this;
    }

    /**
     * Get the checksum for the driver package provided by Oracle.
     *
     * @return the oracleChecksum value
     */
    public String oracleChecksum() {
        return this.oracleChecksum;
    }

    /**
     * Set the checksum for the driver package provided by Oracle.
     *
     * @param oracleChecksum the oracleChecksum value to set
     * @return the OracleOCIDriverInfo object itself.
     */
    public OracleOCIDriverInfo withOracleChecksum(String oracleChecksum) {
        this.oracleChecksum = oracleChecksum;
        return this;
    }

    /**
     * Get version listed in the OCI assembly 'oci.dll'.
     *
     * @return the assemblyVersion value
     */
    public String assemblyVersion() {
        return this.assemblyVersion;
    }

    /**
     * Set version listed in the OCI assembly 'oci.dll'.
     *
     * @param assemblyVersion the assemblyVersion value to set
     * @return the OracleOCIDriverInfo object itself.
     */
    public OracleOCIDriverInfo withAssemblyVersion(String assemblyVersion) {
        this.assemblyVersion = assemblyVersion;
        return this;
    }

    /**
     * Get list of Oracle database versions supported by this driver. Only major minor of the version is listed.
     *
     * @return the supportedOracleVersions value
     */
    public List<String> supportedOracleVersions() {
        return this.supportedOracleVersions;
    }

    /**
     * Set list of Oracle database versions supported by this driver. Only major minor of the version is listed.
     *
     * @param supportedOracleVersions the supportedOracleVersions value to set
     * @return the OracleOCIDriverInfo object itself.
     */
    public OracleOCIDriverInfo withSupportedOracleVersions(List<String> supportedOracleVersions) {
        this.supportedOracleVersions = supportedOracleVersions;
        return this;
    }

}
