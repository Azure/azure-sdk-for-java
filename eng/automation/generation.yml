trigger: none

pr: none

parameters: # parameters(instead of variables) is used here for template compile time expressions
  - name: RELEASE_TYPE
    displayName: Release from
    type: string
    values:
      - Swagger
      - TypeSpec
    default: Swagger

variables:
- group: Release Secrets for GitHub
- name: MAVEN_CACHE_FOLDER
  value: $(Pipeline.Workspace)/.m2/repository
- name: MAVEN_OPTS
  value: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
- name: NodeVersion
  value: '18.x'
- name: JavaVersion
  value: '17'

jobs:
  - job: FluentLiteGenerationForMgmtSDK
    pool:
      ${{ if eq(parameters.RELEASE_TYPE, 'TypeSpec')}}:
        vmImage: 'macOS-13' # tsp-client command will get permanent stuck on linux/windows: https://github.com/Azure/azure-sdk-tools/issues/8368
      ${{ else }}:
        vmImage: 'ubuntu-20.04'
    steps:
    - bash: |
          pip3 install --upgrade wheel
          pip3 install --upgrade PyYAML requests
      displayName: Update python

    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '$(JavaVersion)'
        jdkArchitectureOption: '$(Agent.OSArchitecture)'
        jdkSourceOption: 'PreInstalled'

    - task: NodeTool@0
      displayName: 'Install Node.js $(NodeVersion)'
      inputs:
        versionSpec: '$(NodeVersion)'

    - bash: |
          npm install -g autorest
      displayName: 'Install autorest'
      condition: ${{ eq(parameters.RELEASE_TYPE, 'Swagger') }}

    - bash: |
          npm install -g @azure-tools/typespec-client-generator-cli
      displayName: 'Install tsp-client'
      condition: ${{ eq(parameters.RELEASE_TYPE, 'TypeSpec') }}

    # - template: /eng/common/testproxy/test-proxy-tool.yml
    #   parameters:
    #     runProxy: true
    #     targetVersion: 1.0.0-dev.20230908.1

    - bash: |
        java -version
        set -x
        ./eng/automation/generate.py --tsp-config "$(TSP_CONFIG)" --version "$(VERSION)" --auto-commit-external-change --user-name "azure-sdk" --user-email "azuresdk@microsoft.com"
      displayName: Generation from TypeSpec
      condition: ${{ eq(parameters.RELEASE_TYPE, 'TypeSpec') }}

    - bash: |
        java -version
        set -x
        ./eng/automation/generate.py --readme "$(README)" --tag "$(TAG)" --autorest-options="$(AUTOREST_OPTIONS)" --service "$(SERVICE)" --version "$(VERSION)" --suffix "$(SUFFIX)" --auto-commit-external-change --user-name "azure-sdk" --user-email "azuresdk@microsoft.com"
      displayName: Generation from Swagger
      condition: ${{ eq(parameters.RELEASE_TYPE, 'Swagger') }}

    - template: /eng/common/pipelines/templates/steps/create-pull-request.yml
      parameters:
        PRBranchName: fluent-lite-generation-$(Build.BuildId)
        ${{ if eq(parameters.RELEASE_TYPE, 'TypeSpec') }}: # Have to use parameter here. The ${{<expression>}} is compile time expression, it won't resolve against runtime variables.
          CommitMsg: '[Automation] Generate Fluent Lite from TypeSpec $(README)'
          PRTitle: '[Automation] Generate Fluent Lite from TypeSpec $(README)'
        ${{ else }}:
          CommitMsg: '[Automation] Generate Fluent Lite from Swagger $(README)#$(TAG)'
          PRTitle: '[Automation] Generate Fluent Lite from Swagger $(README)#$(TAG)'
        PRLabels: 'Mgmt - Track 2'
        OpenAsDraft: '$(DRAFT_PULL_REQUEST)'
