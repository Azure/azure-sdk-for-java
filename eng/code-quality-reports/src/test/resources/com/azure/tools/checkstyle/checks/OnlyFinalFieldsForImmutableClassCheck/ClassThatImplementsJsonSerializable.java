// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

import com.azure.core.annotation.Immutable;
import com.azure.core.util.serializer.JsonUtils;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;

@Immutable
public final class ClassThatImplementsJsonSerializable implements JsonSerializable<ClassThatImplementsJsonSerializable> {
    private String odataType = "#Microsoft.Azure.Search.ClassicSimilarity";

    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("@odata.type", odataType);
        return jsonWriter.writeEndObject().flush();
    }

    public static ClassThatImplementsJsonSerializable fromJson(JsonReader jsonReader) {
        return JsonUtils.readObject(
            jsonReader,
            reader -> {
                String odataType = null;
                while (reader.nextToken() != JsonToken.END_OBJECT) {
                    String fieldName = reader.getFieldName();
                    reader.nextToken();

                    if ("@odata.type".equals(fieldName)) {
                        odataType = reader.getStringValue();
                    } else {
                        reader.skipChildren();
                    }
                }

                if (!"#Microsoft.Azure.Search.ClassicSimilarity".equals(odataType)) {
                    throw new IllegalStateException(
                        "'@odata.type' was expected to be non-null and equal to '#Microsoft.Azure.Search.ClassicSimilarity'. The found '@odata.type' was '"
                            + odataType
                            + "'.");
                }

                ClassThatImplementsJsonSerializable deserializedValue = new ClassThatImplementsJsonSerializable();
                deserializedValue.odataType = odataType;

                return deserializedValue;
            });
    }
}
