[
  {
    "extension": "revapi.java",
    "configuration": {
      "missing-classes": {
        "behavior": "report",
        "ignoreMissingAnnotations": false
      },
      "matchOverloads": true
    }
  },
  {
    "extension": "revapi.versions",
    "configuration": {
      "enabled": true,
      "semantic0": false,
      "versionIncreaseAllows": {
        "major": {
          "severity": "BREAKING"
        },
        "minor": {
          "severity": "NON_BREAKING"
        },
        "patch": {
          "severity": "EQUIVALENT"
        }
      },
      "onAllowed": {
        "remove": true,
        "attachments": {
          "breaksVersioningRules": "false"
        }
      },
      "onDisallowed": {
        "criticality": "error",
        "attachments": {
          "breaksVersioningRules": "true"
        }
      },
      "passThroughDifferences": [
        "java.class.nonPublicPartOfAPI"
      ]
    }
  },
  {
    "extension": "revapi.differences",
    "configuration": {
      "ignore": true,
      "differences": [
        {
          "code": "java.class.nonPublicPartOfAPI",
          "new": "class com.azure.spring.messaging.container.DefaultMessageListenerContainer",
          "justification": "We allow this in azure.spring.messaging."
        },
        {
          "regex": true,
          "code": "java.class.nonPublicPartOfAPI",
          "new": "(class|interface) org\\.apache\\.http\\.impl\\.conn\\.CPoolEntry",
          "exampleUseChainInNewApi": ".*org\\.apache\\.http\\.HttpClientConnection.*",
          "justification": "We allow this in org.apache.http.HttpClientConnection>"
        },
        {
          "regex": true,
          "code": "java.class.nonPublicPartOfAPI",
          "new": "(class|interface) com\\.azure\\.keyvault\\.jca\\.(com|org)\\..*",
          "justification": "skip check for third party files."
        },
        {
          "regex": true,
          "code": "java.class.nonPublicPartOfAPI",
          "new": "(class|enum|interface) org\\.conscrypt\\..*",
          "justification": "skip check for third party files."
        },
        {
          "regex": true,
          "code": "java\\.method\\.addedToInterface",
          "new": "method .* com\\.azure\\.resourcemanager\\..*",
          "justification": "resourcemanager interfaces are allowed to add methods."
        },
        {
          "regex": true,
          "code": "java\\.method\\.addedToInterface",
          "new": "method <T> (reactor\\.core\\.publisher\\.Mono<)?T>? com\\.azure\\.spring\\.data\\.cosmos\\.core\\.(Reactive)?CosmosOperations::patch\\(java\\.lang\\.Object, com\\.azure\\.cosmos\\.models\\.PartitionKey, java\\.lang\\.Class<T>, com\\.azure\\.cosmos\\.models\\.CosmosPatchOperations(, com\\.azure\\.cosmos\\.models\\.CosmosPatchItemRequestOptions)?\\)",
          "justification": "Spring interfaces are allowed to add methods."
        },
        {
          "regex": true,
          "code": "java\\.method\\.addedToInterface",
          "new": "method <S extends T> (reactor\\.core\\.publisher\\.Mono<)?S>? com\\.azure\\.spring\\.data\\.cosmos\\.repository\\.(Reactive)?CosmosRepository<T, ID extends java\\.io\\.Serializable>::save\\(ID, com\\.azure\\.cosmos\\.models\\.PartitionKey, java\\.lang\\.Class<S>, com\\.azure\\.cosmos\\.models\\.CosmosPatchOperations(, com\\.azure\\.cosmos\\.models\\.CosmosPatchItemRequestOptions)?\\)",
          "justification": "Spring interfaces are allowed to add methods."
        },
        {
          "regex": true,
          "code": "java\\.annotation\\.(added|attributeValueChanged)",
          "old": ".*",
          "annotationType": "com\\.azure\\.core\\.annotation\\.Service(Method|Client)",
          "justification": "These are SDK metadata annotations and don't affect runtime behavior."
        },
        {
          "regex": true,
          "code": "java\\.annotation\\.(added|attributeValueChanged|attributeAdded)",
          "new": "(class|method void|parameter void) com\\.azure\\.search\\.documents\\.indexes\\.models\\..*",
          "justification": "Generated classes were moved into public API, these annotations were already being used in implementation used during serialization and deserialization."
        },
        {
          "regex": true,
          "code": "java\\.annotation\\.removed",
          "new": "(class|interface|method|parameter) com\\.azure\\.cosmos\\..*",
          "justification": "Cosmos SDK removes Beta annotation to GA its APIs and classes."
        },
        {
          "code" : "java.method.visibilityReduced",
          "old" : "method com.azure.spring.messaging.eventhubs.support.converter.EventHubsMessageConverter com.azure.spring.cloud.autoconfigure.eventhubs.AzureEventHubsMessagingAutoConfiguration.EventHubsTemplateConfiguration::eventHubsMessageConverter()",
          "new" : "method com.azure.spring.messaging.eventhubs.support.converter.EventHubsMessageConverter com.azure.spring.cloud.autoconfigure.eventhubs.AzureEventHubsMessagingAutoConfiguration.EventHubsTemplateConfiguration::eventHubsMessageConverter(com.fasterxml.jackson.databind.ObjectMapper)",
          "justification": "Shouldn't have been a public API."
        },
        {
          "code" : "java.method.visibilityReduced",
          "old" : "method com.azure.spring.messaging.servicebus.support.converter.ServiceBusMessageConverter com.azure.spring.cloud.autoconfigure.servicebus.AzureServiceBusMessagingAutoConfiguration.ServiceBusTemplateConfiguration::serviceBusMessageConverter()",
          "new" : "method com.azure.spring.messaging.servicebus.support.converter.ServiceBusMessageConverter com.azure.spring.cloud.autoconfigure.servicebus.AzureServiceBusMessagingAutoConfiguration.ServiceBusTemplateConfiguration::serviceBusMessageConverter(com.fasterxml.jackson.databind.ObjectMapper)",
          "justification": "Shouldn't have been a public API."
        },
        {
          "code" : "java.method.removed",
          "old" : "method com.azure.spring.messaging.storage.queue.support.converter.StorageQueueMessageConverter com.azure.spring.cloud.autoconfigure.storage.AzureStorageQueueMessagingAutoConfiguration::messageConverter()",
          "justification": "Shouldn't have been a public API."
        },
        {
          "code": "java.method.added",
          "new": "method void com.azure.spring.cloud.autoconfigure.aadb2c.AadB2cOidcLoginConfigurer::<init>(org.springframework.security.web.authentication.logout.LogoutSuccessHandler, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestResolver, org.springframework.security.oauth2.client.endpoint.OAuth2AccessTokenResponseClient<org.springframework.security.oauth2.client.endpoint.OAuth2AuthorizationCodeGrantRequest>, org.springframework.boot.web.client.RestTemplateBuilder)",
          "justification": "New method added to fix a bug."
        },
        {
          "regex": true,
          "code": "java\\.method\\.removed",
          "old": "method java\\.lang\\.String com\\.azure\\.spring\\.cloud\\.autoconfigure\\.jms\\.properties\\.AzureServiceBusJmsProperties::(getPassword|getRemoteUrl|getUsername)\\(\\)",
          "justification": "Remove some meaningless jms properties"
        },
        {
          "regex": true,
          "code": "java\\.method\\.removed",
          "old": "method void com\\.azure\\.spring\\.cloud\\.autoconfigure\\.jms\\.properties\\.AzureServiceBusJmsProperties::(setPassword|setRemoteUrl|setUsername)\\(java\\.lang\\.String\\)",
          "justification": "Remove some meaningless jms properties"
        },
        {
          "regex": true,
          "code": "java.method.parameterTypeParameterChanged",
          "old": "parameter <T> reactor\\.core\\.publisher\\.Mono<T> com\\.azure\\.spring\\.data\\.cosmos\\.core\\.(ReactiveCosmosOperations|ReactiveCosmosTemplate)::insert\\(java\\.lang\\.String, ===java\\.lang\\.Object===, com\\.azure\\.cosmos\\.models\\.PartitionKey\\)",
          "new": "parameter <T> reactor\\.core\\.publisher\\.Mono<T> com\\.azure\\.spring\\.data\\.cosmos\\.core\\.(ReactiveCosmosOperations|ReactiveCosmosTemplate)::insert\\(java\\.lang\\.String, ===T===, com\\.azure\\.cosmos\\.models\\.PartitionKey\\)",
          "parameterIndex": "1",
          "justification": "To support mono method chaining, without explicit typcast for upper bounded generics"
        },
        {
          "regex": true,
          "code": "java.method.returnTypeChangedCovariantly",
          "new": "method com.azure.search.documents.indexes.models.(CognitiveServicesAccountKey|ConditionalSkill|CustomEntityLookupSkill|DefaultCognitiveServicesAccount|DistanceScoringFunction|DocumentExtractionSkill|EntityRecognitionSkill|FreshnessScoringFunction|ImageAnalysisSkill|KeyPhraseExtractionSkill|LanguageDetectionSkill|MagnitudeScoringFunction|MergeSkill|OcrSkill|SentimentSkill|ShaperSkill|SplitSkill|TagScoringFunction|TextTranslationSkill|WebApiSkill) .*",
          "justification": "Proper support for fluent setters in subtypes."
        },
        {
          "regex": true,
          "code": "java.annotation.added",
          "new": "class com.azure.ai.formrecognizer.documentanalysis.models.(DocumentField|DocumentLine)",
          "justification": "Skip customized getters on class when serialization and deserialization."
        },
        {
          "code": "java.class.removed",
          "old": "enum com.azure.messaging.eventhubs.checkpointstore.blob.Messages",
          "justification": "Messages class was accidentally made public. Reverting the public change since this should be implementation detail."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "new": "method void com.azure.spring.cloud.autoconfigure.aadb2c.AadB2cAutoConfiguration::<init>(org.springframework.boot.web.client.RestTemplateBuilder)",
          "justification": "Bean configuration will not be used by customer in java code."
        },
        {
          "ignore": true,
          "code": "java.method.addedToInterface",
          "new": "method java.lang.String com.azure.spring.cloud.core.provider.AzureProfileOptionsProvider.AzureEnvironmentOptions::getServiceBusDomainName()",
          "justification": "support configuration of Service Bus domain name."
        },
        {
          "ignore": true,
          "code": "java.method.removed",
          "old": "method java.lang.String com.azure.resourcemanager.compute.models.GalleryArtifactVersionSource::uri()",
          "justification": "Non-functional property removed by backend."
        },
        {
          "ignore": true,
          "code": "java.method.removed",
          "old": "method com.azure.resourcemanager.compute.models.GalleryArtifactVersionSource com.azure.resourcemanager.compute.models.GalleryArtifactVersionSource::withUri(java.lang.String)",
          "justification": "Non-functional property removed by backend."
        },
        {
          "ignore": true,
          "code": "java.method.returnTypeChangedCovariantly",
          "old": "method com.azure.resourcemanager.compute.models.GalleryArtifactVersionSource com.azure.resourcemanager.compute.models.GalleryDiskImage::source() @ com.azure.resourcemanager.compute.models.GalleryDataDiskImage",
          "new": "method com.azure.resourcemanager.compute.models.GalleryDiskImageSource com.azure.resourcemanager.compute.models.GalleryDiskImage::source() @ com.azure.resourcemanager.compute.models.GalleryDataDiskImage",
          "justification": "Type of property changed to its subclass by backend. Getter returns a subclass of previous type."
        },
        {
          "ignore": true,
          "code": "java.method.parameterTypeChanged",
          "old": "parameter com.azure.resourcemanager.compute.models.GalleryDataDiskImage com.azure.resourcemanager.compute.models.GalleryDataDiskImage::withSource(===com.azure.resourcemanager.compute.models.GalleryArtifactVersionSource===)",
          "new": "parameter com.azure.resourcemanager.compute.models.GalleryDataDiskImage com.azure.resourcemanager.compute.models.GalleryDataDiskImage::withSource(===com.azure.resourcemanager.compute.models.GalleryDiskImageSource===)",
          "parameterIndex": "0",
          "justification": "Type of property changed to its subclass by backend. User will not access the setter in convenience API."
        },
        {
          "ignore": true,
          "code": "java.method.returnTypeChangedCovariantly",
          "old": "method com.azure.resourcemanager.compute.models.GalleryArtifactVersionSource com.azure.resourcemanager.compute.models.GalleryImageVersionStorageProfile::source()",
          "new": "method com.azure.resourcemanager.compute.models.GalleryArtifactVersionFullSource com.azure.resourcemanager.compute.models.GalleryImageVersionStorageProfile::source()",
          "justification": "Type of property changed to its subclass by backend. Getter returns a subclass of previous type."
        },
        {
          "ignore": true,
          "code": "java.method.parameterTypeChanged",
          "old": "parameter com.azure.resourcemanager.compute.models.GalleryImageVersionStorageProfile com.azure.resourcemanager.compute.models.GalleryImageVersionStorageProfile::withSource(===com.azure.resourcemanager.compute.models.GalleryArtifactVersionSource===)",
          "new": "parameter com.azure.resourcemanager.compute.models.GalleryImageVersionStorageProfile com.azure.resourcemanager.compute.models.GalleryImageVersionStorageProfile::withSource(===com.azure.resourcemanager.compute.models.GalleryArtifactVersionFullSource===)",
          "parameterIndex": "0",
          "justification": "Type of property changed to its subclass by backend. User will not access the setter in convenience API."
        },
        {
          "ignore": true,
          "code": "java.method.returnTypeChangedCovariantly",
          "old": "method com.azure.resourcemanager.compute.models.GalleryArtifactVersionSource com.azure.resourcemanager.compute.models.GalleryDiskImage::source() @ com.azure.resourcemanager.compute.models.GalleryOSDiskImage",
          "new": "method com.azure.resourcemanager.compute.models.GalleryDiskImageSource com.azure.resourcemanager.compute.models.GalleryDiskImage::source() @ com.azure.resourcemanager.compute.models.GalleryOSDiskImage",
          "justification": "Type of property changed to its subclass by backend. Getter returns a subclass of previous type."
        },
        {
          "ignore": true,
          "code": "java.method.parameterTypeChanged",
          "old": "parameter com.azure.resourcemanager.compute.models.GalleryOSDiskImage com.azure.resourcemanager.compute.models.GalleryOSDiskImage::withSource(===com.azure.resourcemanager.compute.models.GalleryArtifactVersionSource===)",
          "new": "parameter com.azure.resourcemanager.compute.models.GalleryOSDiskImage com.azure.resourcemanager.compute.models.GalleryOSDiskImage::withSource(===com.azure.resourcemanager.compute.models.GalleryDiskImageSource===)",
          "parameterIndex": "0",
          "justification": "Type of property changed to its subclass by backend. User will not access the setter in convenience API."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.String com.azure.resourcemanager.sql.models.ReplicationLink::location()",
          "justification": "Non-functional property removed by backend."
        },
        {
          "regex": true,
          "code": "java.field.enumConstantOrderChanged",
          "new": "field com.azure.resourcemanager.sql.models.SecurityAlertPolicyState.(DISABLED|ENABLED)",
          "justification": "NEW is removed by backend from SecurityAlertPolicyState, affecting the rest of the constants."
        },
        {
          "code": "java.field.removed",
          "old": "field com.azure.resourcemanager.sql.models.SecurityAlertPolicyState.NEW",
          "justification": "NEW is removed by backend. It's an obsolete state."
        },
        {
          "code": "java.method.removed",
          "old": "method java.time.OffsetDateTime com.azure.resourcemanager.sql.models.ServerMetric::nextResetTime()",
          "justification": "Non-functional property removed by backend."
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.String com.azure.resourcemanager.sql.models.ServerMetric::resourceName()",
          "justification": "Non-functional property removed by backend."
        },
        {
          "regex": true,
          "code": "java\\.method\\.removed",
          "old": "method .* com\\.azure\\.resourcemanager\\.sql\\.models\\.SqlDatabase::(listMetricDefinitions|listMetricDefinitionsAsync|listServiceTierAdvisors|listServiceTierAdvisorsAsync)\\(\\)",
          "justification": "Metrics APIs are replaced by the Azure monitor shoebox metrics APIs thus not SQL API anymore."
        },
        {
          "code": "java.method.removed",
          "old": "method java.util.List<com.azure.resourcemanager.sql.models.SqlDatabaseMetric> com.azure.resourcemanager.sql.models.SqlDatabase::listMetrics(java.lang.String)",
          "justification": "Metrics APIs are replaced by the Azure monitor shoebox metrics APIs thus not SQL API anymore."
        },
        {
          "code": "java.method.removed",
          "old": "method com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.models.SqlDatabaseMetric> com.azure.resourcemanager.sql.models.SqlDatabase::listMetricsAsync(java.lang.String)",
          "justification": "Metrics APIs are replaced by the Azure monitor shoebox metrics APIs thus not SQL API anymore."
        },
        {
          "code": "java.method.removed",
          "old": "method com.azure.resourcemanager.sql.models.SqlDatabaseThreatDetectionPolicy.DefinitionStages.WithStorageEndpoint com.azure.resourcemanager.sql.models.SqlDatabaseThreatDetectionPolicy.DefinitionStages.WithSecurityAlertPolicyState::withPolicyNew() @ com.azure.resourcemanager.sql.models.SqlDatabaseThreatDetectionPolicy.DefinitionStages.Blank",
          "justification": "Non-function operation since 'NEW' is removed from SecurityAlertPolicyState."
        },
        {
          "code": "java.method.removed",
          "old": "method com.azure.resourcemanager.sql.models.SqlDatabaseThreatDetectionPolicy.Update com.azure.resourcemanager.sql.models.SqlDatabaseThreatDetectionPolicy.UpdateStages.WithSecurityAlertPolicyState::withPolicyNew() @ com.azure.resourcemanager.sql.models.SqlDatabaseThreatDetectionPolicy.Update",
          "justification": "Non-function operation since 'NEW' is removed from SecurityAlertPolicyState."
        },
        {
          "regex": true,
          "code": "java\\.method\\.removed",
          "old": "method (java\\.time\\.OffsetDateTime|java\\.lang\\.String) com\\.azure\\.resourcemanager\\.sql\\.models\\.SqlDatabaseUsageMetric::(nextResetTime|resourceName)\\(\\)",
          "justification": "Non-functional property removed by backend."
        },
        {
          "regex": true,
          "code": "java\\.method\\.removed",
          "old": "method .* com\\.azure\\.resourcemanager\\.sql\\.models\\.SqlElasticPool::(listDatabaseActivities|listDatabaseActivitiesAsync|listDatabaseMetricDefinitions|listDatabaseMetricDefinitionsAsync|listDatabaseMetrics)\\(\\)",
          "justification": "Remove non-functional class ElasticPoolDatabaseActivity since underlying ElasticPoolDatabaseActivityInner was removed by backend."
        },
        {
          "code": "java.method.removed",
          "old": "method com.azure.core.http.rest.PagedFlux<com.azure.resourcemanager.sql.models.SqlDatabaseMetric> com.azure.resourcemanager.sql.models.SqlElasticPool::listDatabaseMetricsAsync(java.lang.String)",
          "justification": "Non functional methods not supported by backend."
        },
        {
          "regex": true,
          "code": "java\\.method\\.removed",
          "old": "method java\\.lang\\.String com\\.azure\\.resourcemanager\\.sql\\.models\\.SqlRestorableDroppedDatabase::(elasticPoolName|serviceLevelObjective)\\(\\)",
          "justification": "Non-functional property removed by backend."
        },
        {
          "code": "java.method.removed",
          "old": "method com.azure.resourcemanager.sql.models.ServiceObjective com.azure.resourcemanager.sql.models.SqlServer::getServiceObjective(java.lang.String)",
          "justification": "Non-functional property removed by backend."
        },
        {
          "code": "java.method.removed",
          "old": "method java.util.Map<java.lang.String, com.azure.resourcemanager.sql.models.RecommendedElasticPool> com.azure.resourcemanager.sql.models.SqlServer::listRecommendedElasticPools()",
          "justification": "Non-functional RecommendElasticPool removed by backend."
        },
        {
          "code": "java.method.removed",
          "old": "method java.util.List<com.azure.resourcemanager.sql.models.ServiceObjective> com.azure.resourcemanager.sql.models.SqlServer::listServiceObjectives()",
          "justification": "Non-functional ServiceObjective removed by backend."
        },
        {
          "code": "java.method.removed",
          "old": "method com.azure.resourcemanager.sql.models.SqlServerKeyOperations.DefinitionStages.WithCreate com.azure.resourcemanager.sql.models.SqlServerKeyOperations.DefinitionStages.WithCreationDate::withCreationDate(java.time.OffsetDateTime) @ com.azure.resourcemanager.sql.models.SqlServerKeyOperations.DefinitionStages.WithCreate",
          "justification": "Property creationDate can not be specified during creation any more."
        },
        {
          "code": "java.method.removed",
          "old": "method com.azure.resourcemanager.sql.models.SqlServerKeyOperations.DefinitionStages.WithCreate com.azure.resourcemanager.sql.models.SqlServerKeyOperations.DefinitionStages.WithThumbprint::withThumbprint(java.lang.String) @ com.azure.resourcemanager.sql.models.SqlServerKeyOperations.DefinitionStages.WithCreate: Method was removed.",
          "justification": "Property thumbprint can not be specified during creation any more."
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "old:": "method T com.azure.resourcemanager.resources.fluentcore.model.HasInnerModel<T>::innerModel() @ com.azure.resourcemanager.sql.models.TransparentDataEncryption",
          "justification": "Return type has been renamed by backend."
        },
        {
          "regex": true,
          "code": "java\\.method\\.removed",
          "old": "method (java\\.util\\.List|com\\.azure\\.core\\.http\\.rest\\.PagedFlux)<com\\.azure\\.resourcemanager\\.sql\\.models\\.TransparentDataEncryptionActivity> com\\.azure\\.resourcemanager\\.sql\\.models\\.TransparentDataEncryption::listActivities(Async)?\\(\\)",
          "justification": "Non-functional TransparentDataEncryptionActivity removed."
        },
        {
          "code": "java.method.returnTypeChanged",
          "old": "method com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus com.azure.resourcemanager.sql.models.TransparentDataEncryption::status()",
          "new": "method com.azure.resourcemanager.sql.models.TransparentDataEncryptionState com.azure.resourcemanager.sql.models.TransparentDataEncryption::status()",
          "justification": "Return type has been renamed by backend."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "old": "parameter com.azure.resourcemanager.sql.models.TransparentDataEncryption com.azure.resourcemanager.sql.models.TransparentDataEncryption::updateStatus(===com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus===)",
          "new": "parameter com.azure.resourcemanager.sql.models.TransparentDataEncryption com.azure.resourcemanager.sql.models.TransparentDataEncryption::updateStatus(===com.azure.resourcemanager.sql.models.TransparentDataEncryptionState===)",
          "justification": "Return type has been renamed by backend."
        },
        {
          "regex": true,
          "code": "java\\.class\\.(noLongerImplementsInterface|superTypeTypeParametersChanged)",
          "old": "interface com\\.azure\\.resourcemanager\\.sql\\.models\\.TransparentDataEncryption",
          "justification": "TransparentDataEncryptionInner has been rename to LogicalDatabaseTransparentDataEncryptionInner by backend."
        },
        {
          "regex": true,
          "code": "java.method.removed",
          "old": "method (int|long|java\\.lang\\.String) com\\.azure\\.resourcemanager\\.sql\\.models\\.ElasticPoolActivity::(location|requestedDatabaseDtuCap|requestedDatabaseDtuGuarantee|requestedDatabaseDtuMax|requestedDatabaseDtuMin|requestedDtu|requestedDtuGuarantee|requestedElasticPoolName|requestedStorageLimitInGB|requestedStorageLimitInMB)\\(\\)",
          "justification": "Non-functional property removed by backend."
        },
        {
          "regex": true,
          "code": "java\\.class\\.(noLongerImplementsInterface|superTypeTypeParametersChanged)",
          "old": "interface com\\.azure\\.resourcemanager\\.sql\\.models\\.ElasticPoolActivity",
          "justification": "ElasticPoolActivityInner has been renamed to ElasticPoolOperationInner"
        },
        {
          "code": "java.method.removed",
          "old": "method java.util.List<com.azure.resourcemanager.sql.models.SqlDatabaseMetric> com.azure.resourcemanager.sql.models.SqlElasticPool::listDatabaseMetrics(java.lang.String)",
          "justification": "Non functional methods not supported by backend."
        },
        {
          "code": "java.method.removed",
          "old": "method com.azure.resourcemanager.sql.models.SqlServerKeyOperations.DefinitionStages.WithCreate com.azure.resourcemanager.sql.models.SqlServerKeyOperations.DefinitionStages.WithThumbprint::withThumbprint(java.lang.String) @ com.azure.resourcemanager.sql.models.SqlServerKeyOperations.DefinitionStages.WithCreate",
          "justification": "Non functional methods not supported by backend."
        },
        {
          "code": "java.class.noLongerImplementsInterface",
          "old": "interface com.azure.resourcemanager.sql.models.SqlServerKeyOperations.DefinitionStages.WithCreate",
          "justification": "WithThumbprint and WithCreationDate no longer supported by backend."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "old:": "parameter reactor.core.publisher.Mono<com.azure.resourcemanager.sql.models.TransparentDataEncryption> com.azure.resourcemanager.sql.models.TransparentDataEncryption::updateStatusAsync(===com.azure.resourcemanager.sql.models.TransparentDataEncryptionStatus===)",
          "new": "parameter reactor.core.publisher.Mono<com.azure.resourcemanager.sql.models.TransparentDataEncryption> com.azure.resourcemanager.sql.models.TransparentDataEncryption::updateStatusAsync(===com.azure.resourcemanager.sql.models.TransparentDataEncryptionState===)",
          "justification": "Return type has been renamed by backend."
        },
        {
          "ignore": true,
          "code": "java.field.constantValueChanged",
          "old": "field com.azure.messaging.eventgrid.SystemEventNames.SERVICE_BUS_DEADLETTER_MESSAGES_AVAILABLE_WITH_NO_LISTENER",
          "new": "field com.azure.messaging.eventgrid.SystemEventNames.SERVICE_BUS_DEADLETTER_MESSAGES_AVAILABLE_WITH_NO_LISTENER",
          "justification": "Previous constant value had a typo and was never functional."
        }
      ]
    }
  }
]
