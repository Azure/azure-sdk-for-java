[
  {
    "extension": "revapi.java",
    "configuration": {
      "filter": {
        "classes": {
          "exclude": [
            "com.azure.core.util.Configuration"
          ]
        },
        "packages": {
          "regex": true,
          "exclude": [
            "com\\.azure\\..+\\.implementation(\\..+)?",
            "com\\.azure\\..+\\.samples(\\..+)?",
            "com\\.fasterxml\\.jackson\\..+",
            "reactor\\.core\\..+",
            "reactor\\.netty\\..+",
            "reactor\\.util\\..+",
            "io\\.netty\\..+",
            "com\\.nimbusds(\\..+)?",
            "com\\.microsoft\\.azure\\..+",
            "javax\\.jms(\\..+)?",
            "javax\\.servlet(\\..+)?",
            "io\\.micrometer(\\..+)?",
            "com\\.azure\\.data\\.cosmos(\\..+)?",
            "com\\.azure\\.spring\\.data\\.cosmos\\..+",
            "com\\.azure\\.spring\\.data\\.gremlin\\..+",
            "com\\.azure\\.spring(\\..+)?",
            "org\\.apache\\.avro\\..+"
          ]
        }
      }
    }
  },
  {
    "extension": "revapi.semver.ignore",
    "configuration": {
      "enabled": true,
      "versionIncreaseAllows": {
        "major": "breaking",
        "minor": "nonBreaking",
        "patch": "equivalent"
      },
      "passThroughDifferences": [
        "java.class.nonPublicPartOfAPI"
      ]
    }
  },
  {
    "extension": "revapi.ignore",
    "configuration": [
      {
        "regex": true,
        "code": "java\\.missing\\.(oldClass|newClass)",
        "new": "missing\\-class com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper",
        "exampleUseChainInNewApi": ".*com\\.azure\\.core\\.util\\.serializer\\.JacksonAdapter.*",
        "justification": "We allow this in com.azure.core.util.serializer.JacksonAdapter."
      },
      {
        "regex": true,
        "code": "java\\.missing\\.(oldClass|newClass)",
        "new": "missing\\-class javax\\.servlet\\.ServletContextEvent",
        "exampleUseChainInNewApi": ".*com\\.azure\\.keyvault\\.jca\\.org\\.apache\\.commons\\.logging\\.impl.*",
        "justification": "We allow this in com.azure.keyvault.jca.org.apache.commons.logging.impl.ServletContextCleaner"
      },
      {
        "regex": true,
        "code": "java\\.missing\\.(oldClass|newClass)",
        "new": "missing\\-class org\\.apache\\.avalon\\.framework\\.logger\\.Logger",
        "exampleUseChainInNewApi": ".*com\\.azure\\.keyvault\\.jca\\.org\\.apache\\.commons\\.logging\\.impl\\.AvalonLogger.*",
        "justification": "We allow this in com.azure.keyvault.jca.org.apache.commons.logging.impl.AvalonLogger"
      },
      {
        "regex": true,
        "code": "java\\.missing\\.(oldClass|newClass)",
        "new": "missing\\-class org\\.apache\\.log\\.Logger",
        "exampleUseChainInNewApi": ".*com\\.azure\\.keyvault\\.jca\\.org\\.apache\\.commons\\.logging\\.impl\\.LogKitLogger.*",
        "justification": "We allow this in com.azure.keyvault.jca.org.apache.commons.logging.impl.LogKitLogger"
      },
      {
        "regex": true,
        "code": "java\\.missing\\.(oldClass|newClass)",
        "new": "missing\\-class org\\.apache\\.log4j\\.Logger",
        "exampleUseChainInNewApi": ".*com\\.azure\\.keyvault\\.jca\\.org\\.apache\\.commons\\.logging\\.impl\\.Log4JLogger.*",
        "justification": "We allow this in com.azure.keyvault.jca.org.apache.commons.logging.impl.Log4JLogger"
      },
      {
        "regex": true,
        "code": "java.class.nonPublicPartOfAPI",
        "new": "class org.apache.http.impl.client.HttpRequestTaskCallable<V extends java.lang.Object>",
        "justification": "We allow this in org.apache.http.impl.client.HttpRequestFutureTask<V>"
      },
      {
        "regex": true,
        "code": "java.class.nonPublicPartOfAPI",
        "new": "(class|interface) org\\.apache\\.http\\.impl\\.conn\\.CPoolEntry",
        "exampleUseChainInNewApi": ".*org\\.apache\\.http\\.HttpClientConnection.*",
        "justification": "We allow this in org.apache.http.HttpClientConnection>"
      },
      {
        "regex": true,
        "code": "java.class.nonPublicPartOfAPI",
        "new": "(class|interface) com\\.azure\\.keyvault\\.jca\\.(com|org)\\..*",
        "justification": "skip check for third party files."
      },
      {
        "regex": true,
        "code": "java.class.nonPublicPartOfAPI",
        "new": "(class|enum|interface) org\\.conscrypt\\..*",
        "justification": "skip check for third party files."
      },
      {
        "regex": true,
        "code": "java\\.class\\.(noLongerInheritsFromClass|nonFinalClassInheritsFromNewClass)",
        "class": "com.azure.identity.SharedTokenCacheCredentialBuilder",
        "justification": "SharedTokenCacheCredentialBuilder now inherits AadCredentialBuilderBase instead of CredentialBuilderBase thus being reported. However, AadCredentialBuilderBase also extends CredentialBuilderBase so it's not a breaking change."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(interface|enum|class) reactor\\..*",
        "justification": "We allow reactor classes in our external APIs. This also occurs because we check transitive dependencies, so it checks reactor jars."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(class|interface|enum) com\\.azure\\.communication\\.common\\..*",
        "justification": "azure-communication-common classes are allowed to be exposed."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(interface|class|enum) com\\.azure\\.core.*",
        "justification": "azure-core classes are allowed to be exposed by dependencies using them."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "interface org\\.reactivestreams\\.(Publisher|Subscriber|Subscription).*",
        "justification": "These classes exposed are publisher, subscriber, and Subscription."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(class|interface|enum) com\\.azure\\.storage\\..*",
        "justification": "azure-storage-common and storage blob classes are allowed to be exposed."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(class|interface|enum) com\\.azure\\.resourcemanager\\..*",
        "justification": "resourcemanager classes are allowed to be exposed."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(class|interface|enum) com\\.azure\\.security\\.keyvault\\..*",
        "justification": "keyvault classes are allowed to be exposed."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(class|interface|enum) com\\.azure\\.perf\\.test\\.core\\..*",
        "justification": "perf-test classes are allowed to be exposed."
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(interface|class|enum) com\\.azure\\.cosmos.*",
        "justification": "azure-cosmos classes are allowed to be exposed by dependencies using them."
      },
      {
        "code": "java.class.externalClassExposedInAPI",
        "new": "class com.azure.data.schemaregistry.SchemaRegistryAsyncClient",
        "justification": "This is a preview release"
      },
      {
        "code": "java.class.externalClassExposedInAPI",
        "new": "class com.azure.data.schemaregistry.models.SchemaProperties",
        "justification": "This is a preview release"
      },
      {
        "code": "java.class.externalClassExposedInAPI",
        "new": "class com.azure.data.schemaregistry.models.SerializationType",
        "justification": "This is a preview release"
      },
      {
        "regex": true,
        "code": "java\\.class\\.externalClassExposedInAPI",
        "new": "(interface|class|enum) io\\.opentelemetry.*",
        "justification": "Azure Monitor Exporter is allowed to use OpenTelemetry types in public APIs as it implements interfaces defined by OpenTelemetry"
      },
      {
        "code": "java.annotation.added",
        "new": "class com.azure.storage.blob.models.PageList",
        "justification": "Annotation required to resolve deserialization bug."
      },
      {
        "code": "java.annotation.added",
        "new": "class com.azure.storage.file.datalake.models.PathHttpHeaders",
        "justification": "Annotation added when migrating to new generator, it should not break anything."
      },
      {
        "code": "java.annotation.attributeValueChanged",
        "old": "class com.azure.storage.file.share.models.ShareProtocolSettings",
        "new": "class com.azure.storage.file.share.models.ShareProtocolSettings",
        "justification": "Annotation required to resolve a swagger error. The value is now correct."
      },
      {
        "code": "java.annotation.attributeValueChanged",
        "old": "class com.azure.storage.file.share.models.ShareSmbSettings",
        "new": "class com.azure.storage.file.share.models.ShareSmbSettings",
        "justification": "Annotation required to resolve a swagger error. The value is now correct."
      },
      {
        "regex": true,
        "code": "java\\.annotation\\.(added|attributeValueChanged|attributeAdded)",
        "new": "(class|method void|parameter void) com\\.azure\\.search\\.documents\\.indexes\\.models\\..*",
        "justification": "Generated classes were moved into public API, these annotations were already being used in implementation used during serialization and deserialization."
      },
      {
        "code": "java.field.constantValueChanged",
        "old": "field com.azure.messaging.eventgrid.SystemEventNames.COMMUNICATION_CHAT_MESSAGE_REMOVED_FROM_THREAD",
        "new": "field com.azure.messaging.eventgrid.SystemEventNames.COMMUNICATION_CHAT_MESSAGE_REMOVED_FROM_THREAD",
        "justification": "Correct the event type defined in swagger file"
      },
      {
        "code": "java.field.constantValueChanged",
        "old": "field com.azure.messaging.eventgrid.SystemEventNames.COMMUNICATION_CHAT_PARTICIPANT_ADDED_TO_THREAD",
        "new": "field com.azure.messaging.eventgrid.SystemEventNames.COMMUNICATION_CHAT_PARTICIPANT_ADDED_TO_THREAD",
        "justification": "Correct the event type defined in swagger file"
      },
      {
        "code": "java.method.visibilityReduced",
        "new": "method java.util.function.Predicate<C> com.azure.core.util.paging.ContinuablePagedFlux<C, T, P extends com.azure.core.util.paging.ContinuablePage<C extends java.lang.Object, T extends java.lang.Object>>::getContinuationPredicate()",
        "justification": "Adding a final method to an abstract class that is rarely extended. New final method uses an unlikely name that wouldn't be found in sub-types."
      },
      {
        "regex": true,
        "code": "java\\.method\\.finalMethodAddedToNonFinalClass",
        "new": "method java\\.util\\.function\\.Predicate<C> com\\.azure\\.core\\.util\\.paging\\.ContinuablePagedFlux<C, T, P extends com\\.azure\\.core\\.util\\.paging\\.ContinuablePage<C extends java\\.lang\\.Object, T extends java\\.lang\\.Object>>::getContinuationPredicate\\(\\).*",
        "justification": "Adding a final method to an abstract class that is rarely extended. New final method uses an unlikely name that wouldn't be found in sub-types."
      },
      {
        "regex": true,
        "code": "java\\.annotation\\.added",
        "old": ".*",
        "annotationType": "com\\.azure\\.core\\.annotation\\.Service(Method|Client)",
        "justification": "These are SDK metadata annotations and don't affect runtime behavior."
      },
      {
        "code": "java.annotation.attributeValueChanged",
        "new": "@interface com.azure.core.annotation.JsonFlatten",
        "justification": "Changes made the annotation more permissive on the target types."
      },
      {
        "code": "java.field.serialVersionUIDUnchanged",
        "old": "field com.azure.core.amqp.exception.AmqpErrorContext.serialVersionUID",
        "new": "field com.azure.core.amqp.exception.AmqpErrorContext.serialVersionUID",
        "justification": "The field ErrorInfo was added to AmqpErrorContext, but no existing fields were removed or changed."
      },
      {
        "code": "java.method.added",
        "new": "method com.azure.core.util.HttpClientOptions com.azure.core.util.HttpClientOptions::setReadTimeout(java.time.Duration)",
        "justification": "New Setter method."
      },
      {
        "code": "java.method.added",
        "new": "method com.azure.core.util.HttpClientOptions com.azure.core.util.HttpClientOptions::setResponseTimeout(java.time.Duration)",
        "justification": "New Setter method."
      },
      {
        "code": "java.method.added",
        "new": "method java.time.Duration com.azure.core.util.HttpClientOptions::getConnectionIdleTimeout()",
        "package": "com.azure.core.util",
        "justification": "New getter method"
      },
      {
        "code": "java.method.added",
        "new": "method java.lang.Integer com.azure.core.util.HttpClientOptions::getMaximumConnectionPoolSize()",
        "package": "com.azure.core.util",
        "justification": "New getter method"
      },
      {
        "code": "java.method.added",
        "new": "method com.azure.core.util.HttpClientOptions com.azure.core.util.HttpClientOptions::setConnectionIdleTimeout(java.time.Duration)",
        "package": "com.azure.core.util",
        "justification": "New setter method"
      },
      {
        "code": "java.method.added",
        "new": "method com.azure.core.util.HttpClientOptions com.azure.core.util.HttpClientOptions::setMaximumConnectionPoolSize(java.lang.Integer)",
        "package": "com.azure.core.util",
        "justification": "New setter method"
      },
      {
        "code": "java.method.added",
        "new": "method com.azure.core.util.HttpClientOptions com.azure.core.util.HttpClientOptions::setResponseTimeout(java.time.Duration)",
        "justification": "New Setter method."
      },
      {
        "regex": true,
        "code": "java\\.annotation\\.attributeValueChanged",
        "new": "method byte\\[\\] com\\.azure\\.security\\.keyvault\\.keys\\.models\\.JsonWebKey::(g|s)et(D|Dp|Dq|E|K|N|P|Q|Qi|T|X|Y)\\(\\)",
        "justification": "The class used by the serialization/deserialization annotations is package private and moving it is not a breaking change."
      },
      {
        "code": "java.method.added",
        "new": "method boolean com.google.gson.JsonArray::isEmpty()",
        "justification": "com.google.code.gson:gson:jar:2.8.7 added this new method."
      },
      {
        "code": "java.field.constantValueChanged",
        "old": "field com.azure.core.util.tracing.Tracer.DIAGNOSTIC_ID_KEY",
        "new": "field com.azure.core.util.tracing.Tracer.DIAGNOSTIC_ID_KEY",
        "justification": "Old field value spelled incorrectly and was used in preview version of tracing package"
      },
      {
        "code": "java.method.added",
        "new": "method void com.azure.core.http.HttpHeaders::<init>(int)",
        "justification": "New HttpHeaders constructor exported from azure-core."
      },
      {
        "code": "java.method.added",
        "new": "method com.azure.core.http.policy.HttpRequestLogger com.azure.core.http.policy.HttpLogOptions::getRequestLogger()",
        "justification": "New method included in azure-core."
      },
      {
        "code": "java.method.added",
        "new": "method com.azure.core.http.policy.HttpResponseLogger com.azure.core.http.policy.HttpLogOptions::getResponseLogger()",
        "justification": "New method included in azure-core."
      },
      {
        "code": "java.method.added",
        "new": "method com.azure.core.http.policy.HttpLogOptions com.azure.core.http.policy.HttpLogOptions::setRequestLogger(com.azure.core.http.policy.HttpRequestLogger)",
        "justification": "New method included in azure-core."
      },
      {
        "code": "java.method.added",
        "new": "method com.azure.core.http.policy.HttpLogOptions com.azure.core.http.policy.HttpLogOptions::setResponseLogger(com.azure.core.http.policy.HttpResponseLogger)",
        "justification": "New method included in azure-core."
      },
      {
        "code": "java.method.added",
        "new": "method void com.azure.core.credential.AzureSasCredential::<init>(java.lang.String, java.util.function.Function<java.lang.String, java.lang.String>)",
        "justification": "New constructor added in azure-core."
      },
      {
        "code": "java.method.added",
        "new": "method com.azure.core.util.HttpClientOptions com.azure.core.util.HttpClientOptions::setConnectTimeout(java.time.Duration)",
        "justification": "New setter added in azure-core."
      },
      {
        "code": "java.method.added",
        "new": "method java.time.Duration com.azure.core.util.HttpClientOptions::getConnectTimeout()",
        "justification": "New getter added in azure-core."
      },
      {
          "code": "java.method.defaultMethodAddedToInterface",
          "new": "method boolean com.azure.core.http.policy.RetryStrategy::shouldRetryException(java.lang.Throwable)",
          "justification": "New default method added in azure-core."
      },
      {
        "code": "java.method.added",
        "new": "method void com.azure.core.util.logging.ClientLogger::log(com.azure.core.util.logging.LogLevel, java.util.function.Supplier<java.lang.String>)",
        "justification": "New default method added in azure-core."
      },
      {
        "code": "java.method.added",
        "new": "method void com.azure.core.util.logging.ClientLogger::log(com.azure.core.util.logging.LogLevel, java.util.function.Supplier<java.lang.String>, java.lang.Throwable)",
        "justification": "New default method added in azure-core."
      },
      {
        "code": "java.method.added",
        "new": "method java.lang.Long com.azure.core.util.BinaryData::getLength()",
        "justification": "New method added to BinaryData in azure-core."
      },
      {
        "code": "java.method.added",
        "new": "method reactor.core.publisher.Flux<java.nio.ByteBuffer> com.azure.core.util.BinaryData::toFluxByteBuffer()",
        "justification": "New method added to BinaryData in azure-core."
      },
      {
        "code": "java.method.added",
        "new": "method reactor.core.publisher.Mono<com.azure.core.util.BinaryData> com.azure.core.util.BinaryData::fromFlux(reactor.core.publisher.Flux<java.nio.ByteBuffer>, java.lang.Long)",
        "justification": "New method added to BinaryData in azure-core."
      },
      {
        "code": "java.method.added",
        "new": "method com.azure.core.util.BinaryData com.azure.core.util.BinaryData::fromFile(java.nio.file.Path)",
        "justification": "New method added to BinaryData in azure-core."
      },
      {
        "code": "java.method.added",
        "new": "method com.azure.core.util.BinaryData com.azure.core.util.BinaryData::fromFile(java.nio.file.Path, int)",
        "justification": "New method added to BinaryData in azure-core."
      }
    ]
  }
]
