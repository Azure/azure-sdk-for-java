trigger: none

pr: none

pool:
  vmImage: 'windows-2022'

variables:
- group: Release Secrets for GitHub
- name: MAVEN_CACHE_FOLDER
  value: $(Pipeline.Workspace)/.m2/repository
- name: MAVEN_OPTS
  value: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
- name: NodeVersion
  value: '18.x'
- name: JavaVersion
  value: '17'
- name: fromTypeSpec
  value: $[ne(variables['TSP_CONFIG'], '')]

steps:
- bash: |
      pip3 install --upgrade wheel
      pip3 install --upgrade PyYAML requests
  displayName: Update python

- task: JavaToolInstaller@0
  inputs:
    versionSpec: '$(JavaVersion)'
    jdkArchitectureOption: '$(Agent.OSArchitecture)'
    jdkSourceOption: 'PreInstalled'

- task: NodeTool@0
  displayName: 'Install Node.js $(NodeVersion)'
  inputs:
    versionSpec: '$(NodeVersion)'

- bash: |
      npm install -g autorest
  displayName: 'Install autorest'
  condition: eq(variables.fromTypeSpec, false)

- bash: |
      npm install -g @azure-tools/typespec-client-generator-cli
  displayName: 'Install tsp-client'
  condition: eq(variables.fromTypeSpec, true)

# - template: /eng/common/testproxy/test-proxy-tool.yml
#   parameters:
#     runProxy: true
#     targetVersion: 1.0.0-dev.20230908.1

- bash: |
      mkdir -p ~/.ssh
      ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
      git clone git@github.com:Azure/azure-rest-api-specs.git
  workingDirectory: '$(Agent.TempDirectory)'
  displayName: 'Clone azure-rest-api-specs repo.'
  condition: eq(variables.fromTypeSpec, true)

- bash: |
      java -version
      tsp-client init --debug --tsp-config "$(Agent.TempDirectory)/azure-rest-api-specs/specification/mongocluster/DocumentDB.MongoCluster.Management" --commit 7605afe88e3201dc25ce0881c2e49fe1b6bbdd54 --repo Azure/azure-rest-api-specs --local-spec-repo "$(Agent.TempDirectory)/azure-rest-api-specs/specification/mongocluster/DocumentDB.MongoCluster.Management"
  displayName: '[Experiment] Generation from TypeSpec by direct calling tsp-client'
  condition: eq(variables.fromTypeSpec, true)

- bash: |
    java -version
    set -x
    ./eng/mgmt/automation/generate.py --tsp-config "$(TSP_CONFIG)" --version "$(VERSION)" --auto-commit-external-change --user-name "azure-sdk" --user-email "azuresdk@microsoft.com"
  displayName: Generation from TypeSpec
  condition: eq(variables.fromTypeSpec, true)

- bash: |
    export PATH=$JAVA_HOME_11_X64/bin:$PATH
    java -version
    set -x
    ./eng/mgmt/automation/generate.py --readme "$(README)" --tag "$(TAG)" --autorest-options="$(AUTOREST_OPTIONS)" --service "$(SERVICE)" --version "$(VERSION)" --suffix "$(SUFFIX)" --auto-commit-external-change --user-name "azure-sdk" --user-email "azuresdk@microsoft.com"
  displayName: Generation from Swagger
  condition: eq(variables.fromTypeSpec, false)

- template: /eng/common/pipelines/templates/steps/create-pull-request.yml
  parameters:
    PRBranchName: fluent-lite-generation-$(Build.BuildId)
    ${{ if ne(variables['TSP_CONFIG'], '') }}: # Have to use parameter here. The ${{<expression>}} is compile time expression, it won't resolve against runtime variables.
      CommitMsg: '[Automation] Generate Fluent Lite from TypeSpec $(README)'
      PRTitle: '[Automation] Generate Fluent Lite from TypeSpec $(README)'
    ${{ else }}:
      CommitMsg: '[Automation] Generate Fluent Lite from Swagger $(README)#$(TAG)'
      PRTitle: '[Automation] Generate Fluent Lite from Swagger $(README)#$(TAG)'
    PRLabels: 'Mgmt - Track 2'
    OpenAsDraft: '$(DRAFT_PULL_REQUEST)'
