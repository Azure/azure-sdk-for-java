parameters:
  rootFolder: '$(Build.SourcesDirectory)'

steps:
  - pwsh: |
      Get-ChildItem "${{ parameters.rootFolder }}" | % { $_.Name }

      New-Item -Path "${{ parameters.rootFolder }}/proxylogs/ -ItemType Directory
      
      Write-Host 'Copy-Item -Path "${{ parameters.rootFolder }}/test-proxy.log" -Destination "${{ parameters.rootFolder }}/proxylogs/proxy.log"'
      Write-Host 'Copy-Item -Path "${{ parameters.rootFolder }}/test-proxy-err.log" -Destination "${{ parameters.rootFolder }}/proxylogs/proxy-err.log"'
      
      Copy-Item -Path "${{ parameters.rootFolder }}/test-proxy.log" -Destination "${{ parameters.rootFolder }}/proxylogs/proxy.log"
      Copy-Item -Path "${{ parameters.rootFolder }}/test-proxy-err.log" -Destination "${{ parameters.rootFolder }}/proxylogs/proxy-err.log"
    displayName: Copy Log File
    condition: succeededOrFailed()

  - template: ../pipelines/templates/steps/publish-artifact.yml
    parameters:
      ArtifactName: "$(System.StageName)-$(System.JobName)-$(System.JobAttempt)-proxy-logs"
      ArtifactPath: "${{ parameters.rootFolder }}/proxylogs"

  - pwsh: |
      Remove-Item -Recurse -Force ${{ parameters.rootFolder }}/proxylogs
    displayName: Cleanup Copied Log File
    condition: succeededOrFailed()
