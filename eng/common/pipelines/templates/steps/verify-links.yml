parameters:
  Directory: 'not-specified'
  IgnoreLinksFile: '$(Build.SourcesDirectory)/eng/ignore-links.txt'
  WorkingDirectory: '$(System.DefaultWorkingDirectory)'
  ScriptDirectory: 'eng/common/scripts'
  Recursive: $false
  CheckLinkGuidance: $true
  Urls: '(Get-ChildItem -Path ./ -Recurse -Include *.md)'
  BranchReplaceRegex: "^(${env:SYSTEM_PULLREQUEST_SOURCEREPOSITORYURI}.*/(?:blob|tree)/)master(/.*)$"
  BranchReplacementName: "${env:SYSTEM_PULLREQUEST_SOURCECOMMITID}"

steps:
  - task: PowerShell@2
    displayName: Retrieved all markdowns to scan
    inputs:
      pwsh: true
      workingDirectory: '${{ parameters.WorkingDirectory }}'
      filePath: ${{ parameters.ScriptDirectory }}/Scan-files-against-links.ps1
      arguments: >
        -deletedFiles (git diff origin/${env:SYSTEM_PULLREQUEST_TARGETBRANCH} HEAD --name-only --diff-filter=D)
        -renamedFiles (git diff origin/${env:SYSTEM_PULLREQUEST_TARGETBRANCH} HEAD --diff-filter=R)
        -changedMarkdowns ${{ parameters.Urls }}
  - task: PowerShell@2
    displayName: Link verification check
    inputs:
      pwsh: true
      workingDirectory: '${{ parameters.WorkingDirectory }}/${{ parameters.Directory }}'
      filePath: ${{ parameters.ScriptDirectory }}/Verify-Links.ps1
      arguments: >
        -urls $(markdownsToScan)
        -rootUrl "file://${{ parameters.WorkingDirectory }}/${{ parameters.Directory }}"
        -recursive: ${{ parameters.Recursive }} 
        -ignoreLinksFile ${{ parameters.IgnoreLinksFile }}
        -branchReplaceRegex "${{ parameters.BranchReplaceRegex }}"
        -branchReplacementName ${{ parameters.BranchReplacementName }}
        -devOpsLogging: $true
        -checkLinkGuidance: ${{ parameters.CheckLinkGuidance }}
