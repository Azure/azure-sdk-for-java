parameters:
  - name: Paths
    type: object
    default: []
  # Enables passing in an array as a json string, in order to source
  # paths generated dynamically in previous steps
  - name: PathsJson
    type: string
    default: '[]'
  - name: Repositories
    type: object
    default:
      - Name: $(Build.Repository.Name)
        Commitish: $(Build.SourceVersion)
        WorkingDirectory: $(System.DefaultWorkingDirectory)
  - name: SkipDefaultCheckout
    type: boolean
    default: false

steps:
  - ${{ if not(parameters.SkipDefaultCheckout) }}:
    - checkout: none

  - ${{ each repo in parameters.Repositories }}:
    - pwsh: |
        $dir = "${{ coalesce(repo.WorkingDirectory, format('{0}/{1}', '$(System.DefaultWorkingDirectory)', repo.Name)) }}"
        New-Item $dir -ItemType Directory -Force

    - pwsh: |
        git clone --no-checkout --filter=tree:0 git://github.com/${{ repo.Name }} .
        git sparse-checkout init
        git sparse-checkout set eng
      displayName: Init sparse checkout ${{ repo.Name }}
      workingDirectory: ${{ coalesce(repo.WorkingDirectory, format('{0}/{1}', '$(System.DefaultWorkingDirectory)', repo.Name)) }}

    - ${{ each path in parameters.Paths }}:
      - pwsh: git sparse-checkout add ${{ path }}
        displayName: Add sparse checkout path ${{ path }}
        workingDirectory: ${{ coalesce(repo.WorkingDirectory, format('{0}/{1}', '$(System.DefaultWorkingDirectory)', repo.Name)) }}

    - pwsh: |
        $paths = '${{ parameters.PathsJson }}' | ConvertFrom-Json
        foreach ($path in $paths) {
          Write-Host 'git sparse-checkout add $path'
          git sparse-checkout add $path
        }
      displayName: Add sparse checkout paths from json
      workingDirectory: ${{ coalesce(repo.WorkingDirectory, format('{0}/{1}', '$(System.DefaultWorkingDirectory)', repo.Name)) }}

    - pwsh: git checkout ${{ repo.Commitish }}
      displayName: Sparse checkout at ${{ repo.Commitish }}
      workingDirectory: ${{ coalesce(repo.WorkingDirectory, format('{0}/{1}', '$(System.DefaultWorkingDirectory)', repo.Name)) }}
