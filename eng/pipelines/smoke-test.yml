variables:
  - template: ./templates/variables/globals.yml
  - name: PomFile
    value: common/smoke-tests/pom.xml

jobs:
  - job: SmokeTest
    timeoutInMinutes: 15

    strategy:
      matrix:
        Java 8 Windows (Public):
          ProfileFlag: ''
          JavaVersion: '1.8'
          OSVmImage: windows-2019
          CloudType: public
        Java LTS Windows (Public):
          ProfileFlag: '-Pjava-lts'
          JavaVersion: '1.11'
          OSVmImage: windows-2019
          CloudType: public
        Java 8 Linux (Public):
          ProfileFlag: ''
          JavaVersion: '1.8'
          OSVmImage: ubuntu-18.04
          CloudType: public
        Java LTS Linux (Public):
          ProfileFlag: '-Pjava-lts'
          JavaVersion: '1.11'
          OSVmImage: ubuntu-18.04
          CloudType: public
        Java 8 MacOS (Public):
          ProfileFlag: ''
          JavaVersion: '1.8'
          OSVmImage: macOS-10.15
          CloudType: public
        Java LTS MacOS (Public):
          ProfileFlag: '-Pjava-lts'
          JavaVersion: '1.11'
          OSVmImage: macOS-10.15
          CloudType: public
        Java 8 Windows (Gov):
          ProfileFlag: ''
          JavaVersion: '1.8'
          OSVmImage: windows-2019
          CloudType: gov
        Java LTS Windows (Gov):
          ProfileFlag: '-Pjava-lts'
          JavaVersion: '1.11'
          OSVmImage: windows-2019
          CloudType: gov

    pool:
      vmImage: $(OSVmImage)

    steps:
      - task: Maven@3
        displayName: Use the latest package version from the dev feed
        inputs:
          mavenPomFile: $(PomFile)
          goals: 'versions:use-latest-versions'
          options: '$(DefaultOptions) $(ProfileFlag) -DskipTests "-Dincludes=com.azure:*"'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false

      - task: UsePythonVersion@0
        displayName: 'Use Python 3.6'
        inputs:
          versionSpec: '3.6'

      - task: PythonScript@0
        inputs:
          scriptPath: common/smoke-tests/validate_version_dates.py
          workingDirectory: common/smoke-tests
        continueOnError: true
        displayName: Validate consistent dependency dev versions for com.azure packages

      - pwsh: Get-Content $(PomFile)
        displayName: Show pom.xml

      - task: Maven@3
        displayName: Show dependency tree
        inputs:
          mavenPomFile: $(PomFile)
          goals: 'dependency:tree'
          options: '$(DefaultOptions) $(ProfileFlag) -DskipTests'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false

      - task: Maven@3
        displayName: 'Build and Package'
        inputs:
          mavenPomFile: $(PomFile)
          goals: 'package'
          options: '$(DefaultOptions) $(ProfileFlag) -DskipTests'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false

      # Set secret environment variables for different clouds
      - pwsh: |
          $variables = @{
            AZURE_CLIENT_SECRET='$(aad-azure-sdk-test-client-secret)'
            AZURE_TENANT_ID='$(aad-azure-sdk-test-tenant-id)'
            AZURE_CLIENT_ID='$(aad-azure-sdk-test-client-id)'
            AZURE_AUTHORITY_HOST='$(aad-azure-sdk-test-authority-uri)'
            AZURE_PROJECT_URL='$(smoke-tests-key-vault-project-url)'
            AZURE_EVENT_HUBS_CONNECTION_STRING='$(smoke-tests-event-hubs-connection-string)'
            AZURE_STORAGE_CONNECTION_STRING='$(smoke-tests-storage-connection-string)'
            AZURE_COSMOS_KEY='$(smoke-tests-cosmos-key)'
            AZURE_COSMOS_ENDPOINT='$(smoke-tests-cosmos-endpoint)'
          };
          foreach ($key in $variables.Keys) {
            Write-Host "Setting variable '$key'"
            Write-Host "##vso[task.setvariable variable=_$key;issecret=true;]$($variables[$key])"
            Write-Host "##vso[task.setvariable variable=$key;]$($variables[$key])"
          }
        displayName: Set secrets for public cloud
        condition: and(succeeded(), eq(variables['CloudType'], 'public'))

      - pwsh: |
          $variables = @{
            AZURE_CLIENT_SECRET='$(aad-azure-sdk-test-client-secret-gov)'
            AZURE_TENANT_ID='$(aad-azure-sdk-test-tenant-id-gov)'
            AZURE_CLIENT_ID='$(aad-azure-sdk-test-client-id-gov)'
            AZURE_AUTHORITY_HOST='$(aad-azure-sdk-test-authority-uri-gov)'
            AZURE_PROJECT_URL='$(smoke-tests-key-vault-project-url-gov)'
            AZURE_EVENT_HUBS_CONNECTION_STRING='$(smoke-tests-event-hubs-connection-string-gov)'
            AZURE_STORAGE_CONNECTION_STRING='$(smoke-tests-storage-connection-string-gov)'
            AZURE_COSMOS_KEY='$(smoke-tests-cosmos-key-gov)'
            AZURE_COSMOS_ENDPOINT='$(smoke-tests-cosmos-endpoint-gov)'
          };
          foreach ($key in $variables.Keys) {
            Write-Host "Setting variable '$key'"
            Write-Host "##vso[task.setvariable variable=_$key;issecret=true;]$($variables[$key])"
            Write-Host "##vso[task.setvariable variable=$key;]$($variables[$key])"
          }
        displayName: Set secrets for government cloud
        condition: and(succeeded(), eq(variables['CloudType'], 'gov'))

      - task: Maven@3
        displayName: 'Run Smoke Tests'
        inputs:
          mavenPomFile: $(PomFile)
          goals: 'exec:java'
          options: '$(DefaultOptions) $(ProfileFlag) -Dexec.mainClass="com.azure.App"'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
        env:
          AZURE_LOG_LEVEL: 2