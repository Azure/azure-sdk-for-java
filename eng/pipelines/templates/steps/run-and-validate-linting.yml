parameters:
  - name: JavaBuildVersion
    type: string
    default: $(JavaBuildVersion)
  - name: AdditionalLintingOptions
    type: string
    default: ''

steps:
  - task: Maven@3
    displayName: 'Run SpotBugs, Checkstyle, and RevApi'
    inputs:
      mavenPomFile: pom.xml
      options: '$(DefaultOptions) --no-transfer-progress -T 1C -Dcheckstyle.failOnViolation=false -Dcheckstyle.failsOnError=false -Dspotbugs.failOnError=false -Drevapi.failBuildOnProblemsFound=false -Dcodesnippet.skip -Dmaven.javadoc.skip -DskipTests -Dgpg.skip -DskipCompile=true -DskipTestCompile=true -pl $(ProjectList)'
      mavenOptions: '$(MemoryOptions)'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: ${{ parameters.JavaBuildVersion }}
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      goals: 'verify'
    condition: ${{ eq(coalesce(variables['IsLatestNonLtsJdk'], true), true) }}

  - task: PowerShell@2
    inputs:
      filePath: $(System.DefaultWorkingDirectory)/eng/pipelines/scripts/Get-Linting-Reports.ps1
      arguments: -OutputDirectory $(Build.ArtifactStagingDirectory)/linting-reports
      pwsh: true
      workingDirectory: $(Pipeline.Workspace)
    displayName: 'Generate Linting Reports'
    condition: ${{ eq(coalesce(variables['IsLatestNonLtsJdk'], true), true) }}

  - publish: $(Build.ArtifactStagingDirectory)/linting-reports.zip
    displayName: 'Publish Linting Reports'
    artifact: linting-reports-$(System.StageName)-$(System.JobName)-$(System.JobAttempt)
    condition: ${{ eq(coalesce(variables['IsLatestNonLtsJdk'], true), true) }}

  - pwsh: |
      if ((Get-ChildItem -Path $(Build.ArtifactStagingDirectory)/linting-reports -Directory | Measure-Object).Count -gt 0) {
        Write-Host "Linting errors have been found, download the 'linting-reports.zip' artifact to see what was found."
        exit 1
      }
    displayName: 'Fail Pipeline if Linting Reports Exist'
    continueOnError: ${{ eq(variables['IsLatestNonLtsJdk'], true) }}
    condition: ${{ eq(coalesce(variables['IsLatestNonLtsJdk'], true), true) }}

  - task: Maven@3
    displayName: 'Run Javadoc'
    inputs:
      mavenPomFile: pom.xml
      options: '$(DefaultOptions) --no-transfer-progress -DskipTests -Dgpg.skip -Dverify-readme -DskipCompile=true -DskipTestCompile=true -Dcheckstyle.skip -Dspotbugs.skip -Drevapi.skip ${{ parameters.AdditionalLintingOptions }} -pl $(ProjectList)'
      mavenOptions: '$(MemoryOptions)'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: ${{ parameters.JavaBuildVersion }}
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      goals: 'verify'
    continueOnError: ${{ eq(variables['IsLatestNonLtsJdk'], true) }}
    condition: ${{ eq(coalesce(variables['IsLatestNonLtsJdk'], true), true) }}
