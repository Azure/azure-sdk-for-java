parameters:
  - name: OomArtifactName
    type: string
    default: 'oom-hprofs'

steps:
  - pwsh: |
      if ((Get-ChildItem -Path . -Recurse -Filter *.hprof -File).Count -eq 0) {
        Write-Host "##vso[task.setvariable variable=HAS_OOM_PROFS]false"
      } else {
        Write-Host "##vso[task.setvariable variable=HAS_OOM_PROFS]true"
      }
    displayName: 'Check for OOM hprofs'
    condition: always()

  - pwsh: |
      New-Item $(Build.ArtifactStagingDirectory)/${{ parameters.OomArtifactName }} -ItemType directory
      foreach($hprofFile in (Get-ChildItem -Path . -Recurse -Filter *.hprof -File)) {
        $fileFullName = $hprofFile.FullName
        $fileName = $hprofFile.Name
        Move-Item -Path $fileFullName -Destination $(Build.ArtifactStagingDirectory)/${{ parameters.OomArtifactName }}/$fileName -ErrorAction SilentlyContinue
      }
      [System.IO.Compression.ZipFile]::CreateFromDirectory("$(Build.ArtifactStagingDirectory)/${{ parameters.OomArtifactName }}","$(Build.ArtifactStagingDirectory)/${{ parameters.OomArtifactName }}.zip")
      New-Item -ItemType Directory -Path $(Build.ArtifactStagingDirectory)/${{ parameters.OomArtifactName }}-zipped
      Move-Item -Path "$(Build.ArtifactStagingDirectory)/${{ parameters.OomArtifactName }}.zip" -Destination "$(Build.ArtifactStagingDirectory)/${{ parameters.OomArtifactName }}-zipped/${{ parameters.OomArtifactName }}.zip"
    displayName: 'Copy OOM hprofs'
    condition: eq(variables['HAS_OOM_PROFS'], 'true')

  - template: /eng/common/pipelines/templates/steps/publish-artifact.yml
    parameters:
      ArtifactPath: '$(Build.ArtifactStagingDirectory)/${{ parameters.OomArtifactName }}-zipped'
      ArtifactName: '${{ parameters.OomArtifactName }}-$(System.StageName)-$(System.JobName)'
      CustomCondition: eq(variables['HAS_OOM_PROFS'], 'true')
