steps:
  # Non-standard JDK versions are only supported in Linux.
  # Make the assumption here Linux is being used, if it's not it's a configuration issue that needs to be fixed there.
  - task: Cache@2
    inputs:
      key: 'jdk | "$(JavaBuildVersion)" | "$(CacheSalt)" | "$(Agent.OS)"'
      path: $(Agent.BuildDirectory)/OpenJDK18U-jdk_x64_linux_hotspot_18.0.2.1_1.tar.gz
    displayName: 'Cache Latest JDK'
    condition: eq(variables['LatestJdkVersion'], variables['JavaTestVersion'])

  # PowerShell script will check if the cache was able to resolve the latest JDK version.
  # If not it will download the JDK version to the location where the cache would have placed it.
  # Unzip the JDK to the current directory, update JAVA_HOME to it, update the PATH to include it,
  # and add an emulation of the environment variables DevOps uses for JDK 8, 11, and 17 (JAVA_HOME_<version>_X64).
  - task: PowerShell@2
    displayName: 'Install Latest JDK'
    inputs:
      pwsh: true
      filePath: eng/scripts/Install-Latest-JDK.ps1
    workingDirectory: $(Agent.BuildDirectory)
    condition: eq(variables['LatestJdkVersion'], variables['JavaTestVersion'])
