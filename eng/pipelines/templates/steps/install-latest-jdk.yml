parameters:
  JdkVersion: $(JavaBuildVersion)

steps:
  # If the request JDK version is 8, 11, or 17 do nothing, these are already installed on the hosted agents.
  - ${{ if not(in(parameters.JdkVersion, '1.17', '1.11', '1.8')) }}:
    # Non-standard JDK versions are only supported in Linux.
    # Make the assumption here Linux is being used, if it's not it's a configuration issue that needs to be fixed there.
    - task: Cache@2
      inputs:
        key: 'jdk | 18 | "$(CacheSalt)" | "$(Agent.OS)"'
        path: $(Agent.ToolsDirectory)

    # PowerShell script will check if the cache was able to resolve the latest JDK version.
    # If not it will download the JDK version to the location where the cache would have placed it.
    # Unzip the JDK to the current directory, update JAVA_HOME to it, update the PATH to include it,
    # and add an emulation of the environment variables DevOps uses for JDK 8, 11, and 17 (JAVA_HOME_<version>_X64).
    - pwsh: |
        $latestJdkName = "jdk-18.0.2.1+1"
        $latestJdkZip = "OpenJDK18U-jdk_x64_linux_hotspot_18.0.2.1_1.tar.gz"
        $latestJdkPath = '$(Agent.ToolsDirectory)' + / + $latestJdkZip
        if (!(Test-Path -Path $latestJdkPath -PathType leaf)) {
          $latestJdkUri = "https://github.com/adoptium/temurin18-binaries/releases/download/jdk-18.0.2.1%2B1/" + $latestJdkZip
          Invoke-WebRequest -URI $latestJdkUri -OutFile $latestJdkPath
        }
        
        tar -xf $latestJdkPath -C '$(Agent.ToolsDirectory)'
        
        $javaHome = '$(Agent.ToolsDirectory)/' + $latestJdkName + '/bin'
        $env:JAVA_HOME=$javaHome
        $env:JAVA_HOME_18_X64=$javaHome
        $env:PATH = '$javaHome' + ':' + $env:PATH
