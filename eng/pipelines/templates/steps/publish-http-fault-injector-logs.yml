steps:
  - pwsh: |
      if (Test-Path -Path "$(Build.SourcesDirectory)/http-fault-injector.log") {
        Write-Host "##vso[task.setvariable variable=HAS_HTTP_FAULT_INJECTOR_LOGS]true"
        Copy-Item -Path "$(Build.SourcesDirectory)/http-fault-injector.log" -Destination "$(Build.SourcesDirectory)/fault.log"
        Compress-Archive -Path "$(Build.SourcesDirectory)/fault.log" -Destination "$(Build.SourcesDirectory)/fault.zip"
      } else {
        Write-Host "##vso[task.setvariable variable=HAS_HTTP_FAULT_INJECTOR_LOGS]false"
      }
    displayName: 'Check for and copy http-fault-injector logs'
    condition: always()

  - template: /eng/common/pipelines/templates/steps/publish-artifact.yml
    parameters:
      ArtifactName: "http-fault-injector-logs-$(System.StageName)-$(System.JobName)-$(System.JobAttempt)"
      ArtifactPath: "$(Build.SourcesDirectory)/fault.zip"
      CustomCondition: and(not(succeeded()), eq(variables['HAS_HTTP_FAULT_INJECTOR_LOGS'], 'true'))

  - pwsh: |
      Remove-Item -Force $(Build.SourcesDirectory)/fault.log
      Remove-Item -Force $(Build.SourcesDirectory)/fault.zip
    displayName: 'Cleanup http-fault-injector log file'
    condition: eq(variables['HAS_HTTP_FAULT_INJECTOR_LOGS'], 'true')
