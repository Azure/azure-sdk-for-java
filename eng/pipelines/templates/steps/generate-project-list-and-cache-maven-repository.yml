# This job template uses the artifact list in the ci.yml file
# to generate a variable at build time that can be passed into
# the Maven -pl command-line switch to constrain what subset of
# projects are targeted based on the artifacts this pipeline
# produces. The -am and -amd switches are then applied as
# appropriate to constrain the full graph that is built depending
# on whether we are doing a recorded test play back or a full live
# test.

# The project list is also being used as a cache key.
parameters:
  - name: JobType
    type: string
    default: test
  - name: UseCache
    type: boolean
    default: true
  - name: ServiceDirectory
    type: string
    default: 'not-specified' # Set a default that breaks in obvious ways.
  - name: ExcludePaths
    type: object
    default: []

steps:

# This is the case for the PullReqest pipeline which has a ServiceDirectory of 'auto'.
# For the PullRequest pipeline, the packageInfo files generated from the diff end up
# being the source of truth for the artifacts list.
- ${{ if and(eq(variables['Build.Reason'], 'PullRequest'), eq(parameters.ServiceDirectory, 'auto')) }}:
  - template: /eng/common/pipelines/templates/steps/save-package-properties.yml
    parameters:
      ServiceDirectory: ${{parameters.ServiceDirectory}}
      ExcludePaths: ${{parameters.ExcludePaths}}

  # Create the ProjectList and ProjectListSha256 variables.
  # The ProjectList is used by subsequent steps and tasks to run CI.
  # The ProjectListSha256 is used by the cache key, previously the cache key was using ProjectList but it was found
  # that long cache keys cause caching to fail.
- task: PowerShell@2
  displayName: Initialize project list variable
  inputs:
    pwsh: true
    filePath: eng/pipelines/scripts/generate-project-list.ps1
  env:
    ARTIFACTSJSON: $(ArtifactsJson)
    ADDITIONALMODULESJSON: $(AdditionalModulesJson)
    PACKAGEINFODIR: $(Build.ArtifactStagingDirectory)/PackageInfo

# The Cache task, when restoring, can have a miss and still pass but, if nothing is built, the
# Post-Job Cache will fail because there's no .m2/repository
- ${{ if eq(parameters.UseCache, 'true') }}:
  - task: Cache@2
    inputs:
    # Note: CacheSalt is only intended to be used in special cases, as a build is queued, to force a cache miss.
    # This would be set as a variable in the UI when the run is queued.
      key: 'maven | "$(CacheSalt)" | "$(Agent.OS)" | $(Build.SourcesDirectory)/eng/versioning/external_dependencies.txt | "$(ProjectListSha256)" | "${{ parameters.JobType }}" | "$(TestFromSource)"'
      path: $(MAVEN_CACHE_FOLDER)
    displayName: Cache Maven local repo
