# This job template uses the artifact list in the ci.yml file
# to generate a variable at build time that can be passed into
# the Maven -pl command-line switch to constrain what subset of
# projects are targeted based on the artifacts this pipeline
# produces. The -am and -amd switches are then applied as
# appropriate to constrain the full graph that is built depending
# on whether we are doing a recorded test play back or a full live
# test.

parameters:
  - name: Artifacts
    type: object
    default: []
  - name: AdditionalModules
    type: object
    default: []
  - name: JobType
    type: string
    default: test
  - name: SDKType
    type: string
    default: client
  - name: ServiceDirectory
    type: string
    default: 'not-specified' # Set a default that breaks in obvious ways.

steps:
- template: ../steps/cache-maven-repository.yml
  parameters:
    JobType: ${{ parameters.JobType }}
    SDKType: ${{ parameters.SDKType }}
    ServiceDirectory: ${{ parameters.ServiceDirectory }}

- pwsh: |
    $artifacts = '${{ convertToJson(parameters.Artifacts) }}' | ConvertFrom-Json
    $additionalModules = '${{ convertToJson(parameters.AdditionalModules) }}' | ConvertFrom-Json

    $projectList = @()
    foreach ($artifact in $artifacts) {
      $projectList += "$($artifact.groupId):$($artifact.name)"
    }
    foreach ($artifact in $additionalModules) {
      $projectList += "$($artifact.groupId):$($artifact.name)"
    }
    $projects = $projectList -join ','

    Write-Host "ProjectList = $projects"
    Write-Host "##vso[task.setvariable variable=ProjectList;]$projects"
  displayName: Initialize project list variable
