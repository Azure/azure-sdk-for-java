parameters:
  ServiceDirectory: ''
  Artifacts: []
  AdditionalModules: []
  EnvVars: {}
  MaxParallel: 0
  Matrix:
    Linux - Java 8:
      OSName: 'Linux'
      OSVmImage: 'ubuntu-16.04'
      JavaVersion: '1.8'
      DisplayName: 'Linux - Java 8'
    macOS - Java 8:
      OSName: 'macOS'
      OSVmImage: 'macOS-10.15'
      JavaVersion: '1.8'
      DisplayName: 'macOS - Java 8'
    Windows - Java 8:
      OSName: 'Windows'
      OSVmImage: 'windows-2019'
      JavaVersion: '1.8'
      DisplayName: 'Windows - Java 8'
    Linux - Java 11:
      OSName: 'Linux'
      OSVmImage: 'ubuntu-16.04'
      JavaVersion: '1.11'
      DisplayName: 'Linux - Java 11'
    macOS - Java 11:
      OSName: 'macOS'
      OSVmImage: 'macOS-10.15'
      JavaVersion: '1.11'
      DisplayName: 'macOS - Java 11'
    Windows - Java 11:
      OSName: 'Windows'
      OSVmImage: 'windows-2019'
      JavaVersion: '1.11'
      DisplayName: 'Windows - Java 11'
  PreRunSteps: []
  PostRunSteps: []
  TestName: LiveTest
  TimeoutInMinutes: 60
  TestStepMavenInputs:
    options: '-Dmaven.wagon.http.pool=false $(DefaultOptions) -pl $(ProjectList)'
    mavenOptions: '$(MemoryOptions) $(LoggingOptions)'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '$(JavaVersion)'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    goals: 'test'
  TestResultsFiles: ''

jobs:
  - job: ${{ parameters.TestName }}
    timeoutInMinutes: ${{ parameters.TimeoutInMinutes }}

    variables:
      - template: ../variables/globals.yml
    strategy:
      matrix: ${{ parameters.Matrix }}
      maxParallel: ${{ parameters.MaxParallel }}

    pool:
      vmImage: $(OSVmImage)

    steps:
      - ${{ if ne(parameters.DisableAzureResourceCreation, 'true') }}:
        - pwsh: |
            Install-Module -Name Az -AllowClobber -Scope CurrentUser -Force
          displayName: Install Az Module

        - pwsh: |
            $baseName = "t" + [guid]::NewGuid().ToString('n').Substring(0,16)
            Write-Host "##vso[task.setvariable variable=BaseName;]$baseName"
          displayName: Generate $(BaseName)

        - pwsh: >-
            eng/New-TestResources.ps1
            -BaseName $(BaseName)
            -ServiceDirectory ${{ parameters.ServiceDirectory }}
            -TestApplicationId '$(aad-azure-sdk-test-client-id)'
            -TestApplicationSecret '$(aad-azure-sdk-test-client-secret)'
            -TestApplicationOid '$(aad-azure-sdk-test-client-oid)'
            -TenantId '$(aad-azure-sdk-test-tenant-id)'
            -ProvisionerApplicationId '$(provisioner-aad-id)'
            -ProvisionerApplicationSecret '$(provisioner-aad-secret)'
            -DeleteAfterHours 24
            -CI
            -Force
            -Verbose
          displayName: Provision Test Resources

      - ${{ parameters.PreRunSteps }}

      - template: ../steps/generate-project-list.yml
        parameters:
          Artifacts: ${{parameters.Artifacts}}
          AdditionalModules: ${{parameters.AdditionalModules}}

      - task: Maven@3
        displayName: 'Build and Install'
        inputs:
          mavenPomFile: pom.xml
          goals: 'install'
          options: '$(DefaultOptions) -DskipTests -Dgpg.skip -Dmaven.javadoc.skip=true -Dcheckstyle.skip=true -Dspotbugs.skip=true -Drevapi.skip=true -pl $(ProjectList) -am'
          mavenOptions: '$(MemoryOptions) $(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
  

      - task: Maven@3
        displayName: $(DisplayName)
        inputs:
          mavenPomFile: pom.xml
          ${{ insert }}: ${{ parameters.TestStepMavenInputs }}
        env: ${{ parameters.EnvVars }}

      - ${{ parameters.PostRunSteps }}

      - ${{ if ne(parameters.DisableAzureResourceCreation, 'true') }}:
        - pwsh: >-
            eng/Remove-TestResources.ps1
            -ResourceGroupName "${env:AZURE_RESOURCEGROUP_NAME}"
            -TenantId '$(aad-azure-sdk-test-tenant-id)'
            -ProvisionerApplicationId '$(provisioner-aad-id)'
            -ProvisionerApplicationSecret '$(provisioner-aad-secret)'
            -Force
            -Verbose
          condition: ne(variables['AZURE_RESOURCEGROUP_NAME'], '')
          continueOnError: true
          displayName: Remove Test Resources


      - task: PublishTestResults@2
        condition: always()
        inputs:
          mergeTestResults: true
          testRunTitle: 'Live tests for ${{ parameters.ServiceDirectory }} $(DisplayName)'
          ${{ if ne(parameters.TestResultsFiles, '') }}:
            testResultsFiles: ${{ parameters.TestResultsFiles }}
