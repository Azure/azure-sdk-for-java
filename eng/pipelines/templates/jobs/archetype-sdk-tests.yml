parameters:
  ServiceDirectory: ''
  EnvVars: {}
  MaxParallel: 0
  Matrix:
    Linux - Java 8:
      OSName: 'Linux'
      OSVmImage: 'ubuntu-16.04'
      JavaVersion: '1.8'
      DisplayName: 'Linux - Java 8'
    macOS - Java 8:
      OSName: 'macOS'
      OSVmImage: 'macOS-10.13'
      JavaVersion: '1.8'
      DisplayName: 'macOS - Java 8'
    Windows - Java 8:
      OSName: 'Windows'
      OSVmImage: 'windows-2019'
      JavaVersion: '1.8'
      DisplayName: 'Windows - Java 8'
    Linux - Java 11:
      OSName: 'Linux'
      OSVmImage: 'ubuntu-16.04'
      JavaVersion: '1.11'
      DisplayName: 'Linux - Java 11'
    macOS - Java 11:
      OSName: 'macOS'
      OSVmImage: 'macOS-10.13'
      JavaVersion: '1.11'
      DisplayName: 'macOS - Java 11'
    Windows - Java 11:
      OSName: 'Windows'
      OSVmImage: 'windows-2019'
      JavaVersion: '1.11'
      DisplayName: 'Windows - Java 11'
  PreRunSteps: []
  PostRunSteps: []
  TestName: LiveTest
  TimeoutInMinutes: 60
  TestStepMavenInputs:
    options: '-Dmaven.wagon.http.pool=false $(DefaultOptions)'
    mavenOptions: '$(MemoryOptions) $(LoggingOptions)'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '$(JavaVersion)'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    goals: 'test'
  TestResultsFiles: ''

jobs:
  - job: ${{ parameters.TestName }}
    timeoutInMinutes: ${{ parameters.TimeoutInMinutes }}

    variables:
      - template: ../variables/globals.yml
    strategy:
      matrix: ${{ parameters.Matrix }}
      maxParallel: ${{ parameters.MaxParallel }}

    pool:
      vmImage: $(OSVmImage)

    steps:
      - pwsh: |
          Install-Module -Name Az -AllowClobber -Scope CurrentUser -Force
        displayName: Install Az Module

      - pwsh: |
          $baseName = "t" + [guid]::NewGuid().ToString('n').Substring(0,16)
          Write-Host "##vso[task.setvariable variable=BaseName;]$baseName"
        displayName: Generate $(BaseName)

      - ${{ if ne(parameters.DisableAzureResourceCreation, 'true') }}:
        - pwsh: >-
            eng/New-TestResources.ps1
            -BaseName $(BaseName)
            -ServiceDirectory ${{ parameters.ServiceDirectory }}
            -TestApplicationId $env:TEST_APPLICATION_ID
            -TestApplicationSecret $env:TEST_APPLICATION_SECRET
            -TestApplicationOid $env:TEST_APPLICATION_OID
            -TenantId $env:TENANT_ID
            -ProvisionerApplicationId $env:PROVISIONER_APPLICATION_ID
            -ProvisionerApplicationSecret $env:PROVISIONER_APPLICATION_SECRET
            -DeleteAfterHours 24
            -Location westus2
            -Force
            -Verbose
          env:
            TEST_APPLICATION_ID: $(aad-azure-sdk-test-client-id)
            TEST_APPLICATION_SECRET: $(aad-azure-sdk-test-client-secret)
            TEST_APPLICATION_OID: $(aad-azure-sdk-test-client-oid)
            TENANT_ID: $(aad-azure-sdk-test-tenant-id)
            PROVISIONER_APPLICATION_ID: $(provisioner-aad-id)
            PROVISIONER_APPLICATION_SECRET: $(provisioner-aad-secret)
          displayName: Provision Test Resources

      - ${{ parameters.PreRunSteps }}

      - task: Maven@3
        displayName: $(DisplayName)
        inputs:
          mavenPomFile: sdk/${{parameters.ServiceDirectory}}/pom.service.xml
          ${{ insert }}: ${{ parameters.TestStepMavenInputs }}
        env: ${{ parameters.EnvVars }}

      - ${{ parameters.PostRunSteps }}

      - ${{ if ne(parameters.DisableAzureResourceCreation, 'true') }}:
        - pwsh: >-
            eng/Remove-TestResources.ps1
            -BaseName $(BaseName)
            -ServiceDirectory ${{ parameters.ServiceDirectory }}
            -TenantId $env:TENANT_ID
            -ProvisionerApplicationId $env:PROVISIONER_APPLICATION_ID
            -ProvisionerApplicationSecret $env:PROVISIONER_APPLICATION_SECRET
            -Force
            -Verbose
          env:
            TENANT_ID: $(aad-azure-sdk-test-tenant-id)
            PROVISIONER_APPLICATION_ID: $(provisioner-aad-id)
            PROVISIONER_APPLICATION_SECRET: $(provisioner-aad-secret)
          displayName: Remove Test Resources
          condition: true


      - task: PublishTestResults@2
        condition: always()
        inputs:
          mergeTestResults: true
          testRunTitle: 'Live tests for ${{ parameters.ServiceDirectory }} $(DisplayName)'
          ${{ if ne(parameters.TestResultsFiles, '') }}:
            testResultsFiles: ${{ parameters.TestResultsFiles }}
