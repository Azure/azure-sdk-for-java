parameters:
  - name: ServiceDirectory
    type: string
    default: ''
  - name: TestResourceDirectories
    type: object
    default: null
  - name: EnvVars
    type: object
    default: {}
  - name: MaxParallel
    type: number
    default: 0
  - name: PreSteps
    type: object
    default: []
  - name: PostSteps
    type: object
    default: []
  - name: TimeoutInMinutes
    type: number
    default: 60
  - name: TestMode
    type: string
    default: 'LIVE'
  - name: TestResultsFiles
    type: string
    default: ''
  - name: CloudConfig
    type: object
    default: {}
  - name: ArmTemplateParameters
    type: string
    default: '@{}'
  - name: Location
    type: string
    default: ''
  - name: Matrix
    type: string
    default: ''
  - name: DependsOn
    type: string
    default: ''
  - name: UsePlatformContainer
    type: boolean
    default: false
  - name: DisableAzureResourceCreation
    type: boolean
    default: false
  - name: BuildParallelization
    type: string
    default: '2C'
  - name: TestGoals
    type: string
    default: $(TestGoals)
  - name: TestOptions
    type: string
    default: $(TestOptions)
  - name: TestParallelization
    type: string
    default: '1'
  - name: TestVersionSupport
    type: string
    default: $(TestVersionSupport)
  - name: OSName
    type: string
  - name: UseFederatedAuth
    type: boolean
    default: false

jobs:
  - job:
    dependsOn: ${{ parameters.DependsOn }}
    condition: and(succeededOrFailed(), ne(${{ parameters.Matrix }}, '{}'))
    strategy:
      maxParallel: ${{ parameters.MaxParallel }}
      matrix: $[ ${{ parameters.Matrix }} ]

    variables:
      - name: ArmTemplateParameters
        value: '@{}'

    timeoutInMinutes: ${{ parameters.TimeoutInMinutes }}

    pool:
      # 1es pipeline templates converts `image` to demands: ImageOverride under the hood
      # which is incompatible with image selection in the default non-1es hosted pools
      ${{ if eq(parameters.OSName, 'macOS') }}:
        vmImage: $(OSVmImage)
      ${{ else }}:
        image: $(OSVmImage)
      name: $(Pool)
      os: ${{ parameters.OSName }}

    ${{ if eq(parameters.UsePlatformContainer, 'true') }}:
      # Add a default so the job doesn't fail when the matrix is empty
      container: $[ variables['Container'] ]

    templateContext:
      outputs:
        # Troubleshooting artifacts are creating in the staging directory under the folder 'troubleshooting'.
        # This will contain things such as heap dumps hprofs if testing hit OutOfMemory errors, log files captured
        # during testing if tests failed, and linting reports.
        - output: pipelineArtifact
          artifactName: troubleshooting-$(System.StageName)-$(System.JobName)
          targetPath: $(System.DefaultWorkingDirectory)/troubleshooting
          displayName: 'Capture troubleshooting artifacts'
          condition: and(not(succeeded()), eq(variables['HAS_TROUBLESHOOTING'], 'true'))
          sbomEnabled: false

    steps:
      - template: /eng/pipelines/templates/steps/initialize-test-environment.yml
        parameters:
          OS: ${{ parameters.OSName }}

      - template: /eng/pipelines/templates/steps/install-reporting-tools.yml
        parameters:
          JdkVersion: $(JavaTestVersion)

      - template: /eng/pipelines/templates/steps/install-graalvm-jdk.yml
        parameters:
          GraalVMJdkVersion: '22.3.0'

      - ${{ if ne(parameters.DisableAzureResourceCreation, 'true') }}:
          - template: /eng/common/TestResources/build-test-resource-config.yml
            parameters:
              SubscriptionConfiguration: ${{ parameters.CloudConfig.SubscriptionConfiguration }}
              SubscriptionConfigurations: ${{ parameters.CloudConfig.SubscriptionConfigurations }}
              EnvVars: ${{ parameters.EnvVars }}
              ${{ if eq('true', parameters.UseFederatedAuth) }}:
                SubscriptionConfigurationFilePaths: ${{ parameters.CloudConfig.SubscriptionConfigurationFilePaths }}

          - ${{ if parameters.TestResourceDirectories }}:
              - ${{ each directory in parameters.TestResourceDirectories }}:
                  - template: /eng/common/TestResources/deploy-test-resources.yml
                    parameters:
                      ${{ if or(parameters.Location, parameters.CloudConfig.Location) }}:
                        Location: ${{ coalesce(parameters.Location, parameters.CloudConfig.Location) }}
                      ServiceDirectory: '${{ directory }}'
                      SubscriptionConfiguration: $(SubscriptionConfiguration)
                      ArmTemplateParameters: $(ArmTemplateParameters)
          - ${{ if not(parameters.TestResourceDirectories) }}:
              - template: /eng/common/TestResources/deploy-test-resources.yml
                parameters:
                  ${{ if or(parameters.Location, parameters.CloudConfig.Location) }}:
                    Location: ${{ coalesce(parameters.Location, parameters.CloudConfig.Location) }}
                  ServiceDirectory: '${{ parameters.ServiceDirectory }}'
                  SubscriptionConfiguration: $(SubscriptionConfiguration)
                  ArmTemplateParameters: $(ArmTemplateParameters)

      - ${{ parameters.PreSteps }}

      - template: /eng/pipelines/templates/steps/build-and-test-native.yml
        parameters:
          ParallelTestPlayback: 'false'
          BuildParallelization: ${{ parameters.BuildParallelization }}
          IsLiveTest: true
          TestGoals: ${{ parameters.TestGoals }}
          TestOptions: ${{ parameters.TestOptions }}
          TestParallelization: ${{ parameters.TestParallelization }}
          TestVersionSupport: ${{ parameters.TestVersionSupport }}
          TestEnvVars:
            AZURE_TEST_MODE: ${{ parameters.TestMode }}
            AZURE_VERSION_OVERRIDE_TESTS: ${{ parameters.TestVersionSupport }}
            ${{ each var in parameters.EnvVars }}:
              ${{ var.key }}: ${{ var.value }}

      - ${{ parameters.PostSteps }}

      - ${{ if ne(parameters.DisableAzureResourceCreation, 'true') }}:
          - ${{ if parameters.TestResourceDirectories }}:
              - ${{ each directory in parameters.TestResourceDirectories }}:
                  - template: /eng/common/TestResources/remove-test-resources.yml
                    parameters:
                      ServiceDirectory: '${{ directory }}'
                      SubscriptionConfiguration: $(SubscriptionConfiguration)
          - ${{ if not(parameters.TestResourceDirectories) }}:
              - template: /eng/common/TestResources/remove-test-resources.yml
                parameters:
                  ServiceDirectory: '${{ parameters.ServiceDirectory }}'
                  SubscriptionConfiguration: $(SubscriptionConfiguration)
