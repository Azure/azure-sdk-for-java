parameters:
  SDKType: bom
  ServiceDirectory: not-specified # Set a default that breaks in obvious ways.
  ValidationSteps: []

jobs:
  - job: 'BuildAndValidate'
    displayName: 'Build and Validate'

    variables:
      - template: ../variables/globals.yml

    pool:
      vmImage: 'ubuntu-16.04'

    strategy:
      matrix:
        Client Libraries:
          ArtifactName: 'packages'
          JavaVersion: '1.11'

    steps:
      - script: |
          echo "##vso[build.addbuildtag]Scheduled"
        displayName: 'Tag scheduled builds'
        condition: and(succeeded(), eq(variables['Build.SourceBranchName'],'master'),eq(variables['Build.Reason'],'Schedule'))

      - task: UsePythonVersion@0
        displayName: 'Use Python 3.6'
        inputs:
          versionSpec: '3.6'

      - template: tools/daily-dev-build-variable/daily-dev-build-variable.yml@azure-sdk-tools

      - script: |
          pip install setuptools wheel
          pip install doc-warden==$(DocWardenVersion)
          ward scan -d $(Build.SourcesDirectory) -c $(Build.SourcesDirectory)/eng/.docsettings.yml
        displayName: 'Verify Readmes'

      - script: |
          pip install markdown2 BeautifulSoup4
        displayName: 'pip install markdown2 and BeautifulSoup4'

      - template: ../steps/cache-maven-repository.yml

      - template: eng/pipelines/templates/scripts/replace-relative-links.yml@azure-sdk-tools
        parameters:
          TargetFolder: $(Build.SourcesDirectory)
          RootFolder: $(Build.SourcesDirectory)
          BuildSHA: $(Build.SourceVersion)
          RepoId: 'Azure/azure-sdk-for-java'

      - task: Maven@3
        displayName: 'Build and Package'
        inputs:
          mavenPomFile: sdk/${{parameters.ServiceDirectory}}/pom.service.xml
          goals: 'install'
          options: '$(DefaultOptions) "-DpackageOutputDirectory=$(Build.ArtifactStagingDirectory)" -DskipTests -Dgenerate-overview' # We include template-module so we ensure it always builds in CI
          mavenOptions: '$(MemoryOptions) $(LoggingOptions)'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: $(JavaVersion)
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false

      - ${{ parameters.ValidationSteps }}

      - publish: $(Build.ArtifactStagingDirectory)
        displayName: 'Publish Artifacts $(ArtifactName)'
        artifact: '$(ArtifactName)'

      - publish: $(System.DefaultWorkingDirectory)
        condition: and(eq(variables['CaptureRepositoryOnFailure'], 'true'), failed())
        displayName: 'Capture repo state for analysis'
        artifact: repository
