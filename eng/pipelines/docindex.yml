trigger: none

jobs:
  - template: /eng/common/pipelines/templates/jobs/docindex.yml

  - job: UpdateDocsMsBuildConfig
    pool:
      vmImage: ubuntu-20.04
    variables:
      DocRepoLocation: $(Pipeline.Workspace)/docs
      DocRepoOwner: Azure
      DocRepoName: azure-docs-sdk-java
      DailyDocsRepoOwner: azure-sdk
    steps:
      # Sync docs repo onboarding files/folders
      - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
        parameters:
          SkipDefaultCheckout: true
          Paths:
            - package.json
            - metadata/
          Repositories:
            - Name: $(DocRepoOwner)/$(DocRepoName)
              WorkingDirectory: $(DocRepoLocation)

      # Call update docs ci script to onboard packages
      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsPackages.ps1
          arguments: -DocRepoLocation $(DocRepoLocation)
        displayName: Update Docs Onboarding
        condition: and(succeeded(), or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Force.MainUpdate'], 'true')))

      # Push changes to docs repo
      - template: /eng/common/pipelines/templates/steps/set-default-branch.yml
        parameters:
          WorkingDirectory: $(DocRepoLocation)

      - template: /eng/common/pipelines/templates/steps/git-push-changes.yml
        parameters:
          BaseRepoBranch: $(DefaultBranch)
          BaseRepoOwner: $(DocRepoOwner)
          CommitMsg: "Update docs CI configuration"
          TargetRepoName: $(DocRepoName)
          TargetRepoOwner: $(DocRepoOwner)
          WorkingDirectory: $(DocRepoLocation)

      # Prepare daily docs CI
      - template: /eng/common/pipelines/templates/steps/set-daily-docs-branch-name.yml
        parameters:
          DailyBranchVariableName: DailyDocsBranchName
      # Create a branch to track docs fork repo onboarding files/folders
      - pwsh: |
          $ErrorActionPreference = "Continue"
          # git remote on fork repo
          $GitUrl = "https://$(azuresdk-github-pat)@github.com/$(DailyDocsRepoOwner)/$(DocRepoName).git"
          $remoteName = "$(DailyDocsRepoOwner)"
          Write-Host "git remote add $remoteName $GitUrl"
          git remote add $remoteName $GitUrl
          if ($LASTEXITCODE -ne 0)
          {
            Write-Error "Unable to add remote LASTEXITCODE=$($LASTEXITCODE), see command output above."
            exit $LASTEXITCODE
          }
          
          # git fetch on fork repo
          Write-Host "git fetch $remoteName $(DailyDocsBranchName)"
          git fetch $remoteName "$(DailyDocsBranchName)"

          # create a branch tracking fork repo daily branch
          Write-Host "git checkout -b $(DailyDocsBranchName) -t $remoteName/$(DailyDocsBranchName)"
          git checkout -b $(DailyDocsBranchName) -t "$remoteName/$(DailyDocsBranchName)"
        displayName: Checkout fork repo daily branch
        workingDirectory: $(DocRepoLocation)
      # Docs daily updates is supposed to download packages from public feed repository, so we have to specify additional repositories in a POM or the profile.
      # Here is maven documentation: https://maven.apache.org/guides/mini/guide-multiple-repositories.html
      - powershell: |
          # Linux mvn `setting.xml` is sitting under path `~/.m2/setting.xml`
          Get-Command mvn
          if (!(Test-Path '~/.m2/')) {
            mkdir ~/.m2/
          }
          if (Test-Path '~/.m2/setting.xml') {
            Write-Host "'setting.xml' exists. Overwriting the file to support multiple repositories."
          }
          Copy-Item "./eng/repo-docs/docms/daily.update.setting.xml" -Destination "~/.m2/settings.xml"
        displayName: 'Configure mvn'
        workingDirectory: $(Build.SourcesDirectory)

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsPackages.ps1
          arguments: -DocRepoLocation "$(DocRepoLocation)"
        displayName: Update Docs Onboarding for Daily branch
      - template: /eng/common/pipelines/templates/steps/git-push-changes.yml
        parameters:
          BaseRepoBranch: $(DailyDocsBranchName)
          BaseRepoOwner: $(DocRepoOwner)
          CommitMsg: "Update targeting packages based on release metadata. (Daily docs)"
          TargetRepoName: $(DocRepoName)
          TargetRepoOwner: $(DocRepoOwner)
          WorkingDirectory: $(DocRepoLocation)
          ScriptDirectory: $(Build.SourcesDirectory)/eng/common/scripts

      - task: PowerShell@2
        displayName: Queue Docs CI build
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Queue-Pipeline.ps1
          arguments: >
            -Organization "apidrop"
            -Project "Content%20CI"
            -DefinitionId 3188
            -Base64EncodedAuthToken "$(azuresdk-apidrop-devops-queue-build-pat)"
            -BuildParametersJson (@{ params = (Get-Content ./eng/dailydocsconfig.json -Raw) -replace '%%DailyDocsBranchName%%', "$(DailyDocsBranchName)" } | ConvertTo-Json)
