trigger: none
variables:
  - template: /eng/pipelines/templates/variables/globals.yml
jobs:
  - template: /eng/common/pipelines/templates/jobs/docindex.yml

  - job: UpdateDocsMsBuildConfig
    pool:
      vmImage: ubuntu-20.04
    timeoutInMinutes: 180
    variables:
      DocRepoLocation: $(Pipeline.Workspace)/docs
      DailyDocRepoLocation: $(Pipeline.Workspace)/daily
      DocRepoOwner: Azure
      DocRepoName: azure-docs-sdk-java
    steps:
      # Sync docs repo onboarding files/folders
      - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
        parameters:
          SkipCheckoutNone: true
          Paths:
            - package.json
            - metadata/
            - docs-ref-mapping/reference-unified.yml
            - docs-ref-services/
          Repositories:
            - Name: $(DocRepoOwner)/$(DocRepoName)
              WorkingDirectory: $(DocRepoLocation)
            - Name: azure-sdk/$(DocRepoName)
              WorkingDirectory: $(DailyDocRepoLocation)


      - template: /eng/pipelines/templates/steps/mvn-linux-repository-settings.yml

      - template: /eng/pipelines/templates/steps/install-rex-validation-tool.yml

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsPackageMonikers.ps1
          arguments: -DocRepoLocation $(DocRepoLocation)
        displayName: Move deprecated packages to legacy moniker
        condition: and(succeeded(), or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Force.MainUpdate'], 'true')))

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsPackages.ps1
          arguments: -DocRepoLocation $(DocRepoLocation)
        displayName: Update Docs Onboarding for main branch
        condition: and(succeeded(), or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Force.MainUpdate'], 'true')))

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Service-Level-Readme-Automation.ps1
          arguments: -DocRepoLocation $(DocRepoLocation)
        displayName: Generate Service Level Readme for main branch
        condition: and(succeeded(), or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Force.MainUpdate'], 'true')))

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsToc.ps1
          arguments: >-
            -DocRepoLocation $(DocRepoLocation)
            -OutputLocation $(DocRepoLocation)/docs-ref-mapping/reference-unified.yml
        displayName: Generate ToC for main branch
        condition: and(succeeded(), or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Force.MainUpdate'], 'true')))

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Verify-RequiredDocsJsonMembers.ps1
          arguments: >-
            -DocRepoLocation $(DocRepoLocation)
        displayName: Verify Required Docs Json Members

      # Push changes to docs repo
      - template: /eng/common/pipelines/templates/steps/set-default-branch.yml
        parameters:
          WorkingDirectory: $(DocRepoLocation)

      - template: /eng/common/pipelines/templates/steps/git-push-changes.yml
        parameters:
          BaseRepoBranch: $(DefaultBranch)
          BaseRepoOwner: $(DocRepoOwner)
          CommitMsg: "Update docs CI configuration Build: $(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)"
          TargetRepoName: $(DocRepoName)
          TargetRepoOwner: $(DocRepoOwner)
          WorkingDirectory: $(DocRepoLocation)

      # Prepare daily docs CI
      - template: /eng/common/pipelines/templates/steps/set-daily-docs-branch-name.yml
        parameters:
          DailyBranchVariableName: DailyDocsBranchName

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsPackageMonikers.ps1
          arguments: -DocRepoLocation $(DocRepoLocation)
        displayName: Move deprecated packages to legacy moniker
        condition: and(succeeded(), or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Force.MainUpdate'], 'true')))

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsPackages.ps1
          arguments: -DocRepoLocation $(DailyDocRepoLocation)
        displayName: Update Docs Onboarding for Daily docs
      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Service-Level-Readme-Automation.ps1
          arguments: -DocRepoLocation $(DailyDocRepoLocation)
        displayName: Generate Service Level Readme for Daily docs
      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsToc.ps1
          arguments: >-
            -DocRepoLocation $(DailyDocRepoLocation)
            -OutputLocation $(DailyDocRepoLocation)/docs-ref-mapping/reference-unified.yml
        displayName: Generate ToC for Daily docs

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Verify-RequiredDocsJsonMembers.ps1
          arguments: >-
            -DocRepoLocation $(DocRepoLocation)
        displayName: Verify Required Docs Json Members

      - template: /eng/common/pipelines/templates/steps/git-push-changes.yml
        parameters:
          BaseRepoBranch: $(DailyDocsBranchName)
          BaseRepoOwner: $(DocRepoOwner)
          CommitMsg: "Update targeting packages based on release metadata. (Daily docs)"
          TargetRepoName: $(DocRepoName)
          TargetRepoOwner: azure-sdk
          WorkingDirectory: $(DailyDocRepoLocation)
          ScriptDirectory: $(Build.SourcesDirectory)/eng/common/scripts
          PushArgs: -f

      - task: AzureCLI@2
        displayName: Queue Docs CI build
        inputs:
          azureSubscription: msdocs-apidrop-connection
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $accessToken = az account get-access-token --resource "499b84ac-1321-427f-aa17-267ca6975798" --query "accessToken" --output tsv
            $buildParamJson = (@{ params = (Get-Content ./eng/dailydocsconfig.json -Raw) -replace '%%DailyDocsBranchName%%', "$(DailyDocsBranchName)" } | ConvertTo-Json)
            eng/common/scripts/Queue-Pipeline.ps1 `
              -Organization "apidrop" `
              -Project "Content%20CI" `
              -DefinitionId 3188 `
              -BuildParametersJson $buildParamJson `
              -BearerToken $accessToken
