trigger: none

jobs:
  - template: /eng/common/pipelines/templates/jobs/docindex.yml

  - job: UpdateDocsMsBuildConfig
    pool:
      vmImage: ubuntu-20.04
    variables:
      DocRepoLocation: $(Pipeline.Workspace)/docs
      DocRepoOwner: Azure
      DocRepoName: azure-docs-sdk-java
    steps:
      # Sync docs repo onboarding files/folders
      - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
        parameters:
          SkipDefaultCheckout: true
          Paths:
            - package.json
            - metadata/
          Repositories:
            - Name: $(DocRepoOwner)/$(DocRepoName)
              WorkingDirectory: $(DocRepoLocation)

      # Call update docs ci script to onboard packages
      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsPackages.ps1
          arguments: -DocRepoLocation $(DocRepoLocation)
        displayName: Update Docs Onboarding
        condition: and(succeeded(), or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Force.MainUpdate'], 'true')))

      # Push changes to docs repo
      - template: /eng/common/pipelines/templates/steps/set-default-branch.yml
        parameters:
          WorkingDirectory: $(DocRepoLocation)

      - template: /eng/common/pipelines/templates/steps/git-push-changes.yml
        parameters:
          BaseRepoBranch: $(DefaultBranch)
          BaseRepoOwner: $(DocRepoOwner)
          CommitMsg: "Update docs CI configuration"
          TargetRepoName: $(DocRepoName)
          TargetRepoOwner: $(DocRepoOwner)
          WorkingDirectory: $(DocRepoLocation)

      # Prepare daily docs CI
      - template: /eng/common/pipelines/templates/steps/set-daily-docs-branch-name.yml
        parameters:
          DailyBranchVariableName: DailyDocsBranchName
      - pwsh: |
          $ErrorActionPreference = "Continue"
          git checkout "origin/$(DailyDocsBranchName)" 2>&1 | Out-Null
          $LASTEXITCODE = 0 # This ignores any error from git checkout
          git status
        displayName: Checkout daily branch if it exists
        workingDirectory: $(DocRepoLocation)
        
      # Docs daily updates is supposed to download packages from public feed repository, so we have to specify additional repositories in a POM or the profile.
      # Here is maven documentation: https://maven.apache.org/guides/mini/guide-multiple-repositories.html
      - powershell: |
          # Linux mvn `setting.xml` is sitting under path `~/.m2/setting.xml`
          Get-Command mvn
          if (!(Test-Path '~/.m2/')) {
            mkdir ~/.m2/
          }
          
          @"
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                        https://maven.apache.org/xsd/settings-1.0.0.xsd">
              <profiles>
                  <profile>
                      <id>azure-sdk-for-java</id>
                      <activation>
                          <activeByDefault>true</activeByDefault>
                      </activation>
                      <repositories>
                          <repository>
                              <id>azure-sdk-for-java</id>
                              <url>https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-for-java/maven/v1</url>
                              <releases>
                                  <enabled>true</enabled>
                              </releases>
                              <snapshots>
                                  <enabled>true</enabled>
                              </snapshots>
                          </repository>
                      </repositories>
                  </profile>
              </profiles>
          </settings>
          "@ | Set-Content ~/.m2/settings.xml

        displayName: 'Configure mvn'
        workingDirectory: $(Build.SourcesDirectory)
        #condition: and(succeeded(), startsWith(variables['Build.SourceBranchName'], 'daily/'))

      - task: Powershell@2
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Update-DocsMsPackages.ps1
          arguments: -DocRepoLocation $(DocRepoLocation)
        displayName: Update Docs Onboarding for Daily branch
      - template: /eng/common/pipelines/templates/steps/git-push-changes.yml
        parameters:
          BaseRepoBranch: $(DailyDocsBranchName)
          BaseRepoOwner: $(DocRepoOwner)
          CommitMsg: "Update targeting packages based on release metadata. (Daily docs)"
          TargetRepoName: $(DocRepoName)
          TargetRepoOwner: $(DocRepoOwner)
          WorkingDirectory: $(DocRepoLocation)
          ScriptDirectory: $(Build.SourcesDirectory)/eng/common/scripts

      - task: PowerShell@2
        displayName: Queue Docs CI build
        inputs:
          pwsh: true
          filePath: eng/common/scripts/Queue-Pipeline.ps1
          arguments: >
            -Organization "apidrop"
            -Project "Content%20CI"
            -DefinitionId 3188
            -Base64EncodedAuthToken "$(azuresdk-apidrop-devops-queue-build-pat)"
            -BuildParametersJson (@{ params = (Get-Content ./eng/dailydocsconfig.json -Raw) -replace '%%DailyDocsBranchName%%', "$(DailyDocsBranchName)" } | ConvertTo-Json)
