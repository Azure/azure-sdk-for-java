/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.servicefabric.v2017_07_01_preview;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Specifies a metric to load balance a service during runtime.
 */
public class ServiceLoadMetricDescription {
    /**
     * The name of the metric. If the service chooses to report load during
     * runtime, the load metric name should match the name that is specified in
     * Name exactly. Note that metric names are case sensitive.
     */
    @JsonProperty(value = "Name", required = true)
    private String name;

    /**
     * Possible values include: 'Zero', 'Low', 'Medium', 'High'.
     */
    @JsonProperty(value = "Weight")
    private String weight;

    /**
     * Used only for Stateful services. The default amount of load, as a
     * number, that this service creates for this metric when it is a Primary
     * replica.
     */
    @JsonProperty(value = "PrimaryDefaultLoad")
    private Integer primaryDefaultLoad;

    /**
     * Used only for Stateful services. The default amount of load, as a
     * number, that this service creates for this metric when it is a Secondary
     * replica.
     */
    @JsonProperty(value = "SecondaryDefaultLoad")
    private Integer secondaryDefaultLoad;

    /**
     * Used only for Stateless services. The default amount of load, as a
     * number, that this service creates for this metric.
     */
    @JsonProperty(value = "DefaultLoad")
    private Integer defaultLoad;

    /**
     * Get the name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive.
     *
     * @param name the name value to set
     * @return the ServiceLoadMetricDescription object itself.
     */
    public ServiceLoadMetricDescription withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get possible values include: 'Zero', 'Low', 'Medium', 'High'.
     *
     * @return the weight value
     */
    public String weight() {
        return this.weight;
    }

    /**
     * Set possible values include: 'Zero', 'Low', 'Medium', 'High'.
     *
     * @param weight the weight value to set
     * @return the ServiceLoadMetricDescription object itself.
     */
    public ServiceLoadMetricDescription withWeight(String weight) {
        this.weight = weight;
        return this;
    }

    /**
     * Get used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica.
     *
     * @return the primaryDefaultLoad value
     */
    public Integer primaryDefaultLoad() {
        return this.primaryDefaultLoad;
    }

    /**
     * Set used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica.
     *
     * @param primaryDefaultLoad the primaryDefaultLoad value to set
     * @return the ServiceLoadMetricDescription object itself.
     */
    public ServiceLoadMetricDescription withPrimaryDefaultLoad(Integer primaryDefaultLoad) {
        this.primaryDefaultLoad = primaryDefaultLoad;
        return this;
    }

    /**
     * Get used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica.
     *
     * @return the secondaryDefaultLoad value
     */
    public Integer secondaryDefaultLoad() {
        return this.secondaryDefaultLoad;
    }

    /**
     * Set used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica.
     *
     * @param secondaryDefaultLoad the secondaryDefaultLoad value to set
     * @return the ServiceLoadMetricDescription object itself.
     */
    public ServiceLoadMetricDescription withSecondaryDefaultLoad(Integer secondaryDefaultLoad) {
        this.secondaryDefaultLoad = secondaryDefaultLoad;
        return this;
    }

    /**
     * Get used only for Stateless services. The default amount of load, as a number, that this service creates for this metric.
     *
     * @return the defaultLoad value
     */
    public Integer defaultLoad() {
        return this.defaultLoad;
    }

    /**
     * Set used only for Stateless services. The default amount of load, as a number, that this service creates for this metric.
     *
     * @param defaultLoad the defaultLoad value to set
     * @return the ServiceLoadMetricDescription object itself.
     */
    public ServiceLoadMetricDescription withDefaultLoad(Integer defaultLoad) {
        this.defaultLoad = defaultLoad;
        return this;
    }

}
