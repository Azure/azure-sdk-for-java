/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.applicationinsights.v2015_05_01.implementation;

import com.microsoft.azure.management.applicationinsights.v2015_05_01.ApplicationInsightsComponentFeatureCapabilities;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;

class ApplicationInsightsComponentFeatureCapabilitiesImpl extends WrapperImpl<ApplicationInsightsComponentFeatureCapabilitiesInner> implements ApplicationInsightsComponentFeatureCapabilities {
    private final InsightsManager manager;
    ApplicationInsightsComponentFeatureCapabilitiesImpl(ApplicationInsightsComponentFeatureCapabilitiesInner inner, InsightsManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public InsightsManager manager() {
        return this.manager;
    }

    @Override
    public Boolean analyticsIntegration() {
        return this.inner().analyticsIntegration();
    }

    @Override
    public String apiAccessLevel() {
        return this.inner().apiAccessLevel();
    }

    @Override
    public Boolean applicationMap() {
        return this.inner().applicationMap();
    }

    @Override
    public String burstThrottlePolicy() {
        return this.inner().burstThrottlePolicy();
    }

    @Override
    public Double dailyCap() {
        return this.inner().dailyCap();
    }

    @Override
    public Double dailyCapResetTime() {
        return this.inner().dailyCapResetTime();
    }

    @Override
    public Boolean liveStreamMetrics() {
        return this.inner().liveStreamMetrics();
    }

    @Override
    public String metadataClass() {
        return this.inner().metadataClass();
    }

    @Override
    public Boolean multipleStepWebTest() {
        return this.inner().multipleStepWebTest();
    }

    @Override
    public Boolean openSchema() {
        return this.inner().openSchema();
    }

    @Override
    public Boolean powerBIIntegration() {
        return this.inner().powerBIIntegration();
    }

    @Override
    public Boolean proactiveDetection() {
        return this.inner().proactiveDetection();
    }

    @Override
    public Boolean supportExportData() {
        return this.inner().supportExportData();
    }

    @Override
    public Double throttleRate() {
        return this.inner().throttleRate();
    }

    @Override
    public String trackingType() {
        return this.inner().trackingType();
    }

    @Override
    public Boolean workItemIntegration() {
        return this.inner().workItemIntegration();
    }

}
