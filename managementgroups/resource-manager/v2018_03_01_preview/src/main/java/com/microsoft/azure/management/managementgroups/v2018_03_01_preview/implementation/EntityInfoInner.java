/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.managementgroups.v2018_03_01_preview.implementation;

import com.microsoft.azure.management.managementgroups.v2018_03_01_preview.EntityParentGroupInfo;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * The entity.
 */
@JsonFlatten
public class EntityInfoInner {
    /**
     * The fully qualified ID for the entity.  For example,
     * /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /**
     * The type of the resource. For example,
     * /providers/Microsoft.Management/managementGroups.
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /**
     * The name of the entity. For example,
     * 00000000-0000-0000-0000-000000000000.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /**
     * The AAD Tenant ID associated with the entity. For example,
     * 00000000-0000-0000-0000-000000000000.
     */
    @JsonProperty(value = "properties.tenantId")
    private String tenantId;

    /**
     * The friendly name of the management group.
     */
    @JsonProperty(value = "properties.displayName")
    private String displayName;

    /**
     * Parent.
     */
    @JsonProperty(value = "properties.parent")
    private EntityParentGroupInfo parent;

    /**
     * Permissions.
     * Possible values include: 'noaccess', 'view', 'edit', 'delete'.
     */
    @JsonProperty(value = "properties.permissions")
    private String permissions;

    /**
     * Inherited Permissions.
     * Possible values include: 'noaccess', 'view', 'edit', 'delete'.
     */
    @JsonProperty(value = "properties.inheritedPermissions")
    private String inheritedPermissions;

    /**
     * Number of Descendants.
     */
    @JsonProperty(value = "properties.numberOfDescendants")
    private Integer numberOfDescendants;

    /**
     * Number of Children.
     * Number of children is the number of Groups and Subscriptions that are
     * exactly one level underneath the current Group.
     */
    @JsonProperty(value = "properties.numberOfChildren")
    private Integer numberOfChildren;

    /**
     * Number of Child Groups.
     * Number of child groups is the number of Groups that are exactly one
     * level underneath the current Group.
     */
    @JsonProperty(value = "properties.numberOfChildGroups")
    private Integer numberOfChildGroups;

    /**
     * The parent display name chain from the root group to the immediate
     * parent.
     */
    @JsonProperty(value = "properties.parentDisplayNameChain")
    private List<String> parentDisplayNameChain;

    /**
     * The parent name chain from the root group to the immediate parent.
     */
    @JsonProperty(value = "properties.parentNameChain")
    private List<String> parentNameChain;

    /**
     * Get the fully qualified ID for the entity.  For example, /providers/Microsoft.Management/managementGroups/0000000-0000-0000-0000-000000000000.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Get the type of the resource. For example, /providers/Microsoft.Management/managementGroups.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

    /**
     * Get the name of the entity. For example, 00000000-0000-0000-0000-000000000000.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Get the AAD Tenant ID associated with the entity. For example, 00000000-0000-0000-0000-000000000000.
     *
     * @return the tenantId value
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Set the AAD Tenant ID associated with the entity. For example, 00000000-0000-0000-0000-000000000000.
     *
     * @param tenantId the tenantId value to set
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withTenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }

    /**
     * Get the friendly name of the management group.
     *
     * @return the displayName value
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the friendly name of the management group.
     *
     * @param displayName the displayName value to set
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the parent value.
     *
     * @return the parent value
     */
    public EntityParentGroupInfo parent() {
        return this.parent;
    }

    /**
     * Set the parent value.
     *
     * @param parent the parent value to set
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withParent(EntityParentGroupInfo parent) {
        this.parent = parent;
        return this;
    }

    /**
     * Get possible values include: 'noaccess', 'view', 'edit', 'delete'.
     *
     * @return the permissions value
     */
    public String permissions() {
        return this.permissions;
    }

    /**
     * Set possible values include: 'noaccess', 'view', 'edit', 'delete'.
     *
     * @param permissions the permissions value to set
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withPermissions(String permissions) {
        this.permissions = permissions;
        return this;
    }

    /**
     * Get possible values include: 'noaccess', 'view', 'edit', 'delete'.
     *
     * @return the inheritedPermissions value
     */
    public String inheritedPermissions() {
        return this.inheritedPermissions;
    }

    /**
     * Set possible values include: 'noaccess', 'view', 'edit', 'delete'.
     *
     * @param inheritedPermissions the inheritedPermissions value to set
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withInheritedPermissions(String inheritedPermissions) {
        this.inheritedPermissions = inheritedPermissions;
        return this;
    }

    /**
     * Get the numberOfDescendants value.
     *
     * @return the numberOfDescendants value
     */
    public Integer numberOfDescendants() {
        return this.numberOfDescendants;
    }

    /**
     * Set the numberOfDescendants value.
     *
     * @param numberOfDescendants the numberOfDescendants value to set
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withNumberOfDescendants(Integer numberOfDescendants) {
        this.numberOfDescendants = numberOfDescendants;
        return this;
    }

    /**
     * Get number of children is the number of Groups and Subscriptions that are exactly one level underneath the current Group.
     *
     * @return the numberOfChildren value
     */
    public Integer numberOfChildren() {
        return this.numberOfChildren;
    }

    /**
     * Set number of children is the number of Groups and Subscriptions that are exactly one level underneath the current Group.
     *
     * @param numberOfChildren the numberOfChildren value to set
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withNumberOfChildren(Integer numberOfChildren) {
        this.numberOfChildren = numberOfChildren;
        return this;
    }

    /**
     * Get number of child groups is the number of Groups that are exactly one level underneath the current Group.
     *
     * @return the numberOfChildGroups value
     */
    public Integer numberOfChildGroups() {
        return this.numberOfChildGroups;
    }

    /**
     * Set number of child groups is the number of Groups that are exactly one level underneath the current Group.
     *
     * @param numberOfChildGroups the numberOfChildGroups value to set
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withNumberOfChildGroups(Integer numberOfChildGroups) {
        this.numberOfChildGroups = numberOfChildGroups;
        return this;
    }

    /**
     * Get the parent display name chain from the root group to the immediate parent.
     *
     * @return the parentDisplayNameChain value
     */
    public List<String> parentDisplayNameChain() {
        return this.parentDisplayNameChain;
    }

    /**
     * Set the parent display name chain from the root group to the immediate parent.
     *
     * @param parentDisplayNameChain the parentDisplayNameChain value to set
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withParentDisplayNameChain(List<String> parentDisplayNameChain) {
        this.parentDisplayNameChain = parentDisplayNameChain;
        return this;
    }

    /**
     * Get the parent name chain from the root group to the immediate parent.
     *
     * @return the parentNameChain value
     */
    public List<String> parentNameChain() {
        return this.parentNameChain;
    }

    /**
     * Set the parent name chain from the root group to the immediate parent.
     *
     * @param parentNameChain the parentNameChain value to set
     * @return the EntityInfoInner object itself.
     */
    public EntityInfoInner withParentNameChain(List<String> parentNameChain) {
        this.parentNameChain = parentNameChain;
        return this;
    }

}
