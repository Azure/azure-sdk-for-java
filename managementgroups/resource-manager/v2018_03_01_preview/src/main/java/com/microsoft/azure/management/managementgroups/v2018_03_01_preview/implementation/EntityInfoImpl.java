/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.managementgroups.v2018_03_01_preview.implementation;

import com.microsoft.azure.management.managementgroups.v2018_03_01_preview.EntityInfo;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.managementgroups.v2018_03_01_preview.EntityParentGroupInfo;
import java.util.List;

class EntityInfoImpl extends WrapperImpl<EntityInfoInner> implements EntityInfo {
    private final ManagementManager manager;
    EntityInfoImpl(EntityInfoInner inner, ManagementManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public ManagementManager manager() {
        return this.manager;
    }

    @Override
    public String displayName() {
        return this.inner().displayName();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String inheritedPermissions() {
        return this.inner().inheritedPermissions();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public Integer numberOfChildGroups() {
        return this.inner().numberOfChildGroups();
    }

    @Override
    public Integer numberOfChildren() {
        return this.inner().numberOfChildren();
    }

    @Override
    public Integer numberOfDescendants() {
        return this.inner().numberOfDescendants();
    }

    @Override
    public EntityParentGroupInfo parent() {
        return this.inner().parent();
    }

    @Override
    public List<String> parentDisplayNameChain() {
        return this.inner().parentDisplayNameChain();
    }

    @Override
    public List<String> parentNameChain() {
        return this.inner().parentNameChain();
    }

    @Override
    public String permissions() {
        return this.inner().permissions();
    }

    @Override
    public String tenantId() {
        return this.inner().tenantId();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

}
