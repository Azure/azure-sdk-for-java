/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.signalr.v2018_10_01;

import rx.Observable;
import rx.Completable;

/**
 * Type representing SignalRs.
 */
public interface SignalRs {
    /**
     * Checks that the SignalR name is valid and is not already in use.
     *
     * @param location the region
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<NameAvailability> checkNameAvailabilityAsync(String location);

    /**
     * Get the access keys of the SignalR resource.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the SignalR resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SignalRKeys> listKeysAsync(String resourceGroupName, String resourceName);

    /**
     * Regenerate SignalR service access key. PrimaryKey and SecondaryKey cannot be regenerated at the same time.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the SignalR resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SignalRKeys> regenerateKeyAsync(String resourceGroupName, String resourceName);

    /**
     * Get the SignalR service and its properties.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the SignalR resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SignalRResource> getByResourceGroupAsync(String resourceGroupName, String resourceName);

    /**
     * Create a new SignalR service and update an exiting SignalR service.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the SignalR resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SignalRResource> createOrUpdateAsync(String resourceGroupName, String resourceName);

    /**
     * Operation to delete a SignalR service.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the SignalR resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteAsync(String resourceGroupName, String resourceName);

    /**
     * Operation to update an exiting SignalR service.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the SignalR resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SignalRResource> updateAsync(String resourceGroupName, String resourceName);

    /**
     * Operation to restart a SignalR service.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @param resourceName The name of the SignalR resource.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable restartAsync(String resourceGroupName, String resourceName);

    /**
     * Handles requests to list all resources in a subscription.
     *
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SignalRResource> listAsync();

    /**
     * Handles requests to list all resources in a resource group.
     *
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SignalRResource> listByResourceGroupAsync(final String resourceGroupName);

}
