/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.signalr.v2018_10_01;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Settings used to provision or configure the resource.
 */
public class SignalRCreateOrUpdateProperties {
    /**
     * Prefix for the hostName of the SignalR service. Retained for future use.
     * The hostname will be of format:
     * &amp;lt;hostNamePrefix&amp;gt;.service.signalr.net.
     */
    @JsonProperty(value = "hostNamePrefix")
    private String hostNamePrefix;

    /**
     * List of SignalR featureFlags. e.g. ServiceMode.
     *
     * When updating featureFlags, if certain featureFlag is not included in
     * parameters, SignalR service will remain it unchanged.
     * And when you GET a SignalR resource, the response will include only
     * those featureFlags explicitly set by you. For other featureFlags,
     * SignalR service will use its globally default value. Note that, default
     * value doesn't mean "false". It varies in terms of different
     * FeatureFlags.
     */
    @JsonProperty(value = "features")
    private List<SignalRFeature> features;

    /**
     * Get prefix for the hostName of the SignalR service. Retained for future use.
     The hostname will be of format: &amp;lt;hostNamePrefix&amp;gt;.service.signalr.net.
     *
     * @return the hostNamePrefix value
     */
    public String hostNamePrefix() {
        return this.hostNamePrefix;
    }

    /**
     * Set prefix for the hostName of the SignalR service. Retained for future use.
     The hostname will be of format: &amp;lt;hostNamePrefix&amp;gt;.service.signalr.net.
     *
     * @param hostNamePrefix the hostNamePrefix value to set
     * @return the SignalRCreateOrUpdateProperties object itself.
     */
    public SignalRCreateOrUpdateProperties withHostNamePrefix(String hostNamePrefix) {
        this.hostNamePrefix = hostNamePrefix;
        return this;
    }

    /**
     * Get list of SignalR featureFlags. e.g. ServiceMode.
     When updating featureFlags, if certain featureFlag is not included in parameters, SignalR service will remain it unchanged.
     And when you GET a SignalR resource, the response will include only those featureFlags explicitly set by you. For other featureFlags,
     SignalR service will use its globally default value. Note that, default value doesn't mean "false". It varies in terms of different FeatureFlags.
     *
     * @return the features value
     */
    public List<SignalRFeature> features() {
        return this.features;
    }

    /**
     * Set list of SignalR featureFlags. e.g. ServiceMode.
     When updating featureFlags, if certain featureFlag is not included in parameters, SignalR service will remain it unchanged.
     And when you GET a SignalR resource, the response will include only those featureFlags explicitly set by you. For other featureFlags,
     SignalR service will use its globally default value. Note that, default value doesn't mean "false". It varies in terms of different FeatureFlags.
     *
     * @param features the features value to set
     * @return the SignalRCreateOrUpdateProperties object itself.
     */
    public SignalRCreateOrUpdateProperties withFeatures(List<SignalRFeature> features) {
        this.features = features;
        return this;
    }

}
