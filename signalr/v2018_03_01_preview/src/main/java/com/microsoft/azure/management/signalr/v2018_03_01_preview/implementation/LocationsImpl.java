/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.signalr.v2018_03_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.signalr.v2018_03_01_preview.Locations;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.signalr.v2018_03_01_preview.NameAvailability;

class LocationsImpl extends WrapperImpl<SignalRsInner> implements Locations {
    private final SignalRManager manager;

    LocationsImpl(SignalRManager manager) {
        super(manager.inner().signalRs());
        this.manager = manager;
    }

    public SignalRManager manager() {
        return this.manager;
    }

    @Override
    public Observable<NameAvailability> checkNameAvailabilityAsync(String location) {
        SignalRsInner client = this.inner();
        return client.checkNameAvailabilityAsync(location)
        .map(new Func1<NameAvailabilityInner, NameAvailability>() {
            @Override
            public NameAvailability call(NameAvailabilityInner inner) {
                return new NameAvailabilityImpl(inner, manager());
            }
        });
    }

}
