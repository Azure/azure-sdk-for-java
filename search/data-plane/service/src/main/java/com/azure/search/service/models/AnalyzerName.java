/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.azure.search.service.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Defines values for AnalyzerName.
 */
public enum AnalyzerName {
    /**
     * Enum value ar.microsoft.
     */
    ARMICROSOFT("ar.microsoft"),

    /**
     * Enum value ar.lucene.
     */
    ARLUCENE("ar.lucene"),

    /**
     * Enum value hy.lucene.
     */
    HYLUCENE("hy.lucene"),

    /**
     * Enum value bn.microsoft.
     */
    BNMICROSOFT("bn.microsoft"),

    /**
     * Enum value eu.lucene.
     */
    EULUCENE("eu.lucene"),

    /**
     * Enum value bg.microsoft.
     */
    BGMICROSOFT("bg.microsoft"),

    /**
     * Enum value bg.lucene.
     */
    BGLUCENE("bg.lucene"),

    /**
     * Enum value ca.microsoft.
     */
    CAMICROSOFT("ca.microsoft"),

    /**
     * Enum value ca.lucene.
     */
    CALUCENE("ca.lucene"),

    /**
     * Enum value zh-Hans.microsoft.
     */
    ZH_HANSMICROSOFT("zh-Hans.microsoft"),

    /**
     * Enum value zh-Hans.lucene.
     */
    ZH_HANSLUCENE("zh-Hans.lucene"),

    /**
     * Enum value zh-Hant.microsoft.
     */
    ZH_HANTMICROSOFT("zh-Hant.microsoft"),

    /**
     * Enum value zh-Hant.lucene.
     */
    ZH_HANTLUCENE("zh-Hant.lucene"),

    /**
     * Enum value hr.microsoft.
     */
    HRMICROSOFT("hr.microsoft"),

    /**
     * Enum value cs.microsoft.
     */
    CSMICROSOFT("cs.microsoft"),

    /**
     * Enum value cs.lucene.
     */
    CSLUCENE("cs.lucene"),

    /**
     * Enum value da.microsoft.
     */
    DAMICROSOFT("da.microsoft"),

    /**
     * Enum value da.lucene.
     */
    DALUCENE("da.lucene"),

    /**
     * Enum value nl.microsoft.
     */
    NLMICROSOFT("nl.microsoft"),

    /**
     * Enum value nl.lucene.
     */
    NLLUCENE("nl.lucene"),

    /**
     * Enum value en.microsoft.
     */
    ENMICROSOFT("en.microsoft"),

    /**
     * Enum value en.lucene.
     */
    ENLUCENE("en.lucene"),

    /**
     * Enum value et.microsoft.
     */
    ETMICROSOFT("et.microsoft"),

    /**
     * Enum value fi.microsoft.
     */
    FIMICROSOFT("fi.microsoft"),

    /**
     * Enum value fi.lucene.
     */
    FILUCENE("fi.lucene"),

    /**
     * Enum value fr.microsoft.
     */
    FRMICROSOFT("fr.microsoft"),

    /**
     * Enum value fr.lucene.
     */
    FRLUCENE("fr.lucene"),

    /**
     * Enum value gl.lucene.
     */
    GLLUCENE("gl.lucene"),

    /**
     * Enum value de.microsoft.
     */
    DEMICROSOFT("de.microsoft"),

    /**
     * Enum value de.lucene.
     */
    DELUCENE("de.lucene"),

    /**
     * Enum value el.microsoft.
     */
    ELMICROSOFT("el.microsoft"),

    /**
     * Enum value el.lucene.
     */
    ELLUCENE("el.lucene"),

    /**
     * Enum value gu.microsoft.
     */
    GUMICROSOFT("gu.microsoft"),

    /**
     * Enum value he.microsoft.
     */
    HEMICROSOFT("he.microsoft"),

    /**
     * Enum value hi.microsoft.
     */
    HIMICROSOFT("hi.microsoft"),

    /**
     * Enum value hi.lucene.
     */
    HILUCENE("hi.lucene"),

    /**
     * Enum value hu.microsoft.
     */
    HUMICROSOFT("hu.microsoft"),

    /**
     * Enum value hu.lucene.
     */
    HULUCENE("hu.lucene"),

    /**
     * Enum value is.microsoft.
     */
    ISMICROSOFT("is.microsoft"),

    /**
     * Enum value id.microsoft.
     */
    IDMICROSOFT("id.microsoft"),

    /**
     * Enum value id.lucene.
     */
    IDLUCENE("id.lucene"),

    /**
     * Enum value ga.lucene.
     */
    GALUCENE("ga.lucene"),

    /**
     * Enum value it.microsoft.
     */
    ITMICROSOFT("it.microsoft"),

    /**
     * Enum value it.lucene.
     */
    ITLUCENE("it.lucene"),

    /**
     * Enum value ja.microsoft.
     */
    JAMICROSOFT("ja.microsoft"),

    /**
     * Enum value ja.lucene.
     */
    JALUCENE("ja.lucene"),

    /**
     * Enum value kn.microsoft.
     */
    KNMICROSOFT("kn.microsoft"),

    /**
     * Enum value ko.microsoft.
     */
    KOMICROSOFT("ko.microsoft"),

    /**
     * Enum value ko.lucene.
     */
    KOLUCENE("ko.lucene"),

    /**
     * Enum value lv.microsoft.
     */
    LVMICROSOFT("lv.microsoft"),

    /**
     * Enum value lv.lucene.
     */
    LVLUCENE("lv.lucene"),

    /**
     * Enum value lt.microsoft.
     */
    LTMICROSOFT("lt.microsoft"),

    /**
     * Enum value ml.microsoft.
     */
    MLMICROSOFT("ml.microsoft"),

    /**
     * Enum value ms.microsoft.
     */
    MSMICROSOFT("ms.microsoft"),

    /**
     * Enum value mr.microsoft.
     */
    MRMICROSOFT("mr.microsoft"),

    /**
     * Enum value nb.microsoft.
     */
    NBMICROSOFT("nb.microsoft"),

    /**
     * Enum value no.lucene.
     */
    NOLUCENE("no.lucene"),

    /**
     * Enum value fa.lucene.
     */
    FALUCENE("fa.lucene"),

    /**
     * Enum value pl.microsoft.
     */
    PLMICROSOFT("pl.microsoft"),

    /**
     * Enum value pl.lucene.
     */
    PLLUCENE("pl.lucene"),

    /**
     * Enum value pt-BR.microsoft.
     */
    PT_BRMICROSOFT("pt-BR.microsoft"),

    /**
     * Enum value pt-BR.lucene.
     */
    PT_BRLUCENE("pt-BR.lucene"),

    /**
     * Enum value pt-PT.microsoft.
     */
    PT_PTMICROSOFT("pt-PT.microsoft"),

    /**
     * Enum value pt-PT.lucene.
     */
    PT_PTLUCENE("pt-PT.lucene"),

    /**
     * Enum value pa.microsoft.
     */
    PAMICROSOFT("pa.microsoft"),

    /**
     * Enum value ro.microsoft.
     */
    ROMICROSOFT("ro.microsoft"),

    /**
     * Enum value ro.lucene.
     */
    ROLUCENE("ro.lucene"),

    /**
     * Enum value ru.microsoft.
     */
    RUMICROSOFT("ru.microsoft"),

    /**
     * Enum value ru.lucene.
     */
    RULUCENE("ru.lucene"),

    /**
     * Enum value sr-cyrillic.microsoft.
     */
    SR_CYRILLICMICROSOFT("sr-cyrillic.microsoft"),

    /**
     * Enum value sr-latin.microsoft.
     */
    SR_LATINMICROSOFT("sr-latin.microsoft"),

    /**
     * Enum value sk.microsoft.
     */
    SKMICROSOFT("sk.microsoft"),

    /**
     * Enum value sl.microsoft.
     */
    SLMICROSOFT("sl.microsoft"),

    /**
     * Enum value es.microsoft.
     */
    ESMICROSOFT("es.microsoft"),

    /**
     * Enum value es.lucene.
     */
    ESLUCENE("es.lucene"),

    /**
     * Enum value sv.microsoft.
     */
    SVMICROSOFT("sv.microsoft"),

    /**
     * Enum value sv.lucene.
     */
    SVLUCENE("sv.lucene"),

    /**
     * Enum value ta.microsoft.
     */
    TAMICROSOFT("ta.microsoft"),

    /**
     * Enum value te.microsoft.
     */
    TEMICROSOFT("te.microsoft"),

    /**
     * Enum value th.microsoft.
     */
    THMICROSOFT("th.microsoft"),

    /**
     * Enum value th.lucene.
     */
    THLUCENE("th.lucene"),

    /**
     * Enum value tr.microsoft.
     */
    TRMICROSOFT("tr.microsoft"),

    /**
     * Enum value tr.lucene.
     */
    TRLUCENE("tr.lucene"),

    /**
     * Enum value uk.microsoft.
     */
    UKMICROSOFT("uk.microsoft"),

    /**
     * Enum value ur.microsoft.
     */
    URMICROSOFT("ur.microsoft"),

    /**
     * Enum value vi.microsoft.
     */
    VIMICROSOFT("vi.microsoft"),

    /**
     * Enum value standard.lucene.
     */
    STANDARDLUCENE("standard.lucene"),

    /**
     * Enum value standardasciifolding.lucene.
     */
    STANDARDASCIIFOLDINGLUCENE("standardasciifolding.lucene"),

    /**
     * Enum value keyword.
     */
    KEYWORD("keyword"),

    /**
     * Enum value pattern.
     */
    PATTERN("pattern"),

    /**
     * Enum value simple.
     */
    SIMPLE("simple"),

    /**
     * Enum value stop.
     */
    STOP("stop"),

    /**
     * Enum value whitespace.
     */
    WHITESPACE("whitespace");

    /**
     * The actual serialized value for a AnalyzerName instance.
     */
    private String value;

    AnalyzerName(String value) {
        this.value = value;
    }

    /**
     * Parses a serialized value to a AnalyzerName instance.
     *
     * @param value the serialized value to parse.
     * @return the parsed AnalyzerName object, or null if unable to parse.
     */
    @JsonCreator
    public static AnalyzerName fromString(String value) {
        AnalyzerName[] items = AnalyzerName.values();
        for (AnalyzerName item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }

    @JsonValue
    @Override
    public String toString() {
        return this.value;
    }
}
