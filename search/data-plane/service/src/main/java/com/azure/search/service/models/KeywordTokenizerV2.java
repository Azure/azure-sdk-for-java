/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.azure.search.service.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Emits the entire input as a single token. This tokenizer is implemented
 * using Apache Lucene.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@odata\\.type")
@JsonTypeName("#Microsoft.Azure.Search.KeywordTokenizerV2")
public class KeywordTokenizerV2 extends Tokenizer {
    /**
     * The maximum token length. Default is 256. Tokens longer than the maximum
     * length are split. The maximum token length that can be used is 300
     * characters.
     */
    @JsonProperty(value = "maxTokenLength")
    private Integer maxTokenLength;

    /**
     * Get the maximum token length. Default is 256. Tokens longer than the maximum length are split. The maximum
     * token length that can be used is 300 characters.
     *
     * @return the maxTokenLength value
     */
    public Integer maxTokenLength() {
        return this.maxTokenLength;
    }

    /**
     * Set the maximum token length. Default is 256. Tokens longer than the maximum length are split. The maximum
     * token length that can be used is 300 characters.
     *
     * @param maxTokenLength the maxTokenLength value to set
     * @return the KeywordTokenizerV2 object itself.
     */
    public KeywordTokenizerV2 withMaxTokenLength(Integer maxTokenLength) {
        this.maxTokenLength = maxTokenLength;
        return this;
    }

}
