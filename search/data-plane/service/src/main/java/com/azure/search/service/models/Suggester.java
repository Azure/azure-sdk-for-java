/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.azure.search.service.models;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.List;

/**
 * Defines how the Suggest API should apply to a group of fields in the index.
 */
public class Suggester {
    /**
     * The name of the suggester.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * A value indicating the capabilities of the suggester.
     */
    @JsonProperty(value = "searchMode", required = true)
    private String searchMode;

    /**
     * The list of field names to which the suggester applies. Each field must
     * be searchable.
     */
    @JsonProperty(value = "sourceFields", required = true)
    private List<String> sourceFields;

    /**
     * Creates an instance of Suggester class.
     *
//     * @param name         the name of the suggester.
//     * @param sourceFields the list of field names to which the suggester applies. Each field must be searchable.
     */
    public Suggester() {
        searchMode = "analyzingInfixMatching";
    }

    /**
     * Get the name of the suggester.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name of the suggester.
     *
     * @param name the name value to set
     * @return the Suggester object itself.
     */
    public Suggester withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get a value indicating the capabilities of the suggester.
     *
     * @return the searchMode value
     */
    public String searchMode() {
        return this.searchMode;
    }

    /**
     * Set a value indicating the capabilities of the suggester.
     *
     * @param searchMode the searchMode value to set
     * @return the Suggester object itself.
     */
    public Suggester withSearchMode(String searchMode) {
        this.searchMode = searchMode;
        return this;
    }

    /**
     * Get the list of field names to which the suggester applies. Each field must be searchable.
     *
     * @return the sourceFields value
     */
    public List<String> sourceFields() {
        return this.sourceFields;
    }

    /**
     * Set the list of field names to which the suggester applies. Each field must be searchable.
     *
     * @param sourceFields the sourceFields value to set
     * @return the Suggester object itself.
     */
    public Suggester withSourceFields(List<String> sourceFields) {
        this.sourceFields = sourceFields;
        return this;
    }

}
