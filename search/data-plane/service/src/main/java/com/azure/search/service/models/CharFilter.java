/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.azure.search.service.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Abstract base class for character filters.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "@odata\\.type")
@JsonTypeName("CharFilter")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "#Microsoft.Azure.Search.MappingCharFilter", value = MappingCharFilter.class),
    @JsonSubTypes.Type(name = "#Microsoft.Azure.Search.PatternReplaceCharFilter", value =
        PatternReplaceCharFilter.class)
})
public class CharFilter {
    /**
     * The name of the char filter. It must only contain letters, digits,
     * spaces, dashes or underscores, can only start and end with alphanumeric
     * characters, and is limited to 128 characters.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * Get the name of the char filter. It must only contain letters, digits, spaces, dashes or underscores, can only
     * start and end with alphanumeric characters, and is limited to 128 characters.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name of the char filter. It must only contain letters, digits, spaces, dashes or underscores, can only
     * start and end with alphanumeric characters, and is limited to 128 characters.
     *
     * @param name the name value to set
     * @return the CharFilter object itself.
     */
    public CharFilter withName(String name) {
        this.name = name;
        return this;
    }

}
