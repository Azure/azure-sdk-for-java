/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.search.v2015_02_28.implementation;

import com.microsoft.azure.management.search.v2015_02_28.SearchServiceResource;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.search.v2015_02_28.SearchServiceCreateOrUpdateParameters;
import java.util.Map;
import com.microsoft.azure.management.search.v2015_02_28.SearchServiceReadableProperties;
import com.microsoft.azure.management.search.v2015_02_28.SearchServiceProperties;
import rx.functions.Func1;

class SearchServiceResourceImpl extends CreatableUpdatableImpl<SearchServiceResource, SearchServiceResourceInner, SearchServiceResourceImpl> implements SearchServiceResource, SearchServiceResource.Definition, SearchServiceResource.Update {
    private String resourceGroupName;
    private String serviceName;
    private SearchServiceCreateOrUpdateParameters createOrUpdateParameter;
    private final SearchManager manager;

    SearchServiceResourceImpl(String name, SearchManager manager) {
        super(name, new SearchServiceResourceInner());
        this.manager = manager;
        // Set resource name
        this.serviceName = name;
        //
        this.createOrUpdateParameter = new SearchServiceCreateOrUpdateParameters();
    }

    SearchServiceResourceImpl(SearchServiceResourceInner inner, SearchManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.serviceName = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.serviceName = IdParsingUtils.getValueFromIdByName(inner.id(), "searchServices");
        // set other parameters for create and update
        this.createOrUpdateParameter = new SearchServiceCreateOrUpdateParameters();
    }

    @Override
    public SearchManager manager() {
        return this.manager;
    }

    @Override
    public Observable<SearchServiceResource> createResourceAsync() {
        ServicesInner client = this.manager().inner().services();
        return client.createOrUpdateAsync(this.resourceGroupName, this.serviceName, this.createOrUpdateParameter)
            .map(new Func1<SearchServiceResourceInner, SearchServiceResourceInner>() {
               @Override
               public SearchServiceResourceInner call(SearchServiceResourceInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<SearchServiceResource> updateResourceAsync() {
        ServicesInner client = this.manager().inner().services();
        return client.createOrUpdateAsync(this.resourceGroupName, this.serviceName, this.createOrUpdateParameter)
            .map(new Func1<SearchServiceResourceInner, SearchServiceResourceInner>() {
               @Override
               public SearchServiceResourceInner call(SearchServiceResourceInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<SearchServiceResourceInner> getInnerAsync() {
        ServicesInner client = this.manager().inner().services();
        return null; // NOP getInnerAsync implementation as get is not supported
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.createOrUpdateParameter = new SearchServiceCreateOrUpdateParameters();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String location() {
        return this.inner().location();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public SearchServiceReadableProperties properties() {
        return this.inner().properties();
    }

    @Override
    public Map<String, String> tags() {
        return this.inner().tags();
    }

    @Override
    public SearchServiceResourceImpl withResourceGroupName(String resourceGroupName) {
        this.resourceGroupName = resourceGroupName;
        return this;
    }

    @Override
    public SearchServiceResourceImpl withLocation(String location) {
        this.createOrUpdateParameter.withLocation(location);
        return this;
    }

    @Override
    public SearchServiceResourceImpl withProperties(SearchServiceProperties properties) {
        this.createOrUpdateParameter.withProperties(properties);
        return this;
    }

    @Override
    public SearchServiceResourceImpl withTags(Map<String, String> tags) {
        this.createOrUpdateParameter.withTags(tags);
        return this;
    }

}
