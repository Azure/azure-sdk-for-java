/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.iothub.v2018_04_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.iothub.v2018_04_01.IotHubKeys;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.iothub.v2018_04_01.SharedAccessSignatureAuthorizationRule;

class IotHubKeysImpl extends WrapperImpl<IotHubResourcesInner> implements IotHubKeys {
    private final IoTHubManager manager;

    IotHubKeysImpl(IoTHubManager manager) {
        super(manager.inner().iotHubResources());
        this.manager = manager;
    }

    public IoTHubManager manager() {
        return this.manager;
    }

    @Override
    public Observable<SharedAccessSignatureAuthorizationRule> getKeysForKeyNameAsync(String resourceGroupName, String resourceName, String keyName) {
        IotHubResourcesInner client = this.inner();
        return client.getKeysForKeyNameAsync(resourceGroupName, resourceName, keyName)
        .map(new Func1<SharedAccessSignatureAuthorizationRuleInner, SharedAccessSignatureAuthorizationRule>() {
            @Override
            public SharedAccessSignatureAuthorizationRule call(SharedAccessSignatureAuthorizationRuleInner inner) {
                return new SharedAccessSignatureAuthorizationRuleImpl(inner, manager());
            }
        });
    }

}
