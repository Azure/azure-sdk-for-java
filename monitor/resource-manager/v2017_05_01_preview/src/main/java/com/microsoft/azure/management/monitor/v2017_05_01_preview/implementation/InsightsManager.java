/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.monitor.v2017_05_01_preview.implementation;

import com.microsoft.azure.AzureEnvironment;
import com.microsoft.azure.AzureResponseBuilder;
import com.microsoft.azure.credentials.AzureTokenCredentials;
import com.microsoft.azure.management.apigeneration.Beta;
import com.microsoft.azure.management.apigeneration.Beta.SinceVersion;
import com.microsoft.azure.arm.resources.AzureConfigurable;
import com.microsoft.azure.serializer.AzureJacksonAdapter;
import com.microsoft.rest.RestClient;
import com.microsoft.azure.management.monitor.v2017_05_01_preview.DiagnosticSettingsCategorys;
import com.microsoft.azure.management.monitor.v2017_05_01_preview.DiagnosticSettings;
import com.microsoft.azure.management.monitor.v2017_05_01_preview.MetricDefinitions;
import com.microsoft.azure.management.monitor.v2017_05_01_preview.Metrics;
import com.microsoft.azure.arm.resources.implementation.AzureConfigurableCoreImpl;
import com.microsoft.azure.arm.resources.implementation.ManagerCore;

/**
 * Entry point to Azure Insights resource management.
 */
public final class InsightsManager extends ManagerCore<InsightsManager, MonitorManagementClientImpl> {
    private DiagnosticSettingsCategorys diagnosticSettingsCategorys;
    private DiagnosticSettings diagnosticSettings;
    private MetricDefinitions metricDefinitions;
    private Metrics metrics;
    /**
    * Get a Configurable instance that can be used to create InsightsManager with optional configuration.
    *
    * @return the instance allowing configurations
    */
    public static Configurable configure() {
        return new InsightsManager.ConfigurableImpl();
    }
    /**
    * Creates an instance of InsightsManager that exposes Insights resource management API entry points.
    *
    * @param credentials the credentials to use
    * @return the InsightsManager
    */
    public static InsightsManager authenticate(AzureTokenCredentials credentials) {
        return new InsightsManager(new RestClient.Builder()
            .withBaseUrl(credentials.environment(), AzureEnvironment.Endpoint.RESOURCE_MANAGER)
            .withCredentials(credentials)
            .withSerializerAdapter(new AzureJacksonAdapter())
            .withResponseBuilderFactory(new AzureResponseBuilder.Factory())
            .build());
    }
    /**
    * Creates an instance of InsightsManager that exposes Insights resource management API entry points.
    *
    * @param restClient the RestClient to be used for API calls.
    * @return the InsightsManager
    */
    public static InsightsManager authenticate(RestClient restClient) {
        return new InsightsManager(restClient);
    }
    /**
    * The interface allowing configurations to be set.
    */
    public interface Configurable extends AzureConfigurable<Configurable> {
        /**
        * Creates an instance of InsightsManager that exposes Insights management API entry points.
        *
        * @param credentials the credentials to use
        * @return the interface exposing Insights management API entry points that work across subscriptions
        */
        InsightsManager authenticate(AzureTokenCredentials credentials);
    }

    /**
     * @return Entry point to manage DiagnosticSettingsCategorys.
     */
    public DiagnosticSettingsCategorys diagnosticSettingsCategorys() {
        if (this.diagnosticSettingsCategorys == null) {
            this.diagnosticSettingsCategorys = new DiagnosticSettingsCategorysImpl(this);
        }
        return this.diagnosticSettingsCategorys;
    }

    /**
     * @return Entry point to manage DiagnosticSettings.
     */
    public DiagnosticSettings diagnosticSettings() {
        if (this.diagnosticSettings == null) {
            this.diagnosticSettings = new DiagnosticSettingsImpl(this);
        }
        return this.diagnosticSettings;
    }

    /**
     * @return Entry point to manage MetricDefinitions.
     */
    public MetricDefinitions metricDefinitions() {
        if (this.metricDefinitions == null) {
            this.metricDefinitions = new MetricDefinitionsImpl(this);
        }
        return this.metricDefinitions;
    }

    /**
     * @return Entry point to manage Metrics.
     */
    public Metrics metrics() {
        if (this.metrics == null) {
            this.metrics = new MetricsImpl(this);
        }
        return this.metrics;
    }

    /**
    * The implementation for Configurable interface.
    */
    private static final class ConfigurableImpl extends AzureConfigurableCoreImpl<Configurable> implements Configurable {
        public InsightsManager authenticate(AzureTokenCredentials credentials) {
           return InsightsManager.authenticate(buildRestClient(credentials));
        }
     }
    private InsightsManager(RestClient restClient) {
        super(
            restClient,
            null,
            new MonitorManagementClientImpl(restClient));
    }
}
