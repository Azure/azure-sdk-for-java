/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.monitor.v2018_03;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.monitor.v2018_03.implementation.DiagnosticSettingsResourceInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.monitor.v2018_03.implementation.MonitorManager;
import java.util.List;

/**
 * Type representing DiagnosticSettingsResource.
 */
public interface DiagnosticSettingsResource extends HasInner<DiagnosticSettingsResourceInner>, Indexable, Refreshable<DiagnosticSettingsResource>, Updatable<DiagnosticSettingsResource.Update>, HasManager<MonitorManager> {
    /**
     * @return the eventHubAuthorizationRuleId value.
     */
    String eventHubAuthorizationRuleId();

    /**
     * @return the eventHubName value.
     */
    String eventHubName();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the logs value.
     */
    List<LogSettings> logs();

    /**
     * @return the metrics value.
     */
    List<MetricSettings> metrics();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the storageAccountId value.
     */
    String storageAccountId();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the workspaceId value.
     */
    String workspaceId();

    /**
     * The entirety of the DiagnosticSettingsResource definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithResourceUri, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of DiagnosticSettingsResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a DiagnosticSettingsResource definition.
         */
        interface Blank extends WithResourceUri {
        }

        /**
         * The stage of the diagnosticsettingsresource definition allowing to specify ResourceUri.
         */
        interface WithResourceUri {
           /**
            * Specifies resourceUri.
            */
            WithCreate withResourceUri(String resourceUri);
        }

        /**
         * The stage of the diagnosticsettingsresource definition allowing to specify EventHubAuthorizationRuleId.
         */
        interface WithEventHubAuthorizationRuleId {
            /**
             * Specifies eventHubAuthorizationRuleId.
             */
            WithCreate withEventHubAuthorizationRuleId(String eventHubAuthorizationRuleId);
        }

        /**
         * The stage of the diagnosticsettingsresource definition allowing to specify EventHubName.
         */
        interface WithEventHubName {
            /**
             * Specifies eventHubName.
             */
            WithCreate withEventHubName(String eventHubName);
        }

        /**
         * The stage of the diagnosticsettingsresource definition allowing to specify Logs.
         */
        interface WithLogs {
            /**
             * Specifies logs.
             */
            WithCreate withLogs(List<LogSettings> logs);
        }

        /**
         * The stage of the diagnosticsettingsresource definition allowing to specify Metrics.
         */
        interface WithMetrics {
            /**
             * Specifies metrics.
             */
            WithCreate withMetrics(List<MetricSettings> metrics);
        }

        /**
         * The stage of the diagnosticsettingsresource definition allowing to specify StorageAccountId.
         */
        interface WithStorageAccountId {
            /**
             * Specifies storageAccountId.
             */
            WithCreate withStorageAccountId(String storageAccountId);
        }

        /**
         * The stage of the diagnosticsettingsresource definition allowing to specify WorkspaceId.
         */
        interface WithWorkspaceId {
            /**
             * Specifies workspaceId.
             */
            WithCreate withWorkspaceId(String workspaceId);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<DiagnosticSettingsResource>, DefinitionStages.WithEventHubAuthorizationRuleId, DefinitionStages.WithEventHubName, DefinitionStages.WithLogs, DefinitionStages.WithMetrics, DefinitionStages.WithStorageAccountId, DefinitionStages.WithWorkspaceId {
        }
    }
    /**
     * The template for a DiagnosticSettingsResource update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<DiagnosticSettingsResource>, UpdateStages.WithEventHubAuthorizationRuleId, UpdateStages.WithEventHubName, UpdateStages.WithLogs, UpdateStages.WithMetrics, UpdateStages.WithStorageAccountId, UpdateStages.WithWorkspaceId {
    }

    /**
     * Grouping of DiagnosticSettingsResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the diagnosticsettingsresource update allowing to specify EventHubAuthorizationRuleId.
         */
        interface WithEventHubAuthorizationRuleId {
            /**
             * Specifies eventHubAuthorizationRuleId.
             */
            Update withEventHubAuthorizationRuleId(String eventHubAuthorizationRuleId);
        }

        /**
         * The stage of the diagnosticsettingsresource update allowing to specify EventHubName.
         */
        interface WithEventHubName {
            /**
             * Specifies eventHubName.
             */
            Update withEventHubName(String eventHubName);
        }

        /**
         * The stage of the diagnosticsettingsresource update allowing to specify Logs.
         */
        interface WithLogs {
            /**
             * Specifies logs.
             */
            Update withLogs(List<LogSettings> logs);
        }

        /**
         * The stage of the diagnosticsettingsresource update allowing to specify Metrics.
         */
        interface WithMetrics {
            /**
             * Specifies metrics.
             */
            Update withMetrics(List<MetricSettings> metrics);
        }

        /**
         * The stage of the diagnosticsettingsresource update allowing to specify StorageAccountId.
         */
        interface WithStorageAccountId {
            /**
             * Specifies storageAccountId.
             */
            Update withStorageAccountId(String storageAccountId);
        }

        /**
         * The stage of the diagnosticsettingsresource update allowing to specify WorkspaceId.
         */
        interface WithWorkspaceId {
            /**
             * Specifies workspaceId.
             */
            Update withWorkspaceId(String workspaceId);
        }

    }
}
