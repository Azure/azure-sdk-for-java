/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.containerregistry.v2016_06_27_preview.implementation;

import org.joda.time.DateTime;
import com.microsoft.azure.management.containerregistry.v2016_06_27_preview.StorageAccountProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.Resource;

/**
 * An object that represents a container registry.
 */
@JsonFlatten
public class RegistryInner extends Resource {
    /**
     * The URL that can be used to log into the container registry.
     */
    @JsonProperty(value = "properties.loginServer", access = JsonProperty.Access.WRITE_ONLY)
    private String loginServer;

    /**
     * The creation date of the container registry in ISO8601 format.
     */
    @JsonProperty(value = "properties.creationDate", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime creationDate;

    /**
     * The value that indicates whether the admin user is enabled. This value
     * is false by default.
     */
    @JsonProperty(value = "properties.adminUserEnabled")
    private Boolean adminUserEnabled;

    /**
     * The properties of the storage account for the container registry. If
     * specified, the storage account must be in the same physical location as
     * the container registry.
     */
    @JsonProperty(value = "properties.storageAccount", required = true)
    private StorageAccountProperties storageAccount;

    /**
     * Get the URL that can be used to log into the container registry.
     *
     * @return the loginServer value
     */
    public String loginServer() {
        return this.loginServer;
    }

    /**
     * Get the creation date of the container registry in ISO8601 format.
     *
     * @return the creationDate value
     */
    public DateTime creationDate() {
        return this.creationDate;
    }

    /**
     * Get the value that indicates whether the admin user is enabled. This value is false by default.
     *
     * @return the adminUserEnabled value
     */
    public Boolean adminUserEnabled() {
        return this.adminUserEnabled;
    }

    /**
     * Set the value that indicates whether the admin user is enabled. This value is false by default.
     *
     * @param adminUserEnabled the adminUserEnabled value to set
     * @return the RegistryInner object itself.
     */
    public RegistryInner withAdminUserEnabled(Boolean adminUserEnabled) {
        this.adminUserEnabled = adminUserEnabled;
        return this;
    }

    /**
     * Get the properties of the storage account for the container registry. If specified, the storage account must be in the same physical location as the container registry.
     *
     * @return the storageAccount value
     */
    public StorageAccountProperties storageAccount() {
        return this.storageAccount;
    }

    /**
     * Set the properties of the storage account for the container registry. If specified, the storage account must be in the same physical location as the container registry.
     *
     * @param storageAccount the storageAccount value to set
     * @return the RegistryInner object itself.
     */
    public RegistryInner withStorageAccount(StorageAccountProperties storageAccount) {
        this.storageAccount = storageAccount;
        return this;
    }

}
