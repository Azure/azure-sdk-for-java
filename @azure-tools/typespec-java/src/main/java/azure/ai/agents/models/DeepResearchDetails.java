// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.ai.agents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * The details of the Deep Research tool.
 */
@Immutable
public final class DeepResearchDetails implements JsonSerializable<DeepResearchDetails> {
    /*
     * The deep research model deployment name.
     */
    @Generated
    private final String model;

    /*
     * The array containing Bing grounding connection IDs to enhance deep research capabilities.
     */
    @Generated
    private final List<DeepResearchBingGroundingConnection> bingGroundingConnections;

    /**
     * Creates an instance of DeepResearchDetails class.
     * 
     * @param model the model value to set.
     * @param bingGroundingConnections the bingGroundingConnections value to set.
     */
    @Generated
    public DeepResearchDetails(String model, List<DeepResearchBingGroundingConnection> bingGroundingConnections) {
        this.model = model;
        this.bingGroundingConnections = bingGroundingConnections;
    }

    /**
     * Get the model property: The deep research model deployment name.
     * 
     * @return the model value.
     */
    @Generated
    public String getModel() {
        return this.model;
    }

    /**
     * Get the bingGroundingConnections property: The array containing Bing grounding connection IDs to enhance deep
     * research capabilities.
     * 
     * @return the bingGroundingConnections value.
     */
    @Generated
    public List<DeepResearchBingGroundingConnection> getBingGroundingConnections() {
        return this.bingGroundingConnections;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("deep_research_model", this.model);
        jsonWriter.writeArrayField("bing_grounding_connections", this.bingGroundingConnections,
            (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DeepResearchDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DeepResearchDetails if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the DeepResearchDetails.
     */
    @Generated
    public static DeepResearchDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String model = null;
            List<DeepResearchBingGroundingConnection> bingGroundingConnections = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("deep_research_model".equals(fieldName)) {
                    model = reader.getString();
                } else if ("bing_grounding_connections".equals(fieldName)) {
                    bingGroundingConnections
                        = reader.readArray(reader1 -> DeepResearchBingGroundingConnection.fromJson(reader1));
                } else {
                    reader.skipChildren();
                }
            }
            return new DeepResearchDetails(model, bingGroundingConnections);
        });
    }
}
