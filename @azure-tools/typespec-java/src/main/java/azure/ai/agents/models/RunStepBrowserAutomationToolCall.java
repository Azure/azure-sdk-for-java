// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.ai.agents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * A record of a call to a Browser Automation tool issued by the Agent.
 */
@Immutable
public final class RunStepBrowserAutomationToolCall extends RunStepToolCall {
    /*
     * The object type.
     */
    @Generated
    private String type = "browser_automation";

    /*
     * Details of the browser automation tool call.
     */
    @Generated
    private final BrowserAutomationToolCallDetails browserAutomation;

    /**
     * Creates an instance of RunStepBrowserAutomationToolCall class.
     * 
     * @param id the id value to set.
     * @param browserAutomation the browserAutomation value to set.
     */
    @Generated
    private RunStepBrowserAutomationToolCall(String id, BrowserAutomationToolCallDetails browserAutomation) {
        super(id);
        this.browserAutomation = browserAutomation;
    }

    /**
     * Get the type property: The object type.
     * 
     * @return the type value.
     */
    @Generated
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Get the browserAutomation property: Details of the browser automation tool call.
     * 
     * @return the browserAutomation value.
     */
    @Generated
    public BrowserAutomationToolCallDetails getBrowserAutomation() {
        return this.browserAutomation;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("id", getId());
        jsonWriter.writeJsonField("browser_automation", this.browserAutomation);
        jsonWriter.writeStringField("type", this.type);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RunStepBrowserAutomationToolCall from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RunStepBrowserAutomationToolCall if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RunStepBrowserAutomationToolCall.
     */
    @Generated
    public static RunStepBrowserAutomationToolCall fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String id = null;
            BrowserAutomationToolCallDetails browserAutomation = null;
            String type = "browser_automation";
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    id = reader.getString();
                } else if ("browser_automation".equals(fieldName)) {
                    browserAutomation = BrowserAutomationToolCallDetails.fromJson(reader);
                } else if ("type".equals(fieldName)) {
                    type = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            RunStepBrowserAutomationToolCall deserializedRunStepBrowserAutomationToolCall
                = new RunStepBrowserAutomationToolCall(id, browserAutomation);
            deserializedRunStepBrowserAutomationToolCall.type = type;

            return deserializedRunStepBrowserAutomationToolCall;
        });
    }
}
