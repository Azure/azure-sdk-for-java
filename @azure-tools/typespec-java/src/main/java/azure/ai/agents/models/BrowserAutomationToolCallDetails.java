// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.ai.agents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Details of a Browser Automation tool call.
 */
@Immutable
public final class BrowserAutomationToolCallDetails implements JsonSerializable<BrowserAutomationToolCallDetails> {
    /*
     * The input provided to the Browser Automation tool.
     */
    @Generated
    private final String input;

    /*
     * The output returned by the Browser Automation tool.
     */
    @Generated
    private final String output;

    /*
     * The steps the Browser Automation tool executed.
     */
    @Generated
    private final List<BrowserAutomationToolCallStep> steps;

    /**
     * Creates an instance of BrowserAutomationToolCallDetails class.
     * 
     * @param input the input value to set.
     * @param output the output value to set.
     * @param steps the steps value to set.
     */
    @Generated
    private BrowserAutomationToolCallDetails(String input, String output, List<BrowserAutomationToolCallStep> steps) {
        this.input = input;
        this.output = output;
        this.steps = steps;
    }

    /**
     * Get the input property: The input provided to the Browser Automation tool.
     * 
     * @return the input value.
     */
    @Generated
    public String getInput() {
        return this.input;
    }

    /**
     * Get the output property: The output returned by the Browser Automation tool.
     * 
     * @return the output value.
     */
    @Generated
    public String getOutput() {
        return this.output;
    }

    /**
     * Get the steps property: The steps the Browser Automation tool executed.
     * 
     * @return the steps value.
     */
    @Generated
    public List<BrowserAutomationToolCallStep> getSteps() {
        return this.steps;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("input", this.input);
        jsonWriter.writeStringField("output", this.output);
        jsonWriter.writeArrayField("steps", this.steps, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of BrowserAutomationToolCallDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of BrowserAutomationToolCallDetails if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the BrowserAutomationToolCallDetails.
     */
    @Generated
    public static BrowserAutomationToolCallDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String input = null;
            String output = null;
            List<BrowserAutomationToolCallStep> steps = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("input".equals(fieldName)) {
                    input = reader.getString();
                } else if ("output".equals(fieldName)) {
                    output = reader.getString();
                } else if ("steps".equals(fieldName)) {
                    steps = reader.readArray(reader1 -> BrowserAutomationToolCallStep.fromJson(reader1));
                } else {
                    reader.skipChildren();
                }
            }
            return new BrowserAutomationToolCallDetails(input, output, steps);
        });
    }
}
