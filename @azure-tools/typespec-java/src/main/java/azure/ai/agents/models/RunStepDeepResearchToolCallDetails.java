// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.ai.agents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The detailed information about the deep research tasks performed by the model.
 */
@Immutable
public final class RunStepDeepResearchToolCallDetails implements JsonSerializable<RunStepDeepResearchToolCallDetails> {
    /*
     * The input provided by the model to the deep research tool.
     */
    @Generated
    private final String input;

    /*
     * The final output for the deep research tool.
     */
    @Generated
    private String output;

    /**
     * Creates an instance of RunStepDeepResearchToolCallDetails class.
     * 
     * @param input the input value to set.
     */
    @Generated
    private RunStepDeepResearchToolCallDetails(String input) {
        this.input = input;
    }

    /**
     * Get the input property: The input provided by the model to the deep research tool.
     * 
     * @return the input value.
     */
    @Generated
    public String getInput() {
        return this.input;
    }

    /**
     * Get the output property: The final output for the deep research tool.
     * 
     * @return the output value.
     */
    @Generated
    public String getOutput() {
        return this.output;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("input", this.input);
        jsonWriter.writeStringField("output", this.output);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RunStepDeepResearchToolCallDetails from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RunStepDeepResearchToolCallDetails if the JsonReader was pointing to an instance of it, or
     * null if it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RunStepDeepResearchToolCallDetails.
     */
    @Generated
    public static RunStepDeepResearchToolCallDetails fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String input = null;
            String output = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("input".equals(fieldName)) {
                    input = reader.getString();
                } else if ("output".equals(fieldName)) {
                    output = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            RunStepDeepResearchToolCallDetails deserializedRunStepDeepResearchToolCallDetails
                = new RunStepDeepResearchToolCallDetails(input);
            deserializedRunStepDeepResearchToolCallDetails.output = output;

            return deserializedRunStepDeepResearchToolCallDetails;
        });
    }
}
