// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.ai.agents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Represents an invocation of mcp as part of a streaming run step.
 */
@Immutable
public final class RunStepDeltaMCPObject extends RunStepDeltaDetail {
    /*
     * The object type for the run step detail object.
     */
    @Generated
    private String type = "mcp";

    /*
     * The collection of tool calls for the tool call detail item.
     */
    @Generated
    private List<RunStepDeltaMcpToolCall> toolCalls;

    /**
     * Creates an instance of RunStepDeltaMCPObject class.
     */
    @Generated
    private RunStepDeltaMCPObject() {
    }

    /**
     * Get the type property: The object type for the run step detail object.
     * 
     * @return the type value.
     */
    @Generated
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Get the toolCalls property: The collection of tool calls for the tool call detail item.
     * 
     * @return the toolCalls value.
     */
    @Generated
    public List<RunStepDeltaMcpToolCall> getToolCalls() {
        return this.toolCalls;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("type", this.type);
        jsonWriter.writeArrayField("tool_calls", this.toolCalls, (writer, element) -> writer.writeJson(element));
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RunStepDeltaMCPObject from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RunStepDeltaMCPObject if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IOException If an error occurs while reading the RunStepDeltaMCPObject.
     */
    @Generated
    public static RunStepDeltaMCPObject fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            RunStepDeltaMCPObject deserializedRunStepDeltaMCPObject = new RunStepDeltaMCPObject();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("type".equals(fieldName)) {
                    deserializedRunStepDeltaMCPObject.type = reader.getString();
                } else if ("tool_calls".equals(fieldName)) {
                    List<RunStepDeltaMcpToolCall> toolCalls
                        = reader.readArray(reader1 -> RunStepDeltaMcpToolCall.fromJson(reader1));
                    deserializedRunStepDeltaMCPObject.toolCalls = toolCalls;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedRunStepDeltaMCPObject;
        });
    }
}
