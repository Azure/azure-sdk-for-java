// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.ai.agents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The details for required tool call approval that must be submitted for an agent thread run to continue.
 */
@Immutable
public final class SubmitToolApprovalAction extends RequiredAction {
    /*
     * The object type.
     */
    @Generated
    private String type = "submit_tool_approval";

    /*
     * The details describing tools that should be approved to continue run.
     */
    @Generated
    private final SubmitToolApprovalDetails submitToolApproval;

    /**
     * Creates an instance of SubmitToolApprovalAction class.
     * 
     * @param submitToolApproval the submitToolApproval value to set.
     */
    @Generated
    private SubmitToolApprovalAction(SubmitToolApprovalDetails submitToolApproval) {
        this.submitToolApproval = submitToolApproval;
    }

    /**
     * Get the type property: The object type.
     * 
     * @return the type value.
     */
    @Generated
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Get the submitToolApproval property: The details describing tools that should be approved to continue run.
     * 
     * @return the submitToolApproval value.
     */
    @Generated
    public SubmitToolApprovalDetails getSubmitToolApproval() {
        return this.submitToolApproval;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeJsonField("submit_tool_approval", this.submitToolApproval);
        jsonWriter.writeStringField("type", this.type);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of SubmitToolApprovalAction from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of SubmitToolApprovalAction if the JsonReader was pointing to an instance of it, or null if
     * it was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the SubmitToolApprovalAction.
     */
    @Generated
    public static SubmitToolApprovalAction fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            SubmitToolApprovalDetails submitToolApproval = null;
            String type = "submit_tool_approval";
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("submit_tool_approval".equals(fieldName)) {
                    submitToolApproval = SubmitToolApprovalDetails.fromJson(reader);
                } else if ("type".equals(fieldName)) {
                    type = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            SubmitToolApprovalAction deserializedSubmitToolApprovalAction
                = new SubmitToolApprovalAction(submitToolApproval);
            deserializedSubmitToolApprovalAction.type = type;

            return deserializedSubmitToolApprovalAction;
        });
    }
}
