// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.ai.agents.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * Represents the function data in a streaming run step MCP call.
 */
@Immutable
public final class RunStepDeltaMcpToolCall extends RunStepDeltaToolCall {
    /*
     * The type of the tool call detail item in a streaming run step's details.
     */
    @Generated
    private String type = "mcp";

    /*
     * The index of a response.
     */
    @Generated
    private final int index;

    /*
     * The arguments for MCP call.
     */
    @Generated
    private final String arguments;

    /**
     * Creates an instance of RunStepDeltaMcpToolCall class.
     * 
     * @param index the index value to set.
     * @param id the id value to set.
     * @param arguments the arguments value to set.
     */
    @Generated
    private RunStepDeltaMcpToolCall(int index, String id, String arguments) {
        super(index, id);
        this.arguments = arguments;
    }

    /**
     * Get the type property: The type of the tool call detail item in a streaming run step's details.
     * 
     * @return the type value.
     */
    @Generated
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Get the index property: The index of a response.
     * 
     * @return the index value.
     */
    @Generated
    public int getIndex() {
        return this.index;
    }

    /**
     * Get the arguments property: The arguments for MCP call.
     * 
     * @return the arguments value.
     */
    @Generated
    public String getArguments() {
        return this.arguments;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeIntField("index", getIndex());
        jsonWriter.writeStringField("id", getId());
        jsonWriter.writeIntField("index", this.index);
        jsonWriter.writeStringField("arguments", this.arguments);
        jsonWriter.writeStringField("type", this.type);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of RunStepDeltaMcpToolCall from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of RunStepDeltaMcpToolCall if the JsonReader was pointing to an instance of it, or null if it
     * was pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the RunStepDeltaMcpToolCall.
     */
    @Generated
    public static RunStepDeltaMcpToolCall fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            int index = 0;
            String id = null;
            int index = 0;
            String arguments = null;
            String type = "mcp";
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("id".equals(fieldName)) {
                    id = reader.getString();
                } else if ("index".equals(fieldName)) {
                    index = reader.getInt();
                } else if ("arguments".equals(fieldName)) {
                    arguments = reader.getString();
                } else if ("type".equals(fieldName)) {
                    type = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            RunStepDeltaMcpToolCall deserializedRunStepDeltaMcpToolCall
                = new RunStepDeltaMcpToolCall(index, id, index, arguments);
            deserializedRunStepDeltaMcpToolCall.type = type;

            return deserializedRunStepDeltaMcpToolCall;
        });
    }
}
