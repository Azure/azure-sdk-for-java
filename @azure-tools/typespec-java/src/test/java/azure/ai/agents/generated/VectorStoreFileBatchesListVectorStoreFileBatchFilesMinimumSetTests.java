// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.ai.agents.generated;

import azure.ai.agents.models.VectorStoreChunkingStrategyResponse;
import azure.ai.agents.models.VectorStoreChunkingStrategyResponseType;
import azure.ai.agents.models.VectorStoreFile;
import azure.ai.agents.models.VectorStoreFileError;
import azure.ai.agents.models.VectorStoreFileErrorCode;
import azure.ai.agents.models.VectorStoreFileStatus;
import com.azure.core.http.rest.PagedIterable;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class VectorStoreFileBatchesListVectorStoreFileBatchFilesMinimumSetTests
    extends PersistentAgentsAdministrationClientTestBase {
    @Test
    @Disabled
    public void testVectorStoreFileBatchesListVectorStoreFileBatchFilesMinimumSetTests() {
        // method invocation
        PagedIterable<VectorStoreFile> response = vectorStoreFileBatchesClient
            .listVectorStoreFileBatchFiles("mzaokgzfpjqtp", "huvenmagnsyyewcnqkiejatbx", null, null, null, null, null);

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        VectorStoreFile firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "id"
        Assertions.assertEquals("tobfizstdngykurwvudn", firstItem.getId());
        // verify property "object"
        Assertions.assertEquals("vector_store.file", firstItem.getObject());
        // verify property "usageBytes"
        Assertions.assertEquals(15, firstItem.getUsageBytes());
        // verify property "createdAt"
        Assertions.assertNotNull(firstItem.getCreatedAt());
        // verify property "vectorStoreId"
        Assertions.assertEquals("chknwmchadbafdlyntepetbxdi", firstItem.getVectorStoreId());
        // verify property "status"
        Assertions.assertEquals(VectorStoreFileStatus.IN_PROGRESS, firstItem.getStatus());
        // verify property "lastError"
        VectorStoreFileError firstItemLastError = firstItem.getLastError();
        Assertions.assertNotNull(firstItemLastError);
        Assertions.assertEquals(VectorStoreFileErrorCode.SERVER_ERROR, firstItemLastError.getCode());
        Assertions.assertEquals("trpqnrkwaeywaagppftscftyt", firstItemLastError.getMessage());
        // verify property "chunkingStrategy"
        VectorStoreChunkingStrategyResponse firstItemChunkingStrategy = firstItem.getChunkingStrategy();
        Assertions.assertNotNull(firstItemChunkingStrategy);
        Assertions.assertEquals(
            VectorStoreChunkingStrategyResponseType.fromString("VectorStoreChunkingStrategyResponse"),
            firstItemChunkingStrategy.getType());
    }
}
