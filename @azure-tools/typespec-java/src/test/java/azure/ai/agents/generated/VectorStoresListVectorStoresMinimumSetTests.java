// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.ai.agents.generated;

import azure.ai.agents.models.VectorStore;
import azure.ai.agents.models.VectorStoreFileCount;
import azure.ai.agents.models.VectorStoreStatus;
import com.azure.core.http.rest.PagedIterable;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class VectorStoresListVectorStoresMinimumSetTests extends PersistentAgentsAdministrationClientTestBase {
    @Test
    @Disabled
    public void testVectorStoresListVectorStoresMinimumSetTests() {
        // method invocation
        PagedIterable<VectorStore> response = vectorStoresClient.listVectorStores(null, null, null, null);

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        VectorStore firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "id"
        Assertions.assertEquals("c", firstItem.getId());
        // verify property "object"
        Assertions.assertEquals("vector_store", firstItem.getObject());
        // verify property "createdAt"
        Assertions.assertNotNull(firstItem.getCreatedAt());
        // verify property "name"
        Assertions.assertEquals("lcxofcvp", firstItem.getName());
        // verify property "usageBytes"
        Assertions.assertEquals(7, firstItem.getUsageBytes());
        // verify property "fileCounts"
        VectorStoreFileCount firstItemFileCounts = firstItem.getFileCounts();
        Assertions.assertNotNull(firstItemFileCounts);
        Assertions.assertEquals(24, firstItemFileCounts.getInProgress());
        Assertions.assertEquals(1, firstItemFileCounts.getCompleted());
        Assertions.assertEquals(17, firstItemFileCounts.getFailed());
        Assertions.assertEquals(15, firstItemFileCounts.getCancelled());
        Assertions.assertEquals(14, firstItemFileCounts.getTotal());
        // verify property "status"
        Assertions.assertEquals(VectorStoreStatus.EXPIRED, firstItem.getStatus());
        // verify property "lastActiveAt"
        Assertions.assertNotNull(firstItem.getLastActiveAt());
        // verify property "metadata"
        Assertions.assertNotNull(firstItem.getMetadata());
    }
}
