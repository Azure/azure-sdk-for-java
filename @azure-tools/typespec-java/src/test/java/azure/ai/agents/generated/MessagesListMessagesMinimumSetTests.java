// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.ai.agents.generated;

import azure.ai.agents.models.MessageAttachment;
import azure.ai.agents.models.MessageContent;
import azure.ai.agents.models.MessageIncompleteDetails;
import azure.ai.agents.models.MessageIncompleteDetailsReason;
import azure.ai.agents.models.MessageRole;
import azure.ai.agents.models.MessageStatus;
import azure.ai.agents.models.ThreadMessage;
import com.azure.core.http.rest.PagedIterable;
import com.azure.core.util.BinaryData;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class MessagesListMessagesMinimumSetTests extends PersistentAgentsAdministrationClientTestBase {
    @Test
    @Disabled
    public void testMessagesListMessagesMinimumSetTests() {
        // method invocation
        PagedIterable<ThreadMessage> response = messagesClient.listMessages("ta", null, null, null, null, null);

        // response assertion
        Assertions.assertEquals(200, response.iterableByPage().iterator().next().getStatusCode());
        ThreadMessage firstItem = response.iterator().next();
        Assertions.assertNotNull(firstItem);
        // verify property "id"
        Assertions.assertEquals("pjrudpxtvgzibbmmbgnpyihg", firstItem.getId());
        // verify property "object"
        Assertions.assertEquals("thread.message", firstItem.getObject());
        // verify property "createdAt"
        Assertions.assertNotNull(firstItem.getCreatedAt());
        // verify property "threadId"
        Assertions.assertEquals("fwja", firstItem.getThreadId());
        // verify property "status"
        Assertions.assertEquals(MessageStatus.IN_PROGRESS, firstItem.getStatus());
        // verify property "incompleteDetails"
        MessageIncompleteDetails firstItemIncompleteDetails = firstItem.getIncompleteDetails();
        Assertions.assertNotNull(firstItemIncompleteDetails);
        Assertions.assertEquals(MessageIncompleteDetailsReason.CONTENT_FILTER, firstItemIncompleteDetails.getReason());
        // verify property "completedAt"
        Assertions.assertNotNull(firstItem.getCompletedAt());
        // verify property "incompleteAt"
        Assertions.assertNotNull(firstItem.getIncompleteAt());
        // verify property "role"
        Assertions.assertEquals(MessageRole.USER, firstItem.getRole());
        // verify property "content"
        List<MessageContent> firstItemContent = firstItem.getContent();
        MessageContent firstItemContentFirstItem = firstItemContent.iterator().next();
        Assertions.assertNotNull(firstItemContentFirstItem);
        Assertions.assertEquals("MessageContent", firstItemContentFirstItem.getType());
        // verify property "assistantId"
        Assertions.assertEquals("sbzczksxtxqxuywcfrsjtnz", firstItem.getAssistantId());
        // verify property "runId"
        Assertions.assertEquals("wricczhlycgmhilvkodrbyijwmgdwx", firstItem.getRunId());
        // verify property "attachments"
        List<MessageAttachment> firstItemAttachments = firstItem.getAttachments();
        MessageAttachment firstItemAttachmentsFirstItem = firstItemAttachments.iterator().next();
        Assertions.assertNotNull(firstItemAttachmentsFirstItem);
        List<BinaryData> firstItemAttachmentsFirstItemTools = firstItemAttachmentsFirstItem.getTools();
        // verify property "metadata"
        Assertions.assertNotNull(firstItem.getMetadata());
    }
}
