// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.ai.agents.generated;

import azure.ai.agents.models.AISearchIndexResource;
import azure.ai.agents.models.AzureAISearchQueryType;
import azure.ai.agents.models.AzureAISearchToolResource;
import azure.ai.agents.models.CodeInterpreterToolResource;
import azure.ai.agents.models.FileSearchToolResource;
import azure.ai.agents.models.PersistentAgent;
import azure.ai.agents.models.ToolDefinition;
import azure.ai.agents.models.ToolResources;
import azure.ai.agents.models.VectorStoreConfiguration;
import azure.ai.agents.models.VectorStoreConfigurations;
import azure.ai.agents.models.VectorStoreDataSource;
import azure.ai.agents.models.VectorStoreDataSourceAssetType;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class GetAgentMaximumSetTests extends PersistentAgentsAdministrationClientTestBase {
    @Test
    @Disabled
    public void testGetAgentMaximumSetTests() {
        // method invocation
        PersistentAgent response = persistentAgentsAdministrationClient.getAgent("mqiihylqvissnpkznzupu");

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "id"
        Assertions.assertEquals("gpjlhajkyotlfnns", response.getId());
        // verify property "object"
        Assertions.assertEquals("assistant", response.getObject());
        // verify property "createdAt"
        Assertions.assertNotNull(response.getCreatedAt());
        // verify property "name"
        Assertions.assertEquals("hqiqzkjvuabcv", response.getName());
        // verify property "description"
        Assertions.assertEquals("pvkaayr", response.getDescription());
        // verify property "model"
        Assertions.assertEquals("cydylzijrjrabrcngjoiamni", response.getModel());
        // verify property "instructions"
        Assertions.assertEquals("cbiumszhqewlpiivkb", response.getInstructions());
        // verify property "tools"
        List<ToolDefinition> responseTools = response.getTools();
        ToolDefinition responseToolsFirstItem = responseTools.iterator().next();
        Assertions.assertNotNull(responseToolsFirstItem);
        Assertions.assertEquals("ToolDefinition", responseToolsFirstItem.getType());
        // verify property "toolResources"
        ToolResources responseToolResources = response.getToolResources();
        Assertions.assertNotNull(responseToolResources);
        CodeInterpreterToolResource responseToolResourcesCodeInterpreter = responseToolResources.getCodeInterpreter();
        Assertions.assertNotNull(responseToolResourcesCodeInterpreter);
        List<String> responseToolResourcesCodeInterpreterFileIds = responseToolResourcesCodeInterpreter.getFileIds();
        Assertions.assertEquals("mcbwmhrbuwuepomhmupa", responseToolResourcesCodeInterpreterFileIds.iterator().next());
        List<VectorStoreDataSource> responseToolResourcesCodeInterpreterDataSources
            = responseToolResourcesCodeInterpreter.getDataSources();
        VectorStoreDataSource responseToolResourcesCodeInterpreterDataSourcesFirstItem
            = responseToolResourcesCodeInterpreterDataSources.iterator().next();
        Assertions.assertNotNull(responseToolResourcesCodeInterpreterDataSourcesFirstItem);
        Assertions.assertEquals("ebabvsmrocsomzfimydk",
            responseToolResourcesCodeInterpreterDataSourcesFirstItem.getAssetIdentifier());
        Assertions.assertEquals(VectorStoreDataSourceAssetType.URI_ASSET,
            responseToolResourcesCodeInterpreterDataSourcesFirstItem.getAssetType());
        FileSearchToolResource responseToolResourcesFileSearch = responseToolResources.getFileSearch();
        Assertions.assertNotNull(responseToolResourcesFileSearch);
        List<String> responseToolResourcesFileSearchVectorStoreIds
            = responseToolResourcesFileSearch.getVectorStoreIds();
        Assertions.assertEquals("qrsolbxeyrvpwkmfvxnrwlbptelg",
            responseToolResourcesFileSearchVectorStoreIds.iterator().next());
        List<VectorStoreConfigurations> responseToolResourcesFileSearchVectorStores
            = responseToolResourcesFileSearch.getVectorStores();
        VectorStoreConfigurations responseToolResourcesFileSearchVectorStoresFirstItem
            = responseToolResourcesFileSearchVectorStores.iterator().next();
        Assertions.assertNotNull(responseToolResourcesFileSearchVectorStoresFirstItem);
        Assertions.assertEquals("fcn", responseToolResourcesFileSearchVectorStoresFirstItem.getStoreName());
        VectorStoreConfiguration responseToolResourcesFileSearchVectorStoresFirstItemStoreConfiguration
            = responseToolResourcesFileSearchVectorStoresFirstItem.getStoreConfiguration();
        Assertions.assertNotNull(responseToolResourcesFileSearchVectorStoresFirstItemStoreConfiguration);
        List<VectorStoreDataSource> responseToolResourcesFileSearchVectorStoresFirstItemStoreConfigurationDataSources
            = responseToolResourcesFileSearchVectorStoresFirstItemStoreConfiguration.getDataSources();
        VectorStoreDataSource responseToolResourcesFileSearchVectorStoresFirstItemStoreConfigurationDataSourcesFirstItem
            = responseToolResourcesFileSearchVectorStoresFirstItemStoreConfigurationDataSources.iterator().next();
        Assertions
            .assertNotNull(responseToolResourcesFileSearchVectorStoresFirstItemStoreConfigurationDataSourcesFirstItem);
        Assertions.assertEquals("ebabvsmrocsomzfimydk",
            responseToolResourcesFileSearchVectorStoresFirstItemStoreConfigurationDataSourcesFirstItem
                .getAssetIdentifier());
        Assertions.assertEquals(VectorStoreDataSourceAssetType.URI_ASSET,
            responseToolResourcesFileSearchVectorStoresFirstItemStoreConfigurationDataSourcesFirstItem.getAssetType());
        AzureAISearchToolResource responseToolResourcesAzureAISearch = responseToolResources.getAzureAISearch();
        Assertions.assertNotNull(responseToolResourcesAzureAISearch);
        List<AISearchIndexResource> responseToolResourcesAzureAISearchIndexList
            = responseToolResourcesAzureAISearch.getIndexList();
        AISearchIndexResource responseToolResourcesAzureAISearchIndexListFirstItem
            = responseToolResourcesAzureAISearchIndexList.iterator().next();
        Assertions.assertNotNull(responseToolResourcesAzureAISearchIndexListFirstItem);
        Assertions.assertEquals("givdxrraw",
            responseToolResourcesAzureAISearchIndexListFirstItem.getIndexConnectionId());
        Assertions.assertEquals("khqfbzuyzcdpf", responseToolResourcesAzureAISearchIndexListFirstItem.getIndexName());
        Assertions.assertEquals(AzureAISearchQueryType.SIMPLE,
            responseToolResourcesAzureAISearchIndexListFirstItem.getQueryType());
        Assertions.assertEquals(6, responseToolResourcesAzureAISearchIndexListFirstItem.getTopK());
        Assertions.assertEquals("duddvlojptamyxdavaqbw",
            responseToolResourcesAzureAISearchIndexListFirstItem.getFilter());
        Assertions.assertEquals("xnoschwz", responseToolResourcesAzureAISearchIndexListFirstItem.getIndexAssetId());
        // verify property "temperature"
        Assertions.assertEquals(17.0D, response.getTemperature());
        // verify property "topP"
        Assertions.assertEquals(28.0D, response.getTopP());
        // verify property "metadata"
        Assertions.assertNotNull(response.getMetadata());
    }
}
