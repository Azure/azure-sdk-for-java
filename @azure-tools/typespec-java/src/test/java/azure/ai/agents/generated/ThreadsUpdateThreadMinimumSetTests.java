// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.ai.agents.generated;

import azure.ai.agents.models.PersistentAgentThread;
import azure.ai.agents.models.ToolResources;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

@Disabled
public final class ThreadsUpdateThreadMinimumSetTests extends PersistentAgentsAdministrationClientTestBase {
    @Test
    @Disabled
    public void testThreadsUpdateThreadMinimumSetTests() {
        // method invocation
        PersistentAgentThread response = threadsClient.updateThread("mqafbflbw", null, mapOf());

        // response assertion
        Assertions.assertNotNull(response);
        // verify property "id"
        Assertions.assertEquals("rcifhnxeaeyxdtz", response.getId());
        // verify property "object"
        Assertions.assertEquals("thread", response.getObject());
        // verify property "createdAt"
        Assertions.assertNotNull(response.getCreatedAt());
        // verify property "toolResources"
        ToolResources responseToolResources = response.getToolResources();
        Assertions.assertNotNull(responseToolResources);
        // verify property "metadata"
        Assertions.assertNotNull(response.getMetadata());
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
