// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.ai.agents.generated;

// The Java test files under 'generated' package are generated for your reference.
// If you wish to modify these files, please copy them out of the 'generated' package, and modify there.
// See https://aka.ms/azsdk/dpg/java/tests for guide on adding a test.

import azure.ai.agents.FilesClient;
import azure.ai.agents.MessagesClient;
import azure.ai.agents.PersistentAgentsAdministrationClient;
import azure.ai.agents.PersistentAgentsAdministrationClientBuilder;
import azure.ai.agents.RunStepsClient;
import azure.ai.agents.RunsClient;
import azure.ai.agents.ThreadsClient;
import azure.ai.agents.VectorStoreFileBatchesClient;
import azure.ai.agents.VectorStoreFilesClient;
import azure.ai.agents.VectorStoresClient;
import com.azure.core.http.policy.HttpLogDetailLevel;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.test.TestMode;
import com.azure.core.test.TestProxyTestBase;
import com.azure.core.test.utils.MockTokenCredential;
import com.azure.core.util.Configuration;
import com.azure.identity.DefaultAzureCredentialBuilder;

class PersistentAgentsAdministrationClientTestBase extends TestProxyTestBase {
    protected PersistentAgentsAdministrationClient persistentAgentsAdministrationClient;

    protected ThreadsClient threadsClient;

    protected MessagesClient messagesClient;

    protected RunsClient runsClient;

    protected RunStepsClient runStepsClient;

    protected FilesClient filesClient;

    protected VectorStoresClient vectorStoresClient;

    protected VectorStoreFilesClient vectorStoreFilesClient;

    protected VectorStoreFileBatchesClient vectorStoreFileBatchesClient;

    @Override
    protected void beforeTest() {
        PersistentAgentsAdministrationClientBuilder persistentAgentsAdministrationClientbuilder
            = new PersistentAgentsAdministrationClientBuilder()
                .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
                .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            persistentAgentsAdministrationClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            persistentAgentsAdministrationClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            persistentAgentsAdministrationClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        persistentAgentsAdministrationClient = persistentAgentsAdministrationClientbuilder.buildClient();

        PersistentAgentsAdministrationClientBuilder threadsClientbuilder
            = new PersistentAgentsAdministrationClientBuilder()
                .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
                .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            threadsClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            threadsClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            threadsClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        threadsClient = threadsClientbuilder.buildThreadsClient();

        PersistentAgentsAdministrationClientBuilder messagesClientbuilder
            = new PersistentAgentsAdministrationClientBuilder()
                .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
                .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            messagesClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            messagesClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            messagesClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        messagesClient = messagesClientbuilder.buildMessagesClient();

        PersistentAgentsAdministrationClientBuilder runsClientbuilder
            = new PersistentAgentsAdministrationClientBuilder()
                .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
                .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            runsClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            runsClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            runsClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        runsClient = runsClientbuilder.buildRunsClient();

        PersistentAgentsAdministrationClientBuilder runStepsClientbuilder
            = new PersistentAgentsAdministrationClientBuilder()
                .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
                .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            runStepsClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            runStepsClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            runStepsClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        runStepsClient = runStepsClientbuilder.buildRunStepsClient();

        PersistentAgentsAdministrationClientBuilder filesClientbuilder
            = new PersistentAgentsAdministrationClientBuilder()
                .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
                .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            filesClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            filesClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            filesClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        filesClient = filesClientbuilder.buildFilesClient();

        PersistentAgentsAdministrationClientBuilder vectorStoresClientbuilder
            = new PersistentAgentsAdministrationClientBuilder()
                .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
                .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            vectorStoresClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            vectorStoresClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            vectorStoresClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        vectorStoresClient = vectorStoresClientbuilder.buildVectorStoresClient();

        PersistentAgentsAdministrationClientBuilder vectorStoreFilesClientbuilder
            = new PersistentAgentsAdministrationClientBuilder()
                .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
                .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            vectorStoreFilesClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            vectorStoreFilesClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            vectorStoreFilesClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        vectorStoreFilesClient = vectorStoreFilesClientbuilder.buildVectorStoreFilesClient();

        PersistentAgentsAdministrationClientBuilder vectorStoreFileBatchesClientbuilder
            = new PersistentAgentsAdministrationClientBuilder()
                .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
                .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
                .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            vectorStoreFileBatchesClientbuilder.credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            vectorStoreFileBatchesClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            vectorStoreFileBatchesClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        vectorStoreFileBatchesClient = vectorStoreFileBatchesClientbuilder.buildVectorStoreFileBatchesClient();

    }
}
