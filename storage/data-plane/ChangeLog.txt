2019.04.30 Version 11.1.1
* Upgraded to version 2.1.1 of the autorest-clientime which upgrades to a more secure version of jackson and fixes a NPE on unkown host errors.

2019.03.22 Version 11.0.0
* Upgraded to version 2.1.0 of the autorest-clientruntime which includes several important fixes to mitigate a commonly-seen "Connection reset by peer" error and other similar bugs.
* Support for 2018-11-09 REST version. Please see our REST API documentation and blogs for information about the related added features.
* Added appendBlockFromURL method. A block may be created with another blob as its source.
* Added uploadPagesFromURL method. Pages may be written to with another blob as their source.
* Fixed a bug that would set an invalid range header when downloading an empty blob.
* Modified the LoggingFactory to redact SAS signatures on outgoing requests.
* HTTPGetterInfo was made an internal type as it is an internal implementation detail.
* Removed DEFAULT and NONE static variables. Empty constructors should be used instead. DEFAULT static values were error prone and unsafe to use because although the field was final, the objects were mutable, so it was possible the value could be changed accidentally and alter the behavior of the program.
* Optimized the TransferManager download to file method to skip the initial HEAD request.
* Added an option to configure that maximum size data that will be uploaded in a single shot via the TransferManager.
* Added request Http Method, URL, and headers to logging messages.
* Changed *ListingDetails to *ListDetails. These name changes are to mitigate conflicts with v8, allowing for side-by-side loading of different versions, which may help with upgrading.
* Removed the extra quotes around etags in some responses so they are consistently now consistently formatted.
* Moved the Generated*** types into the blob package to avoid conflicts with generated types from other services (i.e. queues and files)
* Changed the logger name to be the name of class that uses it, which is a more conventional practice
* Support added for SAS tokens to scope to blob snapshot.
* Added getUserDelegationKey to ServiceURL, the result of which can be used to generate a user-delegation SAS.
* Made the max results field on listing responses Integer instead of int as it is an optional field only returned when specified in the request.

2019.02.15 Version 10.5.0
* Added uploadFromNonReplayableFlowable to support uploading arbitrary data sources (like network streams) to a block blob.

2019.01.11 Version 10.4.0
* Fixed a bug that caused errors when java.io.tempdir has no trailing separator.
* Upgrade autorest-clientruntime dependency to include some bug fixes.

2018.11.19 Version 10.3.0
* Added support for SLF4J.
* Included default logging to log warnings and errors to the temp directory by default.
* Fixed a bug in hierarchical listings that would sometimes return incomplete results.
* Included the whole HTTP Request in log statements (except for sensitive authorization information, which is redacted).
* Fixed a bug that made the request property on the response object always null.

2018.10.29 Version 10.2.0
* Added overloads which only accept the required parameters.
* Added CopyFromURL, which will do a synchronous server-side copy, meaning the service will not return an HTTP response until it has completed the copy.
* Added support for IProgressReceiver in TransferManager operations. This parameter was previously ignored but is now supported.
* Removed internal dependency on javafx to be compatible with openjdk.
* Fixed a bug that would cause downloading large files with the TransferManager to fail.
* Fixed a bug in BlobURL.download() logic for setting up reliable download. This had the potential to download the wrong range when a download stream was retried.

2018.09.11 Version 10.1.0
* Interfaces for helper types updated to be more consistent throughout the library. All types, with the exception of the options for pipeline factories, use a fluent pattern.
* Removed RetryReader type as it's functionality was moved to be built into the DownloadResponse. RetryReaderOptions are now named ReliableDownloadOptions.
* Restructured the access conditions to be more logically adhere to their respective functions.
* Added support for context parameter on each api to allow communication with the pipeline from the application level

2018.08.22 Version 10.0.4-rc
* Support for the 2017-11-09 REST version. Please see our REST api documentation and blogs for information about the related added features.
* Support for 2018-03-28 REST version. Please see our REST api documentation and blogs for information about the related added features.
* Support for the getAccountInfo api on ServiceURL, ContainerURL, and BlobURL.
* Added support for setting service properties related to static websites.
* Changed BlobURL.startCopy sourceAccessConditions parameter to be HTTPAccessConditions as lease is not actually supported.
* Added methods to TransferManager for conveniently downloading a blob to a file.
* UploadFromFile now takes an AsynchronousFileChannel.
* UploadByteBuffersToBlockBlob, UploadByteBufferToBlockBlob, and DownloadToBuffer have been removed.
* IPRange fields are now strings.
* Fixed retry policy.
* Fixed logging policy.

2018.08.08 Version 10.0.3-Preview
* Resolved dependency issues

2018.08.07 Version 10.0.2-Preview
* Support for 2017-07-29 REST version. Please see our REST api documentation and blogs for information about the related added features.
* Support for setting a block blob's tier.
* Added support for soft delete feature. If a delete retention policy is enabled through the set service properties API, then blobs or snapshots can be deleted softly and retained for a specified number of days, before being permanently removed by garbage collection.
* Changed BlobListingDetails constructor to take a flag to include deleted blobs.
* Restructured the blob and container listing responses.
* BlockBlobURL.MAX_PUT_BLOCK_BYTES renamed to BlockBlobURL.MAX_STAGE_BLOCK_BYTES.
* Changed the accessConditions parameter to be HTTPAccessConditions instead of BlobAccessConditions, since only http access conditions are supported.

2018.07.03 Version 10.0.1-Preview
* Added the RetryReader class to allow for more reliable streaming on large downloads. This is now the return type of blobURL.download
* Fixed a bug that caused generation of signatures to fail at high levels of parallelism.
* Created the StorageException type to give easy access to the ErrorCode, StatusCode, and Message as available for unsuccessful responses.
* Added the StorageErrorCode type for checking against error codes returned by the service.
* Changed the AppendBlobAccessConditions field types to be Long instead of Int.
* Upgraded Netty dependency to allow uploading memory mapped files with https.
* Upgraded the autorest runtime dependency to fix a dependency bug in their package.
* Changed RequestRetryOptions maxTries and tryTimeout fields to be Integer instead of int. 0 is no longer allowed.
* Changed CommonRestResponse.lastModifiedTime to be lastModified.
* Added statusCode property to CommonRestResponse.
* Change dateProperty to be date on all generated types.
* Fixed a bug that prevented proper reset of body stream upon retry.
* Updated the defaults for RequestRetryOptions.

2018.04.27 Version 10.0.0-preview
* Initial Release. Please see the README and wiki for information on the new design.
