/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.sql.implementation;

import com.microsoft.azure.management.sql.DatabaseSecureConnectionAccess;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.management.sql.SqlSubResource;

/**
 * Represents an Azure SQL Database secure connection policy.
 */
@JsonFlatten
public class DatabaseSecureConnectionPolicyInner extends SqlSubResource {
    /**
     * The Data Security Proxy DNS name.
     */
    @JsonProperty(value = "properties.proxyDnsName", access = JsonProperty.Access.WRITE_ONLY)
    private String proxyDnsName;

    /**
     * The Data Security Proxy port number.
     */
    @JsonProperty(value = "properties.proxyPort", access = JsonProperty.Access.WRITE_ONLY)
    private String proxyPort;

    /**
     * Whether or not block direct access is applied. Possible values include:
     * 'Required', 'Optional'.
     */
    @JsonProperty(value = "properties.securityEnabledAccess")
    private DatabaseSecureConnectionAccess securityEnabledAccess;

    /**
     * Get the proxyDnsName value.
     *
     * @return the proxyDnsName value
     */
    public String proxyDnsName() {
        return this.proxyDnsName;
    }

    /**
     * Get the proxyPort value.
     *
     * @return the proxyPort value
     */
    public String proxyPort() {
        return this.proxyPort;
    }

    /**
     * Get the securityEnabledAccess value.
     *
     * @return the securityEnabledAccess value
     */
    public DatabaseSecureConnectionAccess securityEnabledAccess() {
        return this.securityEnabledAccess;
    }

    /**
     * Set the securityEnabledAccess value.
     *
     * @param securityEnabledAccess the securityEnabledAccess value to set
     * @return the DatabaseSecureConnectionPolicyInner object itself.
     */
    public DatabaseSecureConnectionPolicyInner withSecurityEnabledAccess(DatabaseSecureConnectionAccess securityEnabledAccess) {
        this.securityEnabledAccess = securityEnabledAccess;
        return this;
    }

}
