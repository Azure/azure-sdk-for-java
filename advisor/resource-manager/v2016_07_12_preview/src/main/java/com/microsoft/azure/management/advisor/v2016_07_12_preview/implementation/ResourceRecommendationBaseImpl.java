/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.advisor.v2016_07_12_preview.implementation;

import com.microsoft.azure.management.advisor.v2016_07_12_preview.ResourceRecommendationBase;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;
import com.microsoft.azure.management.advisor.v2016_07_12_preview.Category;
import com.microsoft.azure.management.advisor.v2016_07_12_preview.Impact;
import org.joda.time.DateTime;
import java.util.Map;
import com.microsoft.azure.management.advisor.v2016_07_12_preview.Risk;
import com.microsoft.azure.management.advisor.v2016_07_12_preview.ShortDescription;
import java.util.List;
import java.util.UUID;

class ResourceRecommendationBaseImpl extends IndexableRefreshableWrapperImpl<ResourceRecommendationBase, ResourceRecommendationBaseInner> implements ResourceRecommendationBase {
    private String resourceUri;
    private String recommendationId;
    private final AdvisorManager manager;

    ResourceRecommendationBaseImpl(ResourceRecommendationBaseInner inner,  AdvisorManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.recommendationId = IdParsingUtils.getValueFromIdByName(inner.id(), "recommendations");
        this.resourceUri = IdParsingUtils.getValueFromIdByPosition(inner.id(), 0);
    }

    @Override
    public AdvisorManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<ResourceRecommendationBaseInner> getInnerAsync() {
        RecommendationsInner client = this.manager().inner().recommendations();
        return client.getAsync(this.resourceUri, this.recommendationId);
    }



    @Override
    public Category category() {
        return this.inner().category();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public Impact impact() {
        return this.inner().impact();
    }

    @Override
    public String impactedField() {
        return this.inner().impactedField();
    }

    @Override
    public String impactedValue() {
        return this.inner().impactedValue();
    }

    @Override
    public DateTime lastUpdated() {
        return this.inner().lastUpdated();
    }

    @Override
    public Map<String, Object> metadata() {
        return this.inner().metadata();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String recommendationTypeId() {
        return this.inner().recommendationTypeId();
    }

    @Override
    public Risk risk() {
        return this.inner().risk();
    }

    @Override
    public ShortDescription shortDescription() {
        return this.inner().shortDescription();
    }

    @Override
    public List<UUID> suppressionIds() {
        return this.inner().suppressionIds();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

}
