/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.machinelearningservices.v2019_05_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.machinelearningservices.v2019_05_01.implementation.ComputeResourceInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.machinelearningservices.v2019_05_01.implementation.MachineLearningServicesManager;
import org.joda.time.Period;
import java.util.Map;

/**
 * Type representing ComputeResource.
 */
public interface ComputeResource extends HasInner<ComputeResourceInner>, Indexable, Refreshable<ComputeResource>, Updatable<ComputeResource.Update>, HasManager<MachineLearningServicesManager> {
    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the identity value.
     */
    Identity identity();

    /**
     * @return the location value.
     */
    String location();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the properties value.
     */
    Compute properties();

    /**
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the ComputeResource definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithWorkspace, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of ComputeResource definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a ComputeResource definition.
         */
        interface Blank extends WithWorkspace {
        }

        /**
         * The stage of the computeresource definition allowing to specify Workspace.
         */
        interface WithWorkspace {
           /**
            * Specifies resourceGroupName, workspaceName.
            * @param resourceGroupName Name of the resource group in which workspace is located
            * @param workspaceName Name of Azure Machine Learning workspace
            * @return the next definition stage
            */
            WithCreate withExistingWorkspace(String resourceGroupName, String workspaceName);
        }

        /**
         * The stage of the computeresource definition allowing to specify Location.
         */
        interface WithLocation {
            /**
             * Specifies location.
             * @param location Specifies the location of the resource
             * @return the next definition stage
             */
            WithCreate withLocation(String location);
        }

        /**
         * The stage of the computeresource definition allowing to specify Properties.
         */
        interface WithProperties {
            /**
             * Specifies properties.
             * @param properties Compute properties
             * @return the next definition stage
             */
            WithCreate withProperties(Compute properties);
        }

        /**
         * The stage of the computeresource definition allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags Contains resource tags defined as key/value pairs
             * @return the next definition stage
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<ComputeResource>, DefinitionStages.WithLocation, DefinitionStages.WithProperties, DefinitionStages.WithTags {
        }
    }
    /**
     * The template for a ComputeResource update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<ComputeResource>, UpdateStages.WithScaleSettings {
    }

    /**
     * Grouping of ComputeResource update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the computeresource update allowing to specify ScaleSettings.
         */
        interface WithScaleSettings {
            /**
             * Specifies scaleSettings.
             * @param scaleSettings Scale settings. Desired scale settings for the amlCompute
             * @return the next update stage
             */
            Update withScaleSettings(ScaleSettings scaleSettings);
        }

    }
}
