/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.workloadmonitor.v2018_08_31_preview;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Criteria for monitor configuration.
 */
public class MonitorCriteria {
    /**
     * Target health state of the criteria. Possible values include: 'Error',
     * 'Warning', 'Success', 'Unknown', 'Uninitialized'.
     */
    @JsonProperty(value = "healthState", access = JsonProperty.Access.WRITE_ONLY)
    private HealthState healthState;

    /**
     * Treshold value for this criteria.
     */
    @JsonProperty(value = "threshold", access = JsonProperty.Access.WRITE_ONLY)
    private Double threshold;

    /**
     * Comparison enum on theshold of this criteria. Possible values include:
     * 'Equals', 'GreaterThan', 'GreaterThanOrEqual', 'LessThan',
     * 'LessThanOrEqual', 'NotEquals'.
     */
    @JsonProperty(value = "comparisonOperator", access = JsonProperty.Access.WRITE_ONLY)
    private Operator comparisonOperator;

    /**
     * Get target health state of the criteria. Possible values include: 'Error', 'Warning', 'Success', 'Unknown', 'Uninitialized'.
     *
     * @return the healthState value
     */
    public HealthState healthState() {
        return this.healthState;
    }

    /**
     * Get treshold value for this criteria.
     *
     * @return the threshold value
     */
    public Double threshold() {
        return this.threshold;
    }

    /**
     * Get comparison enum on theshold of this criteria. Possible values include: 'Equals', 'GreaterThan', 'GreaterThanOrEqual', 'LessThan', 'LessThanOrEqual', 'NotEquals'.
     *
     * @return the comparisonOperator value
     */
    public Operator comparisonOperator() {
        return this.comparisonOperator;
    }

}
