/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.hdinsight.job.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The SparkStatement model.
 */
public class SparkStatement {
    /**
     * The id property.
     */
    @JsonProperty(value = "id")
    private Integer id;

    /**
     * The code property.
     */
    @JsonProperty(value = "code")
    private String code;

    /**
     * The state property.
     */
    @JsonProperty(value = "state")
    private String state;

    /**
     * The output property.
     */
    @JsonProperty(value = "output")
    private SparkStatementOutput output;

    /**
     * The progress property.
     */
    @JsonProperty(value = "progress")
    private Double progress;

    /**
     * Get the id value.
     *
     * @return the id value
     */
    public Integer id() {
        return this.id;
    }

    /**
     * Set the id value.
     *
     * @param id the id value to set
     * @return the SparkStatement object itself.
     */
    public SparkStatement withId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Get the code value.
     *
     * @return the code value
     */
    public String code() {
        return this.code;
    }

    /**
     * Set the code value.
     *
     * @param code the code value to set
     * @return the SparkStatement object itself.
     */
    public SparkStatement withCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Get the state value.
     *
     * @return the state value
     */
    public String state() {
        return this.state;
    }

    /**
     * Set the state value.
     *
     * @param state the state value to set
     * @return the SparkStatement object itself.
     */
    public SparkStatement withState(String state) {
        this.state = state;
        return this;
    }

    /**
     * Get the output value.
     *
     * @return the output value
     */
    public SparkStatementOutput output() {
        return this.output;
    }

    /**
     * Set the output value.
     *
     * @param output the output value to set
     * @return the SparkStatement object itself.
     */
    public SparkStatement withOutput(SparkStatementOutput output) {
        this.output = output;
        return this;
    }

    /**
     * Get the progress value.
     *
     * @return the progress value
     */
    public Double progress() {
        return this.progress;
    }

    /**
     * Set the progress value.
     *
     * @param progress the progress value to set
     * @return the SparkStatement object itself.
     */
    public SparkStatement withProgress(Double progress) {
        this.progress = progress;
        return this;
    }

}
