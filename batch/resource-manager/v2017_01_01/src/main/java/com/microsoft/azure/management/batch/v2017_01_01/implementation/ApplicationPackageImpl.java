/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.batch.v2017_01_01.implementation;

import com.microsoft.azure.management.batch.v2017_01_01.ApplicationPackage;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;
import org.joda.time.DateTime;
import com.microsoft.azure.management.batch.v2017_01_01.PackageState;

class ApplicationPackageImpl extends IndexableRefreshableWrapperImpl<ApplicationPackage, ApplicationPackageInner> implements ApplicationPackage {
    private final BatchManager manager;
    private String resourceGroupName;
    private String accountName;
    private String applicationId;
    private String version;

    ApplicationPackageImpl(ApplicationPackageInner inner,  BatchManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.accountName = IdParsingUtils.getValueFromIdByName(inner.id(), "batchAccounts");
        this.applicationId = IdParsingUtils.getValueFromIdByName(inner.id(), "applications");
        this.version = IdParsingUtils.getValueFromIdByName(inner.id(), "versions");
    }

    @Override
    public BatchManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<ApplicationPackageInner> getInnerAsync() {
        ApplicationPackagesInner client = this.manager().inner().applicationPackages();
        return client.getAsync(this.resourceGroupName, this.accountName, this.applicationId, this.version);
    }



    @Override
    public String format() {
        return this.inner().format();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public DateTime lastActivationTime() {
        return this.inner().lastActivationTime();
    }

    @Override
    public PackageState state() {
        return this.inner().state();
    }

    @Override
    public String storageUrl() {
        return this.inner().storageUrl();
    }

    @Override
    public DateTime storageUrlExpiry() {
        return this.inner().storageUrlExpiry();
    }

    @Override
    public String version() {
        return this.inner().version();
    }

}
