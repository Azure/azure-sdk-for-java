/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.devtestlab.v2015_05_21_preview;

import java.util.Collection;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.microsoft.rest.ExpandableStringEnum;

/**
 * Defines values for SubscriptionNotificationState.
 */
public final class SubscriptionNotificationState extends ExpandableStringEnum<SubscriptionNotificationState> {
    /** Static value NotDefined for SubscriptionNotificationState. */
    public static final SubscriptionNotificationState NOT_DEFINED = fromString("NotDefined");

    /** Static value Registered for SubscriptionNotificationState. */
    public static final SubscriptionNotificationState REGISTERED = fromString("Registered");

    /** Static value Unregistered for SubscriptionNotificationState. */
    public static final SubscriptionNotificationState UNREGISTERED = fromString("Unregistered");

    /** Static value Warned for SubscriptionNotificationState. */
    public static final SubscriptionNotificationState WARNED = fromString("Warned");

    /** Static value Suspended for SubscriptionNotificationState. */
    public static final SubscriptionNotificationState SUSPENDED = fromString("Suspended");

    /** Static value Deleted for SubscriptionNotificationState. */
    public static final SubscriptionNotificationState DELETED = fromString("Deleted");

    /**
     * Creates or finds a SubscriptionNotificationState from its string representation.
     * @param name a name to look for
     * @return the corresponding SubscriptionNotificationState
     */
    @JsonCreator
    public static SubscriptionNotificationState fromString(String name) {
        return fromString(name, SubscriptionNotificationState.class);
    }

    /**
     * @return known SubscriptionNotificationState values
     */
    public static Collection<SubscriptionNotificationState> values() {
        return values(SubscriptionNotificationState.class);
    }
}
