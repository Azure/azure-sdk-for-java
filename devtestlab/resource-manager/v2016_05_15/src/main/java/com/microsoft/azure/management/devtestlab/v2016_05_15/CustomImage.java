/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.devtestlab.v2016_05_15;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.devtestlab.v2016_05_15.implementation.CustomImageInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.devtestlab.v2016_05_15.implementation.DevTestLabManager;
import java.util.Map;
import org.joda.time.DateTime;

/**
 * Type representing CustomImage.
 */
public interface CustomImage extends HasInner<CustomImageInner>, Indexable, Refreshable<CustomImage>, Updatable<CustomImage.Update>, HasManager<DevTestLabManager> {
    /**
     * @return the author value.
     */
    String author();

    /**
     * @return the creationDate value.
     */
    DateTime creationDate();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the location value.
     */
    String location();

    /**
     * @return the managedImageId value.
     */
    String managedImageId();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * @return the type value.
     */
    String type();

    /**
     * @return the uniqueIdentifier value.
     */
    String uniqueIdentifier();

    /**
     * @return the vhd value.
     */
    CustomImagePropertiesCustom vhd();

    /**
     * @return the vm value.
     */
    CustomImagePropertiesFromVm vm();

    /**
     * The entirety of the CustomImage definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithLab, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of CustomImage definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a CustomImage definition.
         */
        interface Blank extends WithLab {
        }

        /**
         * The stage of the customimage definition allowing to specify Lab.
         */
        interface WithLab {
           /**
            * Specifies resourceGroupName, labName.
            * @param resourceGroupName The name of the resource group
            * @param labName The name of the lab
            * @return the next definition stage
            */
            WithCreate withExistingLab(String resourceGroupName, String labName);
        }

        /**
         * The stage of the customimage definition allowing to specify Author.
         */
        interface WithAuthor {
            /**
             * Specifies author.
             * @param author The author of the custom image
             * @return the next definition stage
             */
            WithCreate withAuthor(String author);
        }

        /**
         * The stage of the customimage definition allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description The description of the custom image
             * @return the next definition stage
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the customimage definition allowing to specify Location.
         */
        interface WithLocation {
            /**
             * Specifies location.
             * @param location The location of the resource
             * @return the next definition stage
             */
            WithCreate withLocation(String location);
        }

        /**
         * The stage of the customimage definition allowing to specify ManagedImageId.
         */
        interface WithManagedImageId {
            /**
             * Specifies managedImageId.
             * @param managedImageId The Managed Image Id backing the custom image
             * @return the next definition stage
             */
            WithCreate withManagedImageId(String managedImageId);
        }

        /**
         * The stage of the customimage definition allowing to specify ProvisioningState.
         */
        interface WithProvisioningState {
            /**
             * Specifies provisioningState.
             * @param provisioningState The provisioning status of the resource
             * @return the next definition stage
             */
            WithCreate withProvisioningState(String provisioningState);
        }

        /**
         * The stage of the customimage definition allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags The tags of the resource
             * @return the next definition stage
             */
            WithCreate withTags(Map<String, String> tags);
        }

        /**
         * The stage of the customimage definition allowing to specify UniqueIdentifier.
         */
        interface WithUniqueIdentifier {
            /**
             * Specifies uniqueIdentifier.
             * @param uniqueIdentifier The unique immutable identifier of a resource (Guid)
             * @return the next definition stage
             */
            WithCreate withUniqueIdentifier(String uniqueIdentifier);
        }

        /**
         * The stage of the customimage definition allowing to specify Vhd.
         */
        interface WithVhd {
            /**
             * Specifies vhd.
             * @param vhd The VHD from which the image is to be created
             * @return the next definition stage
             */
            WithCreate withVhd(CustomImagePropertiesCustom vhd);
        }

        /**
         * The stage of the customimage definition allowing to specify Vm.
         */
        interface WithVm {
            /**
             * Specifies vm.
             * @param vm The virtual machine from which the image is to be created
             * @return the next definition stage
             */
            WithCreate withVm(CustomImagePropertiesFromVm vm);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<CustomImage>, DefinitionStages.WithAuthor, DefinitionStages.WithDescription, DefinitionStages.WithLocation, DefinitionStages.WithManagedImageId, DefinitionStages.WithProvisioningState, DefinitionStages.WithTags, DefinitionStages.WithUniqueIdentifier, DefinitionStages.WithVhd, DefinitionStages.WithVm {
        }
    }
    /**
     * The template for a CustomImage update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<CustomImage>, UpdateStages.WithAuthor, UpdateStages.WithDescription, UpdateStages.WithLocation, UpdateStages.WithManagedImageId, UpdateStages.WithProvisioningState, UpdateStages.WithTags, UpdateStages.WithUniqueIdentifier, UpdateStages.WithVhd, UpdateStages.WithVm {
    }

    /**
     * Grouping of CustomImage update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the customimage update allowing to specify Author.
         */
        interface WithAuthor {
            /**
             * Specifies author.
             * @param author The author of the custom image
             * @return the next update stage
             */
            Update withAuthor(String author);
        }

        /**
         * The stage of the customimage update allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description The description of the custom image
             * @return the next update stage
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the customimage update allowing to specify Location.
         */
        interface WithLocation {
            /**
             * Specifies location.
             * @param location The location of the resource
             * @return the next update stage
             */
            Update withLocation(String location);
        }

        /**
         * The stage of the customimage update allowing to specify ManagedImageId.
         */
        interface WithManagedImageId {
            /**
             * Specifies managedImageId.
             * @param managedImageId The Managed Image Id backing the custom image
             * @return the next update stage
             */
            Update withManagedImageId(String managedImageId);
        }

        /**
         * The stage of the customimage update allowing to specify ProvisioningState.
         */
        interface WithProvisioningState {
            /**
             * Specifies provisioningState.
             * @param provisioningState The provisioning status of the resource
             * @return the next update stage
             */
            Update withProvisioningState(String provisioningState);
        }

        /**
         * The stage of the customimage update allowing to specify Tags.
         */
        interface WithTags {
            /**
             * Specifies tags.
             * @param tags The tags of the resource
             * @return the next update stage
             */
            Update withTags(Map<String, String> tags);
        }

        /**
         * The stage of the customimage update allowing to specify UniqueIdentifier.
         */
        interface WithUniqueIdentifier {
            /**
             * Specifies uniqueIdentifier.
             * @param uniqueIdentifier The unique immutable identifier of a resource (Guid)
             * @return the next update stage
             */
            Update withUniqueIdentifier(String uniqueIdentifier);
        }

        /**
         * The stage of the customimage update allowing to specify Vhd.
         */
        interface WithVhd {
            /**
             * Specifies vhd.
             * @param vhd The VHD from which the image is to be created
             * @return the next update stage
             */
            Update withVhd(CustomImagePropertiesCustom vhd);
        }

        /**
         * The stage of the customimage update allowing to specify Vm.
         */
        interface WithVm {
            /**
             * Specifies vm.
             * @param vm The virtual machine from which the image is to be created
             * @return the next update stage
             */
            Update withVm(CustomImagePropertiesFromVm vm);
        }

    }
}
