/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.machinelearningcompute.v2017_08_01_preview.implementation;

import com.microsoft.azure.management.machinelearningcompute.v2017_08_01_preview.StorageAccountCredentials;
import com.microsoft.azure.management.machinelearningcompute.v2017_08_01_preview.ContainerRegistryCredentials;
import com.microsoft.azure.management.machinelearningcompute.v2017_08_01_preview.ContainerServiceCredentials;
import com.microsoft.azure.management.machinelearningcompute.v2017_08_01_preview.AppInsightsCredentials;
import com.microsoft.azure.management.machinelearningcompute.v2017_08_01_preview.ServiceAuthConfiguration;
import com.microsoft.azure.management.machinelearningcompute.v2017_08_01_preview.SslConfiguration;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Credentials to resources in the cluster.
 */
public class OperationalizationClusterCredentialsInner {
    /**
     * Credentials for the Storage Account.
     */
    @JsonProperty(value = "storageAccount")
    private StorageAccountCredentials storageAccount;

    /**
     * Credentials for Azure Container Registry.
     */
    @JsonProperty(value = "containerRegistry")
    private ContainerRegistryCredentials containerRegistry;

    /**
     * Credentials for Azure Container Service.
     */
    @JsonProperty(value = "containerService")
    private ContainerServiceCredentials containerService;

    /**
     * Credentials for Azure AppInsights.
     */
    @JsonProperty(value = "appInsights")
    private AppInsightsCredentials appInsights;

    /**
     * Global authorization keys for all user services deployed in cluster.
     * These are used if the service does not have auth keys.
     */
    @JsonProperty(value = "serviceAuthConfiguration")
    private ServiceAuthConfiguration serviceAuthConfiguration;

    /**
     * The SSL configuration for the services.
     */
    @JsonProperty(value = "sslConfiguration")
    private SslConfiguration sslConfiguration;

    /**
     * Get credentials for the Storage Account.
     *
     * @return the storageAccount value
     */
    public StorageAccountCredentials storageAccount() {
        return this.storageAccount;
    }

    /**
     * Set credentials for the Storage Account.
     *
     * @param storageAccount the storageAccount value to set
     * @return the OperationalizationClusterCredentialsInner object itself.
     */
    public OperationalizationClusterCredentialsInner withStorageAccount(StorageAccountCredentials storageAccount) {
        this.storageAccount = storageAccount;
        return this;
    }

    /**
     * Get credentials for Azure Container Registry.
     *
     * @return the containerRegistry value
     */
    public ContainerRegistryCredentials containerRegistry() {
        return this.containerRegistry;
    }

    /**
     * Set credentials for Azure Container Registry.
     *
     * @param containerRegistry the containerRegistry value to set
     * @return the OperationalizationClusterCredentialsInner object itself.
     */
    public OperationalizationClusterCredentialsInner withContainerRegistry(ContainerRegistryCredentials containerRegistry) {
        this.containerRegistry = containerRegistry;
        return this;
    }

    /**
     * Get credentials for Azure Container Service.
     *
     * @return the containerService value
     */
    public ContainerServiceCredentials containerService() {
        return this.containerService;
    }

    /**
     * Set credentials for Azure Container Service.
     *
     * @param containerService the containerService value to set
     * @return the OperationalizationClusterCredentialsInner object itself.
     */
    public OperationalizationClusterCredentialsInner withContainerService(ContainerServiceCredentials containerService) {
        this.containerService = containerService;
        return this;
    }

    /**
     * Get credentials for Azure AppInsights.
     *
     * @return the appInsights value
     */
    public AppInsightsCredentials appInsights() {
        return this.appInsights;
    }

    /**
     * Set credentials for Azure AppInsights.
     *
     * @param appInsights the appInsights value to set
     * @return the OperationalizationClusterCredentialsInner object itself.
     */
    public OperationalizationClusterCredentialsInner withAppInsights(AppInsightsCredentials appInsights) {
        this.appInsights = appInsights;
        return this;
    }

    /**
     * Get global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.
     *
     * @return the serviceAuthConfiguration value
     */
    public ServiceAuthConfiguration serviceAuthConfiguration() {
        return this.serviceAuthConfiguration;
    }

    /**
     * Set global authorization keys for all user services deployed in cluster. These are used if the service does not have auth keys.
     *
     * @param serviceAuthConfiguration the serviceAuthConfiguration value to set
     * @return the OperationalizationClusterCredentialsInner object itself.
     */
    public OperationalizationClusterCredentialsInner withServiceAuthConfiguration(ServiceAuthConfiguration serviceAuthConfiguration) {
        this.serviceAuthConfiguration = serviceAuthConfiguration;
        return this;
    }

    /**
     * Get the SSL configuration for the services.
     *
     * @return the sslConfiguration value
     */
    public SslConfiguration sslConfiguration() {
        return this.sslConfiguration;
    }

    /**
     * Set the SSL configuration for the services.
     *
     * @param sslConfiguration the sslConfiguration value to set
     * @return the OperationalizationClusterCredentialsInner object itself.
     */
    public OperationalizationClusterCredentialsInner withSslConfiguration(SslConfiguration sslConfiguration) {
        this.sslConfiguration = sslConfiguration;
        return this;
    }

}
