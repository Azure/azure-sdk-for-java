/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.machinelearningcompute.v2017_08_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.machinelearningcompute.v2017_08_01_preview.implementation.MachineLearningComputeManager;
import org.joda.time.DateTime;
import java.util.List;
import com.microsoft.azure.management.machinelearningcompute.v2017_08_01_preview.implementation.OperationalizationClusterInner;

/**
 * Type representing OperationalizationCluster.
 */
public interface OperationalizationCluster extends HasInner<OperationalizationClusterInner>, Resource, GroupableResourceCore<MachineLearningComputeManager, OperationalizationClusterInner>, HasResourceGroup, Refreshable<OperationalizationCluster>, Updatable<OperationalizationCluster.Update>, HasManager<MachineLearningComputeManager> {
    /**
     * @return the appInsights value.
     */
    AppInsightsProperties appInsights();

    /**
     * @return the clusterType value.
     */
    ClusterType clusterType();

    /**
     * @return the containerRegistry value.
     */
    ContainerRegistryProperties containerRegistry();

    /**
     * @return the containerService value.
     */
    AcsClusterProperties containerService();

    /**
     * @return the createdOn value.
     */
    DateTime createdOn();

    /**
     * @return the description value.
     */
    String description();

    /**
     * @return the globalServiceConfiguration value.
     */
    GlobalServiceConfiguration globalServiceConfiguration();

    /**
     * @return the modifiedOn value.
     */
    DateTime modifiedOn();

    /**
     * @return the provisioningErrors value.
     */
    List<ErrorResponseWrapper> provisioningErrors();

    /**
     * @return the provisioningState value.
     */
    OperationStatus provisioningState();

    /**
     * @return the storageAccount value.
     */
    StorageAccountProperties storageAccount();

    /**
     * The entirety of the OperationalizationCluster definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithClusterType, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of OperationalizationCluster definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a OperationalizationCluster definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the OperationalizationCluster definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithClusterType> {
        }

        /**
         * The stage of the operationalizationcluster definition allowing to specify ClusterType.
         */
        interface WithClusterType {
           /**
            * Specifies clusterType.
            * @param clusterType The cluster type. Possible values include: 'ACS', 'Local'
            * @return the next definition stage
*/
            WithCreate withClusterType(ClusterType clusterType);
        }

        /**
         * The stage of the operationalizationcluster definition allowing to specify AppInsights.
         */
        interface WithAppInsights {
            /**
             * Specifies appInsights.
             * @param appInsights AppInsights configuration
             * @return the next definition stage
             */
            WithCreate withAppInsights(AppInsightsProperties appInsights);
        }

        /**
         * The stage of the operationalizationcluster definition allowing to specify ContainerRegistry.
         */
        interface WithContainerRegistry {
            /**
             * Specifies containerRegistry.
             * @param containerRegistry Container Registry properties
             * @return the next definition stage
             */
            WithCreate withContainerRegistry(ContainerRegistryProperties containerRegistry);
        }

        /**
         * The stage of the operationalizationcluster definition allowing to specify ContainerService.
         */
        interface WithContainerService {
            /**
             * Specifies containerService.
             * @param containerService Parameters for the Azure Container Service cluster
             * @return the next definition stage
             */
            WithCreate withContainerService(AcsClusterProperties containerService);
        }

        /**
         * The stage of the operationalizationcluster definition allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description The description of the cluster
             * @return the next definition stage
             */
            WithCreate withDescription(String description);
        }

        /**
         * The stage of the operationalizationcluster definition allowing to specify GlobalServiceConfiguration.
         */
        interface WithGlobalServiceConfiguration {
            /**
             * Specifies globalServiceConfiguration.
             * @param globalServiceConfiguration Contains global configuration for the web services in the cluster
             * @return the next definition stage
             */
            WithCreate withGlobalServiceConfiguration(GlobalServiceConfiguration globalServiceConfiguration);
        }

        /**
         * The stage of the operationalizationcluster definition allowing to specify StorageAccount.
         */
        interface WithStorageAccount {
            /**
             * Specifies storageAccount.
             * @param storageAccount Storage Account properties
             * @return the next definition stage
             */
            WithCreate withStorageAccount(StorageAccountProperties storageAccount);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<OperationalizationCluster>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithAppInsights, DefinitionStages.WithContainerRegistry, DefinitionStages.WithContainerService, DefinitionStages.WithDescription, DefinitionStages.WithGlobalServiceConfiguration, DefinitionStages.WithStorageAccount {
        }
    }
    /**
     * The template for a OperationalizationCluster update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<OperationalizationCluster>, Resource.UpdateWithTags<Update>, UpdateStages.WithAppInsights, UpdateStages.WithContainerRegistry, UpdateStages.WithContainerService, UpdateStages.WithDescription, UpdateStages.WithGlobalServiceConfiguration, UpdateStages.WithStorageAccount {
    }

    /**
     * Grouping of OperationalizationCluster update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the operationalizationcluster update allowing to specify AppInsights.
         */
        interface WithAppInsights {
            /**
             * Specifies appInsights.
             * @param appInsights AppInsights configuration
             * @return the next update stage
             */
            Update withAppInsights(AppInsightsProperties appInsights);
        }

        /**
         * The stage of the operationalizationcluster update allowing to specify ContainerRegistry.
         */
        interface WithContainerRegistry {
            /**
             * Specifies containerRegistry.
             * @param containerRegistry Container Registry properties
             * @return the next update stage
             */
            Update withContainerRegistry(ContainerRegistryProperties containerRegistry);
        }

        /**
         * The stage of the operationalizationcluster update allowing to specify ContainerService.
         */
        interface WithContainerService {
            /**
             * Specifies containerService.
             * @param containerService Parameters for the Azure Container Service cluster
             * @return the next update stage
             */
            Update withContainerService(AcsClusterProperties containerService);
        }

        /**
         * The stage of the operationalizationcluster update allowing to specify Description.
         */
        interface WithDescription {
            /**
             * Specifies description.
             * @param description The description of the cluster
             * @return the next update stage
             */
            Update withDescription(String description);
        }

        /**
         * The stage of the operationalizationcluster update allowing to specify GlobalServiceConfiguration.
         */
        interface WithGlobalServiceConfiguration {
            /**
             * Specifies globalServiceConfiguration.
             * @param globalServiceConfiguration Contains global configuration for the web services in the cluster
             * @return the next update stage
             */
            Update withGlobalServiceConfiguration(GlobalServiceConfiguration globalServiceConfiguration);
        }

        /**
         * The stage of the operationalizationcluster update allowing to specify StorageAccount.
         */
        interface WithStorageAccount {
            /**
             * Specifies storageAccount.
             * @param storageAccount Storage Account properties
             * @return the next update stage
             */
            Update withStorageAccount(StorageAccountProperties storageAccount);
        }

    }
}
