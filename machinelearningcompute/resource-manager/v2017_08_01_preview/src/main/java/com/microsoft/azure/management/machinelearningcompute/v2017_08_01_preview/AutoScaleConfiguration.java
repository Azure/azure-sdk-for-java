/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.machinelearningcompute.v2017_08_01_preview;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AutoScale configuration properties.
 */
public class AutoScaleConfiguration {
    /**
     * If auto-scale is enabled for all services. Each service can turn it off
     * individually. Possible values include: 'Enabled', 'Disabled'.
     */
    @JsonProperty(value = "status")
    private Status status;

    /**
     * The minimum number of replicas for each service.
     */
    @JsonProperty(value = "minReplicas")
    private Integer minReplicas;

    /**
     * The maximum number of replicas for each service.
     */
    @JsonProperty(value = "maxReplicas")
    private Integer maxReplicas;

    /**
     * The target utilization.
     */
    @JsonProperty(value = "targetUtilization")
    private Double targetUtilization;

    /**
     * Refresh period in seconds.
     */
    @JsonProperty(value = "refreshPeriodInSeconds")
    private Integer refreshPeriodInSeconds;

    /**
     * Get if auto-scale is enabled for all services. Each service can turn it off individually. Possible values include: 'Enabled', 'Disabled'.
     *
     * @return the status value
     */
    public Status status() {
        return this.status;
    }

    /**
     * Set if auto-scale is enabled for all services. Each service can turn it off individually. Possible values include: 'Enabled', 'Disabled'.
     *
     * @param status the status value to set
     * @return the AutoScaleConfiguration object itself.
     */
    public AutoScaleConfiguration withStatus(Status status) {
        this.status = status;
        return this;
    }

    /**
     * Get the minimum number of replicas for each service.
     *
     * @return the minReplicas value
     */
    public Integer minReplicas() {
        return this.minReplicas;
    }

    /**
     * Set the minimum number of replicas for each service.
     *
     * @param minReplicas the minReplicas value to set
     * @return the AutoScaleConfiguration object itself.
     */
    public AutoScaleConfiguration withMinReplicas(Integer minReplicas) {
        this.minReplicas = minReplicas;
        return this;
    }

    /**
     * Get the maximum number of replicas for each service.
     *
     * @return the maxReplicas value
     */
    public Integer maxReplicas() {
        return this.maxReplicas;
    }

    /**
     * Set the maximum number of replicas for each service.
     *
     * @param maxReplicas the maxReplicas value to set
     * @return the AutoScaleConfiguration object itself.
     */
    public AutoScaleConfiguration withMaxReplicas(Integer maxReplicas) {
        this.maxReplicas = maxReplicas;
        return this;
    }

    /**
     * Get the target utilization.
     *
     * @return the targetUtilization value
     */
    public Double targetUtilization() {
        return this.targetUtilization;
    }

    /**
     * Set the target utilization.
     *
     * @param targetUtilization the targetUtilization value to set
     * @return the AutoScaleConfiguration object itself.
     */
    public AutoScaleConfiguration withTargetUtilization(Double targetUtilization) {
        this.targetUtilization = targetUtilization;
        return this;
    }

    /**
     * Get refresh period in seconds.
     *
     * @return the refreshPeriodInSeconds value
     */
    public Integer refreshPeriodInSeconds() {
        return this.refreshPeriodInSeconds;
    }

    /**
     * Set refresh period in seconds.
     *
     * @param refreshPeriodInSeconds the refreshPeriodInSeconds value to set
     * @return the AutoScaleConfiguration object itself.
     */
    public AutoScaleConfiguration withRefreshPeriodInSeconds(Integer refreshPeriodInSeconds) {
        this.refreshPeriodInSeconds = refreshPeriodInSeconds;
        return this;
    }

}
