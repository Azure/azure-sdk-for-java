/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.hybriddata;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Contains the information about the filters for the job.
 */
public class JobFilter {
    /**
     * The status of the job. Possible values include: 'None', 'InProgress',
     * 'Succeeded', 'WaitingForAction', 'Failed', 'Cancelled', 'Cancelling'.
     */
    @JsonProperty(value = "status", required = true)
    private JobStatus status;

    /**
     * The start time of the job.
     */
    @JsonProperty(value = "startTime")
    private DateTime startTime;

    /**
     * Get the status of the job. Possible values include: 'None', 'InProgress', 'Succeeded', 'WaitingForAction', 'Failed', 'Cancelled', 'Cancelling'.
     *
     * @return the status value
     */
    public JobStatus status() {
        return this.status;
    }

    /**
     * Set the status of the job. Possible values include: 'None', 'InProgress', 'Succeeded', 'WaitingForAction', 'Failed', 'Cancelled', 'Cancelling'.
     *
     * @param status the status value to set
     * @return the JobFilter object itself.
     */
    public JobFilter withStatus(JobStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the start time of the job.
     *
     * @return the startTime value
     */
    public DateTime startTime() {
        return this.startTime;
    }

    /**
     * Set the start time of the job.
     *
     * @param startTime the startTime value to set
     * @return the JobFilter object itself.
     */
    public JobFilter withStartTime(DateTime startTime) {
        this.startTime = startTime;
        return this;
    }

}
