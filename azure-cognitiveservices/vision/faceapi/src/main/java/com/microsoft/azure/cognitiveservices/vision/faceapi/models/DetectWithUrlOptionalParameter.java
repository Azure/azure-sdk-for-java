/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.cognitiveservices.vision.faceapi.models;

import java.util.List;

/**
 * The optional parameters class for "detectWithUrl" method.
 */
public class DetectWithUrlOptionalParameter {
    /**
    * A value indicating whether the operation should return faceIds of detected faces.
    */
    private Boolean returnFaceId;

    /**
    * A value indicating whether the operation should return landmarks of the detected faces.
    */
    private Boolean returnFaceLandmarks;

    /**
    * Analyze and return the one or more specified face attributes in the comma-separated string like
    * "returnFaceAttributes=age,gender". Supported face attributes include age, gender, headPose, smile, facialHair, glasses
    * and emotion. Note that each face attribute analysis has additional computational and time cost.
    */
    private List<FaceAttributeType> returnFaceAttributes;

    /**
    * Get the returnFaceId value.
    *
    * @return the returnFaceId value
    */
    public Boolean returnFaceId() {
        return this.returnFaceId;
    }

    /**
    * Get the returnFaceLandmarks value.
    *
    * @return the returnFaceLandmarks value
    */
    public Boolean returnFaceLandmarks() {
        return this.returnFaceLandmarks;
    }

    /**
    * Get the returnFaceAttributes value.
    *
    * @return the returnFaceAttributes value
    */
    public List<FaceAttributeType> returnFaceAttributes() {
        return this.returnFaceAttributes;
    }

    /**
    * Set the returnFaceId value.
    * <p>
    * A value indicating whether the operation should return faceIds of detected faces.
    *
    * @param returnFaceId the returnFaceId value to set
    * @return the detectWithUrlOptionalParameter object itself.
    */
    public DetectWithUrlOptionalParameter withReturnFaceId(boolean returnFaceId) {
        this.returnFaceId = returnFaceId;
        return this;
    }

    /**
    * Set the returnFaceLandmarks value.
    * <p>
    * A value indicating whether the operation should return landmarks of the detected faces.
    *
    * @param returnFaceLandmarks the returnFaceLandmarks value to set
    * @return the detectWithUrlOptionalParameter object itself.
    */
    public DetectWithUrlOptionalParameter withReturnFaceLandmarks(boolean returnFaceLandmarks) {
        this.returnFaceLandmarks = returnFaceLandmarks;
        return this;
    }

    /**
    * Set the returnFaceAttributes value.
    * <p>
    * Analyze and return the one or more specified face attributes in the comma-separated string like
    * "returnFaceAttributes=age,gender". Supported face attributes include age, gender, headPose, smile, facialHair, glasses
    * and emotion. Note that each face attribute analysis has additional computational and time cost.
    *
    * @param returnFaceAttributes the returnFaceAttributes value to set
    * @return the detectWithUrlOptionalParameter object itself.
    */
    public DetectWithUrlOptionalParameter withReturnFaceAttributes(List<FaceAttributeType> returnFaceAttributes) {
        this.returnFaceAttributes = returnFaceAttributes;
        return this;
    }

    }
