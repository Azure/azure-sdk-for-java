/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.network.v2018_08_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.network.v2018_08_01.implementation.NetworkManager;
import java.util.List;
import com.microsoft.azure.management.network.v2018_08_01.implementation.SubnetInner;
import com.microsoft.azure.management.network.v2018_08_01.implementation.InterfaceEndpointInner;

/**
 * Type representing InterfaceEndpoint.
 */
public interface InterfaceEndpoint extends HasInner<InterfaceEndpointInner>, Resource, GroupableResourceCore<NetworkManager, InterfaceEndpointInner>, HasResourceGroup, Refreshable<InterfaceEndpoint>, Updatable<InterfaceEndpoint.Update>, HasManager<NetworkManager> {
    /**
     * @return the endpointService value.
     */
    EndpointService endpointService();

    /**
     * @return the etag value.
     */
    String etag();

    /**
     * @return the fqdn value.
     */
    String fqdn();

    /**
     * @return the networkInterfaces value.
     */
    List<NetworkInterface> networkInterfaces();

    /**
     * @return the owner value.
     */
    String owner();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the subnet value.
     */
    Subnet subnet();

    /**
     * The entirety of the InterfaceEndpoint definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of InterfaceEndpoint definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a InterfaceEndpoint definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the InterfaceEndpoint definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreate> {
        }

        /**
         * The stage of the interfaceendpoint update allowing to specify EndpointService.
         */
        interface WithEndpointService {
            /**
             * Specifies endpointService.
             */
            WithCreate withEndpointService(EndpointService endpointService);
        }

        /**
         * The stage of the interfaceendpoint update allowing to specify Etag.
         */
        interface WithEtag {
            /**
             * Specifies etag.
             */
            WithCreate withEtag(String etag);
        }

        /**
         * The stage of the interfaceendpoint update allowing to specify Fqdn.
         */
        interface WithFqdn {
            /**
             * Specifies fqdn.
             */
            WithCreate withFqdn(String fqdn);
        }

        /**
         * The stage of the interfaceendpoint update allowing to specify Subnet.
         */
        interface WithSubnet {
            /**
             * Specifies subnet.
             */
            WithCreate withSubnet(SubnetInner subnet);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<InterfaceEndpoint>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithEndpointService, DefinitionStages.WithEtag, DefinitionStages.WithFqdn, DefinitionStages.WithSubnet {
        }
    }
    /**
     * The template for a InterfaceEndpoint update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<InterfaceEndpoint>, Resource.UpdateWithTags<Update>, UpdateStages.WithEndpointService, UpdateStages.WithEtag, UpdateStages.WithFqdn, UpdateStages.WithSubnet {
    }

    /**
     * Grouping of InterfaceEndpoint update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the interfaceendpoint {0} allowing to specify EndpointService.
         */
        interface WithEndpointService {
            /**
             * Specifies endpointService.
             */
            Update withEndpointService(EndpointService endpointService);
        }

        /**
         * The stage of the interfaceendpoint {0} allowing to specify Etag.
         */
        interface WithEtag {
            /**
             * Specifies etag.
             */
            Update withEtag(String etag);
        }

        /**
         * The stage of the interfaceendpoint {0} allowing to specify Fqdn.
         */
        interface WithFqdn {
            /**
             * Specifies fqdn.
             */
            Update withFqdn(String fqdn);
        }

        /**
         * The stage of the interfaceendpoint {0} allowing to specify Subnet.
         */
        interface WithSubnet {
            /**
             * Specifies subnet.
             */
            Update withSubnet(SubnetInner subnet);
        }

    }
}
