/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.network.v2018_06_01;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.network.v2018_06_01.implementation.NetworkManager;
import java.util.List;
import com.microsoft.azure.management.network.v2018_06_01.implementation.ApplicationGatewayInner;

/**
 * Type representing ApplicationGateway.
 */
public interface ApplicationGateway extends HasInner<ApplicationGatewayInner>, Resource, GroupableResourceCore<NetworkManager, ApplicationGatewayInner>, HasResourceGroup, Refreshable<ApplicationGateway>, Updatable<ApplicationGateway.Update>, HasManager<NetworkManager> {
    /**
     * @return the authenticationCertificates value.
     */
    List<ApplicationGatewayAuthenticationCertificate> authenticationCertificates();

    /**
     * @return the autoscaleConfiguration value.
     */
    ApplicationGatewayAutoscaleConfiguration autoscaleConfiguration();

    /**
     * @return the backendAddressPools value.
     */
    List<ApplicationGatewayBackendAddressPool> backendAddressPools();

    /**
     * @return the backendHttpSettingsCollection value.
     */
    List<ApplicationGatewayBackendHttpSettings> backendHttpSettingsCollection();

    /**
     * @return the enableFips value.
     */
    Boolean enableFips();

    /**
     * @return the enableHttp2 value.
     */
    Boolean enableHttp2();

    /**
     * @return the etag value.
     */
    String etag();

    /**
     * @return the frontendIPConfigurations value.
     */
    List<ApplicationGatewayFrontendIPConfiguration> frontendIPConfigurations();

    /**
     * @return the frontendPorts value.
     */
    List<ApplicationGatewayFrontendPort> frontendPorts();

    /**
     * @return the gatewayIPConfigurations value.
     */
    List<ApplicationGatewayIPConfiguration> gatewayIPConfigurations();

    /**
     * @return the httpListeners value.
     */
    List<ApplicationGatewayHttpListener> httpListeners();

    /**
     * @return the operationalState value.
     */
    ApplicationGatewayOperationalState operationalState();

    /**
     * @return the probes value.
     */
    List<ApplicationGatewayProbe> probes();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the redirectConfigurations value.
     */
    List<ApplicationGatewayRedirectConfiguration> redirectConfigurations();

    /**
     * @return the requestRoutingRules value.
     */
    List<ApplicationGatewayRequestRoutingRule> requestRoutingRules();

    /**
     * @return the resourceGuid value.
     */
    String resourceGuid();

    /**
     * @return the sku value.
     */
    ApplicationGatewaySku sku();

    /**
     * @return the sslCertificates value.
     */
    List<ApplicationGatewaySslCertificate> sslCertificates();

    /**
     * @return the sslPolicy value.
     */
    ApplicationGatewaySslPolicy sslPolicy();

    /**
     * @return the urlPathMaps value.
     */
    List<ApplicationGatewayUrlPathMap> urlPathMaps();

    /**
     * @return the webApplicationFirewallConfiguration value.
     */
    ApplicationGatewayWebApplicationFirewallConfiguration webApplicationFirewallConfiguration();

    /**
     * @return the zones value.
     */
    List<String> zones();

    /**
     * The entirety of the ApplicationGateway definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of ApplicationGateway definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a ApplicationGateway definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the ApplicationGateway definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreate> {
        }

        /**
         * The stage of the applicationgateway update allowing to specify AuthenticationCertificates.
         */
        interface WithAuthenticationCertificates {
            /**
             * Specifies authenticationCertificates.
             */
            WithCreate withAuthenticationCertificates(List<ApplicationGatewayAuthenticationCertificate> authenticationCertificates);
        }

        /**
         * The stage of the applicationgateway update allowing to specify AutoscaleConfiguration.
         */
        interface WithAutoscaleConfiguration {
            /**
             * Specifies autoscaleConfiguration.
             */
            WithCreate withAutoscaleConfiguration(ApplicationGatewayAutoscaleConfiguration autoscaleConfiguration);
        }

        /**
         * The stage of the applicationgateway update allowing to specify BackendAddressPools.
         */
        interface WithBackendAddressPools {
            /**
             * Specifies backendAddressPools.
             */
            WithCreate withBackendAddressPools(List<ApplicationGatewayBackendAddressPool> backendAddressPools);
        }

        /**
         * The stage of the applicationgateway update allowing to specify BackendHttpSettingsCollection.
         */
        interface WithBackendHttpSettingsCollection {
            /**
             * Specifies backendHttpSettingsCollection.
             */
            WithCreate withBackendHttpSettingsCollection(List<ApplicationGatewayBackendHttpSettings> backendHttpSettingsCollection);
        }

        /**
         * The stage of the applicationgateway update allowing to specify EnableFips.
         */
        interface WithEnableFips {
            /**
             * Specifies enableFips.
             */
            WithCreate withEnableFips(Boolean enableFips);
        }

        /**
         * The stage of the applicationgateway update allowing to specify EnableHttp2.
         */
        interface WithEnableHttp2 {
            /**
             * Specifies enableHttp2.
             */
            WithCreate withEnableHttp2(Boolean enableHttp2);
        }

        /**
         * The stage of the applicationgateway update allowing to specify Etag.
         */
        interface WithEtag {
            /**
             * Specifies etag.
             */
            WithCreate withEtag(String etag);
        }

        /**
         * The stage of the applicationgateway update allowing to specify FrontendIPConfigurations.
         */
        interface WithFrontendIPConfigurations {
            /**
             * Specifies frontendIPConfigurations.
             */
            WithCreate withFrontendIPConfigurations(List<ApplicationGatewayFrontendIPConfiguration> frontendIPConfigurations);
        }

        /**
         * The stage of the applicationgateway update allowing to specify FrontendPorts.
         */
        interface WithFrontendPorts {
            /**
             * Specifies frontendPorts.
             */
            WithCreate withFrontendPorts(List<ApplicationGatewayFrontendPort> frontendPorts);
        }

        /**
         * The stage of the applicationgateway update allowing to specify GatewayIPConfigurations.
         */
        interface WithGatewayIPConfigurations {
            /**
             * Specifies gatewayIPConfigurations.
             */
            WithCreate withGatewayIPConfigurations(List<ApplicationGatewayIPConfiguration> gatewayIPConfigurations);
        }

        /**
         * The stage of the applicationgateway update allowing to specify HttpListeners.
         */
        interface WithHttpListeners {
            /**
             * Specifies httpListeners.
             */
            WithCreate withHttpListeners(List<ApplicationGatewayHttpListener> httpListeners);
        }

        /**
         * The stage of the applicationgateway update allowing to specify Probes.
         */
        interface WithProbes {
            /**
             * Specifies probes.
             */
            WithCreate withProbes(List<ApplicationGatewayProbe> probes);
        }

        /**
         * The stage of the applicationgateway update allowing to specify ProvisioningState.
         */
        interface WithProvisioningState {
            /**
             * Specifies provisioningState.
             */
            WithCreate withProvisioningState(String provisioningState);
        }

        /**
         * The stage of the applicationgateway update allowing to specify RedirectConfigurations.
         */
        interface WithRedirectConfigurations {
            /**
             * Specifies redirectConfigurations.
             */
            WithCreate withRedirectConfigurations(List<ApplicationGatewayRedirectConfiguration> redirectConfigurations);
        }

        /**
         * The stage of the applicationgateway update allowing to specify RequestRoutingRules.
         */
        interface WithRequestRoutingRules {
            /**
             * Specifies requestRoutingRules.
             */
            WithCreate withRequestRoutingRules(List<ApplicationGatewayRequestRoutingRule> requestRoutingRules);
        }

        /**
         * The stage of the applicationgateway update allowing to specify ResourceGuid.
         */
        interface WithResourceGuid {
            /**
             * Specifies resourceGuid.
             */
            WithCreate withResourceGuid(String resourceGuid);
        }

        /**
         * The stage of the applicationgateway update allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             */
            WithCreate withSku(ApplicationGatewaySku sku);
        }

        /**
         * The stage of the applicationgateway update allowing to specify SslCertificates.
         */
        interface WithSslCertificates {
            /**
             * Specifies sslCertificates.
             */
            WithCreate withSslCertificates(List<ApplicationGatewaySslCertificate> sslCertificates);
        }

        /**
         * The stage of the applicationgateway update allowing to specify SslPolicy.
         */
        interface WithSslPolicy {
            /**
             * Specifies sslPolicy.
             */
            WithCreate withSslPolicy(ApplicationGatewaySslPolicy sslPolicy);
        }

        /**
         * The stage of the applicationgateway update allowing to specify UrlPathMaps.
         */
        interface WithUrlPathMaps {
            /**
             * Specifies urlPathMaps.
             */
            WithCreate withUrlPathMaps(List<ApplicationGatewayUrlPathMap> urlPathMaps);
        }

        /**
         * The stage of the applicationgateway update allowing to specify WebApplicationFirewallConfiguration.
         */
        interface WithWebApplicationFirewallConfiguration {
            /**
             * Specifies webApplicationFirewallConfiguration.
             */
            WithCreate withWebApplicationFirewallConfiguration(ApplicationGatewayWebApplicationFirewallConfiguration webApplicationFirewallConfiguration);
        }

        /**
         * The stage of the applicationgateway update allowing to specify Zones.
         */
        interface WithZones {
            /**
             * Specifies zones.
             */
            WithCreate withZones(List<String> zones);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<ApplicationGateway>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithAuthenticationCertificates, DefinitionStages.WithAutoscaleConfiguration, DefinitionStages.WithBackendAddressPools, DefinitionStages.WithBackendHttpSettingsCollection, DefinitionStages.WithEnableFips, DefinitionStages.WithEnableHttp2, DefinitionStages.WithEtag, DefinitionStages.WithFrontendIPConfigurations, DefinitionStages.WithFrontendPorts, DefinitionStages.WithGatewayIPConfigurations, DefinitionStages.WithHttpListeners, DefinitionStages.WithProbes, DefinitionStages.WithProvisioningState, DefinitionStages.WithRedirectConfigurations, DefinitionStages.WithRequestRoutingRules, DefinitionStages.WithResourceGuid, DefinitionStages.WithSku, DefinitionStages.WithSslCertificates, DefinitionStages.WithSslPolicy, DefinitionStages.WithUrlPathMaps, DefinitionStages.WithWebApplicationFirewallConfiguration, DefinitionStages.WithZones {
        }
    }
    /**
     * The template for a ApplicationGateway update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<ApplicationGateway>, Resource.UpdateWithTags<Update>, UpdateStages.WithAuthenticationCertificates, UpdateStages.WithAutoscaleConfiguration, UpdateStages.WithBackendAddressPools, UpdateStages.WithBackendHttpSettingsCollection, UpdateStages.WithEnableFips, UpdateStages.WithEnableHttp2, UpdateStages.WithEtag, UpdateStages.WithFrontendIPConfigurations, UpdateStages.WithFrontendPorts, UpdateStages.WithGatewayIPConfigurations, UpdateStages.WithHttpListeners, UpdateStages.WithProbes, UpdateStages.WithProvisioningState, UpdateStages.WithRedirectConfigurations, UpdateStages.WithRequestRoutingRules, UpdateStages.WithResourceGuid, UpdateStages.WithSku, UpdateStages.WithSslCertificates, UpdateStages.WithSslPolicy, UpdateStages.WithUrlPathMaps, UpdateStages.WithWebApplicationFirewallConfiguration, UpdateStages.WithZones {
    }

    /**
     * Grouping of ApplicationGateway update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the applicationgateway {0} allowing to specify AuthenticationCertificates.
         */
        interface WithAuthenticationCertificates {
            /**
             * Specifies authenticationCertificates.
             */
            Update withAuthenticationCertificates(List<ApplicationGatewayAuthenticationCertificate> authenticationCertificates);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify AutoscaleConfiguration.
         */
        interface WithAutoscaleConfiguration {
            /**
             * Specifies autoscaleConfiguration.
             */
            Update withAutoscaleConfiguration(ApplicationGatewayAutoscaleConfiguration autoscaleConfiguration);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify BackendAddressPools.
         */
        interface WithBackendAddressPools {
            /**
             * Specifies backendAddressPools.
             */
            Update withBackendAddressPools(List<ApplicationGatewayBackendAddressPool> backendAddressPools);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify BackendHttpSettingsCollection.
         */
        interface WithBackendHttpSettingsCollection {
            /**
             * Specifies backendHttpSettingsCollection.
             */
            Update withBackendHttpSettingsCollection(List<ApplicationGatewayBackendHttpSettings> backendHttpSettingsCollection);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify EnableFips.
         */
        interface WithEnableFips {
            /**
             * Specifies enableFips.
             */
            Update withEnableFips(Boolean enableFips);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify EnableHttp2.
         */
        interface WithEnableHttp2 {
            /**
             * Specifies enableHttp2.
             */
            Update withEnableHttp2(Boolean enableHttp2);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify Etag.
         */
        interface WithEtag {
            /**
             * Specifies etag.
             */
            Update withEtag(String etag);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify FrontendIPConfigurations.
         */
        interface WithFrontendIPConfigurations {
            /**
             * Specifies frontendIPConfigurations.
             */
            Update withFrontendIPConfigurations(List<ApplicationGatewayFrontendIPConfiguration> frontendIPConfigurations);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify FrontendPorts.
         */
        interface WithFrontendPorts {
            /**
             * Specifies frontendPorts.
             */
            Update withFrontendPorts(List<ApplicationGatewayFrontendPort> frontendPorts);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify GatewayIPConfigurations.
         */
        interface WithGatewayIPConfigurations {
            /**
             * Specifies gatewayIPConfigurations.
             */
            Update withGatewayIPConfigurations(List<ApplicationGatewayIPConfiguration> gatewayIPConfigurations);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify HttpListeners.
         */
        interface WithHttpListeners {
            /**
             * Specifies httpListeners.
             */
            Update withHttpListeners(List<ApplicationGatewayHttpListener> httpListeners);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify Probes.
         */
        interface WithProbes {
            /**
             * Specifies probes.
             */
            Update withProbes(List<ApplicationGatewayProbe> probes);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify ProvisioningState.
         */
        interface WithProvisioningState {
            /**
             * Specifies provisioningState.
             */
            Update withProvisioningState(String provisioningState);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify RedirectConfigurations.
         */
        interface WithRedirectConfigurations {
            /**
             * Specifies redirectConfigurations.
             */
            Update withRedirectConfigurations(List<ApplicationGatewayRedirectConfiguration> redirectConfigurations);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify RequestRoutingRules.
         */
        interface WithRequestRoutingRules {
            /**
             * Specifies requestRoutingRules.
             */
            Update withRequestRoutingRules(List<ApplicationGatewayRequestRoutingRule> requestRoutingRules);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify ResourceGuid.
         */
        interface WithResourceGuid {
            /**
             * Specifies resourceGuid.
             */
            Update withResourceGuid(String resourceGuid);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify Sku.
         */
        interface WithSku {
            /**
             * Specifies sku.
             */
            Update withSku(ApplicationGatewaySku sku);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify SslCertificates.
         */
        interface WithSslCertificates {
            /**
             * Specifies sslCertificates.
             */
            Update withSslCertificates(List<ApplicationGatewaySslCertificate> sslCertificates);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify SslPolicy.
         */
        interface WithSslPolicy {
            /**
             * Specifies sslPolicy.
             */
            Update withSslPolicy(ApplicationGatewaySslPolicy sslPolicy);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify UrlPathMaps.
         */
        interface WithUrlPathMaps {
            /**
             * Specifies urlPathMaps.
             */
            Update withUrlPathMaps(List<ApplicationGatewayUrlPathMap> urlPathMaps);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify WebApplicationFirewallConfiguration.
         */
        interface WithWebApplicationFirewallConfiguration {
            /**
             * Specifies webApplicationFirewallConfiguration.
             */
            Update withWebApplicationFirewallConfiguration(ApplicationGatewayWebApplicationFirewallConfiguration webApplicationFirewallConfiguration);
        }

        /**
         * The stage of the applicationgateway {0} allowing to specify Zones.
         */
        interface WithZones {
            /**
             * Specifies zones.
             */
            Update withZones(List<String> zones);
        }

    }
}
