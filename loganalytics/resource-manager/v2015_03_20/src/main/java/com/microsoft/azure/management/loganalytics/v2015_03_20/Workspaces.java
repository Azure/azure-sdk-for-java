/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.loganalytics.v2015_03_20;

import rx.Observable;
import rx.Completable;

/**
 * Type representing Workspaces.
 */
public interface Workspaces {
    /**
     * Gets status of an ongoing purge operation.
     *
     * @param resourceGroupName The Resource Group name.
     * @param workspaceName The Log Analytics Workspace name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkspacePurgeStatusResponse> getPurgeStatusAsync(String resourceGroupName, String workspaceName);

    /**
     * Gets the schema for a given workspace.
     *
     * @param resourceGroupName The Resource Group name.
     * @param workspaceName The Log Analytics Workspace name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SearchGetSchemaResponse> getSchemaAsync(String resourceGroupName, String workspaceName);

    /**
     * Submit a search for a given workspace. The response will contain an id to track the search. User can use the id to poll the search status and get the full search result later if the search takes long time to finish.
     *
     * @param resourceGroupName The Resource Group name.
     * @param workspaceName The Log Analytics Workspace name.
     * @param parameters The parameters required to execute a search query.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SearchResultsResponse> getSearchResultsAsync(String resourceGroupName, String workspaceName, SearchParameters parameters);

    /**
     * Gets updated search results for a given search query.
     *
     * @param resourceGroupName The Resource Group name.
     * @param workspaceName The Log Analytics Workspace name.
     * @param id The id of the search that will have results updated. You can get the id from the response of the GetResults call.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SearchResultsResponse> updateSearchResultsAsync(String resourceGroupName, String workspaceName, String id);

    /**
     * Purges data in an Log Analytics workspace by a set of user-defined filters.
     *
     * @param resourceGroupName The Resource Group name.
     * @param workspaceName The Log Analytics Workspace name.
     * @param body Describes the body of a request to purge data in a single table of an Log Analytics Workspace
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<WorkspacePurgeResponse> purgeAsync(String resourceGroupName, String workspaceName, WorkspacePurgeBody body);

    /**
     * Gets the shared keys for a Log Analytics Workspace. These keys are used to connect Microsoft Operational Insights agents to the workspace.
     *
     * @param resourceGroupName The Resource Group name.
     * @param workspaceName The Log Analytics Workspace name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SharedKeys> listKeysAsync(String resourceGroupName, String workspaceName);

    /**
     * Regenerates the shared keys for a Log Analytics Workspace. These keys are used to connect Microsoft Operational Insights agents to the workspace.
     *
     * @param resourceGroupName The Resource Group name.
     * @param workspaceName The Log Analytics Workspace name.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<SharedKeys> regenerateSharedKeysAsync(String resourceGroupName, String workspaceName);

    /**
     * Get a list of workspaces which the current user has administrator privileges and are not associated with an Azure Subscription. The subscriptionId parameter in the Url is ignored.
     *
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Observable<LinkTarget> listAsync();

    /**
     * Delete a Log Analytics gateway.
     *
     * @param resourceGroupName The Resource Group name.
     * @param workspaceName The Log Analytics Workspace name.
     * @param gatewayId The Log Analytics gateway Id.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable for the request
     */
    Completable deleteGatewaysAsync(String resourceGroupName, String workspaceName, String gatewayId);

}
