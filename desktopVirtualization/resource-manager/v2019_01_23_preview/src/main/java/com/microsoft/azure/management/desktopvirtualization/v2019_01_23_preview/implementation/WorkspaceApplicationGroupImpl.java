/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.desktopvirtualization.v2019_01_23_preview.implementation;

import com.microsoft.azure.management.desktopvirtualization.v2019_01_23_preview.WorkspaceApplicationGroup;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import rx.Observable;
import com.microsoft.azure.management.desktopvirtualization.v2019_01_23_preview.ApplicationGroupType;
import java.util.Map;

class WorkspaceApplicationGroupImpl extends WrapperImpl<ApplicationGroupInner> implements WorkspaceApplicationGroup {
    private final DesktopVirtualizationManager manager;

    WorkspaceApplicationGroupImpl(ApplicationGroupInner inner,  DesktopVirtualizationManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public DesktopVirtualizationManager manager() {
        return this.manager;
    }



    @Override
    public ApplicationGroupType applicationGroupType() {
        return this.inner().applicationGroupType();
    }

    @Override
    public String description() {
        return this.inner().description();
    }

    @Override
    public String friendlyName() {
        return this.inner().friendlyName();
    }

    @Override
    public String hostPoolArmPath() {
        return this.inner().hostPoolArmPath();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String location() {
        return this.inner().location();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public Map<String, String> tags() {
        return this.inner().getTags();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public String workspaceArmPath() {
        return this.inner().workspaceArmPath();
    }

}
