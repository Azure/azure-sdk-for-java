/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datamigration.v2018_07_15_preview;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Describes a MongoDB data source.
 */
public class MongoDbClusterInfo {
    /**
     * A list of non-system databases in the cluster.
     */
    @JsonProperty(value = "databases", required = true)
    private List<MongoDbDatabaseInfo> databases;

    /**
     * Whether the cluster supports sharded collections.
     */
    @JsonProperty(value = "supportsSharding", required = true)
    private boolean supportsSharding;

    /**
     * The type of data source. Possible values include: 'BlobContainer',
     * 'CosmosDb', 'MongoDb'.
     */
    @JsonProperty(value = "type", required = true)
    private MongoDbClusterType type;

    /**
     * The version of the data source in the form x.y.z (e.g. 3.6.7). Not used
     * if Type is BlobContainer.
     */
    @JsonProperty(value = "version", required = true)
    private String version;

    /**
     * Get a list of non-system databases in the cluster.
     *
     * @return the databases value
     */
    public List<MongoDbDatabaseInfo> databases() {
        return this.databases;
    }

    /**
     * Set a list of non-system databases in the cluster.
     *
     * @param databases the databases value to set
     * @return the MongoDbClusterInfo object itself.
     */
    public MongoDbClusterInfo withDatabases(List<MongoDbDatabaseInfo> databases) {
        this.databases = databases;
        return this;
    }

    /**
     * Get whether the cluster supports sharded collections.
     *
     * @return the supportsSharding value
     */
    public boolean supportsSharding() {
        return this.supportsSharding;
    }

    /**
     * Set whether the cluster supports sharded collections.
     *
     * @param supportsSharding the supportsSharding value to set
     * @return the MongoDbClusterInfo object itself.
     */
    public MongoDbClusterInfo withSupportsSharding(boolean supportsSharding) {
        this.supportsSharding = supportsSharding;
        return this;
    }

    /**
     * Get the type of data source. Possible values include: 'BlobContainer', 'CosmosDb', 'MongoDb'.
     *
     * @return the type value
     */
    public MongoDbClusterType type() {
        return this.type;
    }

    /**
     * Set the type of data source. Possible values include: 'BlobContainer', 'CosmosDb', 'MongoDb'.
     *
     * @param type the type value to set
     * @return the MongoDbClusterInfo object itself.
     */
    public MongoDbClusterInfo withType(MongoDbClusterType type) {
        this.type = type;
        return this;
    }

    /**
     * Get the version of the data source in the form x.y.z (e.g. 3.6.7). Not used if Type is BlobContainer.
     *
     * @return the version value
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version of the data source in the form x.y.z (e.g. 3.6.7). Not used if Type is BlobContainer.
     *
     * @param version the version value to set
     * @return the MongoDbClusterInfo object itself.
     */
    public MongoDbClusterInfo withVersion(String version) {
        this.version = version;
        return this;
    }

}
