/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datamigration.v2018_07_15_preview;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Describes a database or collection within a MongoDB data source.
 */
public class MongoDbObjectInfo {
    /**
     * The average document size, or -1 if the average size is unknown.
     */
    @JsonProperty(value = "averageDocumentSize", required = true)
    private long averageDocumentSize;

    /**
     * The estimated total data size, in bytes, or -1 if the size is unknown.
     */
    @JsonProperty(value = "dataSize", required = true)
    private long dataSize;

    /**
     * The estimated total number of documents, or -1 if the document count is
     * unknown.
     */
    @JsonProperty(value = "documentCount", required = true)
    private long documentCount;

    /**
     * The unqualified name of the database or collection.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * The qualified name of the database or collection. For a collection, this
     * is the database-qualified name.
     */
    @JsonProperty(value = "qualifiedName", required = true)
    private String qualifiedName;

    /**
     * Get the average document size, or -1 if the average size is unknown.
     *
     * @return the averageDocumentSize value
     */
    public long averageDocumentSize() {
        return this.averageDocumentSize;
    }

    /**
     * Set the average document size, or -1 if the average size is unknown.
     *
     * @param averageDocumentSize the averageDocumentSize value to set
     * @return the MongoDbObjectInfo object itself.
     */
    public MongoDbObjectInfo withAverageDocumentSize(long averageDocumentSize) {
        this.averageDocumentSize = averageDocumentSize;
        return this;
    }

    /**
     * Get the estimated total data size, in bytes, or -1 if the size is unknown.
     *
     * @return the dataSize value
     */
    public long dataSize() {
        return this.dataSize;
    }

    /**
     * Set the estimated total data size, in bytes, or -1 if the size is unknown.
     *
     * @param dataSize the dataSize value to set
     * @return the MongoDbObjectInfo object itself.
     */
    public MongoDbObjectInfo withDataSize(long dataSize) {
        this.dataSize = dataSize;
        return this;
    }

    /**
     * Get the estimated total number of documents, or -1 if the document count is unknown.
     *
     * @return the documentCount value
     */
    public long documentCount() {
        return this.documentCount;
    }

    /**
     * Set the estimated total number of documents, or -1 if the document count is unknown.
     *
     * @param documentCount the documentCount value to set
     * @return the MongoDbObjectInfo object itself.
     */
    public MongoDbObjectInfo withDocumentCount(long documentCount) {
        this.documentCount = documentCount;
        return this;
    }

    /**
     * Get the unqualified name of the database or collection.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the unqualified name of the database or collection.
     *
     * @param name the name value to set
     * @return the MongoDbObjectInfo object itself.
     */
    public MongoDbObjectInfo withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the qualified name of the database or collection. For a collection, this is the database-qualified name.
     *
     * @return the qualifiedName value
     */
    public String qualifiedName() {
        return this.qualifiedName;
    }

    /**
     * Set the qualified name of the database or collection. For a collection, this is the database-qualified name.
     *
     * @param qualifiedName the qualifiedName value to set
     * @return the MongoDbObjectInfo object itself.
     */
    public MongoDbObjectInfo withQualifiedName(String qualifiedName) {
        this.qualifiedName = qualifiedName;
        return this;
    }

}
