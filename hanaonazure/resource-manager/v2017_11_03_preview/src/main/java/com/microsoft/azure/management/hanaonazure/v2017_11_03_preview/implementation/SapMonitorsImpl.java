/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * def
 */

package com.microsoft.azure.management.hanaonazure.v2017_11_03_preview.implementation;

import com.microsoft.azure.arm.resources.collection.implementation.GroupableResourcesCoreImpl;
import com.microsoft.azure.management.hanaonazure.v2017_11_03_preview.SapMonitors;
import com.microsoft.azure.management.hanaonazure.v2017_11_03_preview.SapMonitor;
import rx.Observable;
import rx.Completable;
import rx.functions.Func1;

class SapMonitorsImpl extends GroupableResourcesCoreImpl<SapMonitor, SapMonitorImpl, SapMonitorInner, SapMonitorsInner, HanaOnAzureManager>  implements SapMonitors {
    protected SapMonitorsImpl(HanaOnAzureManager manager) {
        super(manager.inner().sapMonitors(), manager);
    }

    @Override
    protected Observable<SapMonitorInner> getInnerAsync(String resourceGroupName, String name) {
        SapMonitorsInner client = this.inner();
        return client.getByResourceGroupAsync(resourceGroupName, name);
    }

    @Override
    protected Completable deleteInnerAsync(String resourceGroupName, String name) {
        SapMonitorsInner client = this.inner();
        return Completable.error(new Throwable("Delete by RG not supported for this resource")); // NOP Delete by RG not supported
    }

    @Override
    public SapMonitorImpl define(String name) {
        return wrapModel(name);
    }

    @Override
    protected SapMonitorImpl wrapModel(SapMonitorInner inner) {
        return  new SapMonitorImpl(inner.name(), inner, manager());
    }

    @Override
    protected SapMonitorImpl wrapModel(String name) {
        return new SapMonitorImpl(name, new SapMonitorInner(), this.manager());
    }

}
