/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.costmanagement.v2018_05_31.implementation;

import java.util.List;
import org.joda.time.DateTime;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * The DimensionInner model.
 */
@JsonFlatten
public class DimensionInner extends ProxyResource {
    /**
     * The data property.
     */
    @JsonProperty(value = "properties.data")
    private List<String> data;

    /**
     * The total property.
     */
    @JsonProperty(value = "properties.total")
    private Integer total;

    /**
     * The category property.
     */
    @JsonProperty(value = "properties.category")
    private String category;

    /**
     * The usageStart property.
     */
    @JsonProperty(value = "properties.usageStart")
    private DateTime usageStart;

    /**
     * The usageEnd property.
     */
    @JsonProperty(value = "properties.usageEnd")
    private DateTime usageEnd;

    /**
     * The nextLink property.
     */
    @JsonProperty(value = "properties.nextLink")
    private String nextLink;

    /**
     * Resource tags.
     */
    @JsonProperty(value = "tags", access = JsonProperty.Access.WRITE_ONLY)
    private Map<String, String> tags;

    /**
     * Get the data value.
     *
     * @return the data value
     */
    public List<String> data() {
        return this.data;
    }

    /**
     * Set the data value.
     *
     * @param data the data value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withData(List<String> data) {
        this.data = data;
        return this;
    }

    /**
     * Get the total value.
     *
     * @return the total value
     */
    public Integer total() {
        return this.total;
    }

    /**
     * Set the total value.
     *
     * @param total the total value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withTotal(Integer total) {
        this.total = total;
        return this;
    }

    /**
     * Get the category value.
     *
     * @return the category value
     */
    public String category() {
        return this.category;
    }

    /**
     * Set the category value.
     *
     * @param category the category value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withCategory(String category) {
        this.category = category;
        return this;
    }

    /**
     * Get the usageStart value.
     *
     * @return the usageStart value
     */
    public DateTime usageStart() {
        return this.usageStart;
    }

    /**
     * Set the usageStart value.
     *
     * @param usageStart the usageStart value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withUsageStart(DateTime usageStart) {
        this.usageStart = usageStart;
        return this;
    }

    /**
     * Get the usageEnd value.
     *
     * @return the usageEnd value
     */
    public DateTime usageEnd() {
        return this.usageEnd;
    }

    /**
     * Set the usageEnd value.
     *
     * @param usageEnd the usageEnd value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withUsageEnd(DateTime usageEnd) {
        this.usageEnd = usageEnd;
        return this;
    }

    /**
     * Get the nextLink value.
     *
     * @return the nextLink value
     */
    public String nextLink() {
        return this.nextLink;
    }

    /**
     * Set the nextLink value.
     *
     * @param nextLink the nextLink value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withNextLink(String nextLink) {
        this.nextLink = nextLink;
        return this;
    }

    /**
     * Get resource tags.
     *
     * @return the tags value
     */
    public Map<String, String> tags() {
        return this.tags;
    }

}
