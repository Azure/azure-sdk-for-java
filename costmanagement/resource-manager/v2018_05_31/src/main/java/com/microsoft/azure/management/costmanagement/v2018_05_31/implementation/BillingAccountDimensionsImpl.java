/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.costmanagement.v2018_05_31.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.costmanagement.v2018_05_31.BillingAccountDimensions;
import rx.functions.Func1;
import rx.Observable;
import java.util.List;
import com.microsoft.azure.management.costmanagement.v2018_05_31.Dimension;

class BillingAccountDimensionsImpl extends WrapperImpl<BillingAccountDimensionsInner> implements BillingAccountDimensions {
    private final CostManagementManager manager;

    BillingAccountDimensionsImpl(CostManagementManager manager) {
        super(manager.inner().billingAccountDimensions());
        this.manager = manager;
    }

    public CostManagementManager manager() {
        return this.manager;
    }

    @Override
    public Observable<Dimension> listAsync(String billingAccountId) {
        BillingAccountDimensionsInner client = this.inner();
        return client.listAsync(billingAccountId)
        .flatMap(new Func1<List<DimensionInner>, Observable<DimensionInner>>() {
            @Override
            public Observable<DimensionInner> call(List<DimensionInner> innerList) {
                return Observable.from(innerList);
            }
        })
        .map(new Func1<DimensionInner, Dimension>() {
            @Override
            public Dimension call(DimensionInner inner) {
                return new DimensionImpl(inner, manager());
            }
        });
    }

}
