/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.costmanagement.v2018_05_31;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The destination information for the delivery of the report.
 */
public class ReportConfigDeliveryDestination {
    /**
     * The resource id of the storage account where reports will be delivered.
     */
    @JsonProperty(value = "resourceId", required = true)
    private String resourceId;

    /**
     * The name of the container where reports will be uploaded.
     */
    @JsonProperty(value = "container", required = true)
    private String container;

    /**
     * The name of the directory where reports will be uploaded.
     */
    @JsonProperty(value = "rootFolderPath")
    private String rootFolderPath;

    /**
     * Get the resource id of the storage account where reports will be delivered.
     *
     * @return the resourceId value
     */
    public String resourceId() {
        return this.resourceId;
    }

    /**
     * Set the resource id of the storage account where reports will be delivered.
     *
     * @param resourceId the resourceId value to set
     * @return the ReportConfigDeliveryDestination object itself.
     */
    public ReportConfigDeliveryDestination withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }

    /**
     * Get the name of the container where reports will be uploaded.
     *
     * @return the container value
     */
    public String container() {
        return this.container;
    }

    /**
     * Set the name of the container where reports will be uploaded.
     *
     * @param container the container value to set
     * @return the ReportConfigDeliveryDestination object itself.
     */
    public ReportConfigDeliveryDestination withContainer(String container) {
        this.container = container;
        return this;
    }

    /**
     * Get the name of the directory where reports will be uploaded.
     *
     * @return the rootFolderPath value
     */
    public String rootFolderPath() {
        return this.rootFolderPath;
    }

    /**
     * Set the name of the directory where reports will be uploaded.
     *
     * @param rootFolderPath the rootFolderPath value to set
     * @return the ReportConfigDeliveryDestination object itself.
     */
    public ReportConfigDeliveryDestination withRootFolderPath(String rootFolderPath) {
        this.rootFolderPath = rootFolderPath;
        return this;
    }

}
