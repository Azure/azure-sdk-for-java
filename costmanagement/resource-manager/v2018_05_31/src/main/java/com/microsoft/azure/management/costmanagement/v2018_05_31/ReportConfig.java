/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.costmanagement.v2018_05_31;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.management.costmanagement.v2018_05_31.implementation.ReportConfigInner;
import com.microsoft.azure.arm.model.Indexable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.costmanagement.v2018_05_31.implementation.CostManagementManager;
import java.util.Map;

/**
 * Type representing ReportConfig.
 */
public interface ReportConfig extends HasInner<ReportConfigInner>, Indexable, Updatable<ReportConfig.Update>, Refreshable<ReportConfig>, HasManager<CostManagementManager> {
    /**
     * @return the definition value.
     */
    ReportConfigDefinition definition();

    /**
     * @return the deliveryInfo value.
     */
    ReportConfigDeliveryInfo deliveryInfo();

    /**
     * @return the format value.
     */
    FormatType format();

    /**
     * @return the id value.
     */
    String id();

    /**
     * @return the name value.
     */
    String name();

    /**
     * @return the schedule value.
     */
    ReportConfigSchedule schedule();

    /**
     * @return the tags value.
     */
    Map<String, String> tags();

    /**
     * @return the type value.
     */
    String type();

    /**
     * The entirety of the ReportConfig definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithResourceGroupName, DefinitionStages.WithDefinition, DefinitionStages.WithDeliveryInfo, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of ReportConfig definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a ReportConfig definition.
         */
        interface Blank extends WithResourceGroupName {
        }

        /**
         * The stage of the reportconfig definition allowing to specify ResourceGroupName.
         */
        interface WithResourceGroupName {
           /**
            * Specifies resourceGroupName.
            * @param resourceGroupName Azure Resource Group Name
            * @return the next definition stage
            */
            WithDefinition withResourceGroupName(String resourceGroupName);
        }

        /**
         * The stage of the reportconfig definition allowing to specify Definition.
         */
        interface WithDefinition {
           /**
            * Specifies definition.
            * @param definition Has definition for the report config
            * @return the next definition stage
            */
            WithDeliveryInfo withDefinition(ReportConfigDefinition definition);
        }

        /**
         * The stage of the reportconfig definition allowing to specify DeliveryInfo.
         */
        interface WithDeliveryInfo {
           /**
            * Specifies deliveryInfo.
            * @param deliveryInfo Has delivery information for the report config
            * @return the next definition stage
            */
            WithCreate withDeliveryInfo(ReportConfigDeliveryInfo deliveryInfo);
        }

        /**
         * The stage of the reportconfig definition allowing to specify Format.
         */
        interface WithFormat {
            /**
             * Specifies format.
             * @param format The format of the report being delivered. Possible values include: 'Csv'
             * @return the next definition stage
             */
            WithCreate withFormat(FormatType format);
        }

        /**
         * The stage of the reportconfig definition allowing to specify Schedule.
         */
        interface WithSchedule {
            /**
             * Specifies schedule.
             * @param schedule Has schedule information for the report config
             * @return the next definition stage
             */
            WithCreate withSchedule(ReportConfigSchedule schedule);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<ReportConfig>, DefinitionStages.WithFormat, DefinitionStages.WithSchedule {
        }
    }
    /**
     * The template for a ReportConfig update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<ReportConfig>, UpdateStages.WithFormat, UpdateStages.WithSchedule {
    }

    /**
     * Grouping of ReportConfig update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the reportconfig update allowing to specify Format.
         */
        interface WithFormat {
            /**
             * Specifies format.
             * @param format The format of the report being delivered. Possible values include: 'Csv'
             * @return the next update stage
             */
            Update withFormat(FormatType format);
        }

        /**
         * The stage of the reportconfig update allowing to specify Schedule.
         */
        interface WithSchedule {
            /**
             * Specifies schedule.
             * @param schedule Has schedule information for the report config
             * @return the next update stage
             */
            Update withSchedule(ReportConfigSchedule schedule);
        }

    }
}
