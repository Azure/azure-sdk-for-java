/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.consumption.v2018_03_31.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.consumption.v2018_03_31.UsageDetailsByBillingAccounts;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.consumption.v2018_03_31.UsageDetail;

class UsageDetailsByBillingAccountsImpl extends WrapperImpl<UsageDetailsByBillingAccountsInner> implements UsageDetailsByBillingAccounts {
    private final ConsumptionManager manager;

    UsageDetailsByBillingAccountsImpl(ConsumptionManager manager) {
        super(manager.inner().usageDetailsByBillingAccounts());
        this.manager = manager;
    }

    public ConsumptionManager manager() {
        return this.manager;
    }

    @Override
    public Observable<UsageDetail> listAsync(final String billingAccountId) {
        UsageDetailsByBillingAccountsInner client = this.inner();
        return client.listAsync(billingAccountId)
        .flatMapIterable(new Func1<Page<UsageDetailInner>, Iterable<UsageDetailInner>>() {
            @Override
            public Iterable<UsageDetailInner> call(Page<UsageDetailInner> page) {
                return page.items();
            }
        })
        .map(new Func1<UsageDetailInner, UsageDetail>() {
            @Override
            public UsageDetail call(UsageDetailInner inner) {
                return new UsageDetailImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<UsageDetail> listByBillingPeriodAsync(final String billingAccountId, final String billingPeriodName) {
        UsageDetailsByBillingAccountsInner client = this.inner();
        return client.listByBillingPeriodAsync(billingAccountId, billingPeriodName)
        .flatMapIterable(new Func1<Page<UsageDetailInner>, Iterable<UsageDetailInner>>() {
            @Override
            public Iterable<UsageDetailInner> call(Page<UsageDetailInner> page) {
                return page.items();
            }
        })
        .map(new Func1<UsageDetailInner, UsageDetail>() {
            @Override
            public UsageDetail call(UsageDetailInner inner) {
                return new UsageDetailImpl(inner, manager());
            }
        });
    }

}
