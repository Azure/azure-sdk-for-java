/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.consumption.v2018_03_31.implementation;

import com.google.common.reflect.TypeToken;
import com.microsoft.azure.AzureClient;
import com.microsoft.azure.AzureServiceClient;
import com.microsoft.azure.management.consumption.v2018_03_31.ErrorResponseException;
import com.microsoft.rest.credentials.ServiceClientCredentials;
import com.microsoft.rest.RestClient;
import com.microsoft.rest.ServiceCallback;
import com.microsoft.rest.ServiceFuture;
import com.microsoft.rest.ServiceResponse;
import java.io.IOException;
import okhttp3.ResponseBody;
import retrofit2.http.GET;
import retrofit2.http.Header;
import retrofit2.http.Headers;
import retrofit2.http.Path;
import retrofit2.http.Query;
import retrofit2.Response;
import rx.functions.Func1;
import rx.Observable;

/**
 * Initializes a new instance of the ConsumptionManagementClientImpl class.
 */
public class ConsumptionManagementClientImpl extends AzureServiceClient {
    /** The Retrofit service to perform REST calls. */
    private ConsumptionManagementClientService service;
    /** the {@link AzureClient} used for long running operations. */
    private AzureClient azureClient;

    /**
     * Gets the {@link AzureClient} used for long running operations.
     * @return the azure client;
     */
    public AzureClient getAzureClient() {
        return this.azureClient;
    }

    /** Version of the API to be used with the client request. The current version is 2018-03-31. */
    private String apiVersion;

    /**
     * Gets Version of the API to be used with the client request. The current version is 2018-03-31.
     *
     * @return the apiVersion value.
     */
    public String apiVersion() {
        return this.apiVersion;
    }

    /** Azure Subscription ID. */
    private String subscriptionId;

    /**
     * Gets Azure Subscription ID.
     *
     * @return the subscriptionId value.
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * Sets Azure Subscription ID.
     *
     * @param subscriptionId the subscriptionId value.
     * @return the service client itself
     */
    public ConsumptionManagementClientImpl withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }

    /** The preferred language for the response. */
    private String acceptLanguage;

    /**
     * Gets The preferred language for the response.
     *
     * @return the acceptLanguage value.
     */
    public String acceptLanguage() {
        return this.acceptLanguage;
    }

    /**
     * Sets The preferred language for the response.
     *
     * @param acceptLanguage the acceptLanguage value.
     * @return the service client itself
     */
    public ConsumptionManagementClientImpl withAcceptLanguage(String acceptLanguage) {
        this.acceptLanguage = acceptLanguage;
        return this;
    }

    /** The retry timeout in seconds for Long Running Operations. Default value is 30. */
    private int longRunningOperationRetryTimeout;

    /**
     * Gets The retry timeout in seconds for Long Running Operations. Default value is 30.
     *
     * @return the longRunningOperationRetryTimeout value.
     */
    public int longRunningOperationRetryTimeout() {
        return this.longRunningOperationRetryTimeout;
    }

    /**
     * Sets The retry timeout in seconds for Long Running Operations. Default value is 30.
     *
     * @param longRunningOperationRetryTimeout the longRunningOperationRetryTimeout value.
     * @return the service client itself
     */
    public ConsumptionManagementClientImpl withLongRunningOperationRetryTimeout(int longRunningOperationRetryTimeout) {
        this.longRunningOperationRetryTimeout = longRunningOperationRetryTimeout;
        return this;
    }

    /** Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true. */
    private boolean generateClientRequestId;

    /**
     * Gets Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.
     *
     * @return the generateClientRequestId value.
     */
    public boolean generateClientRequestId() {
        return this.generateClientRequestId;
    }

    /**
     * Sets Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.
     *
     * @param generateClientRequestId the generateClientRequestId value.
     * @return the service client itself
     */
    public ConsumptionManagementClientImpl withGenerateClientRequestId(boolean generateClientRequestId) {
        this.generateClientRequestId = generateClientRequestId;
        return this;
    }

    /**
     * The UsageDetailsInner object to access its operations.
     */
    private UsageDetailsInner usageDetails;

    /**
     * Gets the UsageDetailsInner object to access its operations.
     * @return the UsageDetailsInner object.
     */
    public UsageDetailsInner usageDetails() {
        return this.usageDetails;
    }

    /**
     * The UsageDetailsByBillingAccountsInner object to access its operations.
     */
    private UsageDetailsByBillingAccountsInner usageDetailsByBillingAccounts;

    /**
     * Gets the UsageDetailsByBillingAccountsInner object to access its operations.
     * @return the UsageDetailsByBillingAccountsInner object.
     */
    public UsageDetailsByBillingAccountsInner usageDetailsByBillingAccounts() {
        return this.usageDetailsByBillingAccounts;
    }

    /**
     * The UsageDetailsByDepartmentsInner object to access its operations.
     */
    private UsageDetailsByDepartmentsInner usageDetailsByDepartments;

    /**
     * Gets the UsageDetailsByDepartmentsInner object to access its operations.
     * @return the UsageDetailsByDepartmentsInner object.
     */
    public UsageDetailsByDepartmentsInner usageDetailsByDepartments() {
        return this.usageDetailsByDepartments;
    }

    /**
     * The UsageDetailsByEnrollmentAccountsInner object to access its operations.
     */
    private UsageDetailsByEnrollmentAccountsInner usageDetailsByEnrollmentAccounts;

    /**
     * Gets the UsageDetailsByEnrollmentAccountsInner object to access its operations.
     * @return the UsageDetailsByEnrollmentAccountsInner object.
     */
    public UsageDetailsByEnrollmentAccountsInner usageDetailsByEnrollmentAccounts() {
        return this.usageDetailsByEnrollmentAccounts;
    }

    /**
     * The MarketplacesInner object to access its operations.
     */
    private MarketplacesInner marketplaces;

    /**
     * Gets the MarketplacesInner object to access its operations.
     * @return the MarketplacesInner object.
     */
    public MarketplacesInner marketplaces() {
        return this.marketplaces;
    }

    /**
     * The MarketplacesByBillingAccountsInner object to access its operations.
     */
    private MarketplacesByBillingAccountsInner marketplacesByBillingAccounts;

    /**
     * Gets the MarketplacesByBillingAccountsInner object to access its operations.
     * @return the MarketplacesByBillingAccountsInner object.
     */
    public MarketplacesByBillingAccountsInner marketplacesByBillingAccounts() {
        return this.marketplacesByBillingAccounts;
    }

    /**
     * The MarketplacesByDepartmentsInner object to access its operations.
     */
    private MarketplacesByDepartmentsInner marketplacesByDepartments;

    /**
     * Gets the MarketplacesByDepartmentsInner object to access its operations.
     * @return the MarketplacesByDepartmentsInner object.
     */
    public MarketplacesByDepartmentsInner marketplacesByDepartments() {
        return this.marketplacesByDepartments;
    }

    /**
     * The MarketplacesByEnrollmentAccountsInner object to access its operations.
     */
    private MarketplacesByEnrollmentAccountsInner marketplacesByEnrollmentAccounts;

    /**
     * Gets the MarketplacesByEnrollmentAccountsInner object to access its operations.
     * @return the MarketplacesByEnrollmentAccountsInner object.
     */
    public MarketplacesByEnrollmentAccountsInner marketplacesByEnrollmentAccounts() {
        return this.marketplacesByEnrollmentAccounts;
    }

    /**
     * The GetBalancesByBillingAccountsInner object to access its operations.
     */
    private GetBalancesByBillingAccountsInner getBalancesByBillingAccounts;

    /**
     * Gets the GetBalancesByBillingAccountsInner object to access its operations.
     * @return the GetBalancesByBillingAccountsInner object.
     */
    public GetBalancesByBillingAccountsInner getBalancesByBillingAccounts() {
        return this.getBalancesByBillingAccounts;
    }

    /**
     * The ReservationsSummariesInner object to access its operations.
     */
    private ReservationsSummariesInner reservationsSummaries;

    /**
     * Gets the ReservationsSummariesInner object to access its operations.
     * @return the ReservationsSummariesInner object.
     */
    public ReservationsSummariesInner reservationsSummaries() {
        return this.reservationsSummaries;
    }

    /**
     * The ReservationsDetailsInner object to access its operations.
     */
    private ReservationsDetailsInner reservationsDetails;

    /**
     * Gets the ReservationsDetailsInner object to access its operations.
     * @return the ReservationsDetailsInner object.
     */
    public ReservationsDetailsInner reservationsDetails() {
        return this.reservationsDetails;
    }

    /**
     * The ReservationRecommendationsInner object to access its operations.
     */
    private ReservationRecommendationsInner reservationRecommendations;

    /**
     * Gets the ReservationRecommendationsInner object to access its operations.
     * @return the ReservationRecommendationsInner object.
     */
    public ReservationRecommendationsInner reservationRecommendations() {
        return this.reservationRecommendations;
    }

    /**
     * The BudgetsInner object to access its operations.
     */
    private BudgetsInner budgets;

    /**
     * Gets the BudgetsInner object to access its operations.
     * @return the BudgetsInner object.
     */
    public BudgetsInner budgets() {
        return this.budgets;
    }

    /**
     * The OperationsInner object to access its operations.
     */
    private OperationsInner operations;

    /**
     * Gets the OperationsInner object to access its operations.
     * @return the OperationsInner object.
     */
    public OperationsInner operations() {
        return this.operations;
    }

    /**
     * The PriceSheetsInner object to access its operations.
     */
    private PriceSheetsInner priceSheets;

    /**
     * Gets the PriceSheetsInner object to access its operations.
     * @return the PriceSheetsInner object.
     */
    public PriceSheetsInner priceSheets() {
        return this.priceSheets;
    }

    /**
     * The CostTagsInner object to access its operations.
     */
    private CostTagsInner costTags;

    /**
     * Gets the CostTagsInner object to access its operations.
     * @return the CostTagsInner object.
     */
    public CostTagsInner costTags() {
        return this.costTags;
    }

    /**
     * The TagsInner object to access its operations.
     */
    private TagsInner tags;

    /**
     * Gets the TagsInner object to access its operations.
     * @return the TagsInner object.
     */
    public TagsInner tags() {
        return this.tags;
    }

    /**
     * Initializes an instance of ConsumptionManagementClient client.
     *
     * @param credentials the management credentials for Azure
     */
    public ConsumptionManagementClientImpl(ServiceClientCredentials credentials) {
        this("https://management.azure.com", credentials);
    }

    /**
     * Initializes an instance of ConsumptionManagementClient client.
     *
     * @param baseUrl the base URL of the host
     * @param credentials the management credentials for Azure
     */
    public ConsumptionManagementClientImpl(String baseUrl, ServiceClientCredentials credentials) {
        super(baseUrl, credentials);
        initialize();
    }

    /**
     * Initializes an instance of ConsumptionManagementClient client.
     *
     * @param restClient the REST client to connect to Azure.
     */
    public ConsumptionManagementClientImpl(RestClient restClient) {
        super(restClient);
        initialize();
    }

    protected void initialize() {
        this.apiVersion = "2018-03-31";
        this.acceptLanguage = "en-US";
        this.longRunningOperationRetryTimeout = 30;
        this.generateClientRequestId = true;
        this.usageDetails = new UsageDetailsInner(restClient().retrofit(), this);
        this.usageDetailsByBillingAccounts = new UsageDetailsByBillingAccountsInner(restClient().retrofit(), this);
        this.usageDetailsByDepartments = new UsageDetailsByDepartmentsInner(restClient().retrofit(), this);
        this.usageDetailsByEnrollmentAccounts = new UsageDetailsByEnrollmentAccountsInner(restClient().retrofit(), this);
        this.marketplaces = new MarketplacesInner(restClient().retrofit(), this);
        this.marketplacesByBillingAccounts = new MarketplacesByBillingAccountsInner(restClient().retrofit(), this);
        this.marketplacesByDepartments = new MarketplacesByDepartmentsInner(restClient().retrofit(), this);
        this.marketplacesByEnrollmentAccounts = new MarketplacesByEnrollmentAccountsInner(restClient().retrofit(), this);
        this.getBalancesByBillingAccounts = new GetBalancesByBillingAccountsInner(restClient().retrofit(), this);
        this.reservationsSummaries = new ReservationsSummariesInner(restClient().retrofit(), this);
        this.reservationsDetails = new ReservationsDetailsInner(restClient().retrofit(), this);
        this.reservationRecommendations = new ReservationRecommendationsInner(restClient().retrofit(), this);
        this.budgets = new BudgetsInner(restClient().retrofit(), this);
        this.operations = new OperationsInner(restClient().retrofit(), this);
        this.priceSheets = new PriceSheetsInner(restClient().retrofit(), this);
        this.costTags = new CostTagsInner(restClient().retrofit(), this);
        this.tags = new TagsInner(restClient().retrofit(), this);
        this.azureClient = new AzureClient(this);
        initializeService();
    }

    /**
     * Gets the User-Agent header for the client.
     *
     * @return the user agent string.
     */
    @Override
    public String userAgent() {
        return String.format("%s (%s, %s, auto-generated)", super.userAgent(), "ConsumptionManagementClient", "2018-03-31");
    }

    private void initializeService() {
        service = restClient().retrofit().create(ConsumptionManagementClientService.class);
    }

    /**
     * The interface defining all the services for ConsumptionManagementClient to be
     * used by Retrofit to perform actually REST calls.
     */
    interface ConsumptionManagementClientService {
        @Headers({ "Content-Type: application/json; charset=utf-8", "x-ms-logging-context: com.microsoft.azure.management.consumption.v2018_03_31.ConsumptionManagementClient getBalancesByBillingAccount" })
        @GET("providers/Microsoft.Billing/billingAccounts/{billingAccountId}/providers/Microsoft.Consumption/balances")
        Observable<Response<ResponseBody>> getBalancesByBillingAccount(@Path("billingAccountId") String billingAccountId, @Query("api-version") String apiVersion, @Header("accept-language") String acceptLanguage, @Header("User-Agent") String userAgent);

    }

    /**
     * Gets the balances for a scope by billingAccountId. Balances are available via this API only for May 1, 2014 or later.
     *
     * @param billingAccountId BillingAccount ID
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @throws ErrorResponseException thrown if the request is rejected by server
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent
     * @return the BalanceInner object if successful.
     */
    public BalanceInner getBalancesByBillingAccount(String billingAccountId) {
        return getBalancesByBillingAccountWithServiceResponseAsync(billingAccountId).toBlocking().single().body();
    }

    /**
     * Gets the balances for a scope by billingAccountId. Balances are available via this API only for May 1, 2014 or later.
     *
     * @param billingAccountId BillingAccount ID
     * @param serviceCallback the async ServiceCallback to handle successful and failed responses.
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the {@link ServiceFuture} object
     */
    public ServiceFuture<BalanceInner> getBalancesByBillingAccountAsync(String billingAccountId, final ServiceCallback<BalanceInner> serviceCallback) {
        return ServiceFuture.fromResponse(getBalancesByBillingAccountWithServiceResponseAsync(billingAccountId), serviceCallback);
    }

    /**
     * Gets the balances for a scope by billingAccountId. Balances are available via this API only for May 1, 2014 or later.
     *
     * @param billingAccountId BillingAccount ID
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the BalanceInner object
     */
    public Observable<BalanceInner> getBalancesByBillingAccountAsync(String billingAccountId) {
        return getBalancesByBillingAccountWithServiceResponseAsync(billingAccountId).map(new Func1<ServiceResponse<BalanceInner>, BalanceInner>() {
            @Override
            public BalanceInner call(ServiceResponse<BalanceInner> response) {
                return response.body();
            }
        });
    }

    /**
     * Gets the balances for a scope by billingAccountId. Balances are available via this API only for May 1, 2014 or later.
     *
     * @param billingAccountId BillingAccount ID
     * @throws IllegalArgumentException thrown if parameters fail the validation
     * @return the observable to the BalanceInner object
     */
    public Observable<ServiceResponse<BalanceInner>> getBalancesByBillingAccountWithServiceResponseAsync(String billingAccountId) {
        if (billingAccountId == null) {
            throw new IllegalArgumentException("Parameter billingAccountId is required and cannot be null.");
        }
        if (this.apiVersion() == null) {
            throw new IllegalArgumentException("Parameter this.apiVersion() is required and cannot be null.");
        }
        return service.getBalancesByBillingAccount(billingAccountId, this.apiVersion(), this.acceptLanguage(), this.userAgent())
            .flatMap(new Func1<Response<ResponseBody>, Observable<ServiceResponse<BalanceInner>>>() {
                @Override
                public Observable<ServiceResponse<BalanceInner>> call(Response<ResponseBody> response) {
                    try {
                        ServiceResponse<BalanceInner> clientResponse = getBalancesByBillingAccountDelegate(response);
                        return Observable.just(clientResponse);
                    } catch (Throwable t) {
                        return Observable.error(t);
                    }
                }
            });
    }

    private ServiceResponse<BalanceInner> getBalancesByBillingAccountDelegate(Response<ResponseBody> response) throws ErrorResponseException, IOException, IllegalArgumentException {
        return this.restClient().responseBuilderFactory().<BalanceInner, ErrorResponseException>newInstance(this.serializerAdapter())
                .register(200, new TypeToken<BalanceInner>() { }.getType())
                .registerError(ErrorResponseException.class)
                .build(response);
    }

}
