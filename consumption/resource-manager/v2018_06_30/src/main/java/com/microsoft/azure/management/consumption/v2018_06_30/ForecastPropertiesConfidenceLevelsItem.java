/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.consumption.v2018_06_30;

import java.math.BigDecimal;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The ForecastPropertiesConfidenceLevelsItem model.
 */
public class ForecastPropertiesConfidenceLevelsItem {
    /**
     * The percentage level of the confidence.
     */
    @JsonProperty(value = "percentage", access = JsonProperty.Access.WRITE_ONLY)
    private BigDecimal percentage;

    /**
     * The boundary of the percentage, values could be 'Upper' or 'Lower'.
     * Possible values include: 'Upper', 'Lower'.
     */
    @JsonProperty(value = "bound")
    private Bound bound;

    /**
     * The amount of forecast within the percentage level.
     */
    @JsonProperty(value = "value", access = JsonProperty.Access.WRITE_ONLY)
    private BigDecimal value;

    /**
     * Get the percentage level of the confidence.
     *
     * @return the percentage value
     */
    public BigDecimal percentage() {
        return this.percentage;
    }

    /**
     * Get the boundary of the percentage, values could be 'Upper' or 'Lower'. Possible values include: 'Upper', 'Lower'.
     *
     * @return the bound value
     */
    public Bound bound() {
        return this.bound;
    }

    /**
     * Set the boundary of the percentage, values could be 'Upper' or 'Lower'. Possible values include: 'Upper', 'Lower'.
     *
     * @param bound the bound value to set
     * @return the ForecastPropertiesConfidenceLevelsItem object itself.
     */
    public ForecastPropertiesConfidenceLevelsItem withBound(Bound bound) {
        this.bound = bound;
        return this;
    }

    /**
     * Get the amount of forecast within the percentage level.
     *
     * @return the value value
     */
    public BigDecimal value() {
        return this.value;
    }

}
