/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.consumption.v2018_06_30.implementation;

import com.microsoft.azure.management.consumption.v2018_06_30.Balance;
import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import java.util.List;
import com.microsoft.azure.management.consumption.v2018_06_30.BalancePropertiesAdjustmentDetailsItem;
import java.math.BigDecimal;
import com.microsoft.azure.management.consumption.v2018_06_30.BillingFrequency;
import com.microsoft.azure.management.consumption.v2018_06_30.BalancePropertiesNewPurchasesDetailsItem;
import java.util.Map;

class BalanceImpl extends WrapperImpl<BalanceInner> implements Balance {
    private final ConsumptionManager manager;
    BalanceImpl(BalanceInner inner, ConsumptionManager manager) {
        super(inner);
        this.manager = manager;
    }

    @Override
    public ConsumptionManager manager() {
        return this.manager;
    }

    @Override
    public List<BalancePropertiesAdjustmentDetailsItem> adjustmentDetails() {
        return this.inner().adjustmentDetails();
    }

    @Override
    public BigDecimal adjustments() {
        return this.inner().adjustments();
    }

    @Override
    public BigDecimal azureMarketplaceServiceCharges() {
        return this.inner().azureMarketplaceServiceCharges();
    }

    @Override
    public BigDecimal beginningBalance() {
        return this.inner().beginningBalance();
    }

    @Override
    public BillingFrequency billingFrequency() {
        return this.inner().billingFrequency();
    }

    @Override
    public BigDecimal chargesBilledSeparately() {
        return this.inner().chargesBilledSeparately();
    }

    @Override
    public String currency() {
        return this.inner().currency();
    }

    @Override
    public BigDecimal endingBalance() {
        return this.inner().endingBalance();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public BigDecimal newPurchases() {
        return this.inner().newPurchases();
    }

    @Override
    public List<BalancePropertiesNewPurchasesDetailsItem> newPurchasesDetails() {
        return this.inner().newPurchasesDetails();
    }

    @Override
    public Boolean priceHidden() {
        return this.inner().priceHidden();
    }

    @Override
    public BigDecimal serviceOverage() {
        return this.inner().serviceOverage();
    }

    @Override
    public Map<String, String> tags() {
        return this.inner().tags();
    }

    @Override
    public BigDecimal totalOverage() {
        return this.inner().totalOverage();
    }

    @Override
    public BigDecimal totalUsage() {
        return this.inner().totalUsage();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public BigDecimal utilized() {
        return this.inner().utilized();
    }

}
