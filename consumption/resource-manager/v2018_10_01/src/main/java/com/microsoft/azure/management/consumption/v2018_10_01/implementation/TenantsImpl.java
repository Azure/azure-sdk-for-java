/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.consumption.v2018_10_01.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.consumption.v2018_10_01.Tenants;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.consumption.v2018_10_01.TenantListResult;

class TenantsImpl extends WrapperImpl<TenantsInner> implements Tenants {
    private final ConsumptionManager manager;

    TenantsImpl(ConsumptionManager manager) {
        super(manager.inner().tenants());
        this.manager = manager;
    }

    public ConsumptionManager manager() {
        return this.manager;
    }

    @Override
    public Observable<TenantListResult> getAsync(String billingAccountId, String billingProfileId) {
        TenantsInner client = this.inner();
        return client.getAsync(billingAccountId, billingProfileId)
        .map(new Func1<TenantListResultInner, TenantListResult>() {
            @Override
            public TenantListResult call(TenantListResultInner inner) {
                return new TenantListResultImpl(inner, manager());
            }
        });
    }

}
