/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.consumption.v2018_10_01.implementation;

import org.joda.time.DateTime;
import java.math.BigDecimal;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * A management group aggregated cost resource.
 */
@JsonFlatten
public class ManagementGroupAggregatedCostResultInner extends ProxyResource {
    /**
     * The id of the billing period resource that the aggregated cost belongs
     * to.
     */
    @JsonProperty(value = "properties.billingPeriodId", access = JsonProperty.Access.WRITE_ONLY)
    private String billingPeriodId;

    /**
     * The start of the date time range covered by aggregated cost.
     */
    @JsonProperty(value = "properties.usageStart", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime usageStart;

    /**
     * The end of the date time range covered by the aggregated cost.
     */
    @JsonProperty(value = "properties.usageEnd", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime usageEnd;

    /**
     * Azure Charges.
     */
    @JsonProperty(value = "properties.azureCharges", access = JsonProperty.Access.WRITE_ONLY)
    private BigDecimal azureCharges;

    /**
     * Marketplace Charges.
     */
    @JsonProperty(value = "properties.marketplaceCharges", access = JsonProperty.Access.WRITE_ONLY)
    private BigDecimal marketplaceCharges;

    /**
     * Charges Billed Separately.
     */
    @JsonProperty(value = "properties.chargesBilledSeparately", access = JsonProperty.Access.WRITE_ONLY)
    private BigDecimal chargesBilledSeparately;

    /**
     * The ISO currency in which the meter is charged, for example, USD.
     */
    @JsonProperty(value = "properties.currency", access = JsonProperty.Access.WRITE_ONLY)
    private String currency;

    /**
     * Children of a management group.
     */
    @JsonProperty(value = "properties.children")
    private List<ManagementGroupAggregatedCostResultInner> children;

    /**
     * List of subscription Guids included in the calculation of aggregated
     * cost.
     */
    @JsonProperty(value = "properties.includedSubscriptions")
    private List<String> includedSubscriptions;

    /**
     * List of subscription Guids excluded from the calculation of aggregated
     * cost.
     */
    @JsonProperty(value = "properties.excludedSubscriptions")
    private List<String> excludedSubscriptions;

    /**
     * Resource tags.
     */
    @JsonProperty(value = "tags", access = JsonProperty.Access.WRITE_ONLY)
    private Map<String, String> tags;

    /**
     * Get the id of the billing period resource that the aggregated cost belongs to.
     *
     * @return the billingPeriodId value
     */
    public String billingPeriodId() {
        return this.billingPeriodId;
    }

    /**
     * Get the start of the date time range covered by aggregated cost.
     *
     * @return the usageStart value
     */
    public DateTime usageStart() {
        return this.usageStart;
    }

    /**
     * Get the end of the date time range covered by the aggregated cost.
     *
     * @return the usageEnd value
     */
    public DateTime usageEnd() {
        return this.usageEnd;
    }

    /**
     * Get azure Charges.
     *
     * @return the azureCharges value
     */
    public BigDecimal azureCharges() {
        return this.azureCharges;
    }

    /**
     * Get marketplace Charges.
     *
     * @return the marketplaceCharges value
     */
    public BigDecimal marketplaceCharges() {
        return this.marketplaceCharges;
    }

    /**
     * Get charges Billed Separately.
     *
     * @return the chargesBilledSeparately value
     */
    public BigDecimal chargesBilledSeparately() {
        return this.chargesBilledSeparately;
    }

    /**
     * Get the ISO currency in which the meter is charged, for example, USD.
     *
     * @return the currency value
     */
    public String currency() {
        return this.currency;
    }

    /**
     * Get children of a management group.
     *
     * @return the children value
     */
    public List<ManagementGroupAggregatedCostResultInner> children() {
        return this.children;
    }

    /**
     * Set children of a management group.
     *
     * @param children the children value to set
     * @return the ManagementGroupAggregatedCostResultInner object itself.
     */
    public ManagementGroupAggregatedCostResultInner withChildren(List<ManagementGroupAggregatedCostResultInner> children) {
        this.children = children;
        return this;
    }

    /**
     * Get list of subscription Guids included in the calculation of aggregated cost.
     *
     * @return the includedSubscriptions value
     */
    public List<String> includedSubscriptions() {
        return this.includedSubscriptions;
    }

    /**
     * Set list of subscription Guids included in the calculation of aggregated cost.
     *
     * @param includedSubscriptions the includedSubscriptions value to set
     * @return the ManagementGroupAggregatedCostResultInner object itself.
     */
    public ManagementGroupAggregatedCostResultInner withIncludedSubscriptions(List<String> includedSubscriptions) {
        this.includedSubscriptions = includedSubscriptions;
        return this;
    }

    /**
     * Get list of subscription Guids excluded from the calculation of aggregated cost.
     *
     * @return the excludedSubscriptions value
     */
    public List<String> excludedSubscriptions() {
        return this.excludedSubscriptions;
    }

    /**
     * Set list of subscription Guids excluded from the calculation of aggregated cost.
     *
     * @param excludedSubscriptions the excludedSubscriptions value to set
     * @return the ManagementGroupAggregatedCostResultInner object itself.
     */
    public ManagementGroupAggregatedCostResultInner withExcludedSubscriptions(List<String> excludedSubscriptions) {
        this.excludedSubscriptions = excludedSubscriptions;
        return this;
    }

    /**
     * Get resource tags.
     *
     * @return the tags value
     */
    public Map<String, String> tags() {
        return this.tags;
    }

}
