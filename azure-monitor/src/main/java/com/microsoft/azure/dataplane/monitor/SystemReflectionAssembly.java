/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.dataplane.monitor;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The SystemReflectionAssembly model.
 */
public class SystemReflectionAssembly {
    /**
     * The codeBase property.
     */
    @JsonProperty(value = "CodeBase")
    private String codeBase;

    /**
     * The escapedCodeBase property.
     */
    @JsonProperty(value = "EscapedCodeBase")
    private String escapedCodeBase;

    /**
     * The fullName property.
     */
    @JsonProperty(value = "FullName")
    private String fullName;

    /**
     * The entryPoint property.
     */
    @JsonProperty(value = "EntryPoint")
    private SystemReflectionMethodInfo entryPoint;

    /**
     * The exportedTypes property.
     */
    @JsonProperty(value = "ExportedTypes")
    private List<SystemType> exportedTypes;

    /**
     * The definedTypes property.
     */
    @JsonProperty(value = "DefinedTypes")
    private List<SystemReflectionTypeInfo> definedTypes;

    /**
     * The evidence property.
     */
    @JsonProperty(value = "Evidence")
    private List<Object> evidence;

    /**
     * The permissionSet property.
     */
    @JsonProperty(value = "PermissionSet")
    private List<Object> permissionSet;

    /**
     * The isFullyTrusted property.
     */
    @JsonProperty(value = "IsFullyTrusted")
    private Boolean isFullyTrusted;

    /**
     * Possible values include: 'None', 'Level1', 'Level2'.
     */
    @JsonProperty(value = "SecurityRuleSet")
    private String securityRuleSet;

    /**
     * The manifestModule property.
     */
    @JsonProperty(value = "ManifestModule")
    private SystemReflectionModule manifestModule;

    /**
     * The customAttributes property.
     */
    @JsonProperty(value = "CustomAttributes")
    private List<SystemReflectionCustomAttributeData> customAttributes;

    /**
     * The reflectionOnly property.
     */
    @JsonProperty(value = "ReflectionOnly")
    private Boolean reflectionOnly;

    /**
     * The modules property.
     */
    @JsonProperty(value = "Modules")
    private List<SystemReflectionModule> modules;

    /**
     * The location property.
     */
    @JsonProperty(value = "Location")
    private String location;

    /**
     * The imageRuntimeVersion property.
     */
    @JsonProperty(value = "ImageRuntimeVersion")
    private String imageRuntimeVersion;

    /**
     * The globalAssemblyCache property.
     */
    @JsonProperty(value = "GlobalAssemblyCache")
    private Boolean globalAssemblyCache;

    /**
     * The hostContext property.
     */
    @JsonProperty(value = "HostContext")
    private Long hostContext;

    /**
     * The isDynamic property.
     */
    @JsonProperty(value = "IsDynamic")
    private Boolean isDynamic;

    /**
     * Get the codeBase value.
     *
     * @return the codeBase value
     */
    public String codeBase() {
        return this.codeBase;
    }

    /**
     * Set the codeBase value.
     *
     * @param codeBase the codeBase value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withCodeBase(String codeBase) {
        this.codeBase = codeBase;
        return this;
    }

    /**
     * Get the escapedCodeBase value.
     *
     * @return the escapedCodeBase value
     */
    public String escapedCodeBase() {
        return this.escapedCodeBase;
    }

    /**
     * Set the escapedCodeBase value.
     *
     * @param escapedCodeBase the escapedCodeBase value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withEscapedCodeBase(String escapedCodeBase) {
        this.escapedCodeBase = escapedCodeBase;
        return this;
    }

    /**
     * Get the fullName value.
     *
     * @return the fullName value
     */
    public String fullName() {
        return this.fullName;
    }

    /**
     * Set the fullName value.
     *
     * @param fullName the fullName value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withFullName(String fullName) {
        this.fullName = fullName;
        return this;
    }

    /**
     * Get the entryPoint value.
     *
     * @return the entryPoint value
     */
    public SystemReflectionMethodInfo entryPoint() {
        return this.entryPoint;
    }

    /**
     * Set the entryPoint value.
     *
     * @param entryPoint the entryPoint value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withEntryPoint(SystemReflectionMethodInfo entryPoint) {
        this.entryPoint = entryPoint;
        return this;
    }

    /**
     * Get the exportedTypes value.
     *
     * @return the exportedTypes value
     */
    public List<SystemType> exportedTypes() {
        return this.exportedTypes;
    }

    /**
     * Set the exportedTypes value.
     *
     * @param exportedTypes the exportedTypes value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withExportedTypes(List<SystemType> exportedTypes) {
        this.exportedTypes = exportedTypes;
        return this;
    }

    /**
     * Get the definedTypes value.
     *
     * @return the definedTypes value
     */
    public List<SystemReflectionTypeInfo> definedTypes() {
        return this.definedTypes;
    }

    /**
     * Set the definedTypes value.
     *
     * @param definedTypes the definedTypes value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withDefinedTypes(List<SystemReflectionTypeInfo> definedTypes) {
        this.definedTypes = definedTypes;
        return this;
    }

    /**
     * Get the evidence value.
     *
     * @return the evidence value
     */
    public List<Object> evidence() {
        return this.evidence;
    }

    /**
     * Set the evidence value.
     *
     * @param evidence the evidence value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withEvidence(List<Object> evidence) {
        this.evidence = evidence;
        return this;
    }

    /**
     * Get the permissionSet value.
     *
     * @return the permissionSet value
     */
    public List<Object> permissionSet() {
        return this.permissionSet;
    }

    /**
     * Set the permissionSet value.
     *
     * @param permissionSet the permissionSet value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withPermissionSet(List<Object> permissionSet) {
        this.permissionSet = permissionSet;
        return this;
    }

    /**
     * Get the isFullyTrusted value.
     *
     * @return the isFullyTrusted value
     */
    public Boolean isFullyTrusted() {
        return this.isFullyTrusted;
    }

    /**
     * Set the isFullyTrusted value.
     *
     * @param isFullyTrusted the isFullyTrusted value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withIsFullyTrusted(Boolean isFullyTrusted) {
        this.isFullyTrusted = isFullyTrusted;
        return this;
    }

    /**
     * Get possible values include: 'None', 'Level1', 'Level2'.
     *
     * @return the securityRuleSet value
     */
    public String securityRuleSet() {
        return this.securityRuleSet;
    }

    /**
     * Set possible values include: 'None', 'Level1', 'Level2'.
     *
     * @param securityRuleSet the securityRuleSet value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withSecurityRuleSet(String securityRuleSet) {
        this.securityRuleSet = securityRuleSet;
        return this;
    }

    /**
     * Get the manifestModule value.
     *
     * @return the manifestModule value
     */
    public SystemReflectionModule manifestModule() {
        return this.manifestModule;
    }

    /**
     * Set the manifestModule value.
     *
     * @param manifestModule the manifestModule value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withManifestModule(SystemReflectionModule manifestModule) {
        this.manifestModule = manifestModule;
        return this;
    }

    /**
     * Get the customAttributes value.
     *
     * @return the customAttributes value
     */
    public List<SystemReflectionCustomAttributeData> customAttributes() {
        return this.customAttributes;
    }

    /**
     * Set the customAttributes value.
     *
     * @param customAttributes the customAttributes value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withCustomAttributes(List<SystemReflectionCustomAttributeData> customAttributes) {
        this.customAttributes = customAttributes;
        return this;
    }

    /**
     * Get the reflectionOnly value.
     *
     * @return the reflectionOnly value
     */
    public Boolean reflectionOnly() {
        return this.reflectionOnly;
    }

    /**
     * Set the reflectionOnly value.
     *
     * @param reflectionOnly the reflectionOnly value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withReflectionOnly(Boolean reflectionOnly) {
        this.reflectionOnly = reflectionOnly;
        return this;
    }

    /**
     * Get the modules value.
     *
     * @return the modules value
     */
    public List<SystemReflectionModule> modules() {
        return this.modules;
    }

    /**
     * Set the modules value.
     *
     * @param modules the modules value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withModules(List<SystemReflectionModule> modules) {
        this.modules = modules;
        return this;
    }

    /**
     * Get the location value.
     *
     * @return the location value
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location value.
     *
     * @param location the location value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the imageRuntimeVersion value.
     *
     * @return the imageRuntimeVersion value
     */
    public String imageRuntimeVersion() {
        return this.imageRuntimeVersion;
    }

    /**
     * Set the imageRuntimeVersion value.
     *
     * @param imageRuntimeVersion the imageRuntimeVersion value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withImageRuntimeVersion(String imageRuntimeVersion) {
        this.imageRuntimeVersion = imageRuntimeVersion;
        return this;
    }

    /**
     * Get the globalAssemblyCache value.
     *
     * @return the globalAssemblyCache value
     */
    public Boolean globalAssemblyCache() {
        return this.globalAssemblyCache;
    }

    /**
     * Set the globalAssemblyCache value.
     *
     * @param globalAssemblyCache the globalAssemblyCache value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withGlobalAssemblyCache(Boolean globalAssemblyCache) {
        this.globalAssemblyCache = globalAssemblyCache;
        return this;
    }

    /**
     * Get the hostContext value.
     *
     * @return the hostContext value
     */
    public Long hostContext() {
        return this.hostContext;
    }

    /**
     * Set the hostContext value.
     *
     * @param hostContext the hostContext value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withHostContext(Long hostContext) {
        this.hostContext = hostContext;
        return this;
    }

    /**
     * Get the isDynamic value.
     *
     * @return the isDynamic value
     */
    public Boolean isDynamic() {
        return this.isDynamic;
    }

    /**
     * Set the isDynamic value.
     *
     * @param isDynamic the isDynamic value to set
     * @return the SystemReflectionAssembly object itself.
     */
    public SystemReflectionAssembly withIsDynamic(Boolean isDynamic) {
        this.isDynamic = isDynamic;
        return this;
    }

}
