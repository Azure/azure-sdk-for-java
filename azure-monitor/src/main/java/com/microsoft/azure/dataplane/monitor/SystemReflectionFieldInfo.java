/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.dataplane.monitor;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The SystemReflectionFieldInfo model.
 */
public class SystemReflectionFieldInfo {
    /**
     * Possible values include: 'Constructor', 'Event', 'Field', 'Method',
     * 'Property', 'TypeInfo', 'Custom', 'NestedType', 'All'.
     */
    @JsonProperty(value = "MemberType")
    private String memberType;

    /**
     * The fieldHandle property.
     */
    @JsonProperty(value = "FieldHandle")
    private SystemRuntimeFieldHandle fieldHandle;

    /**
     * The fieldType property.
     */
    @JsonProperty(value = "FieldType")
    private SystemType fieldType;

    /**
     * Possible values include: 'PrivateScope', 'Private', 'FamANDAssem',
     * 'Assembly', 'Family', 'FamORAssem', 'Public', 'FieldAccessMask',
     * 'Static', 'InitOnly', 'Literal', 'NotSerialized', 'HasFieldRVA',
     * 'SpecialName', 'RTSpecialName', 'HasFieldMarshal', 'PinvokeImpl',
     * 'HasDefault', 'ReservedMask'.
     */
    @JsonProperty(value = "Attributes")
    private String attributes;

    /**
     * The isPublic property.
     */
    @JsonProperty(value = "IsPublic")
    private Boolean isPublic;

    /**
     * The isPrivate property.
     */
    @JsonProperty(value = "IsPrivate")
    private Boolean isPrivate;

    /**
     * The isFamily property.
     */
    @JsonProperty(value = "IsFamily")
    private Boolean isFamily;

    /**
     * The isAssembly property.
     */
    @JsonProperty(value = "IsAssembly")
    private Boolean isAssembly;

    /**
     * The isFamilyAndAssembly property.
     */
    @JsonProperty(value = "IsFamilyAndAssembly")
    private Boolean isFamilyAndAssembly;

    /**
     * The isFamilyOrAssembly property.
     */
    @JsonProperty(value = "IsFamilyOrAssembly")
    private Boolean isFamilyOrAssembly;

    /**
     * The isStatic property.
     */
    @JsonProperty(value = "IsStatic")
    private Boolean isStatic;

    /**
     * The isInitOnly property.
     */
    @JsonProperty(value = "IsInitOnly")
    private Boolean isInitOnly;

    /**
     * The isLiteral property.
     */
    @JsonProperty(value = "IsLiteral")
    private Boolean isLiteral;

    /**
     * The isNotSerialized property.
     */
    @JsonProperty(value = "IsNotSerialized")
    private Boolean isNotSerialized;

    /**
     * The isSpecialName property.
     */
    @JsonProperty(value = "IsSpecialName")
    private Boolean isSpecialName;

    /**
     * The isPinvokeImpl property.
     */
    @JsonProperty(value = "IsPinvokeImpl")
    private Boolean isPinvokeImpl;

    /**
     * The isSecurityCritical property.
     */
    @JsonProperty(value = "IsSecurityCritical")
    private Boolean isSecurityCritical;

    /**
     * The isSecuritySafeCritical property.
     */
    @JsonProperty(value = "IsSecuritySafeCritical")
    private Boolean isSecuritySafeCritical;

    /**
     * The isSecurityTransparent property.
     */
    @JsonProperty(value = "IsSecurityTransparent")
    private Boolean isSecurityTransparent;

    /**
     * The name property.
     */
    @JsonProperty(value = "Name")
    private String name;

    /**
     * The declaringType property.
     */
    @JsonProperty(value = "DeclaringType")
    private SystemType declaringType;

    /**
     * The reflectedType property.
     */
    @JsonProperty(value = "ReflectedType")
    private SystemType reflectedType;

    /**
     * The customAttributes property.
     */
    @JsonProperty(value = "CustomAttributes")
    private List<SystemReflectionCustomAttributeData> customAttributes;

    /**
     * The metadataToken property.
     */
    @JsonProperty(value = "MetadataToken")
    private Integer metadataToken;

    /**
     * The module property.
     */
    @JsonProperty(value = "Module")
    private SystemReflectionModule module;

    /**
     * Get possible values include: 'Constructor', 'Event', 'Field', 'Method', 'Property', 'TypeInfo', 'Custom', 'NestedType', 'All'.
     *
     * @return the memberType value
     */
    public String memberType() {
        return this.memberType;
    }

    /**
     * Set possible values include: 'Constructor', 'Event', 'Field', 'Method', 'Property', 'TypeInfo', 'Custom', 'NestedType', 'All'.
     *
     * @param memberType the memberType value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withMemberType(String memberType) {
        this.memberType = memberType;
        return this;
    }

    /**
     * Get the fieldHandle value.
     *
     * @return the fieldHandle value
     */
    public SystemRuntimeFieldHandle fieldHandle() {
        return this.fieldHandle;
    }

    /**
     * Set the fieldHandle value.
     *
     * @param fieldHandle the fieldHandle value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withFieldHandle(SystemRuntimeFieldHandle fieldHandle) {
        this.fieldHandle = fieldHandle;
        return this;
    }

    /**
     * Get the fieldType value.
     *
     * @return the fieldType value
     */
    public SystemType fieldType() {
        return this.fieldType;
    }

    /**
     * Set the fieldType value.
     *
     * @param fieldType the fieldType value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withFieldType(SystemType fieldType) {
        this.fieldType = fieldType;
        return this;
    }

    /**
     * Get possible values include: 'PrivateScope', 'Private', 'FamANDAssem', 'Assembly', 'Family', 'FamORAssem', 'Public', 'FieldAccessMask', 'Static', 'InitOnly', 'Literal', 'NotSerialized', 'HasFieldRVA', 'SpecialName', 'RTSpecialName', 'HasFieldMarshal', 'PinvokeImpl', 'HasDefault', 'ReservedMask'.
     *
     * @return the attributes value
     */
    public String attributes() {
        return this.attributes;
    }

    /**
     * Set possible values include: 'PrivateScope', 'Private', 'FamANDAssem', 'Assembly', 'Family', 'FamORAssem', 'Public', 'FieldAccessMask', 'Static', 'InitOnly', 'Literal', 'NotSerialized', 'HasFieldRVA', 'SpecialName', 'RTSpecialName', 'HasFieldMarshal', 'PinvokeImpl', 'HasDefault', 'ReservedMask'.
     *
     * @param attributes the attributes value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withAttributes(String attributes) {
        this.attributes = attributes;
        return this;
    }

    /**
     * Get the isPublic value.
     *
     * @return the isPublic value
     */
    public Boolean isPublic() {
        return this.isPublic;
    }

    /**
     * Set the isPublic value.
     *
     * @param isPublic the isPublic value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withIsPublic(Boolean isPublic) {
        this.isPublic = isPublic;
        return this;
    }

    /**
     * Get the isPrivate value.
     *
     * @return the isPrivate value
     */
    public Boolean isPrivate() {
        return this.isPrivate;
    }

    /**
     * Set the isPrivate value.
     *
     * @param isPrivate the isPrivate value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withIsPrivate(Boolean isPrivate) {
        this.isPrivate = isPrivate;
        return this;
    }

    /**
     * Get the isFamily value.
     *
     * @return the isFamily value
     */
    public Boolean isFamily() {
        return this.isFamily;
    }

    /**
     * Set the isFamily value.
     *
     * @param isFamily the isFamily value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withIsFamily(Boolean isFamily) {
        this.isFamily = isFamily;
        return this;
    }

    /**
     * Get the isAssembly value.
     *
     * @return the isAssembly value
     */
    public Boolean isAssembly() {
        return this.isAssembly;
    }

    /**
     * Set the isAssembly value.
     *
     * @param isAssembly the isAssembly value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withIsAssembly(Boolean isAssembly) {
        this.isAssembly = isAssembly;
        return this;
    }

    /**
     * Get the isFamilyAndAssembly value.
     *
     * @return the isFamilyAndAssembly value
     */
    public Boolean isFamilyAndAssembly() {
        return this.isFamilyAndAssembly;
    }

    /**
     * Set the isFamilyAndAssembly value.
     *
     * @param isFamilyAndAssembly the isFamilyAndAssembly value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withIsFamilyAndAssembly(Boolean isFamilyAndAssembly) {
        this.isFamilyAndAssembly = isFamilyAndAssembly;
        return this;
    }

    /**
     * Get the isFamilyOrAssembly value.
     *
     * @return the isFamilyOrAssembly value
     */
    public Boolean isFamilyOrAssembly() {
        return this.isFamilyOrAssembly;
    }

    /**
     * Set the isFamilyOrAssembly value.
     *
     * @param isFamilyOrAssembly the isFamilyOrAssembly value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withIsFamilyOrAssembly(Boolean isFamilyOrAssembly) {
        this.isFamilyOrAssembly = isFamilyOrAssembly;
        return this;
    }

    /**
     * Get the isStatic value.
     *
     * @return the isStatic value
     */
    public Boolean isStatic() {
        return this.isStatic;
    }

    /**
     * Set the isStatic value.
     *
     * @param isStatic the isStatic value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withIsStatic(Boolean isStatic) {
        this.isStatic = isStatic;
        return this;
    }

    /**
     * Get the isInitOnly value.
     *
     * @return the isInitOnly value
     */
    public Boolean isInitOnly() {
        return this.isInitOnly;
    }

    /**
     * Set the isInitOnly value.
     *
     * @param isInitOnly the isInitOnly value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withIsInitOnly(Boolean isInitOnly) {
        this.isInitOnly = isInitOnly;
        return this;
    }

    /**
     * Get the isLiteral value.
     *
     * @return the isLiteral value
     */
    public Boolean isLiteral() {
        return this.isLiteral;
    }

    /**
     * Set the isLiteral value.
     *
     * @param isLiteral the isLiteral value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withIsLiteral(Boolean isLiteral) {
        this.isLiteral = isLiteral;
        return this;
    }

    /**
     * Get the isNotSerialized value.
     *
     * @return the isNotSerialized value
     */
    public Boolean isNotSerialized() {
        return this.isNotSerialized;
    }

    /**
     * Set the isNotSerialized value.
     *
     * @param isNotSerialized the isNotSerialized value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withIsNotSerialized(Boolean isNotSerialized) {
        this.isNotSerialized = isNotSerialized;
        return this;
    }

    /**
     * Get the isSpecialName value.
     *
     * @return the isSpecialName value
     */
    public Boolean isSpecialName() {
        return this.isSpecialName;
    }

    /**
     * Set the isSpecialName value.
     *
     * @param isSpecialName the isSpecialName value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withIsSpecialName(Boolean isSpecialName) {
        this.isSpecialName = isSpecialName;
        return this;
    }

    /**
     * Get the isPinvokeImpl value.
     *
     * @return the isPinvokeImpl value
     */
    public Boolean isPinvokeImpl() {
        return this.isPinvokeImpl;
    }

    /**
     * Set the isPinvokeImpl value.
     *
     * @param isPinvokeImpl the isPinvokeImpl value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withIsPinvokeImpl(Boolean isPinvokeImpl) {
        this.isPinvokeImpl = isPinvokeImpl;
        return this;
    }

    /**
     * Get the isSecurityCritical value.
     *
     * @return the isSecurityCritical value
     */
    public Boolean isSecurityCritical() {
        return this.isSecurityCritical;
    }

    /**
     * Set the isSecurityCritical value.
     *
     * @param isSecurityCritical the isSecurityCritical value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withIsSecurityCritical(Boolean isSecurityCritical) {
        this.isSecurityCritical = isSecurityCritical;
        return this;
    }

    /**
     * Get the isSecuritySafeCritical value.
     *
     * @return the isSecuritySafeCritical value
     */
    public Boolean isSecuritySafeCritical() {
        return this.isSecuritySafeCritical;
    }

    /**
     * Set the isSecuritySafeCritical value.
     *
     * @param isSecuritySafeCritical the isSecuritySafeCritical value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withIsSecuritySafeCritical(Boolean isSecuritySafeCritical) {
        this.isSecuritySafeCritical = isSecuritySafeCritical;
        return this;
    }

    /**
     * Get the isSecurityTransparent value.
     *
     * @return the isSecurityTransparent value
     */
    public Boolean isSecurityTransparent() {
        return this.isSecurityTransparent;
    }

    /**
     * Set the isSecurityTransparent value.
     *
     * @param isSecurityTransparent the isSecurityTransparent value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withIsSecurityTransparent(Boolean isSecurityTransparent) {
        this.isSecurityTransparent = isSecurityTransparent;
        return this;
    }

    /**
     * Get the name value.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name value.
     *
     * @param name the name value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the declaringType value.
     *
     * @return the declaringType value
     */
    public SystemType declaringType() {
        return this.declaringType;
    }

    /**
     * Set the declaringType value.
     *
     * @param declaringType the declaringType value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withDeclaringType(SystemType declaringType) {
        this.declaringType = declaringType;
        return this;
    }

    /**
     * Get the reflectedType value.
     *
     * @return the reflectedType value
     */
    public SystemType reflectedType() {
        return this.reflectedType;
    }

    /**
     * Set the reflectedType value.
     *
     * @param reflectedType the reflectedType value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withReflectedType(SystemType reflectedType) {
        this.reflectedType = reflectedType;
        return this;
    }

    /**
     * Get the customAttributes value.
     *
     * @return the customAttributes value
     */
    public List<SystemReflectionCustomAttributeData> customAttributes() {
        return this.customAttributes;
    }

    /**
     * Set the customAttributes value.
     *
     * @param customAttributes the customAttributes value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withCustomAttributes(List<SystemReflectionCustomAttributeData> customAttributes) {
        this.customAttributes = customAttributes;
        return this;
    }

    /**
     * Get the metadataToken value.
     *
     * @return the metadataToken value
     */
    public Integer metadataToken() {
        return this.metadataToken;
    }

    /**
     * Set the metadataToken value.
     *
     * @param metadataToken the metadataToken value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withMetadataToken(Integer metadataToken) {
        this.metadataToken = metadataToken;
        return this;
    }

    /**
     * Get the module value.
     *
     * @return the module value
     */
    public SystemReflectionModule module() {
        return this.module;
    }

    /**
     * Set the module value.
     *
     * @param module the module value to set
     * @return the SystemReflectionFieldInfo object itself.
     */
    public SystemReflectionFieldInfo withModule(SystemReflectionModule module) {
        this.module = module;
        return this;
    }

}
