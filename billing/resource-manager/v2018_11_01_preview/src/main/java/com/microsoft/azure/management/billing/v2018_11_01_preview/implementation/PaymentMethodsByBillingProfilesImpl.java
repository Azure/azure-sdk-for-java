/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.billing.v2018_11_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.billing.v2018_11_01_preview.PaymentMethodsByBillingProfiles;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.billing.v2018_11_01_preview.PaymentMethod;

class PaymentMethodsByBillingProfilesImpl extends WrapperImpl<PaymentMethodsByBillingProfilesInner> implements PaymentMethodsByBillingProfiles {
    private final BillingManager manager;

    PaymentMethodsByBillingProfilesImpl(BillingManager manager) {
        super(manager.inner().paymentMethodsByBillingProfiles());
        this.manager = manager;
    }

    public BillingManager manager() {
        return this.manager;
    }

    private PaymentMethodImpl wrapModel(PaymentMethodInner inner) {
        return  new PaymentMethodImpl(inner, manager());
    }

    @Override
    public Observable<PaymentMethod> listAsync(final String billingAccountName, final String billingProfileName) {
        PaymentMethodsByBillingProfilesInner client = this.inner();
        return client.listAsync(billingAccountName, billingProfileName)
        .flatMapIterable(new Func1<Page<PaymentMethodInner>, Iterable<PaymentMethodInner>>() {
            @Override
            public Iterable<PaymentMethodInner> call(Page<PaymentMethodInner> page) {
                return page.items();
            }
        })
        .map(new Func1<PaymentMethodInner, PaymentMethod>() {
            @Override
            public PaymentMethod call(PaymentMethodInner inner) {
                return wrapModel(inner);
            }
        });
    }

}
