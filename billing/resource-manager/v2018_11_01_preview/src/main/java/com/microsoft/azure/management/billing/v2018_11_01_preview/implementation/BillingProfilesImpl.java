/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.billing.v2018_11_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.billing.v2018_11_01_preview.BillingProfiles;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.management.billing.v2018_11_01_preview.BillingProfile;

class BillingProfilesImpl extends WrapperImpl<BillingProfilesInner> implements BillingProfiles {
    private final BillingManager manager;

    BillingProfilesImpl(BillingManager manager) {
        super(manager.inner().billingProfiles());
        this.manager = manager;
    }

    public BillingManager manager() {
        return this.manager;
    }

    private BillingProfileImpl wrapModel(BillingProfileInner inner) {
        return  new BillingProfileImpl(inner, manager());
    }

    @Override
    public Observable<BillingProfile> getAsync(String billingAccountName, String billingProfileName) {
        BillingProfilesInner client = this.inner();
        return client.getAsync(billingAccountName, billingProfileName)
        .map(new Func1<BillingProfileInner, BillingProfile>() {
            @Override
            public BillingProfile call(BillingProfileInner inner) {
                return wrapModel(inner);
            }
       });
    }

}
