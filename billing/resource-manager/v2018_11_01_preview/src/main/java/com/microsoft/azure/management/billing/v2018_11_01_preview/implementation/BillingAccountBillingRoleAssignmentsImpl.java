/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * abc
 */

package com.microsoft.azure.management.billing.v2018_11_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.billing.v2018_11_01_preview.BillingAccountBillingRoleAssignments;
import rx.functions.Func1;
import rx.Observable;
import com.microsoft.azure.management.billing.v2018_11_01_preview.BillingRoleAssignment;
import com.microsoft.azure.management.billing.v2018_11_01_preview.BillingRoleAssignmentListResult;

class BillingAccountBillingRoleAssignmentsImpl extends WrapperImpl<BillingAccountBillingRoleAssignmentsInner> implements BillingAccountBillingRoleAssignments {
    private final BillingManager manager;

    BillingAccountBillingRoleAssignmentsImpl(BillingManager manager) {
        super(manager.inner().billingAccountBillingRoleAssignments());
        this.manager = manager;
    }

    public BillingManager manager() {
        return this.manager;
    }

    @Override
    public Observable<BillingRoleAssignment> getAsync(String billingAccountName, String billingRoleAssignmentName) {
        BillingAccountBillingRoleAssignmentsInner client = this.inner();
        return client.getAsync(billingAccountName, billingRoleAssignmentName)
        .map(new Func1<BillingRoleAssignmentInner, BillingRoleAssignment>() {
            @Override
            public BillingRoleAssignment call(BillingRoleAssignmentInner inner) {
                return new BillingRoleAssignmentImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingRoleAssignment> deleteAsync(String billingAccountName, String billingRoleAssignmentName) {
        BillingAccountBillingRoleAssignmentsInner client = this.inner();
        return client.deleteAsync(billingAccountName, billingRoleAssignmentName)
        .map(new Func1<BillingRoleAssignmentInner, BillingRoleAssignment>() {
            @Override
            public BillingRoleAssignment call(BillingRoleAssignmentInner inner) {
                return new BillingRoleAssignmentImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingRoleAssignmentListResult> listAsync(String billingAccountName) {
        BillingAccountBillingRoleAssignmentsInner client = this.inner();
        return client.listAsync(billingAccountName)
        .map(new Func1<BillingRoleAssignmentListResultInner, BillingRoleAssignmentListResult>() {
            @Override
            public BillingRoleAssignmentListResult call(BillingRoleAssignmentListResultInner inner) {
                return new BillingRoleAssignmentListResultImpl(inner, manager());
            }
        });
    }

    @Override
    public Observable<BillingRoleAssignmentListResult> addAsync(String billingAccountName) {
        BillingAccountBillingRoleAssignmentsInner client = this.inner();
        return client.addAsync(billingAccountName)
        .map(new Func1<BillingRoleAssignmentListResultInner, BillingRoleAssignmentListResult>() {
            @Override
            public BillingRoleAssignmentListResult call(BillingRoleAssignmentListResultInner inner) {
                return new BillingRoleAssignmentListResultImpl(inner, manager());
            }
        });
    }

}
