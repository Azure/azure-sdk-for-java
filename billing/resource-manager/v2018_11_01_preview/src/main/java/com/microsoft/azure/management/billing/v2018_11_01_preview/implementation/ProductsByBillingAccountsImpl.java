/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.billing.v2018_11_01_preview.implementation;

import com.microsoft.azure.arm.model.implementation.WrapperImpl;
import com.microsoft.azure.management.billing.v2018_11_01_preview.ProductsByBillingAccounts;
import rx.Observable;
import rx.functions.Func1;
import com.microsoft.azure.Page;
import com.microsoft.azure.management.billing.v2018_11_01_preview.BillingAccountProductSummary;

class ProductsByBillingAccountsImpl extends WrapperImpl<ProductsByBillingAccountsInner> implements ProductsByBillingAccounts {
    private final BillingManager manager;

    ProductsByBillingAccountsImpl(BillingManager manager) {
        super(manager.inner().productsByBillingAccounts());
        this.manager = manager;
    }

    public BillingManager manager() {
        return this.manager;
    }

    private BillingAccountProductSummaryImpl wrapModel(ProductSummaryInner inner) {
        return  new BillingAccountProductSummaryImpl(inner, manager());
    }

    @Override
    public Observable<BillingAccountProductSummary> listAsync(final String billingAccountName) {
        ProductsByBillingAccountsInner client = this.inner();
        return client.listAsync(billingAccountName)
        .flatMapIterable(new Func1<Page<ProductSummaryInner>, Iterable<ProductSummaryInner>>() {
            @Override
            public Iterable<ProductSummaryInner> call(Page<ProductSummaryInner> page) {
                return page.items();
            }
        })
        .map(new Func1<ProductSummaryInner, BillingAccountProductSummary>() {
            @Override
            public BillingAccountProductSummary call(ProductSummaryInner inner) {
                return wrapModel(inner);
            }
        });
    }

}
