/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * A container event.
 */
public class ContainerEvent {
    /**
     * The name of the container event.
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * The count of the event.
     */
    @JsonProperty(value = "count")
    private Integer count;

    /**
     * Date/time of the first event.
     */
    @JsonProperty(value = "firstTimestamp")
    private String firstTimestamp;

    /**
     * Date/time of the last event.
     */
    @JsonProperty(value = "lastTimestamp")
    private String lastTimestamp;

    /**
     * The event message.
     */
    @JsonProperty(value = "message")
    private String message;

    /**
     * The event type.
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the name of the container event.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name of the container event.
     *
     * @param name the name value to set
     * @return the ContainerEvent object itself.
     */
    public ContainerEvent withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the count of the event.
     *
     * @return the count value
     */
    public Integer count() {
        return this.count;
    }

    /**
     * Set the count of the event.
     *
     * @param count the count value to set
     * @return the ContainerEvent object itself.
     */
    public ContainerEvent withCount(Integer count) {
        this.count = count;
        return this;
    }

    /**
     * Get date/time of the first event.
     *
     * @return the firstTimestamp value
     */
    public String firstTimestamp() {
        return this.firstTimestamp;
    }

    /**
     * Set date/time of the first event.
     *
     * @param firstTimestamp the firstTimestamp value to set
     * @return the ContainerEvent object itself.
     */
    public ContainerEvent withFirstTimestamp(String firstTimestamp) {
        this.firstTimestamp = firstTimestamp;
        return this;
    }

    /**
     * Get date/time of the last event.
     *
     * @return the lastTimestamp value
     */
    public String lastTimestamp() {
        return this.lastTimestamp;
    }

    /**
     * Set date/time of the last event.
     *
     * @param lastTimestamp the lastTimestamp value to set
     * @return the ContainerEvent object itself.
     */
    public ContainerEvent withLastTimestamp(String lastTimestamp) {
        this.lastTimestamp = lastTimestamp;
        return this;
    }

    /**
     * Get the event message.
     *
     * @return the message value
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the event message.
     *
     * @param message the message value to set
     * @return the ContainerEvent object itself.
     */
    public ContainerEvent withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get the event type.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the event type.
     *
     * @param type the type value to set
     * @return the ContainerEvent object itself.
     */
    public ContainerEvent withType(String type) {
        this.type = type;
        return this;
    }

}
