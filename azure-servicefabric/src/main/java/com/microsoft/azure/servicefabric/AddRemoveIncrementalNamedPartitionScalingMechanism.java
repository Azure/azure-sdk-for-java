/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents a scaling mechanism for adding or removing named partitions of a
 * stateless service. Partition names are in the format '0','1''N-1'.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "Kind")
@JsonTypeName("AddRemoveIncrementalNamedPartition")
public class AddRemoveIncrementalNamedPartitionScalingMechanism extends ScalingMechanismDescription {
    /**
     * Minimum number of named partitions of the service.
     */
    @JsonProperty(value = "MinPartitionCount", required = true)
    private int minPartitionCount;

    /**
     * Maximum number of named partitions of the service.
     */
    @JsonProperty(value = "MaxPartitionCount", required = true)
    private int maxPartitionCount;

    /**
     * The number of instances to add or remove during a scaling operation.
     */
    @JsonProperty(value = "ScaleIncrement", required = true)
    private int scaleIncrement;

    /**
     * Get minimum number of named partitions of the service.
     *
     * @return the minPartitionCount value
     */
    public int minPartitionCount() {
        return this.minPartitionCount;
    }

    /**
     * Set minimum number of named partitions of the service.
     *
     * @param minPartitionCount the minPartitionCount value to set
     * @return the AddRemoveIncrementalNamedPartitionScalingMechanism object itself.
     */
    public AddRemoveIncrementalNamedPartitionScalingMechanism withMinPartitionCount(int minPartitionCount) {
        this.minPartitionCount = minPartitionCount;
        return this;
    }

    /**
     * Get maximum number of named partitions of the service.
     *
     * @return the maxPartitionCount value
     */
    public int maxPartitionCount() {
        return this.maxPartitionCount;
    }

    /**
     * Set maximum number of named partitions of the service.
     *
     * @param maxPartitionCount the maxPartitionCount value to set
     * @return the AddRemoveIncrementalNamedPartitionScalingMechanism object itself.
     */
    public AddRemoveIncrementalNamedPartitionScalingMechanism withMaxPartitionCount(int maxPartitionCount) {
        this.maxPartitionCount = maxPartitionCount;
        return this;
    }

    /**
     * Get the number of instances to add or remove during a scaling operation.
     *
     * @return the scaleIncrement value
     */
    public int scaleIncrement() {
        return this.scaleIncrement;
    }

    /**
     * Set the number of instances to add or remove during a scaling operation.
     *
     * @param scaleIncrement the scaleIncrement value to set
     * @return the AddRemoveIncrementalNamedPartitionScalingMechanism object itself.
     */
    public AddRemoveIncrementalNamedPartitionScalingMechanism withScaleIncrement(int scaleIncrement) {
        this.scaleIncrement = scaleIncrement;
        return this;
    }

}
