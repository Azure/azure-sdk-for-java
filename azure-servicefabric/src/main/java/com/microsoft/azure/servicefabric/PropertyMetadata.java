/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The metadata associated with a property, including the property's name.
 */
public class PropertyMetadata {
    /**
     * The kind of property, determined by the type of data. Following are the
     * possible values. Possible values include: 'Invalid', 'Binary', 'Int64',
     * 'Double', 'String', 'Guid'.
     */
    @JsonProperty(value = "TypeId")
    private PropertyValueKind typeId;

    /**
     * The property's custom type ID.
     */
    @JsonProperty(value = "CustomTypeId")
    private String customTypeId;

    /**
     * The name of the parent Service Fabric Name for the property. It could be
     * thought of as the name-space/table under which the property exists.
     */
    @JsonProperty(value = "Parent")
    private String parent;

    /**
     * The length of the serialized property value.
     */
    @JsonProperty(value = "SizeInBytes")
    private Integer sizeInBytes;

    /**
     * Represents when the Property was last modified. Only write operations
     * will cause this field to be updated.
     */
    @JsonProperty(value = "LastModifiedUtcTimestamp")
    private DateTime lastModifiedUtcTimestamp;

    /**
     * The version of the property. Every time a property is modified, its
     * sequence number is increased.
     */
    @JsonProperty(value = "SequenceNumber")
    private String sequenceNumber;

    /**
     * Get the kind of property, determined by the type of data. Following are the possible values. Possible values include: 'Invalid', 'Binary', 'Int64', 'Double', 'String', 'Guid'.
     *
     * @return the typeId value
     */
    public PropertyValueKind typeId() {
        return this.typeId;
    }

    /**
     * Set the kind of property, determined by the type of data. Following are the possible values. Possible values include: 'Invalid', 'Binary', 'Int64', 'Double', 'String', 'Guid'.
     *
     * @param typeId the typeId value to set
     * @return the PropertyMetadata object itself.
     */
    public PropertyMetadata withTypeId(PropertyValueKind typeId) {
        this.typeId = typeId;
        return this;
    }

    /**
     * Get the property's custom type ID.
     *
     * @return the customTypeId value
     */
    public String customTypeId() {
        return this.customTypeId;
    }

    /**
     * Set the property's custom type ID.
     *
     * @param customTypeId the customTypeId value to set
     * @return the PropertyMetadata object itself.
     */
    public PropertyMetadata withCustomTypeId(String customTypeId) {
        this.customTypeId = customTypeId;
        return this;
    }

    /**
     * Get the name of the parent Service Fabric Name for the property. It could be thought of as the name-space/table under which the property exists.
     *
     * @return the parent value
     */
    public String parent() {
        return this.parent;
    }

    /**
     * Set the name of the parent Service Fabric Name for the property. It could be thought of as the name-space/table under which the property exists.
     *
     * @param parent the parent value to set
     * @return the PropertyMetadata object itself.
     */
    public PropertyMetadata withParent(String parent) {
        this.parent = parent;
        return this;
    }

    /**
     * Get the length of the serialized property value.
     *
     * @return the sizeInBytes value
     */
    public Integer sizeInBytes() {
        return this.sizeInBytes;
    }

    /**
     * Set the length of the serialized property value.
     *
     * @param sizeInBytes the sizeInBytes value to set
     * @return the PropertyMetadata object itself.
     */
    public PropertyMetadata withSizeInBytes(Integer sizeInBytes) {
        this.sizeInBytes = sizeInBytes;
        return this;
    }

    /**
     * Get represents when the Property was last modified. Only write operations will cause this field to be updated.
     *
     * @return the lastModifiedUtcTimestamp value
     */
    public DateTime lastModifiedUtcTimestamp() {
        return this.lastModifiedUtcTimestamp;
    }

    /**
     * Set represents when the Property was last modified. Only write operations will cause this field to be updated.
     *
     * @param lastModifiedUtcTimestamp the lastModifiedUtcTimestamp value to set
     * @return the PropertyMetadata object itself.
     */
    public PropertyMetadata withLastModifiedUtcTimestamp(DateTime lastModifiedUtcTimestamp) {
        this.lastModifiedUtcTimestamp = lastModifiedUtcTimestamp;
        return this;
    }

    /**
     * Get the version of the property. Every time a property is modified, its sequence number is increased.
     *
     * @return the sequenceNumber value
     */
    public String sequenceNumber() {
        return this.sequenceNumber;
    }

    /**
     * Set the version of the property. Every time a property is modified, its sequence number is increased.
     *
     * @param sequenceNumber the sequenceNumber value to set
     * @return the PropertyMetadata object itself.
     */
    public PropertyMetadata withSequenceNumber(String sequenceNumber) {
        this.sequenceNumber = sequenceNumber;
        return this;
    }

}
