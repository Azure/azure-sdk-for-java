/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric.implementation;

import java.util.UUID;
import com.microsoft.azure.servicefabric.ServiceOperationName;
import org.joda.time.DateTime;
import java.util.List;
import com.microsoft.azure.servicefabric.LoadMetricReportInfo;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * Information about a Service Fabric service replica deployed on a node.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "ServiceKind")
@JsonTypeName("DeployedServiceReplicaDetailInfo")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "Stateful", value = DeployedStatefulServiceReplicaDetailInfo.class),
    @JsonSubTypes.Type(name = "Stateless", value = DeployedStatelessServiceInstanceDetailInfo.class)
})
public class DeployedServiceReplicaDetailInfoInner {
    /**
     * Full hierarchical name of the service in URI format starting with
     * `fabric:`.
     */
    @JsonProperty(value = "ServiceName")
    private String serviceName;

    /**
     * An internal ID used by Service Fabric to uniquely identify a partition.
     * This is a randomly generated GUID when the service was created. The
     * partition ID is unique and does not change for the lifetime of the
     * service. If the same service was deleted and recreated the IDs of its
     * partitions would be different.
     */
    @JsonProperty(value = "PartitionId")
    private UUID partitionId;

    /**
     * Specifies the current active life-cycle operation on a stateful service
     * replica or stateless service instance. Possible values include:
     * 'Unknown', 'None', 'Open', 'ChangeRole', 'Close', 'Abort'.
     */
    @JsonProperty(value = "CurrentServiceOperation")
    private ServiceOperationName currentServiceOperation;

    /**
     * The start time of the current service operation in UTC format.
     */
    @JsonProperty(value = "CurrentServiceOperationStartTimeUtc")
    private DateTime currentServiceOperationStartTimeUtc;

    /**
     * List of load reported by replica.
     */
    @JsonProperty(value = "ReportedLoad")
    private List<LoadMetricReportInfo> reportedLoad;

    /**
     * Get full hierarchical name of the service in URI format starting with `fabric:`.
     *
     * @return the serviceName value
     */
    public String serviceName() {
        return this.serviceName;
    }

    /**
     * Set full hierarchical name of the service in URI format starting with `fabric:`.
     *
     * @param serviceName the serviceName value to set
     * @return the DeployedServiceReplicaDetailInfoInner object itself.
     */
    public DeployedServiceReplicaDetailInfoInner withServiceName(String serviceName) {
        this.serviceName = serviceName;
        return this;
    }

    /**
     * Get an internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
     *
     * @return the partitionId value
     */
    public UUID partitionId() {
        return this.partitionId;
    }

    /**
     * Set an internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
     *
     * @param partitionId the partitionId value to set
     * @return the DeployedServiceReplicaDetailInfoInner object itself.
     */
    public DeployedServiceReplicaDetailInfoInner withPartitionId(UUID partitionId) {
        this.partitionId = partitionId;
        return this;
    }

    /**
     * Get specifies the current active life-cycle operation on a stateful service replica or stateless service instance. Possible values include: 'Unknown', 'None', 'Open', 'ChangeRole', 'Close', 'Abort'.
     *
     * @return the currentServiceOperation value
     */
    public ServiceOperationName currentServiceOperation() {
        return this.currentServiceOperation;
    }

    /**
     * Set specifies the current active life-cycle operation on a stateful service replica or stateless service instance. Possible values include: 'Unknown', 'None', 'Open', 'ChangeRole', 'Close', 'Abort'.
     *
     * @param currentServiceOperation the currentServiceOperation value to set
     * @return the DeployedServiceReplicaDetailInfoInner object itself.
     */
    public DeployedServiceReplicaDetailInfoInner withCurrentServiceOperation(ServiceOperationName currentServiceOperation) {
        this.currentServiceOperation = currentServiceOperation;
        return this;
    }

    /**
     * Get the start time of the current service operation in UTC format.
     *
     * @return the currentServiceOperationStartTimeUtc value
     */
    public DateTime currentServiceOperationStartTimeUtc() {
        return this.currentServiceOperationStartTimeUtc;
    }

    /**
     * Set the start time of the current service operation in UTC format.
     *
     * @param currentServiceOperationStartTimeUtc the currentServiceOperationStartTimeUtc value to set
     * @return the DeployedServiceReplicaDetailInfoInner object itself.
     */
    public DeployedServiceReplicaDetailInfoInner withCurrentServiceOperationStartTimeUtc(DateTime currentServiceOperationStartTimeUtc) {
        this.currentServiceOperationStartTimeUtc = currentServiceOperationStartTimeUtc;
        return this;
    }

    /**
     * Get list of load reported by replica.
     *
     * @return the reportedLoad value
     */
    public List<LoadMetricReportInfo> reportedLoad() {
        return this.reportedLoad;
    }

    /**
     * Set list of load reported by replica.
     *
     * @param reportedLoad the reportedLoad value to set
     * @return the DeployedServiceReplicaDetailInfoInner object itself.
     */
    public DeployedServiceReplicaDetailInfoInner withReportedLoad(List<LoadMetricReportInfo> reportedLoad) {
        this.reportedLoad = reportedLoad;
        return this;
    }

}
