/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.azure.servicefabric.implementation.ServiceEventInner;

/**
 * Service Created event.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "Kind")
@JsonTypeName("ServiceCreated")
public class ServiceCreatedEvent extends ServiceEventInner {
    /**
     * Service type name.
     */
    @JsonProperty(value = "ServiceTypeName", required = true)
    private String serviceTypeName;

    /**
     * Application name.
     */
    @JsonProperty(value = "ApplicationName", required = true)
    private String applicationName;

    /**
     * Application type name.
     */
    @JsonProperty(value = "ApplicationTypeName", required = true)
    private String applicationTypeName;

    /**
     * Id of Service instance.
     */
    @JsonProperty(value = "ServiceInstance", required = true)
    private long serviceInstance;

    /**
     * Indicates if Service is stateful.
     */
    @JsonProperty(value = "IsStateful", required = true)
    private boolean isStateful;

    /**
     * Number of partitions.
     */
    @JsonProperty(value = "PartitionCount", required = true)
    private int partitionCount;

    /**
     * Size of target replicas set.
     */
    @JsonProperty(value = "TargetReplicaSetSize", required = true)
    private int targetReplicaSetSize;

    /**
     * Minimum size of replicas set.
     */
    @JsonProperty(value = "MinReplicaSetSize", required = true)
    private int minReplicaSetSize;

    /**
     * Version of Service package.
     */
    @JsonProperty(value = "ServicePackageVersion", required = true)
    private String servicePackageVersion;

    /**
     * An internal ID used by Service Fabric to uniquely identify a partition.
     * This is a randomly generated GUID when the service was created. The
     * partition ID is unique and does not change for the lifetime of the
     * service. If the same service was deleted and recreated the IDs of its
     * partitions would be different.
     */
    @JsonProperty(value = "PartitionId", required = true)
    private UUID partitionId;

    /**
     * Get service type name.
     *
     * @return the serviceTypeName value
     */
    public String serviceTypeName() {
        return this.serviceTypeName;
    }

    /**
     * Set service type name.
     *
     * @param serviceTypeName the serviceTypeName value to set
     * @return the ServiceCreatedEvent object itself.
     */
    public ServiceCreatedEvent withServiceTypeName(String serviceTypeName) {
        this.serviceTypeName = serviceTypeName;
        return this;
    }

    /**
     * Get application name.
     *
     * @return the applicationName value
     */
    public String applicationName() {
        return this.applicationName;
    }

    /**
     * Set application name.
     *
     * @param applicationName the applicationName value to set
     * @return the ServiceCreatedEvent object itself.
     */
    public ServiceCreatedEvent withApplicationName(String applicationName) {
        this.applicationName = applicationName;
        return this;
    }

    /**
     * Get application type name.
     *
     * @return the applicationTypeName value
     */
    public String applicationTypeName() {
        return this.applicationTypeName;
    }

    /**
     * Set application type name.
     *
     * @param applicationTypeName the applicationTypeName value to set
     * @return the ServiceCreatedEvent object itself.
     */
    public ServiceCreatedEvent withApplicationTypeName(String applicationTypeName) {
        this.applicationTypeName = applicationTypeName;
        return this;
    }

    /**
     * Get id of Service instance.
     *
     * @return the serviceInstance value
     */
    public long serviceInstance() {
        return this.serviceInstance;
    }

    /**
     * Set id of Service instance.
     *
     * @param serviceInstance the serviceInstance value to set
     * @return the ServiceCreatedEvent object itself.
     */
    public ServiceCreatedEvent withServiceInstance(long serviceInstance) {
        this.serviceInstance = serviceInstance;
        return this;
    }

    /**
     * Get indicates if Service is stateful.
     *
     * @return the isStateful value
     */
    public boolean isStateful() {
        return this.isStateful;
    }

    /**
     * Set indicates if Service is stateful.
     *
     * @param isStateful the isStateful value to set
     * @return the ServiceCreatedEvent object itself.
     */
    public ServiceCreatedEvent withIsStateful(boolean isStateful) {
        this.isStateful = isStateful;
        return this;
    }

    /**
     * Get number of partitions.
     *
     * @return the partitionCount value
     */
    public int partitionCount() {
        return this.partitionCount;
    }

    /**
     * Set number of partitions.
     *
     * @param partitionCount the partitionCount value to set
     * @return the ServiceCreatedEvent object itself.
     */
    public ServiceCreatedEvent withPartitionCount(int partitionCount) {
        this.partitionCount = partitionCount;
        return this;
    }

    /**
     * Get size of target replicas set.
     *
     * @return the targetReplicaSetSize value
     */
    public int targetReplicaSetSize() {
        return this.targetReplicaSetSize;
    }

    /**
     * Set size of target replicas set.
     *
     * @param targetReplicaSetSize the targetReplicaSetSize value to set
     * @return the ServiceCreatedEvent object itself.
     */
    public ServiceCreatedEvent withTargetReplicaSetSize(int targetReplicaSetSize) {
        this.targetReplicaSetSize = targetReplicaSetSize;
        return this;
    }

    /**
     * Get minimum size of replicas set.
     *
     * @return the minReplicaSetSize value
     */
    public int minReplicaSetSize() {
        return this.minReplicaSetSize;
    }

    /**
     * Set minimum size of replicas set.
     *
     * @param minReplicaSetSize the minReplicaSetSize value to set
     * @return the ServiceCreatedEvent object itself.
     */
    public ServiceCreatedEvent withMinReplicaSetSize(int minReplicaSetSize) {
        this.minReplicaSetSize = minReplicaSetSize;
        return this;
    }

    /**
     * Get version of Service package.
     *
     * @return the servicePackageVersion value
     */
    public String servicePackageVersion() {
        return this.servicePackageVersion;
    }

    /**
     * Set version of Service package.
     *
     * @param servicePackageVersion the servicePackageVersion value to set
     * @return the ServiceCreatedEvent object itself.
     */
    public ServiceCreatedEvent withServicePackageVersion(String servicePackageVersion) {
        this.servicePackageVersion = servicePackageVersion;
        return this;
    }

    /**
     * Get an internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
     *
     * @return the partitionId value
     */
    public UUID partitionId() {
        return this.partitionId;
    }

    /**
     * Set an internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
     *
     * @param partitionId the partitionId value to set
     * @return the ServiceCreatedEvent object itself.
     */
    public ServiceCreatedEvent withPartitionId(UUID partitionId) {
        this.partitionId = partitionId;
        return this;
    }

}
