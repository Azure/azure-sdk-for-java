/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric.implementation;

import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * Represents the base for all Partition Events.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "Kind")
@JsonTypeName("PartitionEvent")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "PartitionAnalysisEvent", value = PartitionAnalysisEvent.class),
    @JsonSubTypes.Type(name = "PartitionNewHealthReport", value = PartitionNewHealthReportEvent.class),
    @JsonSubTypes.Type(name = "PartitionHealthReportExpired", value = PartitionHealthReportExpiredEvent.class),
    @JsonSubTypes.Type(name = "PartitionReconfigured", value = PartitionReconfiguredEvent.class),
    @JsonSubTypes.Type(name = "ChaosPartitionSecondaryMoveScheduled", value = ChaosPartitionSecondaryMoveScheduledEvent.class),
    @JsonSubTypes.Type(name = "ChaosPartitionPrimaryMoveScheduled", value = ChaosPartitionPrimaryMoveScheduledEvent.class)
})
public class PartitionEventInner extends FabricEventInner {
    /**
     * An internal ID used by Service Fabric to uniquely identify a partition.
     * This is a randomly generated GUID when the service was created. The
     * partition ID is unique and does not change for the lifetime of the
     * service. If the same service was deleted and recreated the IDs of its
     * partitions would be different.
     */
    @JsonProperty(value = "PartitionId", required = true)
    private UUID partitionId;

    /**
     * Get an internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
     *
     * @return the partitionId value
     */
    public UUID partitionId() {
        return this.partitionId;
    }

    /**
     * Set an internal ID used by Service Fabric to uniquely identify a partition. This is a randomly generated GUID when the service was created. The partition ID is unique and does not change for the lifetime of the service. If the same service was deleted and recreated the IDs of its partitions would be different.
     *
     * @param partitionId the partitionId value to set
     * @return the PartitionEventInner object itself.
     */
    public PartitionEventInner withPartitionId(UUID partitionId) {
        this.partitionId = partitionId;
        return this;
    }

}
