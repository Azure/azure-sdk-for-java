/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Information about current reconfiguration like phase, type, previous
 * configuration role of replica and reconfiguration start date time.
 */
public class ReconfigurationInformation {
    /**
     * Replica role before reconfiguration started. Possible values include:
     * 'Unknown', 'None', 'Primary', 'IdleSecondary', 'ActiveSecondary'.
     */
    @JsonProperty(value = "PreviousConfigurationRole")
    private ReplicaRole previousConfigurationRole;

    /**
     * Current phase of ongoing reconfiguration. If no reconfiguration is
     * taking place then this value will be "None". Possible values include:
     * 'Unknown', 'None', 'Phase0', 'Phase1', 'Phase2', 'Phase3', 'Phase4',
     * 'AbortPhaseZero'.
     */
    @JsonProperty(value = "ReconfigurationPhase")
    private ReconfigurationPhase reconfigurationPhase;

    /**
     * Type of current ongoing reconfiguration. If no reconfiguration is taking
     * place then this value will be "None". Possible values include:
     * 'Unknown', 'SwapPrimary', 'Failover', 'Other'.
     */
    @JsonProperty(value = "ReconfigurationType")
    private ReconfigurationType reconfigurationType;

    /**
     * Start time (in UTC) of the ongoing reconfiguration. If no
     * reconfiguration is taking place then this value will be zero date-time.
     */
    @JsonProperty(value = "ReconfigurationStartTimeUtc")
    private DateTime reconfigurationStartTimeUtc;

    /**
     * Get replica role before reconfiguration started. Possible values include: 'Unknown', 'None', 'Primary', 'IdleSecondary', 'ActiveSecondary'.
     *
     * @return the previousConfigurationRole value
     */
    public ReplicaRole previousConfigurationRole() {
        return this.previousConfigurationRole;
    }

    /**
     * Set replica role before reconfiguration started. Possible values include: 'Unknown', 'None', 'Primary', 'IdleSecondary', 'ActiveSecondary'.
     *
     * @param previousConfigurationRole the previousConfigurationRole value to set
     * @return the ReconfigurationInformation object itself.
     */
    public ReconfigurationInformation withPreviousConfigurationRole(ReplicaRole previousConfigurationRole) {
        this.previousConfigurationRole = previousConfigurationRole;
        return this;
    }

    /**
     * Get current phase of ongoing reconfiguration. If no reconfiguration is taking place then this value will be "None". Possible values include: 'Unknown', 'None', 'Phase0', 'Phase1', 'Phase2', 'Phase3', 'Phase4', 'AbortPhaseZero'.
     *
     * @return the reconfigurationPhase value
     */
    public ReconfigurationPhase reconfigurationPhase() {
        return this.reconfigurationPhase;
    }

    /**
     * Set current phase of ongoing reconfiguration. If no reconfiguration is taking place then this value will be "None". Possible values include: 'Unknown', 'None', 'Phase0', 'Phase1', 'Phase2', 'Phase3', 'Phase4', 'AbortPhaseZero'.
     *
     * @param reconfigurationPhase the reconfigurationPhase value to set
     * @return the ReconfigurationInformation object itself.
     */
    public ReconfigurationInformation withReconfigurationPhase(ReconfigurationPhase reconfigurationPhase) {
        this.reconfigurationPhase = reconfigurationPhase;
        return this;
    }

    /**
     * Get type of current ongoing reconfiguration. If no reconfiguration is taking place then this value will be "None". Possible values include: 'Unknown', 'SwapPrimary', 'Failover', 'Other'.
     *
     * @return the reconfigurationType value
     */
    public ReconfigurationType reconfigurationType() {
        return this.reconfigurationType;
    }

    /**
     * Set type of current ongoing reconfiguration. If no reconfiguration is taking place then this value will be "None". Possible values include: 'Unknown', 'SwapPrimary', 'Failover', 'Other'.
     *
     * @param reconfigurationType the reconfigurationType value to set
     * @return the ReconfigurationInformation object itself.
     */
    public ReconfigurationInformation withReconfigurationType(ReconfigurationType reconfigurationType) {
        this.reconfigurationType = reconfigurationType;
        return this;
    }

    /**
     * Get start time (in UTC) of the ongoing reconfiguration. If no reconfiguration is taking place then this value will be zero date-time.
     *
     * @return the reconfigurationStartTimeUtc value
     */
    public DateTime reconfigurationStartTimeUtc() {
        return this.reconfigurationStartTimeUtc;
    }

    /**
     * Set start time (in UTC) of the ongoing reconfiguration. If no reconfiguration is taking place then this value will be zero date-time.
     *
     * @param reconfigurationStartTimeUtc the reconfigurationStartTimeUtc value to set
     * @return the ReconfigurationInformation object itself.
     */
    public ReconfigurationInformation withReconfigurationStartTimeUtc(DateTime reconfigurationStartTimeUtc) {
        this.reconfigurationStartTimeUtc = reconfigurationStartTimeUtc;
        return this;
    }

}
