/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric.implementation;

import com.microsoft.azure.servicefabric.ReplicaStatus;
import com.microsoft.azure.servicefabric.HealthState;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * Information about the identity, status, health, node name, uptime, and other
 * details about the replica.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "ServiceKind")
@JsonTypeName("ReplicaInfo")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "Stateful", value = StatefulServiceReplicaInfo.class),
    @JsonSubTypes.Type(name = "Stateless", value = StatelessServiceInstanceInfo.class)
})
public class ReplicaInfoInner {
    /**
     * The status of a replica of a service. Possible values include:
     * 'Invalid', 'InBuild', 'Standby', 'Ready', 'Down', 'Dropped'.
     */
    @JsonProperty(value = "ReplicaStatus")
    private ReplicaStatus replicaStatus;

    /**
     * The health state of a Service Fabric entity such as Cluster, Node,
     * Application, Service, Partition, Replica etc. Possible values include:
     * 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'.
     */
    @JsonProperty(value = "HealthState")
    private HealthState healthState;

    /**
     * The name of a Service Fabric node.
     */
    @JsonProperty(value = "NodeName")
    private String nodeName;

    /**
     * The address the replica is listening on.
     */
    @JsonProperty(value = "Address")
    private String address;

    /**
     * The last in build duration of the replica in seconds.
     */
    @JsonProperty(value = "LastInBuildDurationInSeconds")
    private String lastInBuildDurationInSeconds;

    /**
     * Get the status of a replica of a service. Possible values include: 'Invalid', 'InBuild', 'Standby', 'Ready', 'Down', 'Dropped'.
     *
     * @return the replicaStatus value
     */
    public ReplicaStatus replicaStatus() {
        return this.replicaStatus;
    }

    /**
     * Set the status of a replica of a service. Possible values include: 'Invalid', 'InBuild', 'Standby', 'Ready', 'Down', 'Dropped'.
     *
     * @param replicaStatus the replicaStatus value to set
     * @return the ReplicaInfoInner object itself.
     */
    public ReplicaInfoInner withReplicaStatus(ReplicaStatus replicaStatus) {
        this.replicaStatus = replicaStatus;
        return this;
    }

    /**
     * Get the health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc. Possible values include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'.
     *
     * @return the healthState value
     */
    public HealthState healthState() {
        return this.healthState;
    }

    /**
     * Set the health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc. Possible values include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'.
     *
     * @param healthState the healthState value to set
     * @return the ReplicaInfoInner object itself.
     */
    public ReplicaInfoInner withHealthState(HealthState healthState) {
        this.healthState = healthState;
        return this;
    }

    /**
     * Get the name of a Service Fabric node.
     *
     * @return the nodeName value
     */
    public String nodeName() {
        return this.nodeName;
    }

    /**
     * Set the name of a Service Fabric node.
     *
     * @param nodeName the nodeName value to set
     * @return the ReplicaInfoInner object itself.
     */
    public ReplicaInfoInner withNodeName(String nodeName) {
        this.nodeName = nodeName;
        return this;
    }

    /**
     * Get the address the replica is listening on.
     *
     * @return the address value
     */
    public String address() {
        return this.address;
    }

    /**
     * Set the address the replica is listening on.
     *
     * @param address the address value to set
     * @return the ReplicaInfoInner object itself.
     */
    public ReplicaInfoInner withAddress(String address) {
        this.address = address;
        return this;
    }

    /**
     * Get the last in build duration of the replica in seconds.
     *
     * @return the lastInBuildDurationInSeconds value
     */
    public String lastInBuildDurationInSeconds() {
        return this.lastInBuildDurationInSeconds;
    }

    /**
     * Set the last in build duration of the replica in seconds.
     *
     * @param lastInBuildDurationInSeconds the lastInBuildDurationInSeconds value to set
     * @return the ReplicaInfoInner object itself.
     */
    public ReplicaInfoInner withLastInBuildDurationInSeconds(String lastInBuildDurationInSeconds) {
        this.lastInBuildDurationInSeconds = lastInBuildDurationInSeconds;
        return this;
    }

}
