/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Describes a Chaos event that gets generated when an unexpected event occurs
 * in the Chaos engine.
 * For example, due to the cluster snapshot being inconsistent, while faulting
 * an entity, Chaos found that the entity was already faulted -- which would be
 * an unexpected event.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "Kind")
@JsonTypeName("TestError")
public class TestErrorChaosEvent extends ChaosEvent {
    /**
     * Describes why TestErrorChaosEvent was generated. For example, Chaos
     * tries to fault a partition but finds that the partition is no longer
     * fault tolerant, then a TestErrorEvent gets generated with the reason
     * stating that the partition is not fault tolerant.
     */
    @JsonProperty(value = "Reason")
    private String reason;

    /**
     * Get describes why TestErrorChaosEvent was generated. For example, Chaos tries to fault a partition but finds that the partition is no longer fault tolerant, then a TestErrorEvent gets generated with the reason stating that the partition is not fault tolerant.
     *
     * @return the reason value
     */
    public String reason() {
        return this.reason;
    }

    /**
     * Set describes why TestErrorChaosEvent was generated. For example, Chaos tries to fault a partition but finds that the partition is no longer fault tolerant, then a TestErrorEvent gets generated with the reason stating that the partition is not fault tolerant.
     *
     * @param reason the reason value to set
     * @return the TestErrorChaosEvent object itself.
     */
    public TestErrorChaosEvent withReason(String reason) {
        this.reason = reason;
        return this;
    }

}
