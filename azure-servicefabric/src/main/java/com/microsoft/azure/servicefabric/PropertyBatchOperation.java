/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * Represents the base type for property operations that can be put into a
 * batch and submitted.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "Kind")
@JsonTypeName("PropertyBatchOperation")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "CheckExists", value = CheckExistsPropertyBatchOperation.class),
    @JsonSubTypes.Type(name = "CheckSequence", value = CheckSequencePropertyBatchOperation.class),
    @JsonSubTypes.Type(name = "CheckValue", value = CheckValuePropertyBatchOperation.class),
    @JsonSubTypes.Type(name = "Delete", value = DeletePropertyBatchOperation.class),
    @JsonSubTypes.Type(name = "Get", value = GetPropertyBatchOperation.class),
    @JsonSubTypes.Type(name = "Put", value = PutPropertyBatchOperation.class)
})
public class PropertyBatchOperation {
    /**
     * The name of the Service Fabric property.
     */
    @JsonProperty(value = "PropertyName", required = true)
    private String propertyName;

    /**
     * Get the name of the Service Fabric property.
     *
     * @return the propertyName value
     */
    public String propertyName() {
        return this.propertyName;
    }

    /**
     * Set the name of the Service Fabric property.
     *
     * @param propertyName the propertyName value to set
     * @return the PropertyBatchOperation object itself.
     */
    public PropertyBatchOperation withPropertyName(String propertyName) {
        this.propertyName = propertyName;
        return this;
    }

}
