/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Statistics about setup or main entry point  of a code package deployed on a
 * Service Fabric node.
 */
public class CodePackageEntryPointStatistics {
    /**
     * The last exit code of the entry point.
     */
    @JsonProperty(value = "LastExitCode")
    private String lastExitCode;

    /**
     * The last time (in UTC) when Service Fabric attempted to run the entry
     * point.
     */
    @JsonProperty(value = "LastActivationTime")
    private DateTime lastActivationTime;

    /**
     * The last time (in UTC) when the entry point finished running.
     */
    @JsonProperty(value = "LastExitTime")
    private DateTime lastExitTime;

    /**
     * The last time (in UTC) when the entry point ran successfully.
     */
    @JsonProperty(value = "LastSuccessfulActivationTime")
    private DateTime lastSuccessfulActivationTime;

    /**
     * The last time (in UTC) when the entry point finished running gracefully.
     */
    @JsonProperty(value = "LastSuccessfulExitTime")
    private DateTime lastSuccessfulExitTime;

    /**
     * Number of times the entry point has run.
     */
    @JsonProperty(value = "ActivationCount")
    private String activationCount;

    /**
     * Number of times the entry point failed to run.
     */
    @JsonProperty(value = "ActivationFailureCount")
    private String activationFailureCount;

    /**
     * Number of times the entry point continuously failed to run.
     */
    @JsonProperty(value = "ContinuousActivationFailureCount")
    private String continuousActivationFailureCount;

    /**
     * Number of times the entry point finished running.
     */
    @JsonProperty(value = "ExitCount")
    private String exitCount;

    /**
     * Number of times the entry point failed to exit gracefully.
     */
    @JsonProperty(value = "ExitFailureCount")
    private String exitFailureCount;

    /**
     * Number of times the entry point continuously failed to exit gracefully.
     */
    @JsonProperty(value = "ContinuousExitFailureCount")
    private String continuousExitFailureCount;

    /**
     * Get the last exit code of the entry point.
     *
     * @return the lastExitCode value
     */
    public String lastExitCode() {
        return this.lastExitCode;
    }

    /**
     * Set the last exit code of the entry point.
     *
     * @param lastExitCode the lastExitCode value to set
     * @return the CodePackageEntryPointStatistics object itself.
     */
    public CodePackageEntryPointStatistics withLastExitCode(String lastExitCode) {
        this.lastExitCode = lastExitCode;
        return this;
    }

    /**
     * Get the last time (in UTC) when Service Fabric attempted to run the entry point.
     *
     * @return the lastActivationTime value
     */
    public DateTime lastActivationTime() {
        return this.lastActivationTime;
    }

    /**
     * Set the last time (in UTC) when Service Fabric attempted to run the entry point.
     *
     * @param lastActivationTime the lastActivationTime value to set
     * @return the CodePackageEntryPointStatistics object itself.
     */
    public CodePackageEntryPointStatistics withLastActivationTime(DateTime lastActivationTime) {
        this.lastActivationTime = lastActivationTime;
        return this;
    }

    /**
     * Get the last time (in UTC) when the entry point finished running.
     *
     * @return the lastExitTime value
     */
    public DateTime lastExitTime() {
        return this.lastExitTime;
    }

    /**
     * Set the last time (in UTC) when the entry point finished running.
     *
     * @param lastExitTime the lastExitTime value to set
     * @return the CodePackageEntryPointStatistics object itself.
     */
    public CodePackageEntryPointStatistics withLastExitTime(DateTime lastExitTime) {
        this.lastExitTime = lastExitTime;
        return this;
    }

    /**
     * Get the last time (in UTC) when the entry point ran successfully.
     *
     * @return the lastSuccessfulActivationTime value
     */
    public DateTime lastSuccessfulActivationTime() {
        return this.lastSuccessfulActivationTime;
    }

    /**
     * Set the last time (in UTC) when the entry point ran successfully.
     *
     * @param lastSuccessfulActivationTime the lastSuccessfulActivationTime value to set
     * @return the CodePackageEntryPointStatistics object itself.
     */
    public CodePackageEntryPointStatistics withLastSuccessfulActivationTime(DateTime lastSuccessfulActivationTime) {
        this.lastSuccessfulActivationTime = lastSuccessfulActivationTime;
        return this;
    }

    /**
     * Get the last time (in UTC) when the entry point finished running gracefully.
     *
     * @return the lastSuccessfulExitTime value
     */
    public DateTime lastSuccessfulExitTime() {
        return this.lastSuccessfulExitTime;
    }

    /**
     * Set the last time (in UTC) when the entry point finished running gracefully.
     *
     * @param lastSuccessfulExitTime the lastSuccessfulExitTime value to set
     * @return the CodePackageEntryPointStatistics object itself.
     */
    public CodePackageEntryPointStatistics withLastSuccessfulExitTime(DateTime lastSuccessfulExitTime) {
        this.lastSuccessfulExitTime = lastSuccessfulExitTime;
        return this;
    }

    /**
     * Get number of times the entry point has run.
     *
     * @return the activationCount value
     */
    public String activationCount() {
        return this.activationCount;
    }

    /**
     * Set number of times the entry point has run.
     *
     * @param activationCount the activationCount value to set
     * @return the CodePackageEntryPointStatistics object itself.
     */
    public CodePackageEntryPointStatistics withActivationCount(String activationCount) {
        this.activationCount = activationCount;
        return this;
    }

    /**
     * Get number of times the entry point failed to run.
     *
     * @return the activationFailureCount value
     */
    public String activationFailureCount() {
        return this.activationFailureCount;
    }

    /**
     * Set number of times the entry point failed to run.
     *
     * @param activationFailureCount the activationFailureCount value to set
     * @return the CodePackageEntryPointStatistics object itself.
     */
    public CodePackageEntryPointStatistics withActivationFailureCount(String activationFailureCount) {
        this.activationFailureCount = activationFailureCount;
        return this;
    }

    /**
     * Get number of times the entry point continuously failed to run.
     *
     * @return the continuousActivationFailureCount value
     */
    public String continuousActivationFailureCount() {
        return this.continuousActivationFailureCount;
    }

    /**
     * Set number of times the entry point continuously failed to run.
     *
     * @param continuousActivationFailureCount the continuousActivationFailureCount value to set
     * @return the CodePackageEntryPointStatistics object itself.
     */
    public CodePackageEntryPointStatistics withContinuousActivationFailureCount(String continuousActivationFailureCount) {
        this.continuousActivationFailureCount = continuousActivationFailureCount;
        return this;
    }

    /**
     * Get number of times the entry point finished running.
     *
     * @return the exitCount value
     */
    public String exitCount() {
        return this.exitCount;
    }

    /**
     * Set number of times the entry point finished running.
     *
     * @param exitCount the exitCount value to set
     * @return the CodePackageEntryPointStatistics object itself.
     */
    public CodePackageEntryPointStatistics withExitCount(String exitCount) {
        this.exitCount = exitCount;
        return this;
    }

    /**
     * Get number of times the entry point failed to exit gracefully.
     *
     * @return the exitFailureCount value
     */
    public String exitFailureCount() {
        return this.exitFailureCount;
    }

    /**
     * Set number of times the entry point failed to exit gracefully.
     *
     * @param exitFailureCount the exitFailureCount value to set
     * @return the CodePackageEntryPointStatistics object itself.
     */
    public CodePackageEntryPointStatistics withExitFailureCount(String exitFailureCount) {
        this.exitFailureCount = exitFailureCount;
        return this;
    }

    /**
     * Get number of times the entry point continuously failed to exit gracefully.
     *
     * @return the continuousExitFailureCount value
     */
    public String continuousExitFailureCount() {
        return this.continuousExitFailureCount;
    }

    /**
     * Set number of times the entry point continuously failed to exit gracefully.
     *
     * @param continuousExitFailureCount the continuousExitFailureCount value to set
     * @return the CodePackageEntryPointStatistics object itself.
     */
    public CodePackageEntryPointStatistics withContinuousExitFailureCount(String continuousExitFailureCount) {
        this.continuousExitFailureCount = continuousExitFailureCount;
        return this;
    }

}
