/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric.implementation;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * Represents the base for all Node Events.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "Kind")
@JsonTypeName("NodeEvent")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "NodeAborted", value = NodeAbortedEvent.class),
    @JsonSubTypes.Type(name = "NodeAddedToCluster", value = NodeAddedToClusterEvent.class),
    @JsonSubTypes.Type(name = "NodeClosed", value = NodeClosedEvent.class),
    @JsonSubTypes.Type(name = "NodeDeactivateCompleted", value = NodeDeactivateCompletedEvent.class),
    @JsonSubTypes.Type(name = "NodeDeactivateStarted", value = NodeDeactivateStartedEvent.class),
    @JsonSubTypes.Type(name = "NodeDown", value = NodeDownEvent.class),
    @JsonSubTypes.Type(name = "NodeNewHealthReport", value = NodeNewHealthReportEvent.class),
    @JsonSubTypes.Type(name = "NodeHealthReportExpired", value = NodeHealthReportExpiredEvent.class),
    @JsonSubTypes.Type(name = "NodeOpenSucceeded", value = NodeOpenSucceededEvent.class),
    @JsonSubTypes.Type(name = "NodeOpenFailed", value = NodeOpenFailedEvent.class),
    @JsonSubTypes.Type(name = "NodeRemovedFromCluster", value = NodeRemovedFromClusterEvent.class),
    @JsonSubTypes.Type(name = "NodeUp", value = NodeUpEvent.class),
    @JsonSubTypes.Type(name = "ChaosNodeRestartScheduled", value = ChaosNodeRestartScheduledEvent.class)
})
public class NodeEventInner extends FabricEventInner {
    /**
     * The name of a Service Fabric node.
     */
    @JsonProperty(value = "NodeName", required = true)
    private String nodeName;

    /**
     * Get the name of a Service Fabric node.
     *
     * @return the nodeName value
     */
    public String nodeName() {
        return this.nodeName;
    }

    /**
     * Set the name of a Service Fabric node.
     *
     * @param nodeName the nodeName value to set
     * @return the NodeEventInner object itself.
     */
    public NodeEventInner withNodeName(String nodeName) {
        this.nodeName = nodeName;
        return this;
    }

}
