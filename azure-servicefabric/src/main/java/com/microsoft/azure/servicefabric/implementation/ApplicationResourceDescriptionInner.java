/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric.implementation;

import java.util.List;
import com.microsoft.azure.servicefabric.DiagnosticsDescription;
import com.microsoft.azure.servicefabric.ResourceStatus;
import com.microsoft.azure.servicefabric.HealthState;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * This type describes a application resource.
 */
@JsonFlatten
public class ApplicationResourceDescriptionInner {
    /**
     * Name of the Application resource.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * User readable description of the application.
     */
    @JsonProperty(value = "properties.description")
    private String description;

    /**
     * Describes the services in the application. This property is used to
     * create or modify services of the application. On get only the name of
     * the service is returned. The service description can be obtained by
     * querying for the service resource.
     */
    @JsonProperty(value = "properties.services")
    private List<ServiceResourceDescriptionInner> services;

    /**
     * Describes the diagnostics definition and usage for an application
     * resource.
     */
    @JsonProperty(value = "properties.diagnostics")
    private DiagnosticsDescription diagnostics;

    /**
     * Internal - used by Visual Studio to setup the debugging session on the
     * local development environment.
     */
    @JsonProperty(value = "properties.debugParams")
    private String debugParams;

    /**
     * Names of the services in the application.
     */
    @JsonProperty(value = "properties.serviceNames", access = JsonProperty.Access.WRITE_ONLY)
    private List<String> serviceNames;

    /**
     * Status of the application. Possible values include: 'Unknown', 'Ready',
     * 'Upgrading', 'Creating', 'Deleting', 'Failed'.
     */
    @JsonProperty(value = "properties.status", access = JsonProperty.Access.WRITE_ONLY)
    private ResourceStatus status;

    /**
     * Gives additional information about the current status of the
     * application.
     */
    @JsonProperty(value = "properties.statusDetails", access = JsonProperty.Access.WRITE_ONLY)
    private String statusDetails;

    /**
     * Describes the health state of an application resource. Possible values
     * include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'.
     */
    @JsonProperty(value = "properties.healthState", access = JsonProperty.Access.WRITE_ONLY)
    private HealthState healthState;

    /**
     * When the application's health state is not 'Ok', this additional details
     * from service fabric Health Manager for the user to know why the
     * application is marked unhealthy.
     */
    @JsonProperty(value = "properties.unhealthyEvaluation", access = JsonProperty.Access.WRITE_ONLY)
    private String unhealthyEvaluation;

    /**
     * Get name of the Application resource.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set name of the Application resource.
     *
     * @param name the name value to set
     * @return the ApplicationResourceDescriptionInner object itself.
     */
    public ApplicationResourceDescriptionInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get user readable description of the application.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Set user readable description of the application.
     *
     * @param description the description value to set
     * @return the ApplicationResourceDescriptionInner object itself.
     */
    public ApplicationResourceDescriptionInner withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource.
     *
     * @return the services value
     */
    public List<ServiceResourceDescriptionInner> services() {
        return this.services;
    }

    /**
     * Set describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource.
     *
     * @param services the services value to set
     * @return the ApplicationResourceDescriptionInner object itself.
     */
    public ApplicationResourceDescriptionInner withServices(List<ServiceResourceDescriptionInner> services) {
        this.services = services;
        return this;
    }

    /**
     * Get describes the diagnostics definition and usage for an application resource.
     *
     * @return the diagnostics value
     */
    public DiagnosticsDescription diagnostics() {
        return this.diagnostics;
    }

    /**
     * Set describes the diagnostics definition and usage for an application resource.
     *
     * @param diagnostics the diagnostics value to set
     * @return the ApplicationResourceDescriptionInner object itself.
     */
    public ApplicationResourceDescriptionInner withDiagnostics(DiagnosticsDescription diagnostics) {
        this.diagnostics = diagnostics;
        return this;
    }

    /**
     * Get internal - used by Visual Studio to setup the debugging session on the local development environment.
     *
     * @return the debugParams value
     */
    public String debugParams() {
        return this.debugParams;
    }

    /**
     * Set internal - used by Visual Studio to setup the debugging session on the local development environment.
     *
     * @param debugParams the debugParams value to set
     * @return the ApplicationResourceDescriptionInner object itself.
     */
    public ApplicationResourceDescriptionInner withDebugParams(String debugParams) {
        this.debugParams = debugParams;
        return this;
    }

    /**
     * Get names of the services in the application.
     *
     * @return the serviceNames value
     */
    public List<String> serviceNames() {
        return this.serviceNames;
    }

    /**
     * Get status of the application. Possible values include: 'Unknown', 'Ready', 'Upgrading', 'Creating', 'Deleting', 'Failed'.
     *
     * @return the status value
     */
    public ResourceStatus status() {
        return this.status;
    }

    /**
     * Get gives additional information about the current status of the application.
     *
     * @return the statusDetails value
     */
    public String statusDetails() {
        return this.statusDetails;
    }

    /**
     * Get describes the health state of an application resource. Possible values include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'.
     *
     * @return the healthState value
     */
    public HealthState healthState() {
        return this.healthState;
    }

    /**
     * Get when the application's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the application is marked unhealthy.
     *
     * @return the unhealthyEvaluation value
     */
    public String unhealthyEvaluation() {
        return this.unhealthyEvaluation;
    }

}
