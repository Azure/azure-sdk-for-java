/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Describes the properties of a service replica.
 */
public class ServiceReplicaProperties {
    /**
     * The operation system required by the code in service. Possible values
     * include: 'Linux', 'Windows'.
     */
    @JsonProperty(value = "osType", required = true)
    private OperatingSystemType osType;

    /**
     * Describes the set of code packages that forms the service. A code
     * package describes the container and the properties for running it. All
     * the code packages are started together on the same host and share the
     * same context (network, process etc.).
     */
    @JsonProperty(value = "codePackages", required = true)
    private List<ContainerCodePackageProperties> codePackages;

    /**
     * The names of the private networks that this service needs to be part of.
     */
    @JsonProperty(value = "networkRefs")
    private List<NetworkRef> networkRefs;

    /**
     * Reference to sinks in DiagnosticsDescription.
     */
    @JsonProperty(value = "diagnostics")
    private DiagnosticsRef diagnostics;

    /**
     * Get the operation system required by the code in service. Possible values include: 'Linux', 'Windows'.
     *
     * @return the osType value
     */
    public OperatingSystemType osType() {
        return this.osType;
    }

    /**
     * Set the operation system required by the code in service. Possible values include: 'Linux', 'Windows'.
     *
     * @param osType the osType value to set
     * @return the ServiceReplicaProperties object itself.
     */
    public ServiceReplicaProperties withOsType(OperatingSystemType osType) {
        this.osType = osType;
        return this;
    }

    /**
     * Get describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).
     *
     * @return the codePackages value
     */
    public List<ContainerCodePackageProperties> codePackages() {
        return this.codePackages;
    }

    /**
     * Set describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).
     *
     * @param codePackages the codePackages value to set
     * @return the ServiceReplicaProperties object itself.
     */
    public ServiceReplicaProperties withCodePackages(List<ContainerCodePackageProperties> codePackages) {
        this.codePackages = codePackages;
        return this;
    }

    /**
     * Get the names of the private networks that this service needs to be part of.
     *
     * @return the networkRefs value
     */
    public List<NetworkRef> networkRefs() {
        return this.networkRefs;
    }

    /**
     * Set the names of the private networks that this service needs to be part of.
     *
     * @param networkRefs the networkRefs value to set
     * @return the ServiceReplicaProperties object itself.
     */
    public ServiceReplicaProperties withNetworkRefs(List<NetworkRef> networkRefs) {
        this.networkRefs = networkRefs;
        return this;
    }

    /**
     * Get reference to sinks in DiagnosticsDescription.
     *
     * @return the diagnostics value
     */
    public DiagnosticsRef diagnostics() {
        return this.diagnostics;
    }

    /**
     * Set reference to sinks in DiagnosticsDescription.
     *
     * @param diagnostics the diagnostics value to set
     * @return the ServiceReplicaProperties object itself.
     */
    public ServiceReplicaProperties withDiagnostics(DiagnosticsRef diagnostics) {
        this.diagnostics = diagnostics;
        return this;
    }

}
