/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Describes additional filters to be applied, while listing backups, and
 * backup storage details from where to fetch the backups.
 */
public class GetBackupByStorageQueryDescription {
    /**
     * Specifies the start date time in ISO8601 from which to enumerate
     * backups. If not specified, backups are enumerated from the beginning.
     */
    @JsonProperty(value = "StartDateTimeFilter")
    private DateTime startDateTimeFilter;

    /**
     * Specifies the end date time in ISO8601 till which to enumerate backups.
     * If not specified, backups are enumerated till the end.
     */
    @JsonProperty(value = "EndDateTimeFilter")
    private DateTime endDateTimeFilter;

    /**
     * If specified as true, gets the most recent backup (within the specified
     * time range) for every partition under the specified backup entity.
     */
    @JsonProperty(value = "Latest")
    private Boolean latest;

    /**
     * Describes the parameters for the backup storage from where to enumerate
     * backups. This is optional and by default backups are enumerated from the
     * backup storage where this backup entity is currently being backed up (as
     * specified in backup policy). This parameter is useful to be able to
     * enumerate backups from another cluster where you may intend to restore.
     */
    @JsonProperty(value = "Storage", required = true)
    private BackupStorageDescription storage;

    /**
     * Indicates the entity for which to enumerate backups.
     */
    @JsonProperty(value = "BackupEntity", required = true)
    private BackupEntity backupEntity;

    /**
     * Get specifies the start date time in ISO8601 from which to enumerate backups. If not specified, backups are enumerated from the beginning.
     *
     * @return the startDateTimeFilter value
     */
    public DateTime startDateTimeFilter() {
        return this.startDateTimeFilter;
    }

    /**
     * Set specifies the start date time in ISO8601 from which to enumerate backups. If not specified, backups are enumerated from the beginning.
     *
     * @param startDateTimeFilter the startDateTimeFilter value to set
     * @return the GetBackupByStorageQueryDescription object itself.
     */
    public GetBackupByStorageQueryDescription withStartDateTimeFilter(DateTime startDateTimeFilter) {
        this.startDateTimeFilter = startDateTimeFilter;
        return this;
    }

    /**
     * Get specifies the end date time in ISO8601 till which to enumerate backups. If not specified, backups are enumerated till the end.
     *
     * @return the endDateTimeFilter value
     */
    public DateTime endDateTimeFilter() {
        return this.endDateTimeFilter;
    }

    /**
     * Set specifies the end date time in ISO8601 till which to enumerate backups. If not specified, backups are enumerated till the end.
     *
     * @param endDateTimeFilter the endDateTimeFilter value to set
     * @return the GetBackupByStorageQueryDescription object itself.
     */
    public GetBackupByStorageQueryDescription withEndDateTimeFilter(DateTime endDateTimeFilter) {
        this.endDateTimeFilter = endDateTimeFilter;
        return this;
    }

    /**
     * Get if specified as true, gets the most recent backup (within the specified time range) for every partition under the specified backup entity.
     *
     * @return the latest value
     */
    public Boolean latest() {
        return this.latest;
    }

    /**
     * Set if specified as true, gets the most recent backup (within the specified time range) for every partition under the specified backup entity.
     *
     * @param latest the latest value to set
     * @return the GetBackupByStorageQueryDescription object itself.
     */
    public GetBackupByStorageQueryDescription withLatest(Boolean latest) {
        this.latest = latest;
        return this;
    }

    /**
     * Get describes the parameters for the backup storage from where to enumerate backups. This is optional and by default backups are enumerated from the backup storage where this backup entity is currently being backed up (as specified in backup policy). This parameter is useful to be able to enumerate backups from another cluster where you may intend to restore.
     *
     * @return the storage value
     */
    public BackupStorageDescription storage() {
        return this.storage;
    }

    /**
     * Set describes the parameters for the backup storage from where to enumerate backups. This is optional and by default backups are enumerated from the backup storage where this backup entity is currently being backed up (as specified in backup policy). This parameter is useful to be able to enumerate backups from another cluster where you may intend to restore.
     *
     * @param storage the storage value to set
     * @return the GetBackupByStorageQueryDescription object itself.
     */
    public GetBackupByStorageQueryDescription withStorage(BackupStorageDescription storage) {
        this.storage = storage;
        return this;
    }

    /**
     * Get indicates the entity for which to enumerate backups.
     *
     * @return the backupEntity value
     */
    public BackupEntity backupEntity() {
        return this.backupEntity;
    }

    /**
     * Set indicates the entity for which to enumerate backups.
     *
     * @param backupEntity the backupEntity value to set
     * @return the GetBackupByStorageQueryDescription object itself.
     */
    public GetBackupByStorageQueryDescription withBackupEntity(BackupEntity backupEntity) {
        this.backupEntity = backupEntity;
        return this;
    }

}
