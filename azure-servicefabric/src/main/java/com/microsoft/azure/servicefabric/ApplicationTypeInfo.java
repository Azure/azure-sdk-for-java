/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Information about an application type.
 */
public class ApplicationTypeInfo {
    /**
     * The application type name as defined in the application manifest.
     */
    @JsonProperty(value = "Name")
    private String name;

    /**
     * The version of the application type as defined in the application
     * manifest.
     */
    @JsonProperty(value = "Version")
    private String version;

    /**
     * List of application type parameters that can be overridden when creating
     * or updating the application.
     */
    @JsonProperty(value = "DefaultParameterList")
    private List<ApplicationParameter> defaultParameterList;

    /**
     * The status of the application type. Possible values include: 'Invalid',
     * 'Provisioning', 'Available', 'Unprovisioning', 'Failed'.
     */
    @JsonProperty(value = "Status")
    private ApplicationTypeStatus status;

    /**
     * Additional detailed information about the status of the application
     * type.
     */
    @JsonProperty(value = "StatusDetails")
    private String statusDetails;

    /**
     * The mechanism used to define a Service Fabric application type. Possible
     * values include: 'Invalid', 'ServiceFabricApplicationPackage', 'Compose'.
     */
    @JsonProperty(value = "ApplicationTypeDefinitionKind")
    private ApplicationTypeDefinitionKind applicationTypeDefinitionKind;

    /**
     * Get the application type name as defined in the application manifest.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the application type name as defined in the application manifest.
     *
     * @param name the name value to set
     * @return the ApplicationTypeInfo object itself.
     */
    public ApplicationTypeInfo withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the version of the application type as defined in the application manifest.
     *
     * @return the version value
     */
    public String version() {
        return this.version;
    }

    /**
     * Set the version of the application type as defined in the application manifest.
     *
     * @param version the version value to set
     * @return the ApplicationTypeInfo object itself.
     */
    public ApplicationTypeInfo withVersion(String version) {
        this.version = version;
        return this;
    }

    /**
     * Get list of application type parameters that can be overridden when creating or updating the application.
     *
     * @return the defaultParameterList value
     */
    public List<ApplicationParameter> defaultParameterList() {
        return this.defaultParameterList;
    }

    /**
     * Set list of application type parameters that can be overridden when creating or updating the application.
     *
     * @param defaultParameterList the defaultParameterList value to set
     * @return the ApplicationTypeInfo object itself.
     */
    public ApplicationTypeInfo withDefaultParameterList(List<ApplicationParameter> defaultParameterList) {
        this.defaultParameterList = defaultParameterList;
        return this;
    }

    /**
     * Get the status of the application type. Possible values include: 'Invalid', 'Provisioning', 'Available', 'Unprovisioning', 'Failed'.
     *
     * @return the status value
     */
    public ApplicationTypeStatus status() {
        return this.status;
    }

    /**
     * Set the status of the application type. Possible values include: 'Invalid', 'Provisioning', 'Available', 'Unprovisioning', 'Failed'.
     *
     * @param status the status value to set
     * @return the ApplicationTypeInfo object itself.
     */
    public ApplicationTypeInfo withStatus(ApplicationTypeStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get additional detailed information about the status of the application type.
     *
     * @return the statusDetails value
     */
    public String statusDetails() {
        return this.statusDetails;
    }

    /**
     * Set additional detailed information about the status of the application type.
     *
     * @param statusDetails the statusDetails value to set
     * @return the ApplicationTypeInfo object itself.
     */
    public ApplicationTypeInfo withStatusDetails(String statusDetails) {
        this.statusDetails = statusDetails;
        return this;
    }

    /**
     * Get the mechanism used to define a Service Fabric application type. Possible values include: 'Invalid', 'ServiceFabricApplicationPackage', 'Compose'.
     *
     * @return the applicationTypeDefinitionKind value
     */
    public ApplicationTypeDefinitionKind applicationTypeDefinitionKind() {
        return this.applicationTypeDefinitionKind;
    }

    /**
     * Set the mechanism used to define a Service Fabric application type. Possible values include: 'Invalid', 'ServiceFabricApplicationPackage', 'Compose'.
     *
     * @param applicationTypeDefinitionKind the applicationTypeDefinitionKind value to set
     * @return the ApplicationTypeInfo object itself.
     */
    public ApplicationTypeInfo withApplicationTypeDefinitionKind(ApplicationTypeDefinitionKind applicationTypeDefinitionKind) {
        this.applicationTypeDefinitionKind = applicationTypeDefinitionKind;
        return this;
    }

}
