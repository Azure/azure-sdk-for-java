/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents the health state chunk of a application.
 * The application health state chunk contains the application name, its
 * aggregated health state and any children services and deployed applications
 * that respect the filters in cluster health chunk query description.
 */
public class ApplicationHealthStateChunk extends EntityHealthStateChunk {
    /**
     * The name of the application, including the 'fabric:' URI scheme.
     */
    @JsonProperty(value = "ApplicationName")
    private String applicationName;

    /**
     * The application type name as defined in the application manifest.
     */
    @JsonProperty(value = "ApplicationTypeName")
    private String applicationTypeName;

    /**
     * The list of service health state chunks in the cluster that respect the
     * filters in the cluster health chunk query description.
     */
    @JsonProperty(value = "ServiceHealthStateChunks")
    private ServiceHealthStateChunkList serviceHealthStateChunks;

    /**
     * The list of deployed application health state chunks in the cluster that
     * respect the filters in the cluster health chunk query description.
     */
    @JsonProperty(value = "DeployedApplicationHealthStateChunks")
    private DeployedApplicationHealthStateChunkList deployedApplicationHealthStateChunks;

    /**
     * Get the name of the application, including the 'fabric:' URI scheme.
     *
     * @return the applicationName value
     */
    public String applicationName() {
        return this.applicationName;
    }

    /**
     * Set the name of the application, including the 'fabric:' URI scheme.
     *
     * @param applicationName the applicationName value to set
     * @return the ApplicationHealthStateChunk object itself.
     */
    public ApplicationHealthStateChunk withApplicationName(String applicationName) {
        this.applicationName = applicationName;
        return this;
    }

    /**
     * Get the application type name as defined in the application manifest.
     *
     * @return the applicationTypeName value
     */
    public String applicationTypeName() {
        return this.applicationTypeName;
    }

    /**
     * Set the application type name as defined in the application manifest.
     *
     * @param applicationTypeName the applicationTypeName value to set
     * @return the ApplicationHealthStateChunk object itself.
     */
    public ApplicationHealthStateChunk withApplicationTypeName(String applicationTypeName) {
        this.applicationTypeName = applicationTypeName;
        return this;
    }

    /**
     * Get the list of service health state chunks in the cluster that respect the filters in the cluster health chunk query description.
     *
     * @return the serviceHealthStateChunks value
     */
    public ServiceHealthStateChunkList serviceHealthStateChunks() {
        return this.serviceHealthStateChunks;
    }

    /**
     * Set the list of service health state chunks in the cluster that respect the filters in the cluster health chunk query description.
     *
     * @param serviceHealthStateChunks the serviceHealthStateChunks value to set
     * @return the ApplicationHealthStateChunk object itself.
     */
    public ApplicationHealthStateChunk withServiceHealthStateChunks(ServiceHealthStateChunkList serviceHealthStateChunks) {
        this.serviceHealthStateChunks = serviceHealthStateChunks;
        return this;
    }

    /**
     * Get the list of deployed application health state chunks in the cluster that respect the filters in the cluster health chunk query description.
     *
     * @return the deployedApplicationHealthStateChunks value
     */
    public DeployedApplicationHealthStateChunkList deployedApplicationHealthStateChunks() {
        return this.deployedApplicationHealthStateChunks;
    }

    /**
     * Set the list of deployed application health state chunks in the cluster that respect the filters in the cluster health chunk query description.
     *
     * @param deployedApplicationHealthStateChunks the deployedApplicationHealthStateChunks value to set
     * @return the ApplicationHealthStateChunk object itself.
     */
    public ApplicationHealthStateChunk withDeployedApplicationHealthStateChunks(DeployedApplicationHealthStateChunkList deployedApplicationHealthStateChunks) {
        this.deployedApplicationHealthStateChunks = deployedApplicationHealthStateChunks;
        return this;
    }

}
