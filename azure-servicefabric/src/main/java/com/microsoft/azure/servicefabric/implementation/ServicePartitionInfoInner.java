/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric.implementation;

import com.microsoft.azure.servicefabric.HealthState;
import com.microsoft.azure.servicefabric.ServicePartitionStatus;
import com.microsoft.azure.servicefabric.PartitionInformation;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonSubTypes;

/**
 * Information about a partition of a Service Fabric service.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "ServiceKind")
@JsonTypeName("ServicePartitionInfo")
@JsonSubTypes({
    @JsonSubTypes.Type(name = "Stateful", value = StatefulServicePartitionInfo.class),
    @JsonSubTypes.Type(name = "Stateless", value = StatelessServicePartitionInfo.class)
})
public class ServicePartitionInfoInner {
    /**
     * The health state of a Service Fabric entity such as Cluster, Node,
     * Application, Service, Partition, Replica etc. Possible values include:
     * 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'.
     */
    @JsonProperty(value = "HealthState")
    private HealthState healthState;

    /**
     * The status of the service fabric service partition. Possible values
     * include: 'Invalid', 'Ready', 'NotReady', 'InQuorumLoss',
     * 'Reconfiguring', 'Deleting'.
     */
    @JsonProperty(value = "PartitionStatus")
    private ServicePartitionStatus partitionStatus;

    /**
     * Information about the partition identity, partitioning scheme and keys
     * supported by it.
     */
    @JsonProperty(value = "PartitionInformation")
    private PartitionInformation partitionInformation;

    /**
     * Get the health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc. Possible values include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'.
     *
     * @return the healthState value
     */
    public HealthState healthState() {
        return this.healthState;
    }

    /**
     * Set the health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc. Possible values include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'.
     *
     * @param healthState the healthState value to set
     * @return the ServicePartitionInfoInner object itself.
     */
    public ServicePartitionInfoInner withHealthState(HealthState healthState) {
        this.healthState = healthState;
        return this;
    }

    /**
     * Get the status of the service fabric service partition. Possible values include: 'Invalid', 'Ready', 'NotReady', 'InQuorumLoss', 'Reconfiguring', 'Deleting'.
     *
     * @return the partitionStatus value
     */
    public ServicePartitionStatus partitionStatus() {
        return this.partitionStatus;
    }

    /**
     * Set the status of the service fabric service partition. Possible values include: 'Invalid', 'Ready', 'NotReady', 'InQuorumLoss', 'Reconfiguring', 'Deleting'.
     *
     * @param partitionStatus the partitionStatus value to set
     * @return the ServicePartitionInfoInner object itself.
     */
    public ServicePartitionInfoInner withPartitionStatus(ServicePartitionStatus partitionStatus) {
        this.partitionStatus = partitionStatus;
        return this;
    }

    /**
     * Get information about the partition identity, partitioning scheme and keys supported by it.
     *
     * @return the partitionInformation value
     */
    public PartitionInformation partitionInformation() {
        return this.partitionInformation;
    }

    /**
     * Set information about the partition identity, partitioning scheme and keys supported by it.
     *
     * @param partitionInformation the partitionInformation value to set
     * @return the ServicePartitionInfoInner object itself.
     */
    public ServicePartitionInfoInner withPartitionInformation(PartitionInformation partitionInformation) {
        this.partitionInformation = partitionInformation;
        return this;
    }

}
