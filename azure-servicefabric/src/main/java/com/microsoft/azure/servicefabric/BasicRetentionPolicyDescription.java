/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import org.joda.time.Period;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Describes basic retention policy.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "RetentionPolicyType")
@JsonTypeName("Basic")
public class BasicRetentionPolicyDescription extends RetentionPolicyDescription {
    /**
     * It is the minimum duration for which a backup created, will remain
     * stored in the storage and might get deleted after that span of time. It
     * should be specified in ISO8601 format.
     */
    @JsonProperty(value = "RetentionDuration", required = true)
    private Period retentionDuration;

    /**
     * It is the minimum number of backups to be retained at any point of time.
     * If specified with a non zero value, backups will not be deleted even if
     * the backups have gone past retention duration and have number of backups
     * less than or equal to it.
     */
    @JsonProperty(value = "MinimumNumberOfBackups")
    private Integer minimumNumberOfBackups;

    /**
     * Get it is the minimum duration for which a backup created, will remain stored in the storage and might get deleted after that span of time. It should be specified in ISO8601 format.
     *
     * @return the retentionDuration value
     */
    public Period retentionDuration() {
        return this.retentionDuration;
    }

    /**
     * Set it is the minimum duration for which a backup created, will remain stored in the storage and might get deleted after that span of time. It should be specified in ISO8601 format.
     *
     * @param retentionDuration the retentionDuration value to set
     * @return the BasicRetentionPolicyDescription object itself.
     */
    public BasicRetentionPolicyDescription withRetentionDuration(Period retentionDuration) {
        this.retentionDuration = retentionDuration;
        return this;
    }

    /**
     * Get it is the minimum number of backups to be retained at any point of time. If specified with a non zero value, backups will not be deleted even if the backups have gone past retention duration and have number of backups less than or equal to it.
     *
     * @return the minimumNumberOfBackups value
     */
    public Integer minimumNumberOfBackups() {
        return this.minimumNumberOfBackups;
    }

    /**
     * Set it is the minimum number of backups to be retained at any point of time. If specified with a non zero value, backups will not be deleted even if the backups have gone past retention duration and have number of backups less than or equal to it.
     *
     * @param minimumNumberOfBackups the minimumNumberOfBackups value to set
     * @return the BasicRetentionPolicyDescription object itself.
     */
    public BasicRetentionPolicyDescription withMinimumNumberOfBackups(Integer minimumNumberOfBackups) {
        this.minimumNumberOfBackups = minimumNumberOfBackups;
        return this;
    }

}
