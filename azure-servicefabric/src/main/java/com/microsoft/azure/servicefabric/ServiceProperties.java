/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Describes properties of a service resource.
 */
public class ServiceProperties {
    /**
     * User readable description of the service.
     */
    @JsonProperty(value = "description")
    private String description;

    /**
     * The number of replicas of the service to create. Defaults to 1 if not
     * specified.
     */
    @JsonProperty(value = "replicaCount")
    private Integer replicaCount;

    /**
     * Auto scaling policies.
     */
    @JsonProperty(value = "autoScalingPolicies")
    private List<AutoScalingPolicy> autoScalingPolicies;

    /**
     * Status of the service. Possible values include: 'Unknown', 'Ready',
     * 'Upgrading', 'Creating', 'Deleting', 'Failed'.
     */
    @JsonProperty(value = "status", access = JsonProperty.Access.WRITE_ONLY)
    private ResourceStatus status;

    /**
     * Gives additional information about the current status of the service.
     */
    @JsonProperty(value = "statusDetails", access = JsonProperty.Access.WRITE_ONLY)
    private String statusDetails;

    /**
     * Describes the health state of an application resource. Possible values
     * include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'.
     */
    @JsonProperty(value = "healthState", access = JsonProperty.Access.WRITE_ONLY)
    private HealthState healthState;

    /**
     * When the service's health state is not 'Ok', this additional details
     * from service fabric Health Manager for the user to know why the service
     * is marked unhealthy.
     */
    @JsonProperty(value = "unhealthyEvaluation", access = JsonProperty.Access.WRITE_ONLY)
    private String unhealthyEvaluation;

    /**
     * Get user readable description of the service.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Set user readable description of the service.
     *
     * @param description the description value to set
     * @return the ServiceProperties object itself.
     */
    public ServiceProperties withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the number of replicas of the service to create. Defaults to 1 if not specified.
     *
     * @return the replicaCount value
     */
    public Integer replicaCount() {
        return this.replicaCount;
    }

    /**
     * Set the number of replicas of the service to create. Defaults to 1 if not specified.
     *
     * @param replicaCount the replicaCount value to set
     * @return the ServiceProperties object itself.
     */
    public ServiceProperties withReplicaCount(Integer replicaCount) {
        this.replicaCount = replicaCount;
        return this;
    }

    /**
     * Get auto scaling policies.
     *
     * @return the autoScalingPolicies value
     */
    public List<AutoScalingPolicy> autoScalingPolicies() {
        return this.autoScalingPolicies;
    }

    /**
     * Set auto scaling policies.
     *
     * @param autoScalingPolicies the autoScalingPolicies value to set
     * @return the ServiceProperties object itself.
     */
    public ServiceProperties withAutoScalingPolicies(List<AutoScalingPolicy> autoScalingPolicies) {
        this.autoScalingPolicies = autoScalingPolicies;
        return this;
    }

    /**
     * Get status of the service. Possible values include: 'Unknown', 'Ready', 'Upgrading', 'Creating', 'Deleting', 'Failed'.
     *
     * @return the status value
     */
    public ResourceStatus status() {
        return this.status;
    }

    /**
     * Get gives additional information about the current status of the service.
     *
     * @return the statusDetails value
     */
    public String statusDetails() {
        return this.statusDetails;
    }

    /**
     * Get describes the health state of an application resource. Possible values include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'.
     *
     * @return the healthState value
     */
    public HealthState healthState() {
        return this.healthState;
    }

    /**
     * Get when the service's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the service is marked unhealthy.
     *
     * @return the unhealthyEvaluation value
     */
    public String unhealthyEvaluation() {
        return this.unhealthyEvaluation;
    }

}
