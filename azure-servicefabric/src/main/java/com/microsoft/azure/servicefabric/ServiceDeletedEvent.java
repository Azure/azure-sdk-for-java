/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.azure.servicefabric.implementation.ServiceEventInner;

/**
 * Service Deleted event.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "Kind")
@JsonTypeName("ServiceDeleted")
public class ServiceDeletedEvent extends ServiceEventInner {
    /**
     * Service type name.
     */
    @JsonProperty(value = "ServiceTypeName", required = true)
    private String serviceTypeName;

    /**
     * Application name.
     */
    @JsonProperty(value = "ApplicationName", required = true)
    private String applicationName;

    /**
     * Application type name.
     */
    @JsonProperty(value = "ApplicationTypeName", required = true)
    private String applicationTypeName;

    /**
     * Id of Service instance.
     */
    @JsonProperty(value = "ServiceInstance", required = true)
    private long serviceInstance;

    /**
     * Indicates if Service is stateful.
     */
    @JsonProperty(value = "IsStateful", required = true)
    private boolean isStateful;

    /**
     * Number of partitions.
     */
    @JsonProperty(value = "PartitionCount", required = true)
    private int partitionCount;

    /**
     * Size of target replicas set.
     */
    @JsonProperty(value = "TargetReplicaSetSize", required = true)
    private int targetReplicaSetSize;

    /**
     * Minimum size of replicas set.
     */
    @JsonProperty(value = "MinReplicaSetSize", required = true)
    private int minReplicaSetSize;

    /**
     * Version of Service package.
     */
    @JsonProperty(value = "ServicePackageVersion", required = true)
    private String servicePackageVersion;

    /**
     * Get service type name.
     *
     * @return the serviceTypeName value
     */
    public String serviceTypeName() {
        return this.serviceTypeName;
    }

    /**
     * Set service type name.
     *
     * @param serviceTypeName the serviceTypeName value to set
     * @return the ServiceDeletedEvent object itself.
     */
    public ServiceDeletedEvent withServiceTypeName(String serviceTypeName) {
        this.serviceTypeName = serviceTypeName;
        return this;
    }

    /**
     * Get application name.
     *
     * @return the applicationName value
     */
    public String applicationName() {
        return this.applicationName;
    }

    /**
     * Set application name.
     *
     * @param applicationName the applicationName value to set
     * @return the ServiceDeletedEvent object itself.
     */
    public ServiceDeletedEvent withApplicationName(String applicationName) {
        this.applicationName = applicationName;
        return this;
    }

    /**
     * Get application type name.
     *
     * @return the applicationTypeName value
     */
    public String applicationTypeName() {
        return this.applicationTypeName;
    }

    /**
     * Set application type name.
     *
     * @param applicationTypeName the applicationTypeName value to set
     * @return the ServiceDeletedEvent object itself.
     */
    public ServiceDeletedEvent withApplicationTypeName(String applicationTypeName) {
        this.applicationTypeName = applicationTypeName;
        return this;
    }

    /**
     * Get id of Service instance.
     *
     * @return the serviceInstance value
     */
    public long serviceInstance() {
        return this.serviceInstance;
    }

    /**
     * Set id of Service instance.
     *
     * @param serviceInstance the serviceInstance value to set
     * @return the ServiceDeletedEvent object itself.
     */
    public ServiceDeletedEvent withServiceInstance(long serviceInstance) {
        this.serviceInstance = serviceInstance;
        return this;
    }

    /**
     * Get indicates if Service is stateful.
     *
     * @return the isStateful value
     */
    public boolean isStateful() {
        return this.isStateful;
    }

    /**
     * Set indicates if Service is stateful.
     *
     * @param isStateful the isStateful value to set
     * @return the ServiceDeletedEvent object itself.
     */
    public ServiceDeletedEvent withIsStateful(boolean isStateful) {
        this.isStateful = isStateful;
        return this;
    }

    /**
     * Get number of partitions.
     *
     * @return the partitionCount value
     */
    public int partitionCount() {
        return this.partitionCount;
    }

    /**
     * Set number of partitions.
     *
     * @param partitionCount the partitionCount value to set
     * @return the ServiceDeletedEvent object itself.
     */
    public ServiceDeletedEvent withPartitionCount(int partitionCount) {
        this.partitionCount = partitionCount;
        return this;
    }

    /**
     * Get size of target replicas set.
     *
     * @return the targetReplicaSetSize value
     */
    public int targetReplicaSetSize() {
        return this.targetReplicaSetSize;
    }

    /**
     * Set size of target replicas set.
     *
     * @param targetReplicaSetSize the targetReplicaSetSize value to set
     * @return the ServiceDeletedEvent object itself.
     */
    public ServiceDeletedEvent withTargetReplicaSetSize(int targetReplicaSetSize) {
        this.targetReplicaSetSize = targetReplicaSetSize;
        return this;
    }

    /**
     * Get minimum size of replicas set.
     *
     * @return the minReplicaSetSize value
     */
    public int minReplicaSetSize() {
        return this.minReplicaSetSize;
    }

    /**
     * Set minimum size of replicas set.
     *
     * @param minReplicaSetSize the minReplicaSetSize value to set
     * @return the ServiceDeletedEvent object itself.
     */
    public ServiceDeletedEvent withMinReplicaSetSize(int minReplicaSetSize) {
        this.minReplicaSetSize = minReplicaSetSize;
        return this;
    }

    /**
     * Get version of Service package.
     *
     * @return the servicePackageVersion value
     */
    public String servicePackageVersion() {
        return this.servicePackageVersion;
    }

    /**
     * Set version of Service package.
     *
     * @param servicePackageVersion the servicePackageVersion value to set
     * @return the ServiceDeletedEvent object itself.
     */
    public ServiceDeletedEvent withServicePackageVersion(String servicePackageVersion) {
        this.servicePackageVersion = servicePackageVersion;
        return this;
    }

}
