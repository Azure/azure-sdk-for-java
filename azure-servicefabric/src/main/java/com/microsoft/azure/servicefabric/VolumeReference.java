/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Describes a reference to a volume resource.
 */
public class VolumeReference {
    /**
     * Name of the volume being referenced.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * The flag indicating whether the volume is read only. Default is 'false'.
     */
    @JsonProperty(value = "readOnly")
    private Boolean readOnly;

    /**
     * The path within the container at which the volume should be mounted.
     * Only valid path characters are allowed.
     */
    @JsonProperty(value = "destinationPath", required = true)
    private String destinationPath;

    /**
     * Get name of the volume being referenced.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set name of the volume being referenced.
     *
     * @param name the name value to set
     * @return the VolumeReference object itself.
     */
    public VolumeReference withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the flag indicating whether the volume is read only. Default is 'false'.
     *
     * @return the readOnly value
     */
    public Boolean readOnly() {
        return this.readOnly;
    }

    /**
     * Set the flag indicating whether the volume is read only. Default is 'false'.
     *
     * @param readOnly the readOnly value to set
     * @return the VolumeReference object itself.
     */
    public VolumeReference withReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
        return this;
    }

    /**
     * Get the path within the container at which the volume should be mounted. Only valid path characters are allowed.
     *
     * @return the destinationPath value
     */
    public String destinationPath() {
        return this.destinationPath;
    }

    /**
     * Set the path within the container at which the volume should be mounted. Only valid path characters are allowed.
     *
     * @param destinationPath the destinationPath value to set
     * @return the VolumeReference object itself.
     */
    public VolumeReference withDestinationPath(String destinationPath) {
        this.destinationPath = destinationPath;
        return this;
    }

}
