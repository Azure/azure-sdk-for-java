/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Defines description for creating a Service Fabric service from a template
 * defined in the application manifest.
 */
public class ServiceFromTemplateDescription {
    /**
     * The name of the application, including the 'fabric:' URI scheme.
     */
    @JsonProperty(value = "ApplicationName", required = true)
    private String applicationName;

    /**
     * The full name of the service with 'fabric:' URI scheme.
     */
    @JsonProperty(value = "ServiceName", required = true)
    private String serviceName;

    /**
     * Name of the service type as specified in the service manifest.
     */
    @JsonProperty(value = "ServiceTypeName", required = true)
    private String serviceTypeName;

    /**
     * The initialization data for the newly created service instance.
     */
    @JsonProperty(value = "InitializationData")
    private List<Integer> initializationData;

    /**
     * The activation mode of service package to be used for a service.
     * Possible values include: 'SharedProcess', 'ExclusiveProcess'.
     */
    @JsonProperty(value = "ServicePackageActivationMode")
    private ServicePackageActivationMode servicePackageActivationMode;

    /**
     * The DNS name of the service. It requires the DNS system service to be
     * enabled in Service Fabric cluster.
     */
    @JsonProperty(value = "ServiceDnsName")
    private String serviceDnsName;

    /**
     * Get the name of the application, including the 'fabric:' URI scheme.
     *
     * @return the applicationName value
     */
    public String applicationName() {
        return this.applicationName;
    }

    /**
     * Set the name of the application, including the 'fabric:' URI scheme.
     *
     * @param applicationName the applicationName value to set
     * @return the ServiceFromTemplateDescription object itself.
     */
    public ServiceFromTemplateDescription withApplicationName(String applicationName) {
        this.applicationName = applicationName;
        return this;
    }

    /**
     * Get the full name of the service with 'fabric:' URI scheme.
     *
     * @return the serviceName value
     */
    public String serviceName() {
        return this.serviceName;
    }

    /**
     * Set the full name of the service with 'fabric:' URI scheme.
     *
     * @param serviceName the serviceName value to set
     * @return the ServiceFromTemplateDescription object itself.
     */
    public ServiceFromTemplateDescription withServiceName(String serviceName) {
        this.serviceName = serviceName;
        return this;
    }

    /**
     * Get name of the service type as specified in the service manifest.
     *
     * @return the serviceTypeName value
     */
    public String serviceTypeName() {
        return this.serviceTypeName;
    }

    /**
     * Set name of the service type as specified in the service manifest.
     *
     * @param serviceTypeName the serviceTypeName value to set
     * @return the ServiceFromTemplateDescription object itself.
     */
    public ServiceFromTemplateDescription withServiceTypeName(String serviceTypeName) {
        this.serviceTypeName = serviceTypeName;
        return this;
    }

    /**
     * Get the initialization data for the newly created service instance.
     *
     * @return the initializationData value
     */
    public List<Integer> initializationData() {
        return this.initializationData;
    }

    /**
     * Set the initialization data for the newly created service instance.
     *
     * @param initializationData the initializationData value to set
     * @return the ServiceFromTemplateDescription object itself.
     */
    public ServiceFromTemplateDescription withInitializationData(List<Integer> initializationData) {
        this.initializationData = initializationData;
        return this;
    }

    /**
     * Get the activation mode of service package to be used for a service. Possible values include: 'SharedProcess', 'ExclusiveProcess'.
     *
     * @return the servicePackageActivationMode value
     */
    public ServicePackageActivationMode servicePackageActivationMode() {
        return this.servicePackageActivationMode;
    }

    /**
     * Set the activation mode of service package to be used for a service. Possible values include: 'SharedProcess', 'ExclusiveProcess'.
     *
     * @param servicePackageActivationMode the servicePackageActivationMode value to set
     * @return the ServiceFromTemplateDescription object itself.
     */
    public ServiceFromTemplateDescription withServicePackageActivationMode(ServicePackageActivationMode servicePackageActivationMode) {
        this.servicePackageActivationMode = servicePackageActivationMode;
        return this;
    }

    /**
     * Get the DNS name of the service. It requires the DNS system service to be enabled in Service Fabric cluster.
     *
     * @return the serviceDnsName value
     */
    public String serviceDnsName() {
        return this.serviceDnsName;
    }

    /**
     * Set the DNS name of the service. It requires the DNS system service to be enabled in Service Fabric cluster.
     *
     * @param serviceDnsName the serviceDnsName value to set
     * @return the ServiceFromTemplateDescription object itself.
     */
    public ServiceFromTemplateDescription withServiceDnsName(String serviceDnsName) {
        this.serviceDnsName = serviceDnsName;
        return this;
    }

}
