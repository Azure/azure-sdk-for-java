/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Provides statistics about the Service Fabric Replicator, when it is
 * functioning in a Primary role.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "Kind")
@JsonTypeName("Primary")
public class PrimaryReplicatorStatus extends ReplicatorStatus {
    /**
     * Details about the replication queue on the primary replicator.
     */
    @JsonProperty(value = "ReplicationQueueStatus")
    private ReplicatorQueueStatus replicationQueueStatus;

    /**
     * The status of all the active and idle secondary replicators that the
     * primary is aware of.
     */
    @JsonProperty(value = "RemoteReplicators")
    private List<RemoteReplicatorStatus> remoteReplicators;

    /**
     * Get details about the replication queue on the primary replicator.
     *
     * @return the replicationQueueStatus value
     */
    public ReplicatorQueueStatus replicationQueueStatus() {
        return this.replicationQueueStatus;
    }

    /**
     * Set details about the replication queue on the primary replicator.
     *
     * @param replicationQueueStatus the replicationQueueStatus value to set
     * @return the PrimaryReplicatorStatus object itself.
     */
    public PrimaryReplicatorStatus withReplicationQueueStatus(ReplicatorQueueStatus replicationQueueStatus) {
        this.replicationQueueStatus = replicationQueueStatus;
        return this;
    }

    /**
     * Get the status of all the active and idle secondary replicators that the primary is aware of.
     *
     * @return the remoteReplicators value
     */
    public List<RemoteReplicatorStatus> remoteReplicators() {
        return this.remoteReplicators;
    }

    /**
     * Set the status of all the active and idle secondary replicators that the primary is aware of.
     *
     * @param remoteReplicators the remoteReplicators value to set
     * @return the PrimaryReplicatorStatus object itself.
     */
    public PrimaryReplicatorStatus withRemoteReplicators(List<RemoteReplicatorStatus> remoteReplicators) {
        this.remoteReplicators = remoteReplicators;
        return this;
    }

}
