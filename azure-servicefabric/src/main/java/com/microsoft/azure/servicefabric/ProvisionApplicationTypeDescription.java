/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Describes the operation to register or provision an application type using
 * an application package uploaded to the Service Fabric image store.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "Kind")
@JsonTypeName("ImageStorePath")
public class ProvisionApplicationTypeDescription extends ProvisionApplicationTypeDescriptionBase {
    /**
     * The relative path for the application package in the image store
     * specified during the prior upload operation.
     */
    @JsonProperty(value = "ApplicationTypeBuildPath", required = true)
    private String applicationTypeBuildPath;

    /**
     * The kind of action that needs to be taken for cleaning up the
     * application package after successful provision. Possible values include:
     * 'Invalid', 'Default', 'Automatic', 'Manual'.
     */
    @JsonProperty(value = "ApplicationPackageCleanupPolicy")
    private ApplicationPackageCleanupPolicy applicationPackageCleanupPolicy;

    /**
     * Get the relative path for the application package in the image store specified during the prior upload operation.
     *
     * @return the applicationTypeBuildPath value
     */
    public String applicationTypeBuildPath() {
        return this.applicationTypeBuildPath;
    }

    /**
     * Set the relative path for the application package in the image store specified during the prior upload operation.
     *
     * @param applicationTypeBuildPath the applicationTypeBuildPath value to set
     * @return the ProvisionApplicationTypeDescription object itself.
     */
    public ProvisionApplicationTypeDescription withApplicationTypeBuildPath(String applicationTypeBuildPath) {
        this.applicationTypeBuildPath = applicationTypeBuildPath;
        return this;
    }

    /**
     * Get the kind of action that needs to be taken for cleaning up the application package after successful provision. Possible values include: 'Invalid', 'Default', 'Automatic', 'Manual'.
     *
     * @return the applicationPackageCleanupPolicy value
     */
    public ApplicationPackageCleanupPolicy applicationPackageCleanupPolicy() {
        return this.applicationPackageCleanupPolicy;
    }

    /**
     * Set the kind of action that needs to be taken for cleaning up the application package after successful provision. Possible values include: 'Invalid', 'Default', 'Automatic', 'Manual'.
     *
     * @param applicationPackageCleanupPolicy the applicationPackageCleanupPolicy value to set
     * @return the ProvisionApplicationTypeDescription object itself.
     */
    public ProvisionApplicationTypeDescription withApplicationPackageCleanupPolicy(ApplicationPackageCleanupPolicy applicationPackageCleanupPolicy) {
        this.applicationPackageCleanupPolicy = applicationPackageCleanupPolicy;
        return this;
    }

}
