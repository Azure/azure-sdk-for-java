/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Describes the parameters for updating an ongoing application upgrade.
 */
public class ApplicationUpgradeUpdateDescription {
    /**
     * The name of the application, including the 'fabric:' URI scheme.
     */
    @JsonProperty(value = "Name", required = true)
    private String name;

    /**
     * The kind of upgrade out of the following possible values. Possible
     * values include: 'Invalid', 'Rolling'.
     */
    @JsonProperty(value = "UpgradeKind", required = true)
    private UpgradeKind upgradeKind;

    /**
     * Defines a health policy used to evaluate the health of an application or
     * one of its children entities.
     */
    @JsonProperty(value = "ApplicationHealthPolicy")
    private ApplicationHealthPolicy applicationHealthPolicy;

    /**
     * Describes the parameters for updating a rolling upgrade of application
     * or cluster.
     */
    @JsonProperty(value = "UpdateDescription")
    private RollingUpgradeUpdateDescription updateDescription;

    /**
     * Get the name of the application, including the 'fabric:' URI scheme.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name of the application, including the 'fabric:' URI scheme.
     *
     * @param name the name value to set
     * @return the ApplicationUpgradeUpdateDescription object itself.
     */
    public ApplicationUpgradeUpdateDescription withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the kind of upgrade out of the following possible values. Possible values include: 'Invalid', 'Rolling'.
     *
     * @return the upgradeKind value
     */
    public UpgradeKind upgradeKind() {
        return this.upgradeKind;
    }

    /**
     * Set the kind of upgrade out of the following possible values. Possible values include: 'Invalid', 'Rolling'.
     *
     * @param upgradeKind the upgradeKind value to set
     * @return the ApplicationUpgradeUpdateDescription object itself.
     */
    public ApplicationUpgradeUpdateDescription withUpgradeKind(UpgradeKind upgradeKind) {
        this.upgradeKind = upgradeKind;
        return this;
    }

    /**
     * Get defines a health policy used to evaluate the health of an application or one of its children entities.
     *
     * @return the applicationHealthPolicy value
     */
    public ApplicationHealthPolicy applicationHealthPolicy() {
        return this.applicationHealthPolicy;
    }

    /**
     * Set defines a health policy used to evaluate the health of an application or one of its children entities.
     *
     * @param applicationHealthPolicy the applicationHealthPolicy value to set
     * @return the ApplicationUpgradeUpdateDescription object itself.
     */
    public ApplicationUpgradeUpdateDescription withApplicationHealthPolicy(ApplicationHealthPolicy applicationHealthPolicy) {
        this.applicationHealthPolicy = applicationHealthPolicy;
        return this;
    }

    /**
     * Get describes the parameters for updating a rolling upgrade of application or cluster.
     *
     * @return the updateDescription value
     */
    public RollingUpgradeUpdateDescription updateDescription() {
        return this.updateDescription;
    }

    /**
     * Set describes the parameters for updating a rolling upgrade of application or cluster.
     *
     * @param updateDescription the updateDescription value to set
     * @return the ApplicationUpgradeUpdateDescription object itself.
     */
    public ApplicationUpgradeUpdateDescription withUpdateDescription(RollingUpgradeUpdateDescription updateDescription) {
        this.updateDescription = updateDescription;
        return this;
    }

}
