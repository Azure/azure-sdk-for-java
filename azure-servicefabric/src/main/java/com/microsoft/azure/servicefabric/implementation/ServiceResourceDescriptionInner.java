/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric.implementation;

import com.microsoft.azure.servicefabric.OperatingSystemType;
import java.util.List;
import com.microsoft.azure.servicefabric.ContainerCodePackageProperties;
import com.microsoft.azure.servicefabric.NetworkRef;
import com.microsoft.azure.servicefabric.DiagnosticsRef;
import com.microsoft.azure.servicefabric.AutoScalingPolicy;
import com.microsoft.azure.servicefabric.ResourceStatus;
import com.microsoft.azure.servicefabric.HealthState;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * This type describes a service resource.
 */
@JsonFlatten
public class ServiceResourceDescriptionInner {
    /**
     * Name of the Service resource.
     */
    @JsonProperty(value = "name", required = true)
    private String name;

    /**
     * The operation system required by the code in service. Possible values
     * include: 'Linux', 'Windows'.
     */
    @JsonProperty(value = "properties.osType", required = true)
    private OperatingSystemType osType;

    /**
     * Describes the set of code packages that forms the service. A code
     * package describes the container and the properties for running it. All
     * the code packages are started together on the same host and share the
     * same context (network, process etc.).
     */
    @JsonProperty(value = "properties.codePackages", required = true)
    private List<ContainerCodePackageProperties> codePackages;

    /**
     * The names of the private networks that this service needs to be part of.
     */
    @JsonProperty(value = "properties.networkRefs")
    private List<NetworkRef> networkRefs;

    /**
     * Reference to sinks in DiagnosticsDescription.
     */
    @JsonProperty(value = "properties.diagnostics")
    private DiagnosticsRef diagnostics;

    /**
     * User readable description of the service.
     */
    @JsonProperty(value = "properties.description")
    private String description;

    /**
     * The number of replicas of the service to create. Defaults to 1 if not
     * specified.
     */
    @JsonProperty(value = "properties.replicaCount")
    private Integer replicaCount;

    /**
     * Auto scaling policies.
     */
    @JsonProperty(value = "properties.autoScalingPolicies")
    private List<AutoScalingPolicy> autoScalingPolicies;

    /**
     * Status of the service. Possible values include: 'Unknown', 'Ready',
     * 'Upgrading', 'Creating', 'Deleting', 'Failed'.
     */
    @JsonProperty(value = "properties.status", access = JsonProperty.Access.WRITE_ONLY)
    private ResourceStatus status;

    /**
     * Gives additional information about the current status of the service.
     */
    @JsonProperty(value = "properties.statusDetails", access = JsonProperty.Access.WRITE_ONLY)
    private String statusDetails;

    /**
     * Describes the health state of an application resource. Possible values
     * include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'.
     */
    @JsonProperty(value = "properties.healthState", access = JsonProperty.Access.WRITE_ONLY)
    private HealthState healthState;

    /**
     * When the service's health state is not 'Ok', this additional details
     * from service fabric Health Manager for the user to know why the service
     * is marked unhealthy.
     */
    @JsonProperty(value = "properties.unhealthyEvaluation", access = JsonProperty.Access.WRITE_ONLY)
    private String unhealthyEvaluation;

    /**
     * Get name of the Service resource.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set name of the Service resource.
     *
     * @param name the name value to set
     * @return the ServiceResourceDescriptionInner object itself.
     */
    public ServiceResourceDescriptionInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the operation system required by the code in service. Possible values include: 'Linux', 'Windows'.
     *
     * @return the osType value
     */
    public OperatingSystemType osType() {
        return this.osType;
    }

    /**
     * Set the operation system required by the code in service. Possible values include: 'Linux', 'Windows'.
     *
     * @param osType the osType value to set
     * @return the ServiceResourceDescriptionInner object itself.
     */
    public ServiceResourceDescriptionInner withOsType(OperatingSystemType osType) {
        this.osType = osType;
        return this;
    }

    /**
     * Get describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).
     *
     * @return the codePackages value
     */
    public List<ContainerCodePackageProperties> codePackages() {
        return this.codePackages;
    }

    /**
     * Set describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.).
     *
     * @param codePackages the codePackages value to set
     * @return the ServiceResourceDescriptionInner object itself.
     */
    public ServiceResourceDescriptionInner withCodePackages(List<ContainerCodePackageProperties> codePackages) {
        this.codePackages = codePackages;
        return this;
    }

    /**
     * Get the names of the private networks that this service needs to be part of.
     *
     * @return the networkRefs value
     */
    public List<NetworkRef> networkRefs() {
        return this.networkRefs;
    }

    /**
     * Set the names of the private networks that this service needs to be part of.
     *
     * @param networkRefs the networkRefs value to set
     * @return the ServiceResourceDescriptionInner object itself.
     */
    public ServiceResourceDescriptionInner withNetworkRefs(List<NetworkRef> networkRefs) {
        this.networkRefs = networkRefs;
        return this;
    }

    /**
     * Get reference to sinks in DiagnosticsDescription.
     *
     * @return the diagnostics value
     */
    public DiagnosticsRef diagnostics() {
        return this.diagnostics;
    }

    /**
     * Set reference to sinks in DiagnosticsDescription.
     *
     * @param diagnostics the diagnostics value to set
     * @return the ServiceResourceDescriptionInner object itself.
     */
    public ServiceResourceDescriptionInner withDiagnostics(DiagnosticsRef diagnostics) {
        this.diagnostics = diagnostics;
        return this;
    }

    /**
     * Get user readable description of the service.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Set user readable description of the service.
     *
     * @param description the description value to set
     * @return the ServiceResourceDescriptionInner object itself.
     */
    public ServiceResourceDescriptionInner withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the number of replicas of the service to create. Defaults to 1 if not specified.
     *
     * @return the replicaCount value
     */
    public Integer replicaCount() {
        return this.replicaCount;
    }

    /**
     * Set the number of replicas of the service to create. Defaults to 1 if not specified.
     *
     * @param replicaCount the replicaCount value to set
     * @return the ServiceResourceDescriptionInner object itself.
     */
    public ServiceResourceDescriptionInner withReplicaCount(Integer replicaCount) {
        this.replicaCount = replicaCount;
        return this;
    }

    /**
     * Get auto scaling policies.
     *
     * @return the autoScalingPolicies value
     */
    public List<AutoScalingPolicy> autoScalingPolicies() {
        return this.autoScalingPolicies;
    }

    /**
     * Set auto scaling policies.
     *
     * @param autoScalingPolicies the autoScalingPolicies value to set
     * @return the ServiceResourceDescriptionInner object itself.
     */
    public ServiceResourceDescriptionInner withAutoScalingPolicies(List<AutoScalingPolicy> autoScalingPolicies) {
        this.autoScalingPolicies = autoScalingPolicies;
        return this;
    }

    /**
     * Get status of the service. Possible values include: 'Unknown', 'Ready', 'Upgrading', 'Creating', 'Deleting', 'Failed'.
     *
     * @return the status value
     */
    public ResourceStatus status() {
        return this.status;
    }

    /**
     * Get gives additional information about the current status of the service.
     *
     * @return the statusDetails value
     */
    public String statusDetails() {
        return this.statusDetails;
    }

    /**
     * Get describes the health state of an application resource. Possible values include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'.
     *
     * @return the healthState value
     */
    public HealthState healthState() {
        return this.healthState;
    }

    /**
     * Get when the service's health state is not 'Ok', this additional details from service fabric Health Manager for the user to know why the service is marked unhealthy.
     *
     * @return the unhealthyEvaluation value
     */
    public String unhealthyEvaluation() {
        return this.unhealthyEvaluation;
    }

}
