/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.azure.servicefabric.implementation.PartitionEventInner;

/**
 * Chaos Move Primary Fault Scheduled event.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "Kind")
@JsonTypeName("ChaosPartitionPrimaryMoveScheduled")
public class ChaosPartitionPrimaryMoveScheduledEvent extends PartitionEventInner {
    /**
     * Id of fault group.
     */
    @JsonProperty(value = "FaultGroupId", required = true)
    private UUID faultGroupId;

    /**
     * Id of fault.
     */
    @JsonProperty(value = "FaultId", required = true)
    private UUID faultId;

    /**
     * Service name.
     */
    @JsonProperty(value = "ServiceName", required = true)
    private String serviceName;

    /**
     * The name of a Service Fabric node.
     */
    @JsonProperty(value = "NodeTo", required = true)
    private String nodeTo;

    /**
     * Indicates a forced move.
     */
    @JsonProperty(value = "ForcedMove", required = true)
    private boolean forcedMove;

    /**
     * Get id of fault group.
     *
     * @return the faultGroupId value
     */
    public UUID faultGroupId() {
        return this.faultGroupId;
    }

    /**
     * Set id of fault group.
     *
     * @param faultGroupId the faultGroupId value to set
     * @return the ChaosPartitionPrimaryMoveScheduledEvent object itself.
     */
    public ChaosPartitionPrimaryMoveScheduledEvent withFaultGroupId(UUID faultGroupId) {
        this.faultGroupId = faultGroupId;
        return this;
    }

    /**
     * Get id of fault.
     *
     * @return the faultId value
     */
    public UUID faultId() {
        return this.faultId;
    }

    /**
     * Set id of fault.
     *
     * @param faultId the faultId value to set
     * @return the ChaosPartitionPrimaryMoveScheduledEvent object itself.
     */
    public ChaosPartitionPrimaryMoveScheduledEvent withFaultId(UUID faultId) {
        this.faultId = faultId;
        return this;
    }

    /**
     * Get service name.
     *
     * @return the serviceName value
     */
    public String serviceName() {
        return this.serviceName;
    }

    /**
     * Set service name.
     *
     * @param serviceName the serviceName value to set
     * @return the ChaosPartitionPrimaryMoveScheduledEvent object itself.
     */
    public ChaosPartitionPrimaryMoveScheduledEvent withServiceName(String serviceName) {
        this.serviceName = serviceName;
        return this;
    }

    /**
     * Get the name of a Service Fabric node.
     *
     * @return the nodeTo value
     */
    public String nodeTo() {
        return this.nodeTo;
    }

    /**
     * Set the name of a Service Fabric node.
     *
     * @param nodeTo the nodeTo value to set
     * @return the ChaosPartitionPrimaryMoveScheduledEvent object itself.
     */
    public ChaosPartitionPrimaryMoveScheduledEvent withNodeTo(String nodeTo) {
        this.nodeTo = nodeTo;
        return this;
    }

    /**
     * Get indicates a forced move.
     *
     * @return the forcedMove value
     */
    public boolean forcedMove() {
        return this.forcedMove;
    }

    /**
     * Set indicates a forced move.
     *
     * @param forcedMove the forcedMove value to set
     * @return the ChaosPartitionPrimaryMoveScheduledEvent object itself.
     */
    public ChaosPartitionPrimaryMoveScheduledEvent withForcedMove(boolean forcedMove) {
        this.forcedMove = forcedMove;
        return this;
    }

}
