/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents health evaluation of a HealthEvent that was reported on the
 * entity.
 * The health evaluation is returned when evaluating health of an entity
 * results in Error or Warning.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "Kind")
@JsonTypeName("Event")
public class EventHealthEvaluation extends HealthEvaluation {
    /**
     * Indicates whether warnings are treated with the same severity as errors.
     * The field is specified in the health policy used to evaluate the entity.
     */
    @JsonProperty(value = "ConsiderWarningAsError")
    private Boolean considerWarningAsError;

    /**
     * Represents health information reported on a health entity, such as
     * cluster, application or node, with additional metadata added by the
     * Health Manager.
     */
    @JsonProperty(value = "UnhealthyEvent")
    private HealthEvent unhealthyEvent;

    /**
     * Get indicates whether warnings are treated with the same severity as errors. The field is specified in the health policy used to evaluate the entity.
     *
     * @return the considerWarningAsError value
     */
    public Boolean considerWarningAsError() {
        return this.considerWarningAsError;
    }

    /**
     * Set indicates whether warnings are treated with the same severity as errors. The field is specified in the health policy used to evaluate the entity.
     *
     * @param considerWarningAsError the considerWarningAsError value to set
     * @return the EventHealthEvaluation object itself.
     */
    public EventHealthEvaluation withConsiderWarningAsError(Boolean considerWarningAsError) {
        this.considerWarningAsError = considerWarningAsError;
        return this;
    }

    /**
     * Get represents health information reported on a health entity, such as cluster, application or node, with additional metadata added by the Health Manager.
     *
     * @return the unhealthyEvent value
     */
    public HealthEvent unhealthyEvent() {
        return this.unhealthyEvent;
    }

    /**
     * Set represents health information reported on a health entity, such as cluster, application or node, with additional metadata added by the Health Manager.
     *
     * @param unhealthyEvent the unhealthyEvent value to set
     * @return the EventHealthEvaluation object itself.
     */
    public EventHealthEvaluation withUnhealthyEvent(HealthEvent unhealthyEvent) {
        this.unhealthyEvent = unhealthyEvent;
        return this;
    }

}
