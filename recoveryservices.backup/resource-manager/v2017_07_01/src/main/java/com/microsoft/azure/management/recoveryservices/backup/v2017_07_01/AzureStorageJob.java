/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.recoveryservices.backup.v2017_07_01;

import org.joda.time.Period;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.azure.management.recoveryservices.backup.v2017_07_01.implementation.JobInner;

/**
 * Azure storage specific job.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "jobType")
@JsonTypeName("AzureStorageJob")
public class AzureStorageJob extends JobInner {
    /**
     * Time elapsed during the execution of this job.
     */
    @JsonProperty(value = "duration")
    private Period duration;

    /**
     * Gets or sets the state/actions applicable on this job like cancel/retry.
     */
    @JsonProperty(value = "actionsInfo")
    private List<JobSupportedAction> actionsInfo;

    /**
     * Error details on execution of this job.
     */
    @JsonProperty(value = "errorDetails")
    private List<AzureStorageErrorInfo> errorDetails;

    /**
     * Specifies friendly name of the storage account.
     */
    @JsonProperty(value = "storageAccountName")
    private String storageAccountName;

    /**
     * Specifies whether the Storage account is a Classic or an Azure Resource
     * Manager Storage account.
     */
    @JsonProperty(value = "storageAccountVersion")
    private String storageAccountVersion;

    /**
     * Additional information about the job.
     */
    @JsonProperty(value = "extendedInfo")
    private AzureStorageJobExtendedInfo extendedInfo;

    /**
     * Get time elapsed during the execution of this job.
     *
     * @return the duration value
     */
    public Period duration() {
        return this.duration;
    }

    /**
     * Set time elapsed during the execution of this job.
     *
     * @param duration the duration value to set
     * @return the AzureStorageJob object itself.
     */
    public AzureStorageJob withDuration(Period duration) {
        this.duration = duration;
        return this;
    }

    /**
     * Get gets or sets the state/actions applicable on this job like cancel/retry.
     *
     * @return the actionsInfo value
     */
    public List<JobSupportedAction> actionsInfo() {
        return this.actionsInfo;
    }

    /**
     * Set gets or sets the state/actions applicable on this job like cancel/retry.
     *
     * @param actionsInfo the actionsInfo value to set
     * @return the AzureStorageJob object itself.
     */
    public AzureStorageJob withActionsInfo(List<JobSupportedAction> actionsInfo) {
        this.actionsInfo = actionsInfo;
        return this;
    }

    /**
     * Get error details on execution of this job.
     *
     * @return the errorDetails value
     */
    public List<AzureStorageErrorInfo> errorDetails() {
        return this.errorDetails;
    }

    /**
     * Set error details on execution of this job.
     *
     * @param errorDetails the errorDetails value to set
     * @return the AzureStorageJob object itself.
     */
    public AzureStorageJob withErrorDetails(List<AzureStorageErrorInfo> errorDetails) {
        this.errorDetails = errorDetails;
        return this;
    }

    /**
     * Get specifies friendly name of the storage account.
     *
     * @return the storageAccountName value
     */
    public String storageAccountName() {
        return this.storageAccountName;
    }

    /**
     * Set specifies friendly name of the storage account.
     *
     * @param storageAccountName the storageAccountName value to set
     * @return the AzureStorageJob object itself.
     */
    public AzureStorageJob withStorageAccountName(String storageAccountName) {
        this.storageAccountName = storageAccountName;
        return this;
    }

    /**
     * Get specifies whether the Storage account is a Classic or an Azure Resource Manager Storage account.
     *
     * @return the storageAccountVersion value
     */
    public String storageAccountVersion() {
        return this.storageAccountVersion;
    }

    /**
     * Set specifies whether the Storage account is a Classic or an Azure Resource Manager Storage account.
     *
     * @param storageAccountVersion the storageAccountVersion value to set
     * @return the AzureStorageJob object itself.
     */
    public AzureStorageJob withStorageAccountVersion(String storageAccountVersion) {
        this.storageAccountVersion = storageAccountVersion;
        return this;
    }

    /**
     * Get additional information about the job.
     *
     * @return the extendedInfo value
     */
    public AzureStorageJobExtendedInfo extendedInfo() {
        return this.extendedInfo;
    }

    /**
     * Set additional information about the job.
     *
     * @param extendedInfo the extendedInfo value to set
     * @return the AzureStorageJob object itself.
     */
    public AzureStorageJob withExtendedInfo(AzureStorageJobExtendedInfo extendedInfo) {
        this.extendedInfo = extendedInfo;
        return this;
    }

}
