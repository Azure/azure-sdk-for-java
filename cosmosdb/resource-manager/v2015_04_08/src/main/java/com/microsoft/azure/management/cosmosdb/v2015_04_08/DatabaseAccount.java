/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.cosmosdb.v2015_04_08;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.cosmosdb.v2015_04_08.implementation.DocumentDBManager;
import java.util.List;
import com.microsoft.azure.management.cosmosdb.v2015_04_08.implementation.DatabaseAccountInner;

/**
 * Type representing DatabaseAccount.
 */
public interface DatabaseAccount extends HasInner<DatabaseAccountInner>, Resource, GroupableResourceCore<DocumentDBManager, DatabaseAccountInner>, HasResourceGroup, Refreshable<DatabaseAccount>, Updatable<DatabaseAccount.Update>, HasManager<DocumentDBManager> {
    /**
     * @return the capabilities value.
     */
    List<Capability> capabilities();

    /**
     * @return the consistencyPolicy value.
     */
    ConsistencyPolicy consistencyPolicy();

    /**
     * @return the databaseAccountOfferType value.
     */
    DatabaseAccountOfferType databaseAccountOfferType();

    /**
     * @return the documentEndpoint value.
     */
    String documentEndpoint();

    /**
     * @return the enableAutomaticFailover value.
     */
    Boolean enableAutomaticFailover();

    /**
     * @return the failoverPolicies value.
     */
    List<FailoverPolicy> failoverPolicies();

    /**
     * @return the ipRangeFilter value.
     */
    String ipRangeFilter();

    /**
     * @return the isVirtualNetworkFilterEnabled value.
     */
    Boolean isVirtualNetworkFilterEnabled();

    /**
     * @return the kind value.
     */
    DatabaseAccountKind kind();

    /**
     * @return the provisioningState value.
     */
    String provisioningState();

    /**
     * @return the readLocations value.
     */
    List<Location> readLocations();

    /**
     * @return the virtualNetworkRules value.
     */
    List<VirtualNetworkRule> virtualNetworkRules();

    /**
     * @return the writeLocations value.
     */
    List<Location> writeLocations();

    /**
     * The entirety of the DatabaseAccount definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithDatabaseAccountOfferType, DefinitionStages.WithLocations, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of DatabaseAccount definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a DatabaseAccount definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the DatabaseAccount definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithDatabaseAccountOfferType> {
        }

        /**
         * The stage of the databaseaccount definition allowing to specify DatabaseAccountOfferType.
         */
        interface WithDatabaseAccountOfferType {
           /**
            * Specifies databaseAccountOfferType.
            */
            WithLocations withDatabaseAccountOfferType(String databaseAccountOfferType);
        }

        /**
         * The stage of the databaseaccount definition allowing to specify Locations.
         */
        interface WithLocations {
           /**
            * Specifies locations.
            */
            WithCreate withLocations(List<Location> locations);
        }

        /**
         * The stage of the databaseaccount update allowing to specify Capabilities.
         */
        interface WithCapabilities {
            /**
             * Specifies capabilities.
             */
            WithCreate withCapabilities(List<Capability> capabilities);
        }

        /**
         * The stage of the databaseaccount update allowing to specify ConsistencyPolicy.
         */
        interface WithConsistencyPolicy {
            /**
             * Specifies consistencyPolicy.
             */
            WithCreate withConsistencyPolicy(ConsistencyPolicy consistencyPolicy);
        }

        /**
         * The stage of the databaseaccount update allowing to specify EnableAutomaticFailover.
         */
        interface WithEnableAutomaticFailover {
            /**
             * Specifies enableAutomaticFailover.
             */
            WithCreate withEnableAutomaticFailover(Boolean enableAutomaticFailover);
        }

        /**
         * The stage of the databaseaccount update allowing to specify IpRangeFilter.
         */
        interface WithIpRangeFilter {
            /**
             * Specifies ipRangeFilter.
             */
            WithCreate withIpRangeFilter(String ipRangeFilter);
        }

        /**
         * The stage of the databaseaccount update allowing to specify IsVirtualNetworkFilterEnabled.
         */
        interface WithIsVirtualNetworkFilterEnabled {
            /**
             * Specifies isVirtualNetworkFilterEnabled.
             */
            WithCreate withIsVirtualNetworkFilterEnabled(Boolean isVirtualNetworkFilterEnabled);
        }

        /**
         * The stage of the databaseaccount update allowing to specify Kind.
         */
        interface WithKind {
            /**
             * Specifies kind.
             */
            WithCreate withKind(DatabaseAccountKind kind);
        }

        /**
         * The stage of the databaseaccount update allowing to specify VirtualNetworkRules.
         */
        interface WithVirtualNetworkRules {
            /**
             * Specifies virtualNetworkRules.
             */
            WithCreate withVirtualNetworkRules(List<VirtualNetworkRule> virtualNetworkRules);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<DatabaseAccount>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithCapabilities, DefinitionStages.WithConsistencyPolicy, DefinitionStages.WithEnableAutomaticFailover, DefinitionStages.WithIpRangeFilter, DefinitionStages.WithIsVirtualNetworkFilterEnabled, DefinitionStages.WithKind, DefinitionStages.WithVirtualNetworkRules {
        }
    }
    /**
     * The template for a DatabaseAccount update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<DatabaseAccount>, Resource.UpdateWithTags<Update>, UpdateStages.WithCapabilities {
    }

    /**
     * Grouping of DatabaseAccount update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the databaseaccount {0} allowing to specify Capabilities.
         */
        interface WithCapabilities {
            /**
             * Specifies capabilities.
             */
            Update withCapabilities(List<Capability> capabilities);
        }

    }
}
