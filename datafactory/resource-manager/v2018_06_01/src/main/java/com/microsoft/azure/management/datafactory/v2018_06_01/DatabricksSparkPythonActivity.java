/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory.v2018_06_01;

import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.rest.serializer.JsonFlatten;

/**
 * DatabricksSparkPython activity.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "type")
@JsonTypeName("DatabricksSparkPython")
@JsonFlatten
public class DatabricksSparkPythonActivity extends ExecutionActivity {
    /**
     * The URI of the Python file to be executed. DBFS paths are supported.
     * Type: string (or Expression with resultType string).
     */
    @JsonProperty(value = "typeProperties.pythonFile", required = true)
    private Object pythonFile;

    /**
     * Command line parameters that will be passed to the Python file.
     */
    @JsonProperty(value = "typeProperties.parameters")
    private List<Object> parameters;

    /**
     * A list of libraries to be installed on the cluster that will execute the
     * job.
     */
    @JsonProperty(value = "typeProperties.libraries")
    private List<Map<String, Object>> libraries;

    /**
     * Get the URI of the Python file to be executed. DBFS paths are supported. Type: string (or Expression with resultType string).
     *
     * @return the pythonFile value
     */
    public Object pythonFile() {
        return this.pythonFile;
    }

    /**
     * Set the URI of the Python file to be executed. DBFS paths are supported. Type: string (or Expression with resultType string).
     *
     * @param pythonFile the pythonFile value to set
     * @return the DatabricksSparkPythonActivity object itself.
     */
    public DatabricksSparkPythonActivity withPythonFile(Object pythonFile) {
        this.pythonFile = pythonFile;
        return this;
    }

    /**
     * Get command line parameters that will be passed to the Python file.
     *
     * @return the parameters value
     */
    public List<Object> parameters() {
        return this.parameters;
    }

    /**
     * Set command line parameters that will be passed to the Python file.
     *
     * @param parameters the parameters value to set
     * @return the DatabricksSparkPythonActivity object itself.
     */
    public DatabricksSparkPythonActivity withParameters(List<Object> parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Get a list of libraries to be installed on the cluster that will execute the job.
     *
     * @return the libraries value
     */
    public List<Map<String, Object>> libraries() {
        return this.libraries;
    }

    /**
     * Set a list of libraries to be installed on the cluster that will execute the job.
     *
     * @param libraries the libraries value to set
     * @return the DatabricksSparkPythonActivity object itself.
     */
    public DatabricksSparkPythonActivity withLibraries(List<Map<String, Object>> libraries) {
        this.libraries = libraries;
        return this;
    }

}
