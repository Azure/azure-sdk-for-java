/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.datafactory.v2018_06_01;

import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Dataset location.
 */
public class DatasetLocation {
    /**
     * Unmatched properties from the message are deserialized this collection.
     */
    @JsonProperty(value = "")
    private Map<String, Object> additionalProperties;

    /**
     * Type of dataset storage location.
     */
    @JsonProperty(value = "type", required = true)
    private String type;

    /**
     * Specify the folder path of dataset. Type: string (or Expression with
     * resultType string).
     */
    @JsonProperty(value = "folderPath")
    private Object folderPath;

    /**
     * Specify the file name of dataset. Type: string (or Expression with
     * resultType string).
     */
    @JsonProperty(value = "fileName")
    private Object fileName;

    /**
     * Get unmatched properties from the message are deserialized this collection.
     *
     * @return the additionalProperties value
     */
    public Map<String, Object> additionalProperties() {
        return this.additionalProperties;
    }

    /**
     * Set unmatched properties from the message are deserialized this collection.
     *
     * @param additionalProperties the additionalProperties value to set
     * @return the DatasetLocation object itself.
     */
    public DatasetLocation withAdditionalProperties(Map<String, Object> additionalProperties) {
        this.additionalProperties = additionalProperties;
        return this;
    }

    /**
     * Get type of dataset storage location.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

    /**
     * Set type of dataset storage location.
     *
     * @param type the type value to set
     * @return the DatasetLocation object itself.
     */
    public DatasetLocation withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get specify the folder path of dataset. Type: string (or Expression with resultType string).
     *
     * @return the folderPath value
     */
    public Object folderPath() {
        return this.folderPath;
    }

    /**
     * Set specify the folder path of dataset. Type: string (or Expression with resultType string).
     *
     * @param folderPath the folderPath value to set
     * @return the DatasetLocation object itself.
     */
    public DatasetLocation withFolderPath(Object folderPath) {
        this.folderPath = folderPath;
        return this;
    }

    /**
     * Get specify the file name of dataset. Type: string (or Expression with resultType string).
     *
     * @return the fileName value
     */
    public Object fileName() {
        return this.fileName;
    }

    /**
     * Set specify the file name of dataset. Type: string (or Expression with resultType string).
     *
     * @param fileName the fileName value to set
     * @return the DatasetLocation object itself.
     */
    public DatasetLocation withFileName(Object fileName) {
        this.fileName = fileName;
        return this;
    }

}
