/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.databox;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Filter details to transfer Azure Blobs.
 */
public class BlobFilterDetails {
    /**
     * Prefix list of the Azure blobs to be transferred.
     */
    @JsonProperty(value = "blobPrefixList")
    private List<String> blobPrefixList;

    /**
     * List of full path of the blobs to be transferred.
     */
    @JsonProperty(value = "blobPathList")
    private List<String> blobPathList;

    /**
     * List of blob containers to be transferred.
     */
    @JsonProperty(value = "containerList")
    private List<String> containerList;

    /**
     * Get prefix list of the Azure blobs to be transferred.
     *
     * @return the blobPrefixList value
     */
    public List<String> blobPrefixList() {
        return this.blobPrefixList;
    }

    /**
     * Set prefix list of the Azure blobs to be transferred.
     *
     * @param blobPrefixList the blobPrefixList value to set
     * @return the BlobFilterDetails object itself.
     */
    public BlobFilterDetails withBlobPrefixList(List<String> blobPrefixList) {
        this.blobPrefixList = blobPrefixList;
        return this;
    }

    /**
     * Get list of full path of the blobs to be transferred.
     *
     * @return the blobPathList value
     */
    public List<String> blobPathList() {
        return this.blobPathList;
    }

    /**
     * Set list of full path of the blobs to be transferred.
     *
     * @param blobPathList the blobPathList value to set
     * @return the BlobFilterDetails object itself.
     */
    public BlobFilterDetails withBlobPathList(List<String> blobPathList) {
        this.blobPathList = blobPathList;
        return this;
    }

    /**
     * Get list of blob containers to be transferred.
     *
     * @return the containerList value
     */
    public List<String> containerList() {
        return this.containerList;
    }

    /**
     * Set list of blob containers to be transferred.
     *
     * @param containerList the containerList value to set
     * @return the BlobFilterDetails object itself.
     */
    public BlobFilterDetails withContainerList(List<String> containerList) {
        this.containerList = containerList;
        return this;
    }

}
