/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.databox;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Encryption key containing details about key to encrypt different keys.
 */
public class KeyEncryptionKey {
    /**
     * Type of encryption key used for key encryption. Possible values include:
     * 'MicrosoftManaged', 'CustomerManaged'.
     */
    @JsonProperty(value = "kekType", required = true)
    private KekType kekType;

    /**
     * Managed identity properties used for key encryption.
     */
    @JsonProperty(value = "identityProperties")
    private IdentityProperties identityProperties;

    /**
     * Key encryption key. It is required in case of Customer managed KekType.
     */
    @JsonProperty(value = "kekUrl")
    private String kekUrl;

    /**
     * Kek vault resource id. It is required in case of Customer managed
     * KekType.
     */
    @JsonProperty(value = "kekVaultResourceID")
    private String kekVaultResourceID;

    /**
     * Get type of encryption key used for key encryption. Possible values include: 'MicrosoftManaged', 'CustomerManaged'.
     *
     * @return the kekType value
     */
    public KekType kekType() {
        return this.kekType;
    }

    /**
     * Set type of encryption key used for key encryption. Possible values include: 'MicrosoftManaged', 'CustomerManaged'.
     *
     * @param kekType the kekType value to set
     * @return the KeyEncryptionKey object itself.
     */
    public KeyEncryptionKey withKekType(KekType kekType) {
        this.kekType = kekType;
        return this;
    }

    /**
     * Get managed identity properties used for key encryption.
     *
     * @return the identityProperties value
     */
    public IdentityProperties identityProperties() {
        return this.identityProperties;
    }

    /**
     * Set managed identity properties used for key encryption.
     *
     * @param identityProperties the identityProperties value to set
     * @return the KeyEncryptionKey object itself.
     */
    public KeyEncryptionKey withIdentityProperties(IdentityProperties identityProperties) {
        this.identityProperties = identityProperties;
        return this;
    }

    /**
     * Get key encryption key. It is required in case of Customer managed KekType.
     *
     * @return the kekUrl value
     */
    public String kekUrl() {
        return this.kekUrl;
    }

    /**
     * Set key encryption key. It is required in case of Customer managed KekType.
     *
     * @param kekUrl the kekUrl value to set
     * @return the KeyEncryptionKey object itself.
     */
    public KeyEncryptionKey withKekUrl(String kekUrl) {
        this.kekUrl = kekUrl;
        return this;
    }

    /**
     * Get kek vault resource id. It is required in case of Customer managed KekType.
     *
     * @return the kekVaultResourceID value
     */
    public String kekVaultResourceID() {
        return this.kekVaultResourceID;
    }

    /**
     * Set kek vault resource id. It is required in case of Customer managed KekType.
     *
     * @param kekVaultResourceID the kekVaultResourceID value to set
     * @return the KeyEncryptionKey object itself.
     */
    public KeyEncryptionKey withKekVaultResourceID(String kekVaultResourceID) {
        this.kekVaultResourceID = kekVaultResourceID;
        return this;
    }

}
