/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.databox;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Copy progress.
 */
public class CopyProgress {
    /**
     * Name of the storage account where the data needs to be uploaded.
     */
    @JsonProperty(value = "storageAccountName", access = JsonProperty.Access.WRITE_ONLY)
    private String storageAccountName;

    /**
     * Data Destination Type. Possible values include: 'StorageAccount',
     * 'ManagedDisk'.
     */
    @JsonProperty(value = "dataDestinationType", access = JsonProperty.Access.WRITE_ONLY)
    private DataDestinationType dataDestinationType;

    /**
     * Id of the account where the data needs to be uploaded.
     */
    @JsonProperty(value = "accountId", access = JsonProperty.Access.WRITE_ONLY)
    private String accountId;

    /**
     * Amount of data uploaded by the job as of now.
     */
    @JsonProperty(value = "bytesSentToCloud", access = JsonProperty.Access.WRITE_ONLY)
    private Long bytesSentToCloud;

    /**
     * Total amount of data to be processed by the job.
     */
    @JsonProperty(value = "totalBytesToProcess", access = JsonProperty.Access.WRITE_ONLY)
    private Long totalBytesToProcess;

    /**
     * Number of files processed by the job as of now.
     */
    @JsonProperty(value = "filesProcessed", access = JsonProperty.Access.WRITE_ONLY)
    private Long filesProcessed;

    /**
     * Total number of files to be processed by the job.
     */
    @JsonProperty(value = "totalFilesToProcess", access = JsonProperty.Access.WRITE_ONLY)
    private Long totalFilesToProcess;

    /**
     * Number of files not adhering to azure naming conventions which were
     * processed by automatic renaming.
     */
    @JsonProperty(value = "invalidFilesProcessed", access = JsonProperty.Access.WRITE_ONLY)
    private Long invalidFilesProcessed;

    /**
     * Total amount of data not adhering to azure naming conventions which were
     * processed by automatic renaming.
     */
    @JsonProperty(value = "invalidFileBytesUploaded", access = JsonProperty.Access.WRITE_ONLY)
    private Long invalidFileBytesUploaded;

    /**
     * Number of folders not adhering to azure naming conventions which were
     * processed by automatic renaming.
     */
    @JsonProperty(value = "renamedContainerCount", access = JsonProperty.Access.WRITE_ONLY)
    private Long renamedContainerCount;

    /**
     * Number of files which could not be copied.
     */
    @JsonProperty(value = "filesErroredOut", access = JsonProperty.Access.WRITE_ONLY)
    private Long filesErroredOut;

    /**
     * Get name of the storage account where the data needs to be uploaded.
     *
     * @return the storageAccountName value
     */
    public String storageAccountName() {
        return this.storageAccountName;
    }

    /**
     * Get data Destination Type. Possible values include: 'StorageAccount', 'ManagedDisk'.
     *
     * @return the dataDestinationType value
     */
    public DataDestinationType dataDestinationType() {
        return this.dataDestinationType;
    }

    /**
     * Get id of the account where the data needs to be uploaded.
     *
     * @return the accountId value
     */
    public String accountId() {
        return this.accountId;
    }

    /**
     * Get amount of data uploaded by the job as of now.
     *
     * @return the bytesSentToCloud value
     */
    public Long bytesSentToCloud() {
        return this.bytesSentToCloud;
    }

    /**
     * Get total amount of data to be processed by the job.
     *
     * @return the totalBytesToProcess value
     */
    public Long totalBytesToProcess() {
        return this.totalBytesToProcess;
    }

    /**
     * Get number of files processed by the job as of now.
     *
     * @return the filesProcessed value
     */
    public Long filesProcessed() {
        return this.filesProcessed;
    }

    /**
     * Get total number of files to be processed by the job.
     *
     * @return the totalFilesToProcess value
     */
    public Long totalFilesToProcess() {
        return this.totalFilesToProcess;
    }

    /**
     * Get number of files not adhering to azure naming conventions which were processed by automatic renaming.
     *
     * @return the invalidFilesProcessed value
     */
    public Long invalidFilesProcessed() {
        return this.invalidFilesProcessed;
    }

    /**
     * Get total amount of data not adhering to azure naming conventions which were processed by automatic renaming.
     *
     * @return the invalidFileBytesUploaded value
     */
    public Long invalidFileBytesUploaded() {
        return this.invalidFileBytesUploaded;
    }

    /**
     * Get number of folders not adhering to azure naming conventions which were processed by automatic renaming.
     *
     * @return the renamedContainerCount value
     */
    public Long renamedContainerCount() {
        return this.renamedContainerCount;
    }

    /**
     * Get number of files which could not be copied.
     *
     * @return the filesErroredOut value
     */
    public Long filesErroredOut() {
        return this.filesErroredOut;
    }

}
