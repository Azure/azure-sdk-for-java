/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.databox.implementation;

import com.microsoft.azure.management.databox.StageName;
import org.joda.time.DateTime;
import com.microsoft.azure.management.databox.Error;
import com.microsoft.azure.management.databox.JobDetails;
import com.microsoft.azure.management.databox.JobDeliveryType;
import com.microsoft.azure.management.databox.JobDeliveryInfo;
import com.microsoft.azure.management.databox.Sku;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.Resource;

/**
 * Job Resource.
 */
@JsonFlatten
public class JobResourceInner extends Resource {
    /**
     * Describes whether the job is cancellable or not.
     */
    @JsonProperty(value = "properties.isCancellable", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isCancellable;

    /**
     * Describes whether the job is deletable or not.
     */
    @JsonProperty(value = "properties.isDeletable", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isDeletable;

    /**
     * Describes whether the shipping address is editable or not.
     */
    @JsonProperty(value = "properties.isShippingAddressEditable", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isShippingAddressEditable;

    /**
     * Name of the stage which is in progress. Possible values include:
     * 'DeviceOrdered', 'DevicePrepared', 'Dispatched', 'Delivered',
     * 'PickedUp', 'AtAzureDC', 'DataCopy', 'Completed', 'CompletedWithErrors',
     * 'Cancelled', 'Failed_IssueReportedAtCustomer',
     * 'Failed_IssueDetectedAtAzureDC', 'Aborted', 'CompletedWithWarnings',
     * 'ReadyToDispatchFromAzureDC', 'ReadyToReceiveAtAzureDC'.
     */
    @JsonProperty(value = "properties.status", access = JsonProperty.Access.WRITE_ONLY)
    private StageName status;

    /**
     * Time at which the job was started in UTC ISO 8601 format.
     */
    @JsonProperty(value = "properties.startTime", access = JsonProperty.Access.WRITE_ONLY)
    private DateTime startTime;

    /**
     * Top level error for the job.
     */
    @JsonProperty(value = "properties.error", access = JsonProperty.Access.WRITE_ONLY)
    private Error error;

    /**
     * Details of a job run. This field will only be sent for expand details
     * filter.
     */
    @JsonProperty(value = "properties.details")
    private JobDetails details;

    /**
     * Reason for cancellation.
     */
    @JsonProperty(value = "properties.cancellationReason", access = JsonProperty.Access.WRITE_ONLY)
    private String cancellationReason;

    /**
     * Delivery type of Job. Possible values include: 'NonScheduled',
     * 'Scheduled'.
     */
    @JsonProperty(value = "properties.deliveryType")
    private JobDeliveryType deliveryType;

    /**
     * Delivery Info of Job.
     */
    @JsonProperty(value = "properties.deliveryInfo")
    private JobDeliveryInfo deliveryInfo;

    /**
     * Flag to indicate cancellation of scheduled job.
     */
    @JsonProperty(value = "properties.isCancellableWithoutFee", access = JsonProperty.Access.WRITE_ONLY)
    private Boolean isCancellableWithoutFee;

    /**
     * Name of the object.
     */
    @JsonProperty(value = "name", access = JsonProperty.Access.WRITE_ONLY)
    private String name;

    /**
     * Id of the object.
     */
    @JsonProperty(value = "id", access = JsonProperty.Access.WRITE_ONLY)
    private String id;

    /**
     * Type of the object.
     */
    @JsonProperty(value = "type", access = JsonProperty.Access.WRITE_ONLY)
    private String type;

    /**
     * The sku type.
     */
    @JsonProperty(value = "sku", required = true)
    private Sku sku;

    /**
     * Get describes whether the job is cancellable or not.
     *
     * @return the isCancellable value
     */
    public Boolean isCancellable() {
        return this.isCancellable;
    }

    /**
     * Get describes whether the job is deletable or not.
     *
     * @return the isDeletable value
     */
    public Boolean isDeletable() {
        return this.isDeletable;
    }

    /**
     * Get describes whether the shipping address is editable or not.
     *
     * @return the isShippingAddressEditable value
     */
    public Boolean isShippingAddressEditable() {
        return this.isShippingAddressEditable;
    }

    /**
     * Get name of the stage which is in progress. Possible values include: 'DeviceOrdered', 'DevicePrepared', 'Dispatched', 'Delivered', 'PickedUp', 'AtAzureDC', 'DataCopy', 'Completed', 'CompletedWithErrors', 'Cancelled', 'Failed_IssueReportedAtCustomer', 'Failed_IssueDetectedAtAzureDC', 'Aborted', 'CompletedWithWarnings', 'ReadyToDispatchFromAzureDC', 'ReadyToReceiveAtAzureDC'.
     *
     * @return the status value
     */
    public StageName status() {
        return this.status;
    }

    /**
     * Get time at which the job was started in UTC ISO 8601 format.
     *
     * @return the startTime value
     */
    public DateTime startTime() {
        return this.startTime;
    }

    /**
     * Get top level error for the job.
     *
     * @return the error value
     */
    public Error error() {
        return this.error;
    }

    /**
     * Get details of a job run. This field will only be sent for expand details filter.
     *
     * @return the details value
     */
    public JobDetails details() {
        return this.details;
    }

    /**
     * Set details of a job run. This field will only be sent for expand details filter.
     *
     * @param details the details value to set
     * @return the JobResourceInner object itself.
     */
    public JobResourceInner withDetails(JobDetails details) {
        this.details = details;
        return this;
    }

    /**
     * Get reason for cancellation.
     *
     * @return the cancellationReason value
     */
    public String cancellationReason() {
        return this.cancellationReason;
    }

    /**
     * Get delivery type of Job. Possible values include: 'NonScheduled', 'Scheduled'.
     *
     * @return the deliveryType value
     */
    public JobDeliveryType deliveryType() {
        return this.deliveryType;
    }

    /**
     * Set delivery type of Job. Possible values include: 'NonScheduled', 'Scheduled'.
     *
     * @param deliveryType the deliveryType value to set
     * @return the JobResourceInner object itself.
     */
    public JobResourceInner withDeliveryType(JobDeliveryType deliveryType) {
        this.deliveryType = deliveryType;
        return this;
    }

    /**
     * Get delivery Info of Job.
     *
     * @return the deliveryInfo value
     */
    public JobDeliveryInfo deliveryInfo() {
        return this.deliveryInfo;
    }

    /**
     * Set delivery Info of Job.
     *
     * @param deliveryInfo the deliveryInfo value to set
     * @return the JobResourceInner object itself.
     */
    public JobResourceInner withDeliveryInfo(JobDeliveryInfo deliveryInfo) {
        this.deliveryInfo = deliveryInfo;
        return this;
    }

    /**
     * Get flag to indicate cancellation of scheduled job.
     *
     * @return the isCancellableWithoutFee value
     */
    public Boolean isCancellableWithoutFee() {
        return this.isCancellableWithoutFee;
    }

    /**
     * Get name of the object.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Get id of the object.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Get type of the object.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

    /**
     * Get the sku type.
     *
     * @return the sku value
     */
    public Sku sku() {
        return this.sku;
    }

    /**
     * Set the sku type.
     *
     * @param sku the sku value to set
     * @return the JobResourceInner object itself.
     */
    public JobResourceInner withSku(Sku sku) {
        this.sku = sku;
        return this;
    }

}
