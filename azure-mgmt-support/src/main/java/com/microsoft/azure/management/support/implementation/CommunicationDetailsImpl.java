/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.support.implementation;

import com.microsoft.azure.management.support.CommunicationDetails;
import com.microsoft.azure.arm.model.implementation.IndexableRefreshableWrapperImpl;
import rx.Observable;
import com.microsoft.azure.management.support.CommunicationDirection;
import com.microsoft.azure.management.support.CommunicationType;
import org.joda.time.DateTime;

class CommunicationDetailsImpl extends IndexableRefreshableWrapperImpl<CommunicationDetails, CommunicationDetailsInner> implements CommunicationDetails {
    private final SupportManager manager;
    private String supportTicketName;
    private String communicationName;

    CommunicationDetailsImpl(CommunicationDetailsInner inner,  SupportManager manager) {
        super(null, inner);
        this.manager = manager;
        // set resource ancestor and positional variables
        this.supportTicketName = IdParsingUtils.getValueFromIdByName(inner.id(), "supportTickets");
        this.communicationName = IdParsingUtils.getValueFromIdByName(inner.id(), "communications");
    }

    @Override
    public SupportManager manager() {
        return this.manager;
    }

    @Override
    protected Observable<CommunicationDetailsInner> getInnerAsync() {
        CommunicationsInner client = this.manager().inner().communications();
        return client.getBySubscriptionTicketAsync(this.supportTicketName, this.communicationName);
    }



    @Override
    public String body() {
        return this.inner().body();
    }

    @Override
    public CommunicationDirection communicationDirection() {
        return this.inner().communicationDirection();
    }

    @Override
    public CommunicationType communicationType() {
        return this.inner().communicationType();
    }

    @Override
    public DateTime createdDate() {
        return this.inner().createdDate();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String sender() {
        return this.inner().sender();
    }

    @Override
    public String subject() {
        return this.inner().subject();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

}
