/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 *
 */

package com.microsoft.azure.management.support.implementation;

import com.microsoft.azure.management.support.SupportTicketDetailsModel;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;
import com.microsoft.azure.management.support.UpdateSupportTicket;
import com.microsoft.azure.management.support.ContactProfile;
import org.joda.time.DateTime;
import com.microsoft.azure.management.support.QuotaTicketDetails;
import com.microsoft.azure.management.support.ServiceLevelAgreement;
import com.microsoft.azure.management.support.SeverityLevel;
import com.microsoft.azure.management.support.SupportEngineer;
import com.microsoft.azure.management.support.TechnicalTicketDetails;
import com.microsoft.azure.management.support.UpdateContactProfile;
import rx.functions.Func1;

class SupportTicketDetailsModelImpl extends CreatableUpdatableImpl<SupportTicketDetailsModel, SupportTicketDetailsInner, SupportTicketDetailsModelImpl> implements SupportTicketDetailsModel, SupportTicketDetailsModel.Update {
    private String supportTicketName;
    private UpdateSupportTicket updateParameter;
    private final SupportManager manager;

    SupportTicketDetailsModelImpl(String name, SupportManager manager) {
        super(name, new SupportTicketDetailsInner());
        this.manager = manager;
        // Set resource name
        this.supportTicketName = name;
        //
        this.updateParameter = new UpdateSupportTicket();
    }

    SupportTicketDetailsModelImpl(SupportTicketDetailsInner inner, SupportManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.supportTicketName = inner.name();
        // set resource ancestor and positional variables
        this.supportTicketName = IdParsingUtils.getValueFromIdByName(inner.id(), "supportTickets");
        // set other parameters for create and update
        this.updateParameter = new UpdateSupportTicket();
    }

    @Override
    public SupportManager manager() {
        return this.manager;
    }

    @Override
    public Observable<SupportTicketDetailsModel> createResourceAsync() {
        SupportTicketSubscriptionsInner client = this.manager().inner().supportTicketSubscriptions();
        return null; // NOP createResourceAsync implementation as create is not supported
    }

    @Override
    public Observable<SupportTicketDetailsModel> updateResourceAsync() {
        SupportTicketSubscriptionsInner client = this.manager().inner().supportTicketSubscriptions();
        return client.updateAsync(this.supportTicketName, this.updateParameter)
            .map(new Func1<SupportTicketDetailsInner, SupportTicketDetailsInner>() {
               @Override
               public SupportTicketDetailsInner call(SupportTicketDetailsInner resource) {
                   resetCreateUpdateParameters();
                   return resource;
               }
            })
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<SupportTicketDetailsInner> getInnerAsync() {
        SupportTicketSubscriptionsInner client = this.manager().inner().supportTicketSubscriptions();
        return null; // NOP getInnerAsync implementation as get is not supported
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }

    private void resetCreateUpdateParameters() {
        this.updateParameter = new UpdateSupportTicket();
    }

    @Override
    public ContactProfile contactDetails() {
        return this.inner().contactDetails();
    }

    @Override
    public DateTime createdDate() {
        return this.inner().createdDate();
    }

    @Override
    public String description() {
        return this.inner().description();
    }

    @Override
    public String enrollmentId() {
        return this.inner().enrollmentId();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public DateTime modifiedDate() {
        return this.inner().modifiedDate();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String problemClassificationDisplayName() {
        return this.inner().problemClassificationDisplayName();
    }

    @Override
    public String problemClassificationId() {
        return this.inner().problemClassificationId();
    }

    @Override
    public DateTime problemStartTime() {
        return this.inner().problemStartTime();
    }

    @Override
    public Boolean productionOutage() {
        return this.inner().productionOutage();
    }

    @Override
    public QuotaTicketDetails quotaTicketDetails() {
        return this.inner().quotaTicketDetails();
    }

    @Override
    public Boolean require24X7Response() {
        return this.inner().require24X7Response();
    }

    @Override
    public String serviceDisplayName() {
        return this.inner().serviceDisplayName();
    }

    @Override
    public String serviceId() {
        return this.inner().serviceId();
    }

    @Override
    public ServiceLevelAgreement serviceLevelAgreement() {
        return this.inner().serviceLevelAgreement();
    }

    @Override
    public SeverityLevel severity() {
        return this.inner().severity();
    }

    @Override
    public String status() {
        return this.inner().status();
    }

    @Override
    public SupportEngineer supportEngineer() {
        return this.inner().supportEngineer();
    }

    @Override
    public String supportPlanType() {
        return this.inner().supportPlanType();
    }

    @Override
    public String supportTicketId() {
        return this.inner().supportTicketId();
    }

    @Override
    public TechnicalTicketDetails technicalTicketDetails() {
        return this.inner().technicalTicketDetails();
    }

    @Override
    public String title() {
        return this.inner().title();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public SupportTicketDetailsModelImpl withContactDetails(UpdateContactProfile contactDetails) {
        this.updateParameter.withContactDetails(contactDetails);
        return this;
    }

    @Override
    public SupportTicketDetailsModelImpl withSeverity(SeverityLevel severity) {
        this.updateParameter.withSeverity(severity);
        return this;
    }

}
