/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.operationsmanagement.v2015_11_01_preview.implementation;

import com.microsoft.azure.AzureEnvironment;
import com.microsoft.azure.AzureResponseBuilder;
import com.microsoft.azure.credentials.AzureTokenCredentials;
import com.microsoft.azure.management.apigeneration.Beta;
import com.microsoft.azure.management.apigeneration.Beta.SinceVersion;
import com.microsoft.azure.arm.resources.AzureConfigurable;
import com.microsoft.azure.serializer.AzureJacksonAdapter;
import com.microsoft.rest.RestClient;
import com.microsoft.azure.management.operationsmanagement.v2015_11_01_preview.Solutions;
import com.microsoft.azure.management.operationsmanagement.v2015_11_01_preview.ManagementAssociations;
import com.microsoft.azure.management.operationsmanagement.v2015_11_01_preview.ManagementConfigurations;
import com.microsoft.azure.management.operationsmanagement.v2015_11_01_preview.Operations;
import com.microsoft.azure.arm.resources.implementation.AzureConfigurableCoreImpl;
import com.microsoft.azure.arm.resources.implementation.ManagerCore;

/**
 * Entry point to Azure OperationsManagement resource management.
 */
public final class OperationsManagementManager extends ManagerCore<OperationsManagementManager, OperationsManagementClientImpl> {
    private Solutions solutions;
    private ManagementAssociations managementAssociations;
    private ManagementConfigurations managementConfigurations;
    private Operations operations;
    /**
    * Get a Configurable instance that can be used to create OperationsManagementManager with optional configuration.
    *
    * @return the instance allowing configurations
    */
    public static Configurable configure() {
        return new OperationsManagementManager.ConfigurableImpl();
    }
    /**
    * Creates an instance of OperationsManagementManager that exposes OperationsManagement resource management API entry points.
    *
    * @param credentials the credentials to use
    * @param subscriptionId the subscription UUID
    * @return the OperationsManagementManager
    */
    public static OperationsManagementManager authenticate(AzureTokenCredentials credentials, String subscriptionId) {
        return new OperationsManagementManager(new RestClient.Builder()
            .withBaseUrl(credentials.environment(), AzureEnvironment.Endpoint.RESOURCE_MANAGER)
            .withCredentials(credentials)
            .withSerializerAdapter(new AzureJacksonAdapter())
            .withResponseBuilderFactory(new AzureResponseBuilder.Factory())
            .build(), subscriptionId);
    }
    /**
    * Creates an instance of OperationsManagementManager that exposes OperationsManagement resource management API entry points.
    *
    * @param restClient the RestClient to be used for API calls.
    * @param subscriptionId the subscription UUID
    * @return the OperationsManagementManager
    */
    public static OperationsManagementManager authenticate(RestClient restClient, String subscriptionId) {
        return new OperationsManagementManager(restClient, subscriptionId);
    }
    /**
    * The interface allowing configurations to be set.
    */
    public interface Configurable extends AzureConfigurable<Configurable> {
        /**
        * Creates an instance of OperationsManagementManager that exposes OperationsManagement management API entry points.
        *
        * @param credentials the credentials to use
        * @param subscriptionId the subscription UUID
        * @return the interface exposing OperationsManagement management API entry points that work across subscriptions
        */
        OperationsManagementManager authenticate(AzureTokenCredentials credentials, String subscriptionId);
    }

    /**
     * @return Entry point to manage Solutions.
     */
    public Solutions solutions() {
        if (this.solutions == null) {
            this.solutions = new SolutionsImpl(this);
        }
        return this.solutions;
    }

    /**
     * @return Entry point to manage ManagementAssociations.
     */
    public ManagementAssociations managementAssociations() {
        if (this.managementAssociations == null) {
            this.managementAssociations = new ManagementAssociationsImpl(this);
        }
        return this.managementAssociations;
    }

    /**
     * @return Entry point to manage ManagementConfigurations.
     */
    public ManagementConfigurations managementConfigurations() {
        if (this.managementConfigurations == null) {
            this.managementConfigurations = new ManagementConfigurationsImpl(this);
        }
        return this.managementConfigurations;
    }

    /**
     * @return Entry point to manage Operations.
     */
    public Operations operations() {
        if (this.operations == null) {
            this.operations = new OperationsImpl(this);
        }
        return this.operations;
    }

    /**
    * The implementation for Configurable interface.
    */
    private static final class ConfigurableImpl extends AzureConfigurableCoreImpl<Configurable> implements Configurable {
        public OperationsManagementManager authenticate(AzureTokenCredentials credentials, String subscriptionId) {
           return OperationsManagementManager.authenticate(buildRestClient(credentials), subscriptionId);
        }
     }
    private OperationsManagementManager(RestClient restClient, String subscriptionId) {
        super(
            restClient,
            subscriptionId,
            new OperationsManagementClientImpl(restClient).withSubscriptionId(subscriptionId));
    }
}
