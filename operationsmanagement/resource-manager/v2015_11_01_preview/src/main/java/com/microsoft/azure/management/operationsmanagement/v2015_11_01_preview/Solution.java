/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.operationsmanagement.v2015_11_01_preview;

import com.microsoft.azure.arm.model.HasInner;
import com.microsoft.azure.arm.resources.models.Resource;
import com.microsoft.azure.arm.resources.models.GroupableResourceCore;
import com.microsoft.azure.arm.resources.models.HasResourceGroup;
import com.microsoft.azure.arm.model.Refreshable;
import com.microsoft.azure.arm.model.Updatable;
import com.microsoft.azure.arm.model.Appliable;
import com.microsoft.azure.arm.model.Creatable;
import com.microsoft.azure.arm.resources.models.HasManager;
import com.microsoft.azure.management.operationsmanagement.v2015_11_01_preview.implementation.OperationsManagementManager;
import com.microsoft.azure.management.operationsmanagement.v2015_11_01_preview.implementation.SolutionInner;

/**
 * Type representing Solution.
 */
public interface Solution extends HasInner<SolutionInner>, Resource, GroupableResourceCore<OperationsManagementManager, SolutionInner>, HasResourceGroup, Refreshable<Solution>, Updatable<Solution.Update>, HasManager<OperationsManagementManager> {
    /**
     * @return the plan value.
     */
    SolutionPlan plan();

    /**
     * @return the properties value.
     */
    SolutionProperties properties();

    /**
     * The entirety of the Solution definition.
     */
    interface Definition extends DefinitionStages.Blank, DefinitionStages.WithGroup, DefinitionStages.WithCreate {
    }

    /**
     * Grouping of Solution definition stages.
     */
    interface DefinitionStages {
        /**
         * The first stage of a Solution definition.
         */
        interface Blank extends GroupableResourceCore.DefinitionWithRegion<WithGroup> {
        }

        /**
         * The stage of the Solution definition allowing to specify the resource group.
         */
        interface WithGroup extends GroupableResourceCore.DefinitionStages.WithGroup<WithCreate> {
        }

        /**
         * The stage of the solution definition allowing to specify Plan.
         */
        interface WithPlan {
            /**
             * Specifies plan.
             * @param plan Plan for solution object supported by the OperationsManagement resource provider
             * @return the next definition stage
             */
            WithCreate withPlan(SolutionPlan plan);
        }

        /**
         * The stage of the solution definition allowing to specify Properties.
         */
        interface WithProperties {
            /**
             * Specifies properties.
             * @param properties Properties for solution object supported by the OperationsManagement resource provider
             * @return the next definition stage
             */
            WithCreate withProperties(SolutionProperties properties);
        }

        /**
         * The stage of the definition which contains all the minimum required inputs for
         * the resource to be created (via {@link WithCreate#create()}), but also allows
         * for any other optional settings to be specified.
         */
        interface WithCreate extends Creatable<Solution>, Resource.DefinitionWithTags<WithCreate>, DefinitionStages.WithPlan, DefinitionStages.WithProperties {
        }
    }
    /**
     * The template for a Solution update operation, containing all the settings that can be modified.
     */
    interface Update extends Appliable<Solution>, Resource.UpdateWithTags<Update>, UpdateStages.WithPlan, UpdateStages.WithProperties {
    }

    /**
     * Grouping of Solution update stages.
     */
    interface UpdateStages {
        /**
         * The stage of the solution update allowing to specify Plan.
         */
        interface WithPlan {
            /**
             * Specifies plan.
             * @param plan Plan for solution object supported by the OperationsManagement resource provider
             * @return the next update stage
             */
            Update withPlan(SolutionPlan plan);
        }

        /**
         * The stage of the solution update allowing to specify Properties.
         */
        interface WithProperties {
            /**
             * Specifies properties.
             * @param properties Properties for solution object supported by the OperationsManagement resource provider
             * @return the next update stage
             */
            Update withProperties(SolutionProperties properties);
        }

    }
}
